[
    {
        "question_id": 7,
        "db_id": "california_schools",
        "question": "What is the phone number of the school that has the highest number of test takers with an SAT score of over 1500?",
        "evidence": "",
        "SQL": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1",
        "difficulty": "simple",
        "query": "SELECT T2.Phone FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode ORDER BY T1.NumGE1500 DESC LIMIT 1",
        "question_toks": [
            "What",
            "is",
            "the",
            "phone",
            "number",
            "of",
            "the",
            "school",
            "that",
            "has",
            "the",
            "highest",
            "number",
            "of",
            "test",
            "takers",
            "with",
            "an",
            "SAT",
            "score",
            "of",
            "over",
            "1500",
            "?"
        ],
        "tc_original": [
            "schools.cdscode",
            "schools.phone",
            "schools.school",
            "schools.county",
            "schools.district",
            "schools.*",
            "satscores.numge1500",
            "satscores.sname",
            "satscores.numtsttakr",
            "satscores.cds",
            "satscores.dname",
            "satscores.*",
            "frpm.cdscode",
            "frpm.academic year",
            "frpm.county code",
            "frpm.district code",
            "frpm.school code",
            "frpm.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[schools]",
            "COLUMN:[schools].[cdscode]",
            "COLUMN:[schools].[phone]",
            "COLUMN:[schools].[school]",
            "COLUMN:[schools].[county]",
            "COLUMN:[schools].[district]",
            "COLUMN:[schools].[*]",
            "TABLE:[satscores]",
            "COLUMN:[satscores].[numge1500]",
            "COLUMN:[satscores].[sname]",
            "COLUMN:[satscores].[numtsttakr]",
            "COLUMN:[satscores].[cds]",
            "COLUMN:[satscores].[dname]",
            "COLUMN:[satscores].[*]",
            "TABLE:[frpm]",
            "COLUMN:[frpm].[cdscode]",
            "COLUMN:[frpm].[academic year]",
            "COLUMN:[frpm].[county code]",
            "COLUMN:[frpm].[district code]",
            "COLUMN:[frpm].[school code]",
            "COLUMN:[frpm].[*]"
        ],
        "schema": "'[frpm]':\n  '[academic year]': text\n  '[cdscode]':\n    foreign_key: '[schools].[cdscode]'\n    primary_key: true\n    type: text\n  '[county code]': text\n  '[district code]': integer\n  '[school code]': text\n'[satscores]':\n  '[cds]':\n    foreign_key: '[schools].[cdscode]'\n    primary_key: true\n    type: text\n  '[dname]': text\n  '[numge1500]': integer\n  '[numtsttakr]': integer\n  '[sname]': text\n'[schools]':\n  '[cdscode]':\n    primary_key: true\n    type: text\n  '[county]': text\n  '[district]': text\n  '[phone]': text\n  '[school]': text\n",
        "gold_links": {
            "phone number": "COLUMN:[schools].[phone]",
            "school": "TABLE:[schools]",
            "test takers": "COLUMN:[satscores].[numtsttakr]",
            "SAT score": "COLUMN:[satscores].[numge1500]",
            "1500": "VALUE:[satscores].[numge1500]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[frpm]",
                "[C1]": "[frpm].[academic year]",
                "[C2]": "[frpm].[cdscode]",
                "[C3]": "[frpm].[county code]",
                "[C4]": "[frpm].[district code]",
                "[C5]": "[frpm].[school code]",
                "[T2]": "[satscores]",
                "[C6]": "[satscores].[cds]",
                "[C7]": "[satscores].[dname]",
                "[C8]": "[satscores].[numge1500]",
                "[C9]": "[satscores].[numtsttakr]",
                "[C10]": "[satscores].[sname]",
                "[T3]": "[schools]",
                "[C11]": "[schools].[cdscode]",
                "[C12]": "[schools].[county]",
                "[C13]": "[schools].[district]",
                "[C14]": "[schools].[phone]",
                "[C15]": "[schools].[school]"
            },
            "to_symbol": {
                "[frpm]": "[T1]",
                "[frpm].[academic year]": "[C1]",
                "[frpm].[cdscode]": "[C2]",
                "[frpm].[county code]": "[C3]",
                "[frpm].[district code]": "[C4]",
                "[frpm].[school code]": "[C5]",
                "[satscores]": "[T2]",
                "[satscores].[cds]": "[C6]",
                "[satscores].[dname]": "[C7]",
                "[satscores].[numge1500]": "[C8]",
                "[satscores].[numtsttakr]": "[C9]",
                "[satscores].[sname]": "[C10]",
                "[schools]": "[T3]",
                "[schools].[cdscode]": "[C11]",
                "[schools].[county]": "[C12]",
                "[schools].[district]": "[C13]",
                "[schools].[phone]": "[C14]",
                "[schools].[school]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    foreign_key: '[T3].[C11]'\n    primary_key: true\n    type: text\n  '[C3]': text\n  '[C4]': integer\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T3].[C11]'\n    primary_key: true\n    type: text\n  '[C7]': text\n  '[C8]': integer\n  '[C9]': integer\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: text\n  '[C12]': text\n  '[C13]': text\n  '[C14]': text\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[frpm]",
                "[T1].[C1]": "[frpm].[academic year]",
                "[C1]": "[frpm].[academic year]",
                "[T1].[C2]": "[frpm].[cdscode]",
                "[C2]": "[frpm].[cdscode]",
                "[T1].[C3]": "[frpm].[county code]",
                "[C3]": "[frpm].[county code]",
                "[T1].[C4]": "[frpm].[district code]",
                "[C4]": "[frpm].[district code]",
                "[T1].[C5]": "[frpm].[school code]",
                "[C5]": "[frpm].[school code]",
                "[T2]": "[satscores]",
                "[T2].[C6]": "[satscores].[cds]",
                "[C6]": "[satscores].[cds]",
                "[T2].[C7]": "[satscores].[dname]",
                "[C7]": "[satscores].[dname]",
                "[T2].[C8]": "[satscores].[numge1500]",
                "[C8]": "[satscores].[numge1500]",
                "[T2].[C9]": "[satscores].[numtsttakr]",
                "[C9]": "[satscores].[numtsttakr]",
                "[T2].[C10]": "[satscores].[sname]",
                "[C10]": "[satscores].[sname]",
                "[T3]": "[schools]",
                "[T3].[C11]": "[schools].[cdscode]",
                "[C11]": "[schools].[cdscode]",
                "[T3].[C12]": "[schools].[county]",
                "[C12]": "[schools].[county]",
                "[T3].[C13]": "[schools].[district]",
                "[C13]": "[schools].[district]",
                "[T3].[C14]": "[schools].[phone]",
                "[C14]": "[schools].[phone]",
                "[T3].[C15]": "[schools].[school]",
                "[C15]": "[schools].[school]"
            },
            "question": "What is the [C14] number of the [T3] that has the highest number of [C9] with an [C8] of over [V1]?; [V1] is a value of the column [C8]",
            "to_value": {
                "[V1]": "1500"
            },
            "masked": 6,
            "masked_terms": [
                "1500",
                "phone",
                "school",
                "test takers",
                "sat score",
                "over 1500"
            ],
            "sql": "SELECT [T3].[C14] FROM [T2] JOIN [T3] ON [T2].[C6] = [T3].[C11] WHERE [T2].[C8] > [V1] ORDER BY [T2].[C9] DESC LIMIT 1",
            "repaired_sql": "SELECT [T3].[C14] FROM [T3] JOIN [T2] ON [T3].[C11] = [T2].[C6] WHERE [T2].[C8] > [V1] GROUP BY [T3].[C14] ORDER BY SUM([T2].[C9]) DESC LIMIT 1;"
        },
        "values": [
            "1500"
        ],
        "value_links": {
            "1500": "[satscores].[numge1500]"
        },
        "filtered_value_links": {
            "1500": "[satscores].[numge1500]"
        },
        "schema_links": {
            "phone": "COLUMN:[schools].[phone]",
            "school": "TABLE:[schools]",
            "test takers": "COLUMN:[satscores].[numtsttakr]",
            "sat score": "COLUMN:[satscores].[numge1500]",
            "over 1500": "COLUMN:[satscores].[numge1500]"
        },
        "filtered_schema_links": {
            "phone": "COLUMN:[schools].[phone]",
            "school": "TABLE:[schools]",
            "test takers": "COLUMN:[satscores].[numtsttakr]",
            "sat score": "COLUMN:[satscores].[numge1500]",
            "over 1500": "COLUMN:[satscores].[numge1500]"
        },
        "attack": "What is the route number of the bus route that has the highest number of passengers with an age of over 65?"
    },
    {
        "question_id": 11,
        "db_id": "california_schools",
        "question": "Please list the codes of the schools with a total enrollment of over 500. Total enrollment can be represented by `Enrollment (K-12)` + `Enrollment (Ages 5-17)`",
        "evidence": "Total enrollment can be represented by `Enrollment (K-12)` + `Enrollment (Ages 5-17)`",
        "SQL": "SELECT T2.CDSCode FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` + T2.`Enrollment (Ages 5-17)` > 500",
        "difficulty": "simple",
        "query": "SELECT T2.CDSCode FROM schools AS T1 INNER JOIN frpm AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.`Enrollment (K-12)` + T2.`Enrollment (Ages 5-17)` > 500",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "list",
            "the",
            "codes",
            "of",
            "the",
            "schools",
            "with",
            "a",
            "total",
            "enrollment",
            "of",
            "over",
            "500",
            ".",
            "Total",
            "enrollment",
            "can",
            "be",
            "represented",
            "by",
            "`Enrollment",
            "(K-12)`",
            "+",
            "`Enrollment",
            "(Ages",
            "5-17)`"
        ],
        "tc_original": [
            "schools.school",
            "schools.cdscode",
            "schools.gsserved",
            "schools.gsoffered",
            "schools.county",
            "schools.*",
            "frpm.school code",
            "frpm.enrollment (k-12)",
            "frpm.enrollment (ages 5-17)",
            "frpm.cdscode",
            "frpm.free meal count (k-12)",
            "frpm.*",
            "satscores.cds",
            "satscores.rtype",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[schools]",
            "COLUMN:[schools].[school]",
            "COLUMN:[schools].[cdscode]",
            "COLUMN:[schools].[gsserved]",
            "COLUMN:[schools].[gsoffered]",
            "COLUMN:[schools].[county]",
            "COLUMN:[schools].[*]",
            "TABLE:[frpm]",
            "COLUMN:[frpm].[school code]",
            "COLUMN:[frpm].[enrollment (k-12)]",
            "COLUMN:[frpm].[enrollment (ages 5-17)]",
            "COLUMN:[frpm].[cdscode]",
            "COLUMN:[frpm].[free meal count (k-12)]",
            "COLUMN:[frpm].[*]",
            "TABLE:[satscores]",
            "COLUMN:[satscores].[cds]",
            "COLUMN:[satscores].[rtype]",
            "COLUMN:[satscores].[sname]",
            "COLUMN:[satscores].[dname]",
            "COLUMN:[satscores].[cname]",
            "COLUMN:[satscores].[*]"
        ],
        "schema": "'[frpm]':\n  '[cdscode]':\n    foreign_key: '[schools].[cdscode]'\n    primary_key: true\n    type: text\n  '[enrollment (ages 5-17)]': real\n  '[enrollment (k-12)]': real\n  '[free meal count (k-12)]': real\n  '[school code]': text\n'[satscores]':\n  '[cds]':\n    foreign_key: '[schools].[cdscode]'\n    primary_key: true\n    type: text\n  '[cname]': text\n  '[dname]': text\n  '[rtype]': text\n  '[sname]': text\n'[schools]':\n  '[cdscode]':\n    primary_key: true\n    type: text\n  '[county]': text\n  '[gsoffered]': text\n  '[gsserved]': text\n  '[school]': text\n",
        "gold_links": {
            "codes": "COLUMN:[schools].[cdscode]",
            "schools": "TABLE:[schools]",
            "enrollment": "COLUMN:[frpm].[enrollment (k-12)]",
            "enrollment ages": "COLUMN:[frpm].[enrollment (ages 5-17)]",
            "enrollment k-12": "COLUMN:[frpm].[enrollment (k-12)]",
            "over 500": "VALUE:[frpm].[enrollment (k-12)]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[frpm]",
                "[C1]": "[frpm].[cdscode]",
                "[C2]": "[frpm].[enrollment (ages 5-17)]",
                "[C3]": "[frpm].[enrollment (k-12)]",
                "[C4]": "[frpm].[free meal count (k-12)]",
                "[C5]": "[frpm].[school code]",
                "[T2]": "[satscores]",
                "[C6]": "[satscores].[cds]",
                "[C7]": "[satscores].[cname]",
                "[C8]": "[satscores].[dname]",
                "[C9]": "[satscores].[rtype]",
                "[C10]": "[satscores].[sname]",
                "[T3]": "[schools]",
                "[C11]": "[schools].[cdscode]",
                "[C12]": "[schools].[county]",
                "[C13]": "[schools].[gsoffered]",
                "[C14]": "[schools].[gsserved]",
                "[C15]": "[schools].[school]"
            },
            "to_symbol": {
                "[frpm]": "[T1]",
                "[frpm].[cdscode]": "[C1]",
                "[frpm].[enrollment (ages 5-17)]": "[C2]",
                "[frpm].[enrollment (k-12)]": "[C3]",
                "[frpm].[free meal count (k-12)]": "[C4]",
                "[frpm].[school code]": "[C5]",
                "[satscores]": "[T2]",
                "[satscores].[cds]": "[C6]",
                "[satscores].[cname]": "[C7]",
                "[satscores].[dname]": "[C8]",
                "[satscores].[rtype]": "[C9]",
                "[satscores].[sname]": "[C10]",
                "[schools]": "[T3]",
                "[schools].[cdscode]": "[C11]",
                "[schools].[county]": "[C12]",
                "[schools].[gsoffered]": "[C13]",
                "[schools].[gsserved]": "[C14]",
                "[schools].[school]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    foreign_key: '[T3].[C11]'\n    primary_key: true\n    type: text\n  '[C2]': real\n  '[C3]': real\n  '[C4]': real\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T3].[C11]'\n    primary_key: true\n    type: text\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: text\n  '[C12]': text\n  '[C13]': text\n  '[C14]': text\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[frpm]",
                "[T1].[C1]": "[frpm].[cdscode]",
                "[C1]": "[frpm].[cdscode]",
                "[T1].[C2]": "[frpm].[enrollment (ages 5-17)]",
                "[C2]": "[frpm].[enrollment (ages 5-17)]",
                "[T1].[C3]": "[frpm].[enrollment (k-12)]",
                "[C3]": "[frpm].[enrollment (k-12)]",
                "[T1].[C4]": "[frpm].[free meal count (k-12)]",
                "[C4]": "[frpm].[free meal count (k-12)]",
                "[T1].[C5]": "[frpm].[school code]",
                "[C5]": "[frpm].[school code]",
                "[T2]": "[satscores]",
                "[T2].[C6]": "[satscores].[cds]",
                "[C6]": "[satscores].[cds]",
                "[T2].[C7]": "[satscores].[cname]",
                "[C7]": "[satscores].[cname]",
                "[T2].[C8]": "[satscores].[dname]",
                "[C8]": "[satscores].[dname]",
                "[T2].[C9]": "[satscores].[rtype]",
                "[C9]": "[satscores].[rtype]",
                "[T2].[C10]": "[satscores].[sname]",
                "[C10]": "[satscores].[sname]",
                "[T3]": "[schools]",
                "[T3].[C11]": "[schools].[cdscode]",
                "[C11]": "[schools].[cdscode]",
                "[T3].[C12]": "[schools].[county]",
                "[C12]": "[schools].[county]",
                "[T3].[C13]": "[schools].[gsoffered]",
                "[C13]": "[schools].[gsoffered]",
                "[T3].[C14]": "[schools].[gsserved]",
                "[C14]": "[schools].[gsserved]",
                "[T3].[C15]": "[schools].[school]",
                "[C15]": "[schools].[school]"
            },
            "question": "Please list the [C11] of the schools with a total enrollment of over [V1]. Total enrollment can be represented by `Enrollment (K-12)` + `Enrollment (Ages 5-17)`; [V1] is a value of the column [C1]",
            "to_value": {
                "[V1]": "500"
            },
            "masked": 2,
            "masked_terms": [
                "500",
                "codes"
            ],
            "sql": "SELECT [T3].[C11] FROM [T1] INNER JOIN [T3] ON [T1].[C1] = [T3].[C11] WHERE ([T1].[C2] + [T1].[C3]) > [T1].[C1]",
            "repaired_sql": "SELECT [T3].[C11] FROM [T1] JOIN [T3] ON [T1].[C1] = [T3].[C11] WHERE ([T1].[C2] + [T1].[C3]) > [V1];"
        },
        "values": [
            "500"
        ],
        "value_links": {
            "500": "[frpm].[cdscode]"
        },
        "filtered_value_links": {
            "500": "[frpm].[cdscode]"
        },
        "schema_links": {
            "codes": "COLUMN:[schools].[cdscode]"
        },
        "filtered_schema_links": {
            "codes": "COLUMN:[schools].[cdscode]"
        },
        "attack": "Please list the name of the schools with a total enrollment of over 1000. Total enrollment can be represented by `Enrollment (K-12)` + `Enrollment (Ages 5-17)`; 1000 is a value of the column name."
    },
    {
        "question_id": 13,
        "db_id": "california_schools",
        "question": "Please list the phone numbers of the schools with the top 3 SAT excellence rate. Excellence rate = NumGE1500 / NumTstTakr",
        "evidence": "Excellence rate = NumGE1500 / NumTstTakr",
        "SQL": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr DESC LIMIT 3",
        "difficulty": "simple",
        "query": "SELECT T1.Phone FROM schools AS T1 INNER JOIN satscores AS T2 ON T1.CDSCode = T2.cds ORDER BY CAST(T2.NumGE1500 AS REAL) / T2.NumTstTakr DESC LIMIT 3",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "list",
            "the",
            "phone",
            "numbers",
            "of",
            "the",
            "schools",
            "with",
            "the",
            "top",
            "3",
            "SAT",
            "excellence",
            "rate",
            ".",
            "Excellence",
            "rate",
            "=",
            "NumGE1500",
            "/",
            "NumTstTakr"
        ],
        "tc_original": [
            "schools.phone",
            "schools.cdscode",
            "schools.school",
            "schools.county",
            "schools.district",
            "schools.*",
            "satscores.numge1500",
            "satscores.cds",
            "satscores.enroll12",
            "satscores.rtype",
            "satscores.sname",
            "satscores.*",
            "frpm.cdscode",
            "frpm.academic year",
            "frpm.county code",
            "frpm.district code",
            "frpm.school code",
            "frpm.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[schools]",
            "COLUMN:[schools].[phone]",
            "COLUMN:[schools].[cdscode]",
            "COLUMN:[schools].[school]",
            "COLUMN:[schools].[county]",
            "COLUMN:[schools].[district]",
            "COLUMN:[schools].[*]",
            "TABLE:[satscores]",
            "COLUMN:[satscores].[numge1500]",
            "COLUMN:[satscores].[cds]",
            "COLUMN:[satscores].[enroll12]",
            "COLUMN:[satscores].[rtype]",
            "COLUMN:[satscores].[sname]",
            "COLUMN:[satscores].[*]",
            "TABLE:[frpm]",
            "COLUMN:[frpm].[cdscode]",
            "COLUMN:[frpm].[academic year]",
            "COLUMN:[frpm].[county code]",
            "COLUMN:[frpm].[district code]",
            "COLUMN:[frpm].[school code]",
            "COLUMN:[frpm].[*]"
        ],
        "schema": "'[frpm]':\n  '[academic year]': text\n  '[cdscode]':\n    foreign_key: '[schools].[cdscode]'\n    primary_key: true\n    type: text\n  '[county code]': text\n  '[district code]': integer\n  '[school code]': text\n'[satscores]':\n  '[cds]':\n    foreign_key: '[schools].[cdscode]'\n    primary_key: true\n    type: text\n  '[enroll12]': integer\n  '[numge1500]': integer\n  '[rtype]': text\n  '[sname]': text\n'[schools]':\n  '[cdscode]':\n    primary_key: true\n    type: text\n  '[county]': text\n  '[district]': text\n  '[phone]': text\n  '[school]': text\n",
        "gold_links": {
            "phone numbers": "COLUMN:[schools].[phone]",
            "schools": "TABLE:[schools]",
            "SAT excellence rate": "COLUMN:[satscores].[numge1500]",
            "NumGE1500": "COLUMN:[satscores].[numge1500]",
            "NumTstTakr": "COLUMN:[satscores].[numtsttakr]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[frpm]",
                "[C1]": "[frpm].[academic year]",
                "[C2]": "[frpm].[cdscode]",
                "[C3]": "[frpm].[county code]",
                "[C4]": "[frpm].[district code]",
                "[C5]": "[frpm].[school code]",
                "[T2]": "[satscores]",
                "[C6]": "[satscores].[cds]",
                "[C7]": "[satscores].[enroll12]",
                "[C8]": "[satscores].[numge1500]",
                "[C9]": "[satscores].[rtype]",
                "[C10]": "[satscores].[sname]",
                "[T3]": "[schools]",
                "[C11]": "[schools].[cdscode]",
                "[C12]": "[schools].[county]",
                "[C13]": "[schools].[district]",
                "[C14]": "[schools].[phone]",
                "[C15]": "[schools].[school]"
            },
            "to_symbol": {
                "[frpm]": "[T1]",
                "[frpm].[academic year]": "[C1]",
                "[frpm].[cdscode]": "[C2]",
                "[frpm].[county code]": "[C3]",
                "[frpm].[district code]": "[C4]",
                "[frpm].[school code]": "[C5]",
                "[satscores]": "[T2]",
                "[satscores].[cds]": "[C6]",
                "[satscores].[enroll12]": "[C7]",
                "[satscores].[numge1500]": "[C8]",
                "[satscores].[rtype]": "[C9]",
                "[satscores].[sname]": "[C10]",
                "[schools]": "[T3]",
                "[schools].[cdscode]": "[C11]",
                "[schools].[county]": "[C12]",
                "[schools].[district]": "[C13]",
                "[schools].[phone]": "[C14]",
                "[schools].[school]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    foreign_key: '[T3].[C11]'\n    primary_key: true\n    type: text\n  '[C3]': text\n  '[C4]': integer\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T3].[C11]'\n    primary_key: true\n    type: text\n  '[C7]': integer\n  '[C8]': integer\n  '[C9]': text\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: text\n  '[C12]': text\n  '[C13]': text\n  '[C14]': text\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[frpm]",
                "[T1].[C1]": "[frpm].[academic year]",
                "[C1]": "[frpm].[academic year]",
                "[T1].[C2]": "[frpm].[cdscode]",
                "[C2]": "[frpm].[cdscode]",
                "[T1].[C3]": "[frpm].[county code]",
                "[C3]": "[frpm].[county code]",
                "[T1].[C4]": "[frpm].[district code]",
                "[C4]": "[frpm].[district code]",
                "[T1].[C5]": "[frpm].[school code]",
                "[C5]": "[frpm].[school code]",
                "[T2]": "[satscores]",
                "[T2].[C6]": "[satscores].[cds]",
                "[C6]": "[satscores].[cds]",
                "[T2].[C7]": "[satscores].[enroll12]",
                "[C7]": "[satscores].[enroll12]",
                "[T2].[C8]": "[satscores].[numge1500]",
                "[C8]": "[satscores].[numge1500]",
                "[T2].[C9]": "[satscores].[rtype]",
                "[C9]": "[satscores].[rtype]",
                "[T2].[C10]": "[satscores].[sname]",
                "[C10]": "[satscores].[sname]",
                "[T3]": "[schools]",
                "[T3].[C11]": "[schools].[cdscode]",
                "[C11]": "[schools].[cdscode]",
                "[T3].[C12]": "[schools].[county]",
                "[C12]": "[schools].[county]",
                "[T3].[C13]": "[schools].[district]",
                "[C13]": "[schools].[district]",
                "[T3].[C14]": "[schools].[phone]",
                "[C14]": "[schools].[phone]",
                "[T3].[C15]": "[schools].[school]",
                "[C15]": "[schools].[school]"
            },
            "question": "Please list the [C14] numbers of the [T3] with the [V1]. Excellence rate = NumGE1500 / NumTstTakr; [V1] is a value of the column [C14]",
            "to_value": {
                "[V1]": "top 3 SAT excellence rate"
            },
            "masked": 6,
            "masked_terms": [
                "top 3 SAT excellence rate",
                "phone",
                "schools",
                "SAT excellence rate",
                "top",
                "3"
            ],
            "sql": "SELECT [T3].[C14] FROM [T3] WHERE [T3].[C14] = 'V1'",
            "repaired_sql": "SELECT [T3].[C14] FROM [T3] WHERE [T3].[C14] = '[V1]'"
        },
        "values": [
            "top 3 SAT excellence rate"
        ],
        "value_links": {
            "top 3 SAT excellence rate": "[schools].[phone]"
        },
        "filtered_value_links": {
            "top 3 SAT excellence rate": "[schools].[phone]"
        },
        "schema_links": {
            "phone": "COLUMN:[schools].[phone]",
            "schools": "TABLE:[schools]",
            "SAT excellence rate": "COLUMN:[satscores].[numge1500]",
            "top": "COLUMN:[satscores].[numge1500]",
            "3": "COLUMN:[satscores].[numge1500]"
        },
        "filtered_schema_links": {
            "phone": "COLUMN:[schools].[phone]",
            "schools": "TABLE:[schools]",
            "SAT excellence rate": "COLUMN:[satscores].[numge1500]",
            "top": "COLUMN:[satscores].[numge1500]",
            "3": "COLUMN:[satscores].[numge1500]"
        },
        "attack": "Please list the school numbers of the school with the Excellence rate. Excellence rate = NumGE1500 / NumTstTakr; Excellence rate is a value of the column school number."
    },
    {
        "question_id": 21,
        "db_id": "california_schools",
        "question": "In Los Angeles how many schools have more than 500 free meals but less than 700 free or reduced price meals for K-12?",
        "evidence": "",
        "SQL": "SELECT COUNT(CDSCode) FROM frpm WHERE `County Name` = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `FRPM Count (K-12)`< 700",
        "difficulty": "simple",
        "query": "SELECT COUNT(CDSCode) FROM frpm WHERE `County Name` = 'Los Angeles' AND `Free Meal Count (K-12)` > 500 AND `FRPM Count (K-12)`< 700",
        "question_toks": [
            "In",
            "Los",
            "Angeles",
            "how",
            "many",
            "schools",
            "have",
            "more",
            "than",
            "500",
            "free",
            "meals",
            "but",
            "less",
            "than",
            "700",
            "free",
            "or",
            "reduced",
            "price",
            "meals",
            "for",
            "K-12",
            "?"
        ],
        "tc_original": [
            "frpm.county name",
            "frpm.school code",
            "frpm.free meal count (k-12)",
            "frpm.district code",
            "frpm.enrollment (k-12)",
            "frpm.*",
            "schools.county",
            "schools.city",
            "schools.school",
            "schools.cdscode",
            "schools.gsoffered",
            "schools.*",
            "satscores.cds",
            "satscores.rtype",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[frpm]",
            "COLUMN:[frpm].[county name]",
            "COLUMN:[frpm].[school code]",
            "COLUMN:[frpm].[free meal count (k-12)]",
            "COLUMN:[frpm].[district code]",
            "COLUMN:[frpm].[enrollment (k-12)]",
            "COLUMN:[frpm].[*]",
            "TABLE:[schools]",
            "COLUMN:[schools].[county]",
            "COLUMN:[schools].[city]",
            "COLUMN:[schools].[school]",
            "COLUMN:[schools].[cdscode]",
            "COLUMN:[schools].[gsoffered]",
            "COLUMN:[schools].[*]",
            "TABLE:[satscores]",
            "COLUMN:[satscores].[cds]",
            "COLUMN:[satscores].[rtype]",
            "COLUMN:[satscores].[sname]",
            "COLUMN:[satscores].[dname]",
            "COLUMN:[satscores].[cname]",
            "COLUMN:[satscores].[*]"
        ],
        "schema": "'[frpm]':\n  '[county name]': text\n  '[district code]': integer\n  '[enrollment (k-12)]': real\n  '[free meal count (k-12)]': real\n  '[school code]': text\n'[satscores]':\n  '[cds]':\n    foreign_key: '[schools].[cdscode]'\n    primary_key: true\n    type: text\n  '[cname]': text\n  '[dname]': text\n  '[rtype]': text\n  '[sname]': text\n'[schools]':\n  '[cdscode]':\n    primary_key: true\n    type: text\n  '[city]': text\n  '[county]': text\n  '[gsoffered]': text\n  '[school]': text\n",
        "gold_links": {
            "Los Angeles": "VALUE:[frpm].[county name]",
            "schools": "TABLE:[frpm]",
            "free meals": "COLUMN:[frpm].[free meal count (k-12)]",
            "500": "VALUE:[frpm].[free meal count (k-12)]",
            "reduced price meals": "COLUMN:[frpm].[frpm count (k-12)]",
            "700": "VALUE:[frpm].[frpm count (k-12)]",
            "K-12": "COLUMN:[frpm].[enrollment (k-12)]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[frpm]",
                "[C1]": "[frpm].[county name]",
                "[C2]": "[frpm].[district code]",
                "[C3]": "[frpm].[enrollment (k-12)]",
                "[C4]": "[frpm].[free meal count (k-12)]",
                "[C5]": "[frpm].[school code]",
                "[T2]": "[satscores]",
                "[C6]": "[satscores].[cds]",
                "[C7]": "[satscores].[cname]",
                "[C8]": "[satscores].[dname]",
                "[C9]": "[satscores].[rtype]",
                "[C10]": "[satscores].[sname]",
                "[T3]": "[schools]",
                "[C11]": "[schools].[cdscode]",
                "[C12]": "[schools].[city]",
                "[C13]": "[schools].[county]",
                "[C14]": "[schools].[gsoffered]",
                "[C15]": "[schools].[school]"
            },
            "to_symbol": {
                "[frpm]": "[T1]",
                "[frpm].[county name]": "[C1]",
                "[frpm].[district code]": "[C2]",
                "[frpm].[enrollment (k-12)]": "[C3]",
                "[frpm].[free meal count (k-12)]": "[C4]",
                "[frpm].[school code]": "[C5]",
                "[satscores]": "[T2]",
                "[satscores].[cds]": "[C6]",
                "[satscores].[cname]": "[C7]",
                "[satscores].[dname]": "[C8]",
                "[satscores].[rtype]": "[C9]",
                "[satscores].[sname]": "[C10]",
                "[schools]": "[T3]",
                "[schools].[cdscode]": "[C11]",
                "[schools].[city]": "[C12]",
                "[schools].[county]": "[C13]",
                "[schools].[gsoffered]": "[C14]",
                "[schools].[school]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': integer\n  '[C3]': real\n  '[C4]': real\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T3].[C11]'\n    primary_key: true\n    type: text\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: text\n  '[C12]': text\n  '[C13]': text\n  '[C14]': text\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[frpm]",
                "[T1].[C1]": "[frpm].[county name]",
                "[C1]": "[frpm].[county name]",
                "[T1].[C2]": "[frpm].[district code]",
                "[C2]": "[frpm].[district code]",
                "[T1].[C3]": "[frpm].[enrollment (k-12)]",
                "[C3]": "[frpm].[enrollment (k-12)]",
                "[T1].[C4]": "[frpm].[free meal count (k-12)]",
                "[C4]": "[frpm].[free meal count (k-12)]",
                "[T1].[C5]": "[frpm].[school code]",
                "[C5]": "[frpm].[school code]",
                "[T2]": "[satscores]",
                "[T2].[C6]": "[satscores].[cds]",
                "[C6]": "[satscores].[cds]",
                "[T2].[C7]": "[satscores].[cname]",
                "[C7]": "[satscores].[cname]",
                "[T2].[C8]": "[satscores].[dname]",
                "[C8]": "[satscores].[dname]",
                "[T2].[C9]": "[satscores].[rtype]",
                "[C9]": "[satscores].[rtype]",
                "[T2].[C10]": "[satscores].[sname]",
                "[C10]": "[satscores].[sname]",
                "[T3]": "[schools]",
                "[T3].[C11]": "[schools].[cdscode]",
                "[C11]": "[schools].[cdscode]",
                "[T3].[C12]": "[schools].[city]",
                "[C12]": "[schools].[city]",
                "[T3].[C13]": "[schools].[county]",
                "[C13]": "[schools].[county]",
                "[T3].[C14]": "[schools].[gsoffered]",
                "[C14]": "[schools].[gsoffered]",
                "[T3].[C15]": "[schools].[school]",
                "[C15]": "[schools].[school]"
            },
            "question": "In [V1] how many [T1] have [C4] [C4] but [C4] free or reduced price meals for K-12?; [V1] is a value of the column [C12]",
            "to_value": {
                "[V1]": "Los Angeles"
            },
            "masked": 6,
            "masked_terms": [
                "Los Angeles",
                "Los Angeles",
                "schools",
                "free meals",
                "more than 500",
                "less than 700"
            ],
            "sql": "SELECT COUNT(*) FROM [T1] WHERE [C12] = '[V1]' AND [C4] = [C4] AND ([C4] = 'free' OR [C4] = 'reduced price meals')",
            "repaired_sql": "SELECT COUNT(*) FROM [T1] JOIN [T2] ON [T1].[C5] = [T2].[C6] JOIN [T3] ON [T2].[C6] = [T3].[C11] WHERE [T3].[C12] = '[V1]' AND ([T1].[C4] IS NULL OR [T1].[C4] = 0)"
        },
        "values": [
            "Los Angeles"
        ],
        "value_links": {
            "Los Angeles": "[schools].[city]"
        },
        "filtered_value_links": {
            "Los Angeles": "[schools].[city]"
        },
        "schema_links": {
            "Los Angeles": "COLUMN:[frpm].[county name]",
            "schools": "TABLE:[frpm]",
            "free meals": "COLUMN:[frpm].[free meal count (k-12)]",
            "more than 500": "COLUMN:[frpm].[free meal count (k-12)]",
            "less than 700": "COLUMN:[frpm].[free meal count (k-12)]"
        },
        "filtered_schema_links": {
            "Los Angeles": "COLUMN:[frpm].[county name]",
            "schools": "TABLE:[frpm]",
            "free meals": "COLUMN:[frpm].[free meal count (k-12)]",
            "more than 500": "COLUMN:[frpm].[free meal count (k-12)]",
            "less than 700": "COLUMN:[frpm].[free meal count (k-12)]"
        },
        "attack": "In Texas how many schools have percent free but percent free or reduced price meals for K-12?"
    },
    {
        "question_id": 45,
        "db_id": "california_schools",
        "question": "What is the average writing score of each of the schools managed by Ricci Ulrich? List the schools and the corresponding average writing scores. Usually, administrators manage the school stuff.",
        "evidence": "Usually, administrators manage the school stuff.",
        "SQL": "SELECT T2.School, T1.AvgScrWrite FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.AdmFName1 = 'Ricci' AND T2.AdmLName1 = 'Ulrich'",
        "difficulty": "moderate",
        "query": "SELECT T2.School, T1.AvgScrWrite FROM satscores AS T1 INNER JOIN schools AS T2 ON T1.cds = T2.CDSCode WHERE T2.AdmFName1 = 'Ricci' AND T2.AdmLName1 = 'Ulrich'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "writing",
            "score",
            "of",
            "each",
            "of",
            "the",
            "schools",
            "managed",
            "by",
            "Ricci",
            "Ulrich",
            "?",
            "List",
            "the",
            "schools",
            "and",
            "the",
            "corresponding",
            "average",
            "writing",
            "scores",
            ".",
            "Usually",
            ",",
            "administrators",
            "manage",
            "the",
            "school",
            "stuff",
            "."
        ],
        "tc_original": [
            "satscores.avgscrwrite",
            "satscores.sname",
            "satscores.cds",
            "satscores.avgscrread",
            "satscores.enroll12",
            "satscores.*",
            "schools.admfname1",
            "schools.school",
            "schools.admlname1",
            "schools.cdscode",
            "schools.admemail1",
            "schools.*",
            "frpm.enrollment (k-12)",
            "frpm.enrollment (ages 5-17)",
            "frpm.cdscode",
            "frpm.academic year",
            "frpm.county code",
            "frpm.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[satscores]",
            "COLUMN:[satscores].[avgscrwrite]",
            "COLUMN:[satscores].[sname]",
            "COLUMN:[satscores].[cds]",
            "COLUMN:[satscores].[avgscrread]",
            "COLUMN:[satscores].[enroll12]",
            "COLUMN:[satscores].[*]",
            "TABLE:[schools]",
            "COLUMN:[schools].[admfname1]",
            "COLUMN:[schools].[school]",
            "COLUMN:[schools].[admlname1]",
            "COLUMN:[schools].[cdscode]",
            "COLUMN:[schools].[admemail1]",
            "COLUMN:[schools].[*]",
            "TABLE:[frpm]",
            "COLUMN:[frpm].[enrollment (k-12)]",
            "COLUMN:[frpm].[enrollment (ages 5-17)]",
            "COLUMN:[frpm].[cdscode]",
            "COLUMN:[frpm].[academic year]",
            "COLUMN:[frpm].[county code]",
            "COLUMN:[frpm].[*]"
        ],
        "schema": "'[frpm]':\n  '[academic year]': text\n  '[cdscode]':\n    foreign_key: '[schools].[cdscode]'\n    primary_key: true\n    type: text\n  '[county code]': text\n  '[enrollment (ages 5-17)]': real\n  '[enrollment (k-12)]': real\n'[satscores]':\n  '[avgscrread]': integer\n  '[avgscrwrite]': integer\n  '[cds]':\n    foreign_key: '[schools].[cdscode]'\n    primary_key: true\n    type: text\n  '[enroll12]': integer\n  '[sname]': text\n'[schools]':\n  '[admemail1]': text\n  '[admfname1]': text\n  '[admlname1]': text\n  '[cdscode]':\n    primary_key: true\n    type: text\n  '[school]': text\n",
        "gold_links": {
            "average writing score": "COLUMN:[satscores].[avgscrwrite]",
            "schools": "TABLE:[schools]",
            "Ricci Ulrich": "COLUMN:[schools].[admfname1]",
            "writing score": "COLUMN:[satscores].[avgscrwrite]",
            "school": "COLUMN:[schools].[school]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[frpm]",
                "[C1]": "[frpm].[academic year]",
                "[C2]": "[frpm].[cdscode]",
                "[C3]": "[frpm].[county code]",
                "[C4]": "[frpm].[enrollment (ages 5-17)]",
                "[C5]": "[frpm].[enrollment (k-12)]",
                "[T2]": "[satscores]",
                "[C6]": "[satscores].[avgscrread]",
                "[C7]": "[satscores].[avgscrwrite]",
                "[C8]": "[satscores].[cds]",
                "[C9]": "[satscores].[enroll12]",
                "[C10]": "[satscores].[sname]",
                "[T3]": "[schools]",
                "[C11]": "[schools].[admemail1]",
                "[C12]": "[schools].[admfname1]",
                "[C13]": "[schools].[admlname1]",
                "[C14]": "[schools].[cdscode]",
                "[C15]": "[schools].[school]"
            },
            "to_symbol": {
                "[frpm]": "[T1]",
                "[frpm].[academic year]": "[C1]",
                "[frpm].[cdscode]": "[C2]",
                "[frpm].[county code]": "[C3]",
                "[frpm].[enrollment (ages 5-17)]": "[C4]",
                "[frpm].[enrollment (k-12)]": "[C5]",
                "[satscores]": "[T2]",
                "[satscores].[avgscrread]": "[C6]",
                "[satscores].[avgscrwrite]": "[C7]",
                "[satscores].[cds]": "[C8]",
                "[satscores].[enroll12]": "[C9]",
                "[satscores].[sname]": "[C10]",
                "[schools]": "[T3]",
                "[schools].[admemail1]": "[C11]",
                "[schools].[admfname1]": "[C12]",
                "[schools].[admlname1]": "[C13]",
                "[schools].[cdscode]": "[C14]",
                "[schools].[school]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: text\n  '[C3]': text\n  '[C4]': real\n  '[C5]': real\n'[T2]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]': integer\n  '[C8]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: text\n  '[C9]': integer\n'[T3]':\n  '[C11]': text\n  '[C12]': text\n  '[C13]': text\n  '[C14]':\n    primary_key: true\n    type: text\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[frpm]",
                "[T1].[C1]": "[frpm].[academic year]",
                "[C1]": "[frpm].[academic year]",
                "[T1].[C2]": "[frpm].[cdscode]",
                "[C2]": "[frpm].[cdscode]",
                "[T1].[C3]": "[frpm].[county code]",
                "[C3]": "[frpm].[county code]",
                "[T1].[C4]": "[frpm].[enrollment (ages 5-17)]",
                "[C4]": "[frpm].[enrollment (ages 5-17)]",
                "[T1].[C5]": "[frpm].[enrollment (k-12)]",
                "[C5]": "[frpm].[enrollment (k-12)]",
                "[T2]": "[satscores]",
                "[T2].[C6]": "[satscores].[avgscrread]",
                "[C6]": "[satscores].[avgscrread]",
                "[T2].[C7]": "[satscores].[avgscrwrite]",
                "[C7]": "[satscores].[avgscrwrite]",
                "[T2].[C8]": "[satscores].[cds]",
                "[C8]": "[satscores].[cds]",
                "[T2].[C9]": "[satscores].[enroll12]",
                "[C9]": "[satscores].[enroll12]",
                "[T2].[C10]": "[satscores].[sname]",
                "[C10]": "[satscores].[sname]",
                "[T3]": "[schools]",
                "[T3].[C11]": "[schools].[admemail1]",
                "[C11]": "[schools].[admemail1]",
                "[T3].[C12]": "[schools].[admfname1]",
                "[C12]": "[schools].[admfname1]",
                "[T3].[C13]": "[schools].[admlname1]",
                "[C13]": "[schools].[admlname1]",
                "[T3].[C14]": "[schools].[cdscode]",
                "[C14]": "[schools].[cdscode]",
                "[T3].[C15]": "[schools].[school]",
                "[C15]": "[schools].[school]"
            },
            "question": "What is the [C7] of each of the [T3] managed by Ricci Ulrich? List the [T3] and the corresponding average writing scores. Usually, administrators manage the school stuff.",
            "to_value": {},
            "masked": 2,
            "masked_terms": [
                "average writing score",
                "schools"
            ],
            "sql": "SELECT [T3].[C11], AVG([T2].[C7]) AS [AverageWritingScore] FROM [T3] JOIN [T2] ON [T3].[C14] = [T2].[C8] WHERE [T3].[C12] = 'Ricci Ulrich' GROUP BY [T3].[C11]",
            "repaired_sql": "SELECT [T3].[C11], AVG([T2].[C7]) FROM [T3] JOIN [T2] ON [T3].[C14] = [T2].[C8] WHERE [T3].[C15] = 'Ricci Ulrich' GROUP BY [T3].[C14], [T3].[C11]"
        },
        "values": [
            "Ricci Ulrich"
        ],
        "value_links": {
            "Ricci Ulrich": "[schools].[admfname1] [schools].[admlname1]"
        },
        "filtered_value_links": {
            "Ricci Ulrich": "[schools].[admfname1] [schools].[admlname1]"
        },
        "schema_links": {
            "average writing score": "COLUMN:[satscores].[avgscrwrite]",
            "schools": "TABLE:[schools]"
        },
        "filtered_schema_links": {
            "average writing score": "COLUMN:[satscores].[avgscrwrite]",
            "schools": "TABLE:[schools]"
        },
        "attack": "What is the average writing score of each of the schools managed by Ricci Ulrich? List the schools and the corresponding average writing scores. Usually, administrators manage the school stuff."
    },
    {
        "question_id": 55,
        "db_id": "california_schools",
        "question": "Of the schools with a mailing state address in California, what is the ratio of the schools located in the county of Colusa against the school located in the county of Humboldt? Ratio = count(schools in Colusa) / count(schools in Humboldt)",
        "evidence": "Ratio = count(schools in Colusa) / count(schools in Humboldt)",
        "SQL": "SELECT CAST(SUM(CASE WHEN County = 'Colusa' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN County = 'Humboldt' THEN 1 ELSE 0 END) FROM schools WHERE MailState = 'CA'",
        "difficulty": "moderate",
        "query": "SELECT CAST(SUM(CASE WHEN County = 'Colusa' THEN 1 ELSE 0 END) AS REAL) / SUM(CASE WHEN County = 'Humboldt' THEN 1 ELSE 0 END) FROM schools WHERE MailState = 'CA'",
        "evidence_added": true,
        "question_toks": [
            "Of",
            "the",
            "schools",
            "with",
            "a",
            "mailing",
            "state",
            "address",
            "in",
            "California",
            ",",
            "what",
            "is",
            "the",
            "ratio",
            "of",
            "the",
            "schools",
            "located",
            "in",
            "the",
            "county",
            "of",
            "Colusa",
            "against",
            "the",
            "school",
            "located",
            "in",
            "the",
            "county",
            "of",
            "Humboldt",
            "?",
            "Ratio",
            "=",
            "count(schools",
            "in",
            "Colusa)",
            "/",
            "count(schools",
            "in",
            "Humboldt)"
        ],
        "tc_original": [
            "schools.county",
            "schools.mailstate",
            "schools.state",
            "schools.school",
            "schools.mailcity",
            "schools.*",
            "frpm.county name",
            "frpm.cdscode",
            "frpm.free meal count (k-12)",
            "frpm.school code",
            "frpm.school name",
            "frpm.*",
            "satscores.cds",
            "satscores.rtype",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[schools]",
            "COLUMN:[schools].[county]",
            "COLUMN:[schools].[mailstate]",
            "COLUMN:[schools].[state]",
            "COLUMN:[schools].[school]",
            "COLUMN:[schools].[mailcity]",
            "COLUMN:[schools].[*]",
            "TABLE:[frpm]",
            "COLUMN:[frpm].[county name]",
            "COLUMN:[frpm].[cdscode]",
            "COLUMN:[frpm].[free meal count (k-12)]",
            "COLUMN:[frpm].[school code]",
            "COLUMN:[frpm].[school name]",
            "COLUMN:[frpm].[*]",
            "TABLE:[satscores]",
            "COLUMN:[satscores].[cds]",
            "COLUMN:[satscores].[rtype]",
            "COLUMN:[satscores].[sname]",
            "COLUMN:[satscores].[dname]",
            "COLUMN:[satscores].[cname]",
            "COLUMN:[satscores].[*]"
        ],
        "schema": "'[frpm]':\n  '[cdscode]':\n    foreign_key: '[schools].[cdscode]'\n    primary_key: true\n    type: text\n  '[county name]': text\n  '[free meal count (k-12)]': real\n  '[school code]': text\n  '[school name]': text\n'[satscores]':\n  '[cds]':\n    foreign_key: '[schools].[cdscode]'\n    primary_key: true\n    type: text\n  '[cname]': text\n  '[dname]': text\n  '[rtype]': text\n  '[sname]': text\n'[schools]':\n  '[cdscode]':\n    primary_key: true\n    type: text\n  '[county]': text\n  '[mailcity]': text\n  '[mailstate]': text\n  '[school]': text\n  '[state]': text\n",
        "gold_links": {
            "schools": "TABLE:[schools]",
            "mailing state": "COLUMN:[schools].[mailstate]",
            "California": "VALUE:[schools].[mailstate]",
            "county": "COLUMN:[schools].[county]",
            "Colusa": "VALUE:[schools].[county]",
            "Humboldt": "VALUE:[schools].[county]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[frpm]",
                "[C1]": "[frpm].[cdscode]",
                "[C2]": "[frpm].[county name]",
                "[C3]": "[frpm].[free meal count (k-12)]",
                "[C4]": "[frpm].[school code]",
                "[C5]": "[frpm].[school name]",
                "[T2]": "[satscores]",
                "[C6]": "[satscores].[cds]",
                "[C7]": "[satscores].[cname]",
                "[C8]": "[satscores].[dname]",
                "[C9]": "[satscores].[rtype]",
                "[C10]": "[satscores].[sname]",
                "[T3]": "[schools]",
                "[C11]": "[schools].[cdscode]",
                "[C12]": "[schools].[county]",
                "[C13]": "[schools].[mailcity]",
                "[C14]": "[schools].[mailstate]",
                "[C15]": "[schools].[school]",
                "[C16]": "[schools].[state]"
            },
            "to_symbol": {
                "[frpm]": "[T1]",
                "[frpm].[cdscode]": "[C1]",
                "[frpm].[county name]": "[C2]",
                "[frpm].[free meal count (k-12)]": "[C3]",
                "[frpm].[school code]": "[C4]",
                "[frpm].[school name]": "[C5]",
                "[satscores]": "[T2]",
                "[satscores].[cds]": "[C6]",
                "[satscores].[cname]": "[C7]",
                "[satscores].[dname]": "[C8]",
                "[satscores].[rtype]": "[C9]",
                "[satscores].[sname]": "[C10]",
                "[schools]": "[T3]",
                "[schools].[cdscode]": "[C11]",
                "[schools].[county]": "[C12]",
                "[schools].[mailcity]": "[C13]",
                "[schools].[mailstate]": "[C14]",
                "[schools].[school]": "[C15]",
                "[schools].[state]": "[C16]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    foreign_key: '[T3].[C11]'\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]': real\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T3].[C11]'\n    primary_key: true\n    type: text\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: text\n  '[C12]': text\n  '[C13]': text\n  '[C14]': text\n  '[C15]': text\n  '[C16]': text\n",
            "reverse_dict": {
                "[T1]": "[frpm]",
                "[T1].[C1]": "[frpm].[cdscode]",
                "[C1]": "[frpm].[cdscode]",
                "[T1].[C2]": "[frpm].[county name]",
                "[C2]": "[frpm].[county name]",
                "[T1].[C3]": "[frpm].[free meal count (k-12)]",
                "[C3]": "[frpm].[free meal count (k-12)]",
                "[T1].[C4]": "[frpm].[school code]",
                "[C4]": "[frpm].[school code]",
                "[T1].[C5]": "[frpm].[school name]",
                "[C5]": "[frpm].[school name]",
                "[T2]": "[satscores]",
                "[T2].[C6]": "[satscores].[cds]",
                "[C6]": "[satscores].[cds]",
                "[T2].[C7]": "[satscores].[cname]",
                "[C7]": "[satscores].[cname]",
                "[T2].[C8]": "[satscores].[dname]",
                "[C8]": "[satscores].[dname]",
                "[T2].[C9]": "[satscores].[rtype]",
                "[C9]": "[satscores].[rtype]",
                "[T2].[C10]": "[satscores].[sname]",
                "[C10]": "[satscores].[sname]",
                "[T3]": "[schools]",
                "[T3].[C11]": "[schools].[cdscode]",
                "[C11]": "[schools].[cdscode]",
                "[T3].[C12]": "[schools].[county]",
                "[C12]": "[schools].[county]",
                "[T3].[C13]": "[schools].[mailcity]",
                "[C13]": "[schools].[mailcity]",
                "[T3].[C14]": "[schools].[mailstate]",
                "[C14]": "[schools].[mailstate]",
                "[T3].[C15]": "[schools].[school]",
                "[C15]": "[schools].[school]",
                "[T3].[C16]": "[schools].[state]",
                "[C16]": "[schools].[state]"
            },
            "question": "Of the schools with a mailing [C16] address in [V1], what is the ratio of the schools located in the county of [V2] against the school located in the county of [V3]? Ratio = count(schools in [V2]) / count(schools in [V3]); [V1] is a value of the column [C14]; [V2] is a value of the column [C12]; [V3] is a value of the column [C12]",
            "to_value": {
                "[V1]": "California",
                "[V2]": "Colusa",
                "[V3]": "Humboldt"
            },
            "masked": 10,
            "masked_terms": [
                "California",
                "Colusa",
                "Humboldt",
                "schools in Colusa",
                "schools in Humboldt",
                "county of Colusa",
                "county of Humboldt",
                "state address in California",
                "state",
                "California"
            ],
            "sql": "SELECT      CAST(         (SELECT COUNT(*) FROM [T3] WHERE [C14] = '[V1]' AND [C12] = '[V2]')         AS REAL     ) /      NULLIF(         (SELECT COUNT(*) FROM [T3] WHERE [C14] = '[V1]' AND [C12] = '[V3]'),         0     ) AS ratio",
            "repaired_sql": "SELECT (SELECT COUNT(*) FROM [T1] JOIN [T3] ON [T1].[C1] = [T3].[C11] WHERE [T3].[C16] = '[V1]' AND [T3].[C12] = '[V2]') * 1.0 / NULLIF((SELECT COUNT(*) FROM [T1] JOIN [T3] ON [T1].[C1] = [T3].[C11] WHERE [T3].[C16] = '[V1]' AND [T3].[C12] = '[V3]'),0)"
        },
        "values": [
            "California",
            "Colusa",
            "Humboldt"
        ],
        "value_links": {
            "California": "[schools].[mailstate]",
            "Colusa": "[schools].[county]",
            "Humboldt": "[schools].[county]"
        },
        "filtered_value_links": {
            "California": "[schools].[mailstate]",
            "Colusa": "[schools].[county]",
            "Humboldt": "[schools].[county]"
        },
        "schema_links": {
            "schools in Colusa": "TABLE:[schools]",
            "schools in Humboldt": "TABLE:[schools]",
            "county of Colusa": "COLUMN:[schools].[county]",
            "county of Humboldt": "COLUMN:[schools].[county]",
            "state address in California": "COLUMN:[schools].[mailstate]",
            "state": "COLUMN:[schools].[state]",
            "California": "COLUMN:[schools].[state]"
        },
        "filtered_schema_links": {
            "schools in Colusa": "TABLE:[schools]",
            "schools in Humboldt": "TABLE:[schools]",
            "county of Colusa": "COLUMN:[schools].[county]",
            "county of Humboldt": "COLUMN:[schools].[county]",
            "state address in California": "COLUMN:[schools].[mailstate]",
            "state": "COLUMN:[schools].[state]",
            "California": "COLUMN:[schools].[state]"
        },
        "attack": "Of the schools with a mailing address in Texas, what is the ratio of the schools located in the county of Harris against the school located in the county of Dallas? Ratio = count(schools in Harris) / count(schools in Dallas)"
    },
    {
        "question_id": 62,
        "db_id": "california_schools",
        "question": "What is the total number of non-chartered schools in the county of Los Angeles with a percent (%) of eligible free meals for grades 1 through 12 that is less than 0.18%? non-chartered schools refer to schools whose Charter = 0; K-12 means grades 1 through 12; percent of eligible free rate for K-12 = `Free Meal Count (K-12)` * 100 / `Enrollment (K-12)`",
        "evidence": "non-chartered schools refer to schools whose Charter = 0; K-12 means grades 1 through 12; percent of eligible free rate for K-12 = `Free Meal Count (K-12)` * 100 / `Enrollment (K-12)`",
        "SQL": "SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18",
        "difficulty": "challenging",
        "query": "SELECT COUNT(T2.School) FROM frpm AS T1 INNER JOIN schools AS T2 ON T1.CDSCode = T2.CDSCode WHERE T2.County = 'Los Angeles' AND T2.Charter = 0 AND CAST(T1.`Free Meal Count (K-12)` AS REAL) * 100 / T1.`Enrollment (K-12)` < 0.18",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "total",
            "number",
            "of",
            "non-chartered",
            "schools",
            "in",
            "the",
            "county",
            "of",
            "Los",
            "Angeles",
            "with",
            "a",
            "percent",
            "(%)",
            "of",
            "eligible",
            "free",
            "meals",
            "for",
            "grades",
            "1",
            "through",
            "12",
            "that",
            "is",
            "less",
            "than",
            "0.18%",
            "?",
            "non-chartered",
            "schools",
            "refer",
            "to",
            "schools",
            "whose",
            "Charter",
            "=",
            "0",
            ";",
            "K-12",
            "means",
            "grades",
            "1",
            "through",
            "12",
            ";",
            "percent",
            "of",
            "eligible",
            "free",
            "rate",
            "for",
            "K-12",
            "=",
            "`Free",
            "Meal",
            "Count",
            "(K-12)`",
            "*",
            "100",
            "/",
            "`Enrollment",
            "(K-12)`"
        ],
        "tc_original": [
            "schools.county",
            "schools.charter",
            "schools.school",
            "schools.cdscode",
            "schools.district",
            "schools.*",
            "frpm.percent (%) eligible free (k-12)",
            "frpm.charter school (y/n)",
            "frpm.county name",
            "frpm.free meal count (k-12)",
            "frpm.enrollment (k-12)",
            "frpm.*",
            "satscores.cds",
            "satscores.rtype",
            "satscores.sname",
            "satscores.dname",
            "satscores.cname",
            "satscores.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[schools]",
            "COLUMN:[schools].[county]",
            "COLUMN:[schools].[charter]",
            "COLUMN:[schools].[school]",
            "COLUMN:[schools].[cdscode]",
            "COLUMN:[schools].[district]",
            "COLUMN:[schools].[*]",
            "TABLE:[frpm]",
            "COLUMN:[frpm].[percent (%) eligible free (k-12)]",
            "COLUMN:[frpm].[charter school (y/n)]",
            "COLUMN:[frpm].[county name]",
            "COLUMN:[frpm].[free meal count (k-12)]",
            "COLUMN:[frpm].[enrollment (k-12)]",
            "COLUMN:[frpm].[*]",
            "TABLE:[satscores]",
            "COLUMN:[satscores].[cds]",
            "COLUMN:[satscores].[rtype]",
            "COLUMN:[satscores].[sname]",
            "COLUMN:[satscores].[dname]",
            "COLUMN:[satscores].[cname]",
            "COLUMN:[satscores].[*]"
        ],
        "schema": "'[frpm]':\n  '[charter school (y/n)]': integer\n  '[county name]': text\n  '[enrollment (k-12)]': real\n  '[free meal count (k-12)]': real\n  '[percent (%) eligible free (k-12)]': real\n'[satscores]':\n  '[cds]':\n    foreign_key: '[schools].[cdscode]'\n    primary_key: true\n    type: text\n  '[cname]': text\n  '[dname]': text\n  '[rtype]': text\n  '[sname]': text\n'[schools]':\n  '[cdscode]':\n    primary_key: true\n    type: text\n  '[charter]': integer\n  '[county]': text\n  '[district]': text\n  '[school]': text\n",
        "gold_links": {
            "non-chartered schools": "TABLE:[schools]",
            "charter": "COLUMN:[schools].[charter]",
            "charter = 0": "VALUE:[schools].[charter]",
            "county": "COLUMN:[schools].[county]",
            "Los Angeles": "VALUE:[schools].[county]",
            "percent": "COLUMN:[frpm].[percent (%) eligible free (k-12)]",
            "eligible free meals": "COLUMN:[frpm].[percent (%) eligible free (k-12)]",
            "grades": "COLUMN:[frpm].[free meal count (k-12)]",
            "grade 1": "COLUMN:[frpm].[free meal count (k-12)]",
            "grade 12": "COLUMN:[frpm].[free meal count (k-12)]",
            "0.18%": "VALUE:[frpm].[percent (%) eligible free (k-12)]",
            "free meal count": "COLUMN:[frpm].[free meal count (k-12)]",
            "enrollment": "COLUMN:[frpm].[enrollment (k-12)]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[frpm]",
                "[C1]": "[frpm].[charter school (y/n)]",
                "[C2]": "[frpm].[county name]",
                "[C3]": "[frpm].[enrollment (k-12)]",
                "[C4]": "[frpm].[free meal count (k-12)]",
                "[C5]": "[frpm].[percent (%) eligible free (k-12)]",
                "[T2]": "[satscores]",
                "[C6]": "[satscores].[cds]",
                "[C7]": "[satscores].[cname]",
                "[C8]": "[satscores].[dname]",
                "[C9]": "[satscores].[rtype]",
                "[C10]": "[satscores].[sname]",
                "[T3]": "[schools]",
                "[C11]": "[schools].[cdscode]",
                "[C12]": "[schools].[charter]",
                "[C13]": "[schools].[county]",
                "[C14]": "[schools].[district]",
                "[C15]": "[schools].[school]"
            },
            "to_symbol": {
                "[frpm]": "[T1]",
                "[frpm].[charter school (y/n)]": "[C1]",
                "[frpm].[county name]": "[C2]",
                "[frpm].[enrollment (k-12)]": "[C3]",
                "[frpm].[free meal count (k-12)]": "[C4]",
                "[frpm].[percent (%) eligible free (k-12)]": "[C5]",
                "[satscores]": "[T2]",
                "[satscores].[cds]": "[C6]",
                "[satscores].[cname]": "[C7]",
                "[satscores].[dname]": "[C8]",
                "[satscores].[rtype]": "[C9]",
                "[satscores].[sname]": "[C10]",
                "[schools]": "[T3]",
                "[schools].[cdscode]": "[C11]",
                "[schools].[charter]": "[C12]",
                "[schools].[county]": "[C13]",
                "[schools].[district]": "[C14]",
                "[schools].[school]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]': integer\n  '[C2]': text\n  '[C3]': real\n  '[C4]': real\n  '[C5]': real\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T3].[C11]'\n    primary_key: true\n    type: text\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: text\n  '[C12]': integer\n  '[C13]': text\n  '[C14]': text\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[frpm]",
                "[T1].[C1]": "[frpm].[charter school (y/n)]",
                "[C1]": "[frpm].[charter school (y/n)]",
                "[T1].[C2]": "[frpm].[county name]",
                "[C2]": "[frpm].[county name]",
                "[T1].[C3]": "[frpm].[enrollment (k-12)]",
                "[C3]": "[frpm].[enrollment (k-12)]",
                "[T1].[C4]": "[frpm].[free meal count (k-12)]",
                "[C4]": "[frpm].[free meal count (k-12)]",
                "[T1].[C5]": "[frpm].[percent (%) eligible free (k-12)]",
                "[C5]": "[frpm].[percent (%) eligible free (k-12)]",
                "[T2]": "[satscores]",
                "[T2].[C6]": "[satscores].[cds]",
                "[C6]": "[satscores].[cds]",
                "[T2].[C7]": "[satscores].[cname]",
                "[C7]": "[satscores].[cname]",
                "[T2].[C8]": "[satscores].[dname]",
                "[C8]": "[satscores].[dname]",
                "[T2].[C9]": "[satscores].[rtype]",
                "[C9]": "[satscores].[rtype]",
                "[T2].[C10]": "[satscores].[sname]",
                "[C10]": "[satscores].[sname]",
                "[T3]": "[schools]",
                "[T3].[C11]": "[schools].[cdscode]",
                "[C11]": "[schools].[cdscode]",
                "[T3].[C12]": "[schools].[charter]",
                "[C12]": "[schools].[charter]",
                "[T3].[C13]": "[schools].[county]",
                "[C13]": "[schools].[county]",
                "[T3].[C14]": "[schools].[district]",
                "[C14]": "[schools].[district]",
                "[T3].[C15]": "[schools].[school]",
                "[C15]": "[schools].[school]"
            },
            "question": "What is the total number of [C12] [T3] in the [T3] of [V1] with a [C5] (%) of [C5] for grades 1 through 12 that is less than [V2].18%? [C12] [T3] refer to [T3] whose Charter = [V2]; [C5] means grades 1 through 12; [C5] of eligible free rate for [C5] = `Free Meal Count ([C5])` * 100 / `Enrollment ([C5])`; [V1] is a value of the column [C13]; [V2] is a value of the column [C12]; [V3] is a value of the column [C4]; [V4] is a value of the column [C3]; [V5] is a value of the column [C5]",
            "to_value": {
                "[V1]": "Los Angeles",
                "[V2]": "0",
                "[V3]": "Free Meal Count (K-12)",
                "[V4]": "Enrollment (K-12)",
                "[V5]": "0.18"
            },
            "masked": 15,
            "masked_terms": [
                "Los Angeles",
                "0",
                "Free Meal Count (K-12)",
                "Enrollment (K-12)",
                "0.18",
                "non-chartered",
                "schools",
                "county",
                "Los Angeles",
                "percent",
                "eligible free meals",
                "K-12",
                "Free Meal Count (K-12)",
                "Enrollment (K-12)",
                "0.18"
            ],
            "sql": "SELECT SUM([T3].[C12]) FROM [T3] WHERE [T3].[C14] = '[V2]' AND [T3].[C13] = '[V1]' AND ([T3].[C12] * 100.0 / [T3].[C15]) < ([V2].18)",
            "repaired_sql": "SELECT COUNT(*) FROM [T3] WHERE [C13] = '[V1]' AND [C12] = [V2] AND ((SELECT [C4] FROM [T1] WHERE [T1].[C1] = [T3].[C11] AND [C2] = 'grades 1 through 12') * 100.0 / (SELECT [C3] FROM [T1] WHERE [T1].[C1] = [T3].[C11] AND [C2] = 'grades 1 through 12')) < 18"
        },
        "values": [
            "Los Angeles",
            "0",
            "Free Meal Count (K-12)",
            "Enrollment (K-12)",
            "0.18"
        ],
        "value_links": {
            "Los Angeles": "[schools].[county]",
            "0": "[schools].[charter]",
            "Free Meal Count (K-12)": "[frpm].[free meal count (k-12)]",
            "Enrollment (K-12)": "[frpm].[enrollment (k-12)]",
            "0.18": "[frpm].[percent (%) eligible free (k-12)]"
        },
        "filtered_value_links": {
            "Los Angeles": "[schools].[county]",
            "0": "[schools].[charter]",
            "Free Meal Count (K-12)": "[frpm].[free meal count (k-12)]",
            "Enrollment (K-12)": "[frpm].[enrollment (k-12)]",
            "0.18": "[frpm].[percent (%) eligible free (k-12)]"
        },
        "schema_links": {
            "total": "COLUMN:[schools].[*]",
            "non-chartered": "COLUMN:[schools].[charter]",
            "schools": "TABLE:[schools]",
            "county": "TABLE:[schools]",
            "Los Angeles": "COLUMN:[schools].[county]",
            "percent": "COLUMN:[frpm].[percent (%) eligible free (k-12)]",
            "eligible free meals": "COLUMN:[frpm].[percent (%) eligible free (k-12)]",
            "K-12": "COLUMN:[frpm].[percent (%) eligible free (k-12)]",
            "Free Meal Count (K-12)": "COLUMN:[frpm].[free meal count (k-12)]",
            "Enrollment (K-12)": "COLUMN:[frpm].[enrollment (k-12)]",
            "0.18": "COLUMN:[frpm].[percent (%) eligible free (k-12)]"
        },
        "filtered_schema_links": {
            "total": "COLUMN:[schools].[*]",
            "non-chartered": "COLUMN:[schools].[charter]",
            "schools": "TABLE:[schools]",
            "county": "TABLE:[schools]",
            "Los Angeles": "COLUMN:[schools].[county]",
            "percent": "COLUMN:[frpm].[percent (%) eligible free (k-12)]",
            "eligible free meals": "COLUMN:[frpm].[percent (%) eligible free (k-12)]",
            "K-12": "COLUMN:[frpm].[percent (%) eligible free (k-12)]",
            "Free Meal Count (K-12)": "COLUMN:[frpm].[free meal count (k-12)]",
            "Enrollment (K-12)": "COLUMN:[frpm].[enrollment (k-12)]",
            "0.18": "COLUMN:[frpm].[percent (%) eligible free (k-12)]"
        },
        "attack": "What is the total number of Charter schools in the schools of District with a Free Meal Count (grades 1 through 12) (%) of Free Meal Count (grades 1 through 12) for grades 1 through 12 that is less than 18%? Charter schools refer to schools whose Charter = Charter; Free Meal Count (grades 1 through 12) means grades 1 through 12; Free Meal Count (grades 1 through 12) of eligible free rate for grades 1 through 12 = `Free Meal Count (grades 1 through 12)` * 100 / `Enrollment (grades 1 through 12)`; District is a value of the column District; Charter is a value of the column Charter; 18% is a value of the column Free Meal Count (grades 1 through 12);"
    },
    {
        "question_id": 104,
        "db_id": "financial",
        "question": "The transaction of 840 USD happened in 1998/10/14, when was this account opened?",
        "evidence": "",
        "SQL": "SELECT T1.date FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.amount = 840 AND T2.date = '1998-10-14'",
        "difficulty": "simple",
        "query": "SELECT T1.date FROM account AS T1 INNER JOIN trans AS T2 ON T1.account_id = T2.account_id WHERE T2.amount = 840 AND T2.date = '1998-10-14'",
        "question_toks": [
            "The",
            "transaction",
            "of",
            "840",
            "USD",
            "happened",
            "in",
            "1998/10/14",
            ",",
            "when",
            "was",
            "this",
            "account",
            "opened",
            "?"
        ],
        "tc_original": [
            "trans.date",
            "trans.amount",
            "trans.account_id",
            "trans.k_symbol",
            "trans.trans_id",
            "trans.*",
            "account.date",
            "account.account_id",
            "account.frequency",
            "account.district_id",
            "account.*",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.status",
            "loan.loan_id",
            "loan.*",
            "card.type",
            "card.issued",
            "card.card_id",
            "card.disp_id",
            "card.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[trans]",
            "COLUMN:[trans].[date]",
            "COLUMN:[trans].[amount]",
            "COLUMN:[trans].[account_id]",
            "COLUMN:[trans].[k_symbol]",
            "COLUMN:[trans].[trans_id]",
            "COLUMN:[trans].[*]",
            "TABLE:[account]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[*]",
            "TABLE:[loan]",
            "COLUMN:[loan].[date]",
            "COLUMN:[loan].[amount]",
            "COLUMN:[loan].[duration]",
            "COLUMN:[loan].[status]",
            "COLUMN:[loan].[loan_id]",
            "COLUMN:[loan].[*]",
            "TABLE:[card]",
            "COLUMN:[card].[type]",
            "COLUMN:[card].[issued]",
            "COLUMN:[card].[card_id]",
            "COLUMN:[card].[disp_id]",
            "COLUMN:[card].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[card]':\n  '[card_id]':\n    primary_key: true\n    type: integer\n  '[disp_id]':\n    foreign_key: '[disp].[disp_id]'\n    type: integer\n  '[issued]': date\n  '[type]': text\n'[disp]':\n  '[disp_id]':\n    primary_key: true\n    type: integer\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[loan]':\n  '[amount]': integer\n  '[date]': date\n  '[duration]': integer\n  '[loan_id]':\n    primary_key: true\n    type: integer\n  '[status]': text\n'[trans]':\n  '[account_id]':\n    foreign_key: '[account].[account_id]'\n    type: integer\n  '[amount]': integer\n  '[date]': date\n  '[k_symbol]': text\n  '[trans_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "transaction": "TABLE:[trans]",
            "840": "VALUE:[trans].[amount]",
            "USD": "COLUMN:[trans].[amount]",
            "1998/10/14": "VALUE:[trans].[date]",
            "account": "TABLE:[account]",
            "opened": "COLUMN:[account].[date]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[C5]": "[card].[card_id]",
                "[C6]": "[card].[disp_id]",
                "[C7]": "[card].[issued]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[C10]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[C11]": "[loan].[amount]",
                "[C12]": "[loan].[date]",
                "[C13]": "[loan].[duration]",
                "[C14]": "[loan].[loan_id]",
                "[C15]": "[loan].[status]",
                "[T6]": "[trans]",
                "[C16]": "[trans].[account_id]",
                "[C17]": "[trans].[amount]",
                "[C18]": "[trans].[date]",
                "[C19]": "[trans].[k_symbol]",
                "[C20]": "[trans].[trans_id]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[card]": "[T2]",
                "[card].[card_id]": "[C5]",
                "[card].[disp_id]": "[C6]",
                "[card].[issued]": "[C7]",
                "[card].[type]": "[C8]",
                "[disp]": "[T3]",
                "[disp].[disp_id]": "[C9]",
                "[district]": "[T4]",
                "[district].[district_id]": "[C10]",
                "[loan]": "[T5]",
                "[loan].[amount]": "[C11]",
                "[loan].[date]": "[C12]",
                "[loan].[duration]": "[C13]",
                "[loan].[loan_id]": "[C14]",
                "[loan].[status]": "[C15]",
                "[trans]": "[T6]",
                "[trans].[account_id]": "[C16]",
                "[trans].[amount]": "[C17]",
                "[trans].[date]": "[C18]",
                "[trans].[k_symbol]": "[C19]",
                "[trans].[trans_id]": "[C20]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T4].[C10]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]':\n    foreign_key: '[T3].[C9]'\n    type: integer\n  '[C7]': date\n  '[C8]': text\n'[T3]':\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]':\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C11]': integer\n  '[C12]': date\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n'[T6]':\n  '[C16]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C17]': integer\n  '[C18]': date\n  '[C19]': text\n  '[C20]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[T2].[C5]": "[card].[card_id]",
                "[C5]": "[card].[card_id]",
                "[T2].[C6]": "[card].[disp_id]",
                "[C6]": "[card].[disp_id]",
                "[T2].[C7]": "[card].[issued]",
                "[C7]": "[card].[issued]",
                "[T2].[C8]": "[card].[type]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[T3].[C9]": "[disp].[disp_id]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[T4].[C10]": "[district].[district_id]",
                "[C10]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[T5].[C11]": "[loan].[amount]",
                "[C11]": "[loan].[amount]",
                "[T5].[C12]": "[loan].[date]",
                "[C12]": "[loan].[date]",
                "[T5].[C13]": "[loan].[duration]",
                "[C13]": "[loan].[duration]",
                "[T5].[C14]": "[loan].[loan_id]",
                "[C14]": "[loan].[loan_id]",
                "[T5].[C15]": "[loan].[status]",
                "[C15]": "[loan].[status]",
                "[T6]": "[trans]",
                "[T6].[C16]": "[trans].[account_id]",
                "[C16]": "[trans].[account_id]",
                "[T6].[C17]": "[trans].[amount]",
                "[C17]": "[trans].[amount]",
                "[T6].[C18]": "[trans].[date]",
                "[C18]": "[trans].[date]",
                "[T6].[C19]": "[trans].[k_symbol]",
                "[C19]": "[trans].[k_symbol]",
                "[T6].[C20]": "[trans].[trans_id]",
                "[C20]": "[trans].[trans_id]"
            },
            "question": "The [T6] of [V1] happened in [V2], when was this [T1]?; [V1] is a value of the column [C17]; [V2] is a value of the column [C18]",
            "to_value": {
                "[V1]": "840 USD",
                "[V2]": "1998/10/14"
            },
            "masked": 5,
            "masked_terms": [
                "840 USD",
                "1998/10/14",
                "transaction",
                "1998/10/14",
                "account opened"
            ],
            "sql": "SELECT [T1].[C2] FROM [T1] JOIN [T6] ON [T6].[C16] = [T1].[C1] WHERE [T6].[C17] = [V1] AND [T6].[C18] = [V2]",
            "repaired_sql": "SELECT [T1].[C2] FROM [T6] JOIN [T1] ON [T6].[C16] = [T1].[C1] WHERE [T6].[C17] = [V1] AND [T6].[C18] = '[V2]'"
        },
        "values": [
            "840 USD",
            "1998/10/14"
        ],
        "value_links": {
            "840 USD": "[trans].[amount]",
            "1998/10/14": "[trans].[date]"
        },
        "filtered_value_links": {
            "840 USD": "[trans].[amount]",
            "1998/10/14": "[trans].[date]"
        },
        "schema_links": {
            "transaction": "TABLE:[trans]",
            "1998/10/14": "COLUMN:[trans].[date]",
            "account opened": "TABLE:[account]"
        },
        "filtered_schema_links": {
            "transaction": "TABLE:[trans]",
            "1998/10/14": "COLUMN:[trans].[date]",
            "account opened": "TABLE:[account]"
        },
        "attack": "The event of 123 happened in 2020-01-01, when was this incident?"
    },
    {
        "question_id": 105,
        "db_id": "financial",
        "question": "There was a loan approved in 1994/8/25, where was that account opened, give the district Id of the branch.",
        "evidence": "",
        "SQL": "SELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1994-08-25'",
        "difficulty": "simple",
        "query": "SELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1994-08-25'",
        "question_toks": [
            "There",
            "was",
            "a",
            "loan",
            "approved",
            "in",
            "1994/8/25",
            ",",
            "where",
            "was",
            "that",
            "account",
            "opened",
            ",",
            "give",
            "the",
            "district",
            "Id",
            "of",
            "the",
            "branch",
            "."
        ],
        "tc_original": [
            "loan.date",
            "loan.account_id",
            "loan.loan_id",
            "loan.amount",
            "loan.duration",
            "loan.*",
            "district.district_id",
            "district.a2",
            "district.a3",
            "district.a4",
            "district.a5",
            "district.*",
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "account.*",
            "card.type",
            "card.issued",
            "card.card_id",
            "card.disp_id",
            "card.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[loan]",
            "COLUMN:[loan].[date]",
            "COLUMN:[loan].[account_id]",
            "COLUMN:[loan].[loan_id]",
            "COLUMN:[loan].[amount]",
            "COLUMN:[loan].[duration]",
            "COLUMN:[loan].[*]",
            "TABLE:[district]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[a2]",
            "COLUMN:[district].[a3]",
            "COLUMN:[district].[a4]",
            "COLUMN:[district].[a5]",
            "COLUMN:[district].[*]",
            "TABLE:[account]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[*]",
            "TABLE:[card]",
            "COLUMN:[card].[type]",
            "COLUMN:[card].[issued]",
            "COLUMN:[card].[card_id]",
            "COLUMN:[card].[disp_id]",
            "COLUMN:[card].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[card]':\n  '[card_id]':\n    primary_key: true\n    type: integer\n  '[disp_id]':\n    foreign_key: '[disp].[disp_id]'\n    type: integer\n  '[issued]': date\n  '[type]': text\n'[disp]':\n  '[disp_id]':\n    primary_key: true\n    type: integer\n'[district]':\n  '[a2]': text\n  '[a3]': text\n  '[a4]': text\n  '[a5]': text\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[loan]':\n  '[account_id]':\n    foreign_key: '[account].[account_id]'\n    type: integer\n  '[amount]': integer\n  '[date]': date\n  '[duration]': integer\n  '[loan_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "loan": "TABLE:[loan]",
            "approved": "TABLE:[loan]",
            "1994/8/25": "VALUE:[loan].[date]",
            "account": "TABLE:[account]",
            "opened": "COLUMN:[account].[date]",
            "district Id": "COLUMN:[account].[district_id]",
            "branch": "COLUMN:[account].[district_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[C5]": "[card].[card_id]",
                "[C6]": "[card].[disp_id]",
                "[C7]": "[card].[issued]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[C10]": "[district].[a2]",
                "[C11]": "[district].[a3]",
                "[C12]": "[district].[a4]",
                "[C13]": "[district].[a5]",
                "[C14]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[C15]": "[loan].[account_id]",
                "[C16]": "[loan].[amount]",
                "[C17]": "[loan].[date]",
                "[C18]": "[loan].[duration]",
                "[C19]": "[loan].[loan_id]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[card]": "[T2]",
                "[card].[card_id]": "[C5]",
                "[card].[disp_id]": "[C6]",
                "[card].[issued]": "[C7]",
                "[card].[type]": "[C8]",
                "[disp]": "[T3]",
                "[disp].[disp_id]": "[C9]",
                "[district]": "[T4]",
                "[district].[a2]": "[C10]",
                "[district].[a3]": "[C11]",
                "[district].[a4]": "[C12]",
                "[district].[a5]": "[C13]",
                "[district].[district_id]": "[C14]",
                "[loan]": "[T5]",
                "[loan].[account_id]": "[C15]",
                "[loan].[amount]": "[C16]",
                "[loan].[date]": "[C17]",
                "[loan].[duration]": "[C18]",
                "[loan].[loan_id]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T4].[C14]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]':\n    foreign_key: '[T3].[C9]'\n    type: integer\n  '[C7]': date\n  '[C8]': text\n'[T3]':\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]': text\n  '[C11]': text\n  '[C12]': text\n  '[C13]': text\n  '[C14]':\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C15]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C16]': integer\n  '[C17]': date\n  '[C18]': integer\n  '[C19]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[T2].[C5]": "[card].[card_id]",
                "[C5]": "[card].[card_id]",
                "[T2].[C6]": "[card].[disp_id]",
                "[C6]": "[card].[disp_id]",
                "[T2].[C7]": "[card].[issued]",
                "[C7]": "[card].[issued]",
                "[T2].[C8]": "[card].[type]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[T3].[C9]": "[disp].[disp_id]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[T4].[C10]": "[district].[a2]",
                "[C10]": "[district].[a2]",
                "[T4].[C11]": "[district].[a3]",
                "[C11]": "[district].[a3]",
                "[T4].[C12]": "[district].[a4]",
                "[C12]": "[district].[a4]",
                "[T4].[C13]": "[district].[a5]",
                "[C13]": "[district].[a5]",
                "[T4].[C14]": "[district].[district_id]",
                "[C14]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[T5].[C15]": "[loan].[account_id]",
                "[C15]": "[loan].[account_id]",
                "[T5].[C16]": "[loan].[amount]",
                "[C16]": "[loan].[amount]",
                "[T5].[C17]": "[loan].[date]",
                "[C17]": "[loan].[date]",
                "[T5].[C18]": "[loan].[duration]",
                "[C18]": "[loan].[duration]",
                "[T5].[C19]": "[loan].[loan_id]",
                "[C19]": "[loan].[loan_id]"
            },
            "question": "There was a loan approved in [V1], where was that [C1], give the [C14] of the branch.; [V1] is a value of the column [C17]",
            "to_value": {
                "[V1]": "1994/8/25"
            },
            "masked": 3,
            "masked_terms": [
                "1994/8/25",
                "account opened",
                "district id"
            ],
            "sql": "SELECT [T4].[C14] FROM [T5] JOIN [T1] ON [T5].[C15] = [T1].[C1] JOIN [T4] ON [T1].[C3] = [T4].[C14] WHERE [T5].[C17] = '[V1]'",
            "repaired_sql": "SELECT [T4].[C14] FROM [T5] JOIN [T1] ON [T5].[C15] = [T1].[C1] JOIN [T4] ON [T1].[C3] = [T4].[C14] WHERE [T5].[C17] = '[V1]'"
        },
        "values": [
            "1994/8/25"
        ],
        "value_links": {
            "1994/8/25": "[loan].[date]"
        },
        "filtered_value_links": {
            "1994/8/25": "[loan].[date]"
        },
        "schema_links": {
            "account opened": "COLUMN:[account].[account_id]",
            "district id": "COLUMN:[district].[district_id]"
        },
        "filtered_schema_links": {
            "account opened": "COLUMN:[account].[account_id]",
            "district id": "COLUMN:[district].[district_id]"
        },
        "attack": "There was a loan approved in 2020-01-01, where was that loan, give the id of the branch."
    },
    {
        "question_id": 111,
        "db_id": "financial",
        "question": "How many accounts were opened in Litomerice in 1996? A2 refers to district name; Litomerice is one of district names.",
        "evidence": "A2 refers to district name; Litomerice is one of district names.",
        "SQL": "SELECT COUNT(T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T2.date) = '1996' AND T1.A2 = 'Litomerice'",
        "difficulty": "simple",
        "query": "SELECT COUNT(T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T2.date) = '1996' AND T1.A2 = 'Litomerice'",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "accounts",
            "were",
            "opened",
            "in",
            "Litomerice",
            "in",
            "1996",
            "?",
            "A2",
            "refers",
            "to",
            "district",
            "name",
            ";",
            "Litomerice",
            "is",
            "one",
            "of",
            "district",
            "names",
            "."
        ],
        "tc_original": [
            "district.a2",
            "district.district_id",
            "district.a9",
            "district.a3",
            "district.a4",
            "district.*",
            "account.district_id",
            "account.date",
            "account.account_id",
            "account.frequency",
            "account.*",
            "card.type",
            "card.issued",
            "card.card_id",
            "card.disp_id",
            "card.*",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.status",
            "loan.loan_id",
            "loan.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[district]",
            "COLUMN:[district].[a2]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[a9]",
            "COLUMN:[district].[a3]",
            "COLUMN:[district].[a4]",
            "COLUMN:[district].[*]",
            "TABLE:[account]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[*]",
            "TABLE:[card]",
            "COLUMN:[card].[type]",
            "COLUMN:[card].[issued]",
            "COLUMN:[card].[card_id]",
            "COLUMN:[card].[disp_id]",
            "COLUMN:[card].[*]",
            "TABLE:[loan]",
            "COLUMN:[loan].[date]",
            "COLUMN:[loan].[amount]",
            "COLUMN:[loan].[duration]",
            "COLUMN:[loan].[status]",
            "COLUMN:[loan].[loan_id]",
            "COLUMN:[loan].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[card]':\n  '[card_id]':\n    primary_key: true\n    type: integer\n  '[disp_id]':\n    foreign_key: '[disp].[disp_id]'\n    type: integer\n  '[issued]': date\n  '[type]': text\n'[disp]':\n  '[disp_id]':\n    primary_key: true\n    type: integer\n'[district]':\n  '[a2]': text\n  '[a3]': text\n  '[a4]': text\n  '[a9]': integer\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[loan]':\n  '[amount]': integer\n  '[date]': date\n  '[duration]': integer\n  '[loan_id]':\n    primary_key: true\n    type: integer\n  '[status]': text\n",
        "gold_links": {
            "accounts": "TABLE:[account]",
            "opened": "COLUMN:[account].[date]",
            "Litomerice": "VALUE:[district].[a2]",
            "district name": "COLUMN:[district].[a2]",
            "1996": "VALUE:[account].[date]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[C5]": "[card].[card_id]",
                "[C6]": "[card].[disp_id]",
                "[C7]": "[card].[issued]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[C10]": "[district].[a2]",
                "[C11]": "[district].[a3]",
                "[C12]": "[district].[a4]",
                "[C13]": "[district].[a9]",
                "[C14]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[C15]": "[loan].[amount]",
                "[C16]": "[loan].[date]",
                "[C17]": "[loan].[duration]",
                "[C18]": "[loan].[loan_id]",
                "[C19]": "[loan].[status]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[card]": "[T2]",
                "[card].[card_id]": "[C5]",
                "[card].[disp_id]": "[C6]",
                "[card].[issued]": "[C7]",
                "[card].[type]": "[C8]",
                "[disp]": "[T3]",
                "[disp].[disp_id]": "[C9]",
                "[district]": "[T4]",
                "[district].[a2]": "[C10]",
                "[district].[a3]": "[C11]",
                "[district].[a4]": "[C12]",
                "[district].[a9]": "[C13]",
                "[district].[district_id]": "[C14]",
                "[loan]": "[T5]",
                "[loan].[amount]": "[C15]",
                "[loan].[date]": "[C16]",
                "[loan].[duration]": "[C17]",
                "[loan].[loan_id]": "[C18]",
                "[loan].[status]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T4].[C14]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]':\n    foreign_key: '[T3].[C9]'\n    type: integer\n  '[C7]': date\n  '[C8]': text\n'[T3]':\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]': text\n  '[C11]': text\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C15]': integer\n  '[C16]': date\n  '[C17]': integer\n  '[C18]':\n    primary_key: true\n    type: integer\n  '[C19]': text\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[T2].[C5]": "[card].[card_id]",
                "[C5]": "[card].[card_id]",
                "[T2].[C6]": "[card].[disp_id]",
                "[C6]": "[card].[disp_id]",
                "[T2].[C7]": "[card].[issued]",
                "[C7]": "[card].[issued]",
                "[T2].[C8]": "[card].[type]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[T3].[C9]": "[disp].[disp_id]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[T4].[C10]": "[district].[a2]",
                "[C10]": "[district].[a2]",
                "[T4].[C11]": "[district].[a3]",
                "[C11]": "[district].[a3]",
                "[T4].[C12]": "[district].[a4]",
                "[C12]": "[district].[a4]",
                "[T4].[C13]": "[district].[a9]",
                "[C13]": "[district].[a9]",
                "[T4].[C14]": "[district].[district_id]",
                "[C14]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[T5].[C15]": "[loan].[amount]",
                "[C15]": "[loan].[amount]",
                "[T5].[C16]": "[loan].[date]",
                "[C16]": "[loan].[date]",
                "[T5].[C17]": "[loan].[duration]",
                "[C17]": "[loan].[duration]",
                "[T5].[C18]": "[loan].[loan_id]",
                "[C18]": "[loan].[loan_id]",
                "[T5].[C19]": "[loan].[status]",
                "[C19]": "[loan].[status]"
            },
            "question": "How many accounts were opened in [V1] in [V2]? A2 refers to district name; [V1] is one of district names.; [V1] is a value of the column [C10]; [V2] is a value of the column [C2]",
            "to_value": {
                "[V1]": "Litomerice",
                "[V2]": "1996"
            },
            "masked": 4,
            "masked_terms": [
                "Litomerice",
                "1996",
                "Litomerice",
                "1996"
            ],
            "sql": "SELECT COUNT(*) FROM [T1] INNER JOIN [T4] ON [T1].[C3] = [T4].[C14] WHERE [T4].[C10] = '[V1]' AND [T1].[C2] = '[V2]'",
            "repaired_sql": "SELECT COUNT(*) FROM [T1] JOIN [T4] ON [T1].[C3] = [T4].[C14] WHERE [T4].[C10] = '[V1]' AND [T1].[C2] = '[V2]'"
        },
        "values": [
            "Litomerice",
            "1996"
        ],
        "value_links": {
            "Litomerice": "[district].[a2]",
            "1996": "[account].[date]"
        },
        "filtered_value_links": {
            "Litomerice": "[district].[a2]",
            "1996": "[account].[date]"
        },
        "schema_links": {
            "Litomerice": "COLUMN:[district].[a2]",
            "1996": "COLUMN:[account].[date]"
        },
        "filtered_schema_links": {
            "Litomerice": "COLUMN:[district].[a2]",
            "1996": "COLUMN:[account].[date]"
        },
        "attack": "How many accounts were opened in A2 in 1997?"
    },
    {
        "question_id": 117,
        "db_id": "financial",
        "question": "What is the percentage of loan amount that has been fully paid with no issue. Loan paid with no issue means contract finished, no problems; status = 'A' means contract finished, no problems; Percentage of accounts by condition = [(total(amount) & condition) / (total amount)] * 100%",
        "evidence": "Loan paid with no issue means contract finished, no problems; status = 'A' means contract finished, no problems; Percentage of accounts by condition = [(total(amount) & condition) / (total amount)] * 100%",
        "SQL": "SELECT (CAST(SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) AS REAL) * 100) / SUM(amount) FROM loan",
        "difficulty": "moderate",
        "query": "SELECT (CAST(SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) AS REAL) * 100) / SUM(amount) FROM loan",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "percentage",
            "of",
            "loan",
            "amount",
            "that",
            "has",
            "been",
            "fully",
            "paid",
            "with",
            "no",
            "issue",
            ".",
            "Loan",
            "paid",
            "with",
            "no",
            "issue",
            "means",
            "contract",
            "finished",
            ",",
            "no",
            "problems",
            ";",
            "status",
            "=",
            "'A'",
            "means",
            "contract",
            "finished",
            ",",
            "no",
            "problems",
            ";",
            "Percentage",
            "of",
            "accounts",
            "by",
            "condition",
            "=",
            "[(total(amount)",
            "&",
            "condition)",
            "/",
            "(total",
            "amount)]",
            "*",
            "100%"
        ],
        "tc_original": [
            "loan.amount",
            "loan.status",
            "loan.date",
            "loan.account_id",
            "loan.payments",
            "loan.*",
            "account.frequency",
            "account.date",
            "account.account_id",
            "account.district_id",
            "account.*",
            "card.type",
            "card.issued",
            "card.card_id",
            "card.disp_id",
            "card.*",
            "client.gender",
            "client.client_id",
            "client.birth_date",
            "client.district_id",
            "client.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[loan]",
            "COLUMN:[loan].[amount]",
            "COLUMN:[loan].[status]",
            "COLUMN:[loan].[date]",
            "COLUMN:[loan].[account_id]",
            "COLUMN:[loan].[payments]",
            "COLUMN:[loan].[*]",
            "TABLE:[account]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[*]",
            "TABLE:[card]",
            "COLUMN:[card].[type]",
            "COLUMN:[card].[issued]",
            "COLUMN:[card].[card_id]",
            "COLUMN:[card].[disp_id]",
            "COLUMN:[card].[*]",
            "TABLE:[client]",
            "COLUMN:[client].[gender]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[birth_date]",
            "COLUMN:[client].[district_id]",
            "COLUMN:[client].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[card]':\n  '[card_id]':\n    primary_key: true\n    type: integer\n  '[disp_id]':\n    foreign_key: '[disp].[disp_id]'\n    type: integer\n  '[issued]': date\n  '[type]': text\n'[client]':\n  '[birth_date]': date\n  '[client_id]':\n    primary_key: true\n    type: integer\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[gender]': text\n'[disp]':\n  '[disp_id]':\n    primary_key: true\n    type: integer\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[loan]':\n  '[account_id]':\n    foreign_key: '[account].[account_id]'\n    type: integer\n  '[amount]': integer\n  '[date]': date\n  '[payments]': real\n  '[status]': text\n",
        "gold_links": {
            "percentage": "COLUMN:[loan].[amount]",
            "loan amount": "COLUMN:[loan].[amount]",
            "fully paid": "COLUMN:[loan].[status]",
            "no issue": "COLUMN:[loan].[status]",
            "contract finished": "COLUMN:[loan].[status]",
            "status": "COLUMN:[loan].[status]",
            "A": "VALUE:[loan].[status]",
            "accounts": "TABLE:[loan]",
            "condition": "COLUMN:[loan].[status]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[C5]": "[card].[card_id]",
                "[C6]": "[card].[disp_id]",
                "[C7]": "[card].[issued]",
                "[C8]": "[card].[type]",
                "[T3]": "[client]",
                "[C9]": "[client].[birth_date]",
                "[C10]": "[client].[client_id]",
                "[C11]": "[client].[district_id]",
                "[C12]": "[client].[gender]",
                "[T4]": "[disp]",
                "[C13]": "[disp].[disp_id]",
                "[T5]": "[district]",
                "[C14]": "[district].[district_id]",
                "[T6]": "[loan]",
                "[C15]": "[loan].[account_id]",
                "[C16]": "[loan].[amount]",
                "[C17]": "[loan].[date]",
                "[C18]": "[loan].[payments]",
                "[C19]": "[loan].[status]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[card]": "[T2]",
                "[card].[card_id]": "[C5]",
                "[card].[disp_id]": "[C6]",
                "[card].[issued]": "[C7]",
                "[card].[type]": "[C8]",
                "[client]": "[T3]",
                "[client].[birth_date]": "[C9]",
                "[client].[client_id]": "[C10]",
                "[client].[district_id]": "[C11]",
                "[client].[gender]": "[C12]",
                "[disp]": "[T4]",
                "[disp].[disp_id]": "[C13]",
                "[district]": "[T5]",
                "[district].[district_id]": "[C14]",
                "[loan]": "[T6]",
                "[loan].[account_id]": "[C15]",
                "[loan].[amount]": "[C16]",
                "[loan].[date]": "[C17]",
                "[loan].[payments]": "[C18]",
                "[loan].[status]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T5].[C14]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]':\n    foreign_key: '[T4].[C13]'\n    type: integer\n  '[C7]': date\n  '[C8]': text\n'[T3]':\n  '[C10]':\n    primary_key: true\n    type: integer\n  '[C11]':\n    foreign_key: '[T5].[C14]'\n    type: integer\n  '[C12]': text\n  '[C9]': date\n'[T4]':\n  '[C13]':\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C14]':\n    primary_key: true\n    type: integer\n'[T6]':\n  '[C15]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C16]': integer\n  '[C17]': date\n  '[C18]': real\n  '[C19]': text\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[T2].[C5]": "[card].[card_id]",
                "[C5]": "[card].[card_id]",
                "[T2].[C6]": "[card].[disp_id]",
                "[C6]": "[card].[disp_id]",
                "[T2].[C7]": "[card].[issued]",
                "[C7]": "[card].[issued]",
                "[T2].[C8]": "[card].[type]",
                "[C8]": "[card].[type]",
                "[T3]": "[client]",
                "[T3].[C9]": "[client].[birth_date]",
                "[C9]": "[client].[birth_date]",
                "[T3].[C10]": "[client].[client_id]",
                "[C10]": "[client].[client_id]",
                "[T3].[C11]": "[client].[district_id]",
                "[C11]": "[client].[district_id]",
                "[T3].[C12]": "[client].[gender]",
                "[C12]": "[client].[gender]",
                "[T4]": "[disp]",
                "[T4].[C13]": "[disp].[disp_id]",
                "[C13]": "[disp].[disp_id]",
                "[T5]": "[district]",
                "[T5].[C14]": "[district].[district_id]",
                "[C14]": "[district].[district_id]",
                "[T6]": "[loan]",
                "[T6].[C15]": "[loan].[account_id]",
                "[C15]": "[loan].[account_id]",
                "[T6].[C16]": "[loan].[amount]",
                "[C16]": "[loan].[amount]",
                "[T6].[C17]": "[loan].[date]",
                "[C17]": "[loan].[date]",
                "[T6].[C18]": "[loan].[payments]",
                "[C18]": "[loan].[payments]",
                "[T6].[C19]": "[loan].[status]",
                "[C19]": "[loan].[status]"
            },
            "question": "What is the percentage of [T6] [C16] that has been fully paid with no issue. [T6] paid with no issue means [C19], [C19]; [C19] = '[C19]' means [C19], [C19]; Percentage of accounts by condition = [(total([C16]) & condition) / (total [C16])] * 100%; [V1] is [C19] value of the column [C19]",
            "to_value": {
                "[V1]": "'A'"
            },
            "masked": 9,
            "masked_terms": [
                "'A'",
                "loan",
                "amount",
                "status",
                "A",
                "contract finished",
                "no problems",
                "total(amount)",
                "total amount"
            ],
            "sql": "SELECT (COUNT(*) * 100.0 / (SELECT COUNT(*) FROM [T6])) AS [percentage_fully_paid_no_issue] FROM [T6] WHERE [T6].[C19] = '[C19]'",
            "repaired_sql": "SELECT (CAST(SUM(CASE WHEN [C19] = '[V1]' THEN [C16] ELSE 0 END) AS FLOAT) / NULLIF(SUM([C16]),0)) * 100 AS percentage FROM [T6];"
        },
        "values": [
            "'A'"
        ],
        "value_links": {
            "'A'": "[loan].[status]"
        },
        "filtered_value_links": {
            "'A'": "[loan].[status]"
        },
        "schema_links": {
            "percentage": "COLUMN:[loan].[*]",
            "loan": "TABLE:[loan]",
            "amount": "COLUMN:[loan].[amount]",
            "status": "COLUMN:[loan].[status]",
            "A": "COLUMN:[loan].[status]",
            "contract finished": "COLUMN:[loan].[status]",
            "no problems": "COLUMN:[loan].[status]",
            "accounts": "COLUMN:[loan].[*]",
            "total(amount)": "COLUMN:[loan].[amount]",
            "total amount": "COLUMN:[loan].[amount]",
            "condition": "COLUMN:[loan].[*]"
        },
        "filtered_schema_links": {
            "percentage": "COLUMN:[loan].[*]",
            "loan": "TABLE:[loan]",
            "amount": "COLUMN:[loan].[amount]",
            "status": "COLUMN:[loan].[status]",
            "A": "COLUMN:[loan].[status]",
            "contract finished": "COLUMN:[loan].[status]",
            "no problems": "COLUMN:[loan].[status]",
            "accounts": "COLUMN:[loan].[*]",
            "total(amount)": "COLUMN:[loan].[amount]",
            "total amount": "COLUMN:[loan].[amount]",
            "condition": "COLUMN:[loan].[*]"
        },
        "attack": "What is the percentage of account number that has been fully paid with no issue. Account number paid with no issue means status, status; status = 'Paid' means status, status; Percentage of accounts by condition = [(total(account number) & condition) / (total account number)] * 100%; 'Paid' is status value of the column status"
    },
    {
        "question_id": 122,
        "db_id": "financial",
        "question": "State the district and region for loan ID '4990'. A2, A3 contains the information about district and region respectively.",
        "evidence": "A2, A3 contains the information about district and region respectively.",
        "SQL": "SELECT T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T3.loan_id = 4990",
        "difficulty": "simple",
        "query": "SELECT T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T3.loan_id = 4990",
        "evidence_added": true,
        "question_toks": [
            "State",
            "the",
            "district",
            "and",
            "region",
            "for",
            "loan",
            "ID",
            "'4990'",
            ".",
            "A2",
            ",",
            "A3",
            "contains",
            "the",
            "information",
            "about",
            "district",
            "and",
            "region",
            "respectively",
            "."
        ],
        "tc_original": [
            "district.a3",
            "district.a2",
            "district.district_id",
            "district.a4",
            "district.a5",
            "district.*",
            "loan.loan_id",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.*",
            "account.frequency",
            "account.date",
            "account.account_id",
            "account.district_id",
            "account.*",
            "card.type",
            "card.issued",
            "card.card_id",
            "card.disp_id",
            "card.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[district]",
            "COLUMN:[district].[a3]",
            "COLUMN:[district].[a2]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[a4]",
            "COLUMN:[district].[a5]",
            "COLUMN:[district].[*]",
            "TABLE:[loan]",
            "COLUMN:[loan].[loan_id]",
            "COLUMN:[loan].[account_id]",
            "COLUMN:[loan].[date]",
            "COLUMN:[loan].[amount]",
            "COLUMN:[loan].[duration]",
            "COLUMN:[loan].[*]",
            "TABLE:[account]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[*]",
            "TABLE:[card]",
            "COLUMN:[card].[type]",
            "COLUMN:[card].[issued]",
            "COLUMN:[card].[card_id]",
            "COLUMN:[card].[disp_id]",
            "COLUMN:[card].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[card]':\n  '[card_id]':\n    primary_key: true\n    type: integer\n  '[disp_id]':\n    foreign_key: '[disp].[disp_id]'\n    type: integer\n  '[issued]': date\n  '[type]': text\n'[disp]':\n  '[disp_id]':\n    primary_key: true\n    type: integer\n'[district]':\n  '[a2]': text\n  '[a3]': text\n  '[a4]': text\n  '[a5]': text\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[loan]':\n  '[account_id]':\n    foreign_key: '[account].[account_id]'\n    type: integer\n  '[amount]': integer\n  '[date]': date\n  '[duration]': integer\n  '[loan_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "district": "COLUMN:[district].[a2]",
            "region": "COLUMN:[district].[a3]",
            "loan ID": "COLUMN:[loan].[loan_id]",
            "4990": "VALUE:[loan].[loan_id]",
            "A2": "COLUMN:[district].[a2]",
            "A3": "COLUMN:[district].[a3]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[C5]": "[card].[card_id]",
                "[C6]": "[card].[disp_id]",
                "[C7]": "[card].[issued]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[C10]": "[district].[a2]",
                "[C11]": "[district].[a3]",
                "[C12]": "[district].[a4]",
                "[C13]": "[district].[a5]",
                "[C14]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[C15]": "[loan].[account_id]",
                "[C16]": "[loan].[amount]",
                "[C17]": "[loan].[date]",
                "[C18]": "[loan].[duration]",
                "[C19]": "[loan].[loan_id]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[card]": "[T2]",
                "[card].[card_id]": "[C5]",
                "[card].[disp_id]": "[C6]",
                "[card].[issued]": "[C7]",
                "[card].[type]": "[C8]",
                "[disp]": "[T3]",
                "[disp].[disp_id]": "[C9]",
                "[district]": "[T4]",
                "[district].[a2]": "[C10]",
                "[district].[a3]": "[C11]",
                "[district].[a4]": "[C12]",
                "[district].[a5]": "[C13]",
                "[district].[district_id]": "[C14]",
                "[loan]": "[T5]",
                "[loan].[account_id]": "[C15]",
                "[loan].[amount]": "[C16]",
                "[loan].[date]": "[C17]",
                "[loan].[duration]": "[C18]",
                "[loan].[loan_id]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T4].[C14]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]':\n    foreign_key: '[T3].[C9]'\n    type: integer\n  '[C7]': date\n  '[C8]': text\n'[T3]':\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]': text\n  '[C11]': text\n  '[C12]': text\n  '[C13]': text\n  '[C14]':\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C15]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C16]': integer\n  '[C17]': date\n  '[C18]': integer\n  '[C19]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[T2].[C5]": "[card].[card_id]",
                "[C5]": "[card].[card_id]",
                "[T2].[C6]": "[card].[disp_id]",
                "[C6]": "[card].[disp_id]",
                "[T2].[C7]": "[card].[issued]",
                "[C7]": "[card].[issued]",
                "[T2].[C8]": "[card].[type]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[T3].[C9]": "[disp].[disp_id]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[T4].[C10]": "[district].[a2]",
                "[C10]": "[district].[a2]",
                "[T4].[C11]": "[district].[a3]",
                "[C11]": "[district].[a3]",
                "[T4].[C12]": "[district].[a4]",
                "[C12]": "[district].[a4]",
                "[T4].[C13]": "[district].[a5]",
                "[C13]": "[district].[a5]",
                "[T4].[C14]": "[district].[district_id]",
                "[C14]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[T5].[C15]": "[loan].[account_id]",
                "[C15]": "[loan].[account_id]",
                "[T5].[C16]": "[loan].[amount]",
                "[C16]": "[loan].[amount]",
                "[T5].[C17]": "[loan].[date]",
                "[C17]": "[loan].[date]",
                "[T5].[C18]": "[loan].[duration]",
                "[C18]": "[loan].[duration]",
                "[T5].[C19]": "[loan].[loan_id]",
                "[C19]": "[loan].[loan_id]"
            },
            "question": "State the [T4] and [C11] for [C19] '4990'. A2, A3 contains the information about [T4] and [C11] respectively.; [V1] is a value of the column [C19]",
            "to_value": {
                "[V1]": "'4990'"
            },
            "masked": 4,
            "masked_terms": [
                "'4990'",
                "district",
                "region",
                "loan id"
            ],
            "sql": "SELECT [T4].[C10], [T4].[C11] FROM [T5] JOIN [T1] ON [T5].[C15] = [T1].[C1] JOIN [T4] ON [T1].[C3] = [T4].[C14] WHERE [T5].[C19] = 4990",
            "repaired_sql": "SELECT [T4].*, [T4].[C11] FROM [T5] JOIN [T1] ON [T5].[C15] = [T1].[C1] JOIN [T4] ON [T1].[C3] = [T4].[C14] WHERE [T5].[C19] = 4990"
        },
        "values": [
            "'4990'"
        ],
        "value_links": {
            "'4990'": "[loan].[loan_id]"
        },
        "filtered_value_links": {
            "'4990'": "[loan].[loan_id]"
        },
        "schema_links": {
            "district": "TABLE:[district]",
            "region": "COLUMN:[district].[a3]",
            "loan id": "COLUMN:[loan].[loan_id]"
        },
        "filtered_schema_links": {
            "district": "TABLE:[district]",
            "region": "COLUMN:[district].[a3]",
            "loan id": "COLUMN:[loan].[loan_id]"
        },
        "attack": "State the supplier and address for id '4990'. A2, A3 contains the information about supplier and address respectively."
    },
    {
        "question_id": 128,
        "db_id": "financial",
        "question": "List the top nine districts, by descending order, from the highest to the lowest, the number of female account holders. A2 refers to districts; Female refers to gender = 'F'",
        "evidence": "A2 refers to districts; Female refers to gender = 'F'",
        "SQL": "SELECT T2.A2, COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T2.district_id, T2.A2 ORDER BY COUNT(T1.client_id) DESC LIMIT 9",
        "difficulty": "moderate",
        "query": "SELECT T2.A2, COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T2.district_id, T2.A2 ORDER BY COUNT(T1.client_id) DESC LIMIT 9",
        "evidence_added": true,
        "question_toks": [
            "List",
            "the",
            "top",
            "nine",
            "districts",
            ",",
            "by",
            "descending",
            "order",
            ",",
            "from",
            "the",
            "highest",
            "to",
            "the",
            "lowest",
            ",",
            "the",
            "number",
            "of",
            "female",
            "account",
            "holders",
            ".",
            "A2",
            "refers",
            "to",
            "districts",
            ";",
            "Female",
            "refers",
            "to",
            "gender",
            "=",
            "'F'"
        ],
        "tc_original": [
            "district.a9",
            "district.a2",
            "district.district_id",
            "district.a3",
            "district.a4",
            "district.*",
            "client.gender",
            "client.client_id",
            "client.district_id",
            "client.birth_date",
            "client.*",
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "account.*",
            "disp.client_id",
            "disp.account_id",
            "disp.disp_id",
            "disp.type",
            "disp.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[district]",
            "COLUMN:[district].[a9]",
            "COLUMN:[district].[a2]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[a3]",
            "COLUMN:[district].[a4]",
            "COLUMN:[district].[*]",
            "TABLE:[client]",
            "COLUMN:[client].[gender]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[district_id]",
            "COLUMN:[client].[birth_date]",
            "COLUMN:[client].[*]",
            "TABLE:[account]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[*]",
            "TABLE:[disp]",
            "COLUMN:[disp].[client_id]",
            "COLUMN:[disp].[account_id]",
            "COLUMN:[disp].[disp_id]",
            "COLUMN:[disp].[type]",
            "COLUMN:[disp].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[client]':\n  '[birth_date]': date\n  '[client_id]':\n    primary_key: true\n    type: integer\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[gender]': text\n'[disp]':\n  '[account_id]':\n    foreign_key: '[account].[account_id]'\n    type: integer\n  '[client_id]':\n    foreign_key: '[client].[client_id]'\n    type: integer\n  '[disp_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n'[district]':\n  '[a2]': text\n  '[a3]': text\n  '[a4]': text\n  '[a9]': integer\n  '[district_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "districts": "TABLE:[district]",
            "A2": "COLUMN:[district].[a2]",
            "female": "COLUMN:[client].[gender]",
            "account holders": "COLUMN:[client].[client_id]",
            "top nine": "TABLE:[district]",
            "descending order": "COLUMN:[client].[client_id]",
            "highest": "COLUMN:[client].[client_id]",
            "lowest": "COLUMN:[client].[client_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[client]",
                "[C5]": "[client].[birth_date]",
                "[C6]": "[client].[client_id]",
                "[C7]": "[client].[district_id]",
                "[C8]": "[client].[gender]",
                "[T3]": "[disp]",
                "[C9]": "[disp].[account_id]",
                "[C10]": "[disp].[client_id]",
                "[C11]": "[disp].[disp_id]",
                "[C12]": "[disp].[type]",
                "[T4]": "[district]",
                "[C13]": "[district].[a2]",
                "[C14]": "[district].[a3]",
                "[C15]": "[district].[a4]",
                "[C16]": "[district].[a9]",
                "[C17]": "[district].[district_id]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[client]": "[T2]",
                "[client].[birth_date]": "[C5]",
                "[client].[client_id]": "[C6]",
                "[client].[district_id]": "[C7]",
                "[client].[gender]": "[C8]",
                "[disp]": "[T3]",
                "[disp].[account_id]": "[C9]",
                "[disp].[client_id]": "[C10]",
                "[disp].[disp_id]": "[C11]",
                "[disp].[type]": "[C12]",
                "[district]": "[T4]",
                "[district].[a2]": "[C13]",
                "[district].[a3]": "[C14]",
                "[district].[a4]": "[C15]",
                "[district].[a9]": "[C16]",
                "[district].[district_id]": "[C17]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T4].[C17]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]': date\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]':\n    foreign_key: '[T4].[C17]'\n    type: integer\n  '[C8]': text\n'[T3]':\n  '[C10]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': text\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T4]':\n  '[C13]': text\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n  '[C17]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[client]",
                "[T2].[C5]": "[client].[birth_date]",
                "[C5]": "[client].[birth_date]",
                "[T2].[C6]": "[client].[client_id]",
                "[C6]": "[client].[client_id]",
                "[T2].[C7]": "[client].[district_id]",
                "[C7]": "[client].[district_id]",
                "[T2].[C8]": "[client].[gender]",
                "[C8]": "[client].[gender]",
                "[T3]": "[disp]",
                "[T3].[C9]": "[disp].[account_id]",
                "[C9]": "[disp].[account_id]",
                "[T3].[C10]": "[disp].[client_id]",
                "[C10]": "[disp].[client_id]",
                "[T3].[C11]": "[disp].[disp_id]",
                "[C11]": "[disp].[disp_id]",
                "[T3].[C12]": "[disp].[type]",
                "[C12]": "[disp].[type]",
                "[T4]": "[district]",
                "[T4].[C13]": "[district].[a2]",
                "[C13]": "[district].[a2]",
                "[T4].[C14]": "[district].[a3]",
                "[C14]": "[district].[a3]",
                "[T4].[C15]": "[district].[a4]",
                "[C15]": "[district].[a4]",
                "[T4].[C16]": "[district].[a9]",
                "[C16]": "[district].[a9]",
                "[T4].[C17]": "[district].[district_id]",
                "[C17]": "[district].[district_id]"
            },
            "question": "List the top nine [T4], by descending order, from the highest to the lowest, the number of [C8] [T2]. [V1] refers to [T4]; [C8] refers to gender = '[V2]'; [V1] is a value of the column [C13]; [V2] is a value of the column [C8]",
            "to_value": {
                "[V1]": "A2",
                "[V2]": "F"
            },
            "masked": 5,
            "masked_terms": [
                "A2",
                "F",
                "districts",
                "female",
                "account holders"
            ],
            "sql": "SELECT [T4].[C13], COUNT(*) AS [num_T2] FROM [T2] INNER JOIN [T4] ON [T2].[C7] = [T4].[C17] WHERE [T2].[C8] = '[V2]' GROUP BY [T4].[C13] ORDER BY [num_T2] DESC LIMIT 9",
            "repaired_sql": "SELECT [T4].[C13], COUNT([T2].[C6]) AS cnt FROM [T2] JOIN [T4] ON [T2].[C7] = [T4].[C17] WHERE [T2].[C8] = '[V2]' GROUP BY [T4].[C13] ORDER BY cnt DESC LIMIT 9"
        },
        "values": [
            "A2",
            "F"
        ],
        "value_links": {
            "A2": "[district].[a2]",
            "F": "[client].[gender]"
        },
        "filtered_value_links": {
            "A2": "[district].[a2]",
            "F": "[client].[gender]"
        },
        "schema_links": {
            "districts": "TABLE:[district]",
            "female": "COLUMN:[client].[gender]",
            "account holders": "TABLE:[client]"
        },
        "filtered_schema_links": {
            "districts": "TABLE:[district]",
            "female": "COLUMN:[client].[gender]",
            "account holders": "TABLE:[client]"
        },
        "attack": "List the top nine teams, by descending order, from the highest to the lowest, the number of female players. \"teams\" refers to teams; \"gender\" refers to gender = 'female'; \"teams\" is a value of the column name; \"female\" is a value of the column gender."
    },
    {
        "question_id": 134,
        "db_id": "financial",
        "question": "In the branch where the largest number of crimes were committed in 1996, how many accounts were opened? A16 stands for no. of committed crimes 1996",
        "evidence": "A16 stands for no. of committed crimes 1996",
        "SQL": "SELECT COUNT(T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id GROUP BY T1.A16 ORDER BY T1.A16 DESC LIMIT 1",
        "difficulty": "simple",
        "query": "SELECT COUNT(T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id GROUP BY T1.A16 ORDER BY T1.A16 DESC LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "In",
            "the",
            "branch",
            "where",
            "the",
            "largest",
            "number",
            "of",
            "crimes",
            "were",
            "committed",
            "in",
            "1996",
            ",",
            "how",
            "many",
            "accounts",
            "were",
            "opened",
            "?",
            "A16",
            "stands",
            "for",
            "no",
            ".",
            "of",
            "committed",
            "crimes",
            "1996"
        ],
        "tc_original": [
            "account.district_id",
            "account.account_id",
            "account.frequency",
            "account.date",
            "account.*",
            "district.a16",
            "district.district_id",
            "district.a15",
            "district.a3",
            "district.a2",
            "district.*",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.status",
            "loan.loan_id",
            "loan.*",
            "card.type",
            "card.issued",
            "card.card_id",
            "card.disp_id",
            "card.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[account]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[*]",
            "TABLE:[district]",
            "COLUMN:[district].[a16]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[a15]",
            "COLUMN:[district].[a3]",
            "COLUMN:[district].[a2]",
            "COLUMN:[district].[*]",
            "TABLE:[loan]",
            "COLUMN:[loan].[date]",
            "COLUMN:[loan].[amount]",
            "COLUMN:[loan].[duration]",
            "COLUMN:[loan].[status]",
            "COLUMN:[loan].[loan_id]",
            "COLUMN:[loan].[*]",
            "TABLE:[card]",
            "COLUMN:[card].[type]",
            "COLUMN:[card].[issued]",
            "COLUMN:[card].[card_id]",
            "COLUMN:[card].[disp_id]",
            "COLUMN:[card].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[card]':\n  '[card_id]':\n    primary_key: true\n    type: integer\n  '[disp_id]':\n    foreign_key: '[disp].[disp_id]'\n    type: integer\n  '[issued]': date\n  '[type]': text\n'[disp]':\n  '[disp_id]':\n    primary_key: true\n    type: integer\n'[district]':\n  '[a15]': integer\n  '[a16]': integer\n  '[a2]': text\n  '[a3]': text\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[loan]':\n  '[amount]': integer\n  '[date]': date\n  '[duration]': integer\n  '[loan_id]':\n    primary_key: true\n    type: integer\n  '[status]': text\n",
        "gold_links": {
            "branch": "TABLE:[district]",
            "accounts": "TABLE:[account]",
            "number": "COLUMN:[district].[a16]",
            "crimes": "COLUMN:[district].[a16]",
            "committed": "COLUMN:[district].[a16]",
            "1996": "COLUMN:[district].[a16]",
            "account_id": "COLUMN:[account].[account_id]",
            "opened": "TABLE:[account]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[C5]": "[card].[card_id]",
                "[C6]": "[card].[disp_id]",
                "[C7]": "[card].[issued]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[C10]": "[district].[a15]",
                "[C11]": "[district].[a16]",
                "[C12]": "[district].[a2]",
                "[C13]": "[district].[a3]",
                "[C14]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[C15]": "[loan].[amount]",
                "[C16]": "[loan].[date]",
                "[C17]": "[loan].[duration]",
                "[C18]": "[loan].[loan_id]",
                "[C19]": "[loan].[status]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[card]": "[T2]",
                "[card].[card_id]": "[C5]",
                "[card].[disp_id]": "[C6]",
                "[card].[issued]": "[C7]",
                "[card].[type]": "[C8]",
                "[disp]": "[T3]",
                "[disp].[disp_id]": "[C9]",
                "[district]": "[T4]",
                "[district].[a15]": "[C10]",
                "[district].[a16]": "[C11]",
                "[district].[a2]": "[C12]",
                "[district].[a3]": "[C13]",
                "[district].[district_id]": "[C14]",
                "[loan]": "[T5]",
                "[loan].[amount]": "[C15]",
                "[loan].[date]": "[C16]",
                "[loan].[duration]": "[C17]",
                "[loan].[loan_id]": "[C18]",
                "[loan].[status]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T4].[C14]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]':\n    foreign_key: '[T3].[C9]'\n    type: integer\n  '[C7]': date\n  '[C8]': text\n'[T3]':\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]': integer\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': text\n  '[C14]':\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C15]': integer\n  '[C16]': date\n  '[C17]': integer\n  '[C18]':\n    primary_key: true\n    type: integer\n  '[C19]': text\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[T2].[C5]": "[card].[card_id]",
                "[C5]": "[card].[card_id]",
                "[T2].[C6]": "[card].[disp_id]",
                "[C6]": "[card].[disp_id]",
                "[T2].[C7]": "[card].[issued]",
                "[C7]": "[card].[issued]",
                "[T2].[C8]": "[card].[type]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[T3].[C9]": "[disp].[disp_id]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[T4].[C10]": "[district].[a15]",
                "[C10]": "[district].[a15]",
                "[T4].[C11]": "[district].[a16]",
                "[C11]": "[district].[a16]",
                "[T4].[C12]": "[district].[a2]",
                "[C12]": "[district].[a2]",
                "[T4].[C13]": "[district].[a3]",
                "[C13]": "[district].[a3]",
                "[T4].[C14]": "[district].[district_id]",
                "[C14]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[T5].[C15]": "[loan].[amount]",
                "[C15]": "[loan].[amount]",
                "[T5].[C16]": "[loan].[date]",
                "[C16]": "[loan].[date]",
                "[T5].[C17]": "[loan].[duration]",
                "[C17]": "[loan].[duration]",
                "[T5].[C18]": "[loan].[loan_id]",
                "[C18]": "[loan].[loan_id]",
                "[T5].[C19]": "[loan].[status]",
                "[C19]": "[loan].[status]"
            },
            "question": "In the [T4] where the largest number of [C11] were committed in 1996, how many [T1] were [C4]? [V1] stands for no. of committed [C11] 1996; [V1] is a value of the column [C11]",
            "to_value": {
                "[V1]": "A16"
            },
            "masked": 5,
            "masked_terms": [
                "A16",
                "branch",
                "crimes",
                "accounts",
                "opened"
            ],
            "sql": "SELECT COUNT(*) FROM [T1] WHERE [C3] = (SELECT [C14] FROM [T4] WHERE [C10] = 1996 ORDER BY [C11] DESC LIMIT 1) AND [C4] IS NOT NULL",
            "repaired_sql": "SELECT COUNT(*) FROM [T1] JOIN [T4] ON [T1].[C3] = [T4].[C14] WHERE [T4].[C11] = (SELECT MAX([C11]) FROM [T4] WHERE strftime('%Y', [C12]) = '1996') AND strftime('%Y', [T1].[C2]) = '1996'"
        },
        "values": [
            "A16"
        ],
        "value_links": {
            "A16": "[district].[a16]"
        },
        "filtered_value_links": {
            "A16": "[district].[a16]"
        },
        "schema_links": {
            "branch": "TABLE:[district]",
            "crimes": "COLUMN:[district].[a16]",
            "accounts": "TABLE:[account]",
            "opened": "COLUMN:[account].[frequency]"
        },
        "filtered_schema_links": {
            "branch": "TABLE:[district]",
            "crimes": "COLUMN:[district].[a16]",
            "accounts": "TABLE:[account]",
            "opened": "COLUMN:[account].[frequency]"
        },
        "attack": "In the region where the largest number of crimes were committed in 1996, how many cases were solved?"
    },
    {
        "question_id": 137,
        "db_id": "financial",
        "question": "How many accounts have running contracts in Branch location 1? Status = 'C' stands for running contract, OK so far; Status = 'D' stands for running contract, client in debt",
        "evidence": "Status = 'C' stands for running contract, OK so far; Status = 'D' stands for running contract, client in debt",
        "SQL": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T1.district_id = 1 AND (T3.status = 'C' OR T3.status = 'D')",
        "difficulty": "moderate",
        "query": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN loan AS T3 ON T1.account_id = T3.account_id WHERE T1.district_id = 1 AND (T3.status = 'C' OR T3.status = 'D')",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "accounts",
            "have",
            "running",
            "contracts",
            "in",
            "Branch",
            "location",
            "1",
            "?",
            "Status",
            "=",
            "'C'",
            "stands",
            "for",
            "running",
            "contract",
            ",",
            "OK",
            "so",
            "far",
            ";",
            "Status",
            "=",
            "'D'",
            "stands",
            "for",
            "running",
            "contract",
            ",",
            "client",
            "in",
            "debt"
        ],
        "tc_original": [
            "account.district_id",
            "account.account_id",
            "account.frequency",
            "account.date",
            "account.*",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.status",
            "loan.loan_id",
            "loan.*",
            "card.type",
            "card.issued",
            "card.card_id",
            "card.disp_id",
            "card.*",
            "client.gender",
            "client.client_id",
            "client.birth_date",
            "client.district_id",
            "client.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[account]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[*]",
            "TABLE:[loan]",
            "COLUMN:[loan].[date]",
            "COLUMN:[loan].[amount]",
            "COLUMN:[loan].[duration]",
            "COLUMN:[loan].[status]",
            "COLUMN:[loan].[loan_id]",
            "COLUMN:[loan].[*]",
            "TABLE:[card]",
            "COLUMN:[card].[type]",
            "COLUMN:[card].[issued]",
            "COLUMN:[card].[card_id]",
            "COLUMN:[card].[disp_id]",
            "COLUMN:[card].[*]",
            "TABLE:[client]",
            "COLUMN:[client].[gender]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[birth_date]",
            "COLUMN:[client].[district_id]",
            "COLUMN:[client].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[card]':\n  '[card_id]':\n    primary_key: true\n    type: integer\n  '[disp_id]':\n    foreign_key: '[disp].[disp_id]'\n    type: integer\n  '[issued]': date\n  '[type]': text\n'[client]':\n  '[birth_date]': date\n  '[client_id]':\n    primary_key: true\n    type: integer\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[gender]': text\n'[disp]':\n  '[disp_id]':\n    primary_key: true\n    type: integer\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[loan]':\n  '[amount]': integer\n  '[date]': date\n  '[duration]': integer\n  '[loan_id]':\n    primary_key: true\n    type: integer\n  '[status]': text\n",
        "gold_links": {
            "accounts": "TABLE:[account]",
            "account": "TABLE:[account]",
            "contracts": "TABLE:[loan]",
            "contract": "TABLE:[loan]",
            "branch location": "TABLE:[district]",
            "location 1": "VALUE:[district].[district_id]",
            "1": "VALUE:[district].[district_id]",
            "running": "COLUMN:[loan].[status]",
            "status": "COLUMN:[loan].[status]",
            "C": "VALUE:[loan].[status]",
            "D": "VALUE:[loan].[status]",
            "client": "TABLE:[client]",
            "debt": "COLUMN:[loan].[status]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[C5]": "[card].[card_id]",
                "[C6]": "[card].[disp_id]",
                "[C7]": "[card].[issued]",
                "[C8]": "[card].[type]",
                "[T3]": "[client]",
                "[C9]": "[client].[birth_date]",
                "[C10]": "[client].[client_id]",
                "[C11]": "[client].[district_id]",
                "[C12]": "[client].[gender]",
                "[T4]": "[disp]",
                "[C13]": "[disp].[disp_id]",
                "[T5]": "[district]",
                "[C14]": "[district].[district_id]",
                "[T6]": "[loan]",
                "[C15]": "[loan].[amount]",
                "[C16]": "[loan].[date]",
                "[C17]": "[loan].[duration]",
                "[C18]": "[loan].[loan_id]",
                "[C19]": "[loan].[status]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[card]": "[T2]",
                "[card].[card_id]": "[C5]",
                "[card].[disp_id]": "[C6]",
                "[card].[issued]": "[C7]",
                "[card].[type]": "[C8]",
                "[client]": "[T3]",
                "[client].[birth_date]": "[C9]",
                "[client].[client_id]": "[C10]",
                "[client].[district_id]": "[C11]",
                "[client].[gender]": "[C12]",
                "[disp]": "[T4]",
                "[disp].[disp_id]": "[C13]",
                "[district]": "[T5]",
                "[district].[district_id]": "[C14]",
                "[loan]": "[T6]",
                "[loan].[amount]": "[C15]",
                "[loan].[date]": "[C16]",
                "[loan].[duration]": "[C17]",
                "[loan].[loan_id]": "[C18]",
                "[loan].[status]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T5].[C14]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]':\n    foreign_key: '[T4].[C13]'\n    type: integer\n  '[C7]': date\n  '[C8]': text\n'[T3]':\n  '[C10]':\n    primary_key: true\n    type: integer\n  '[C11]':\n    foreign_key: '[T5].[C14]'\n    type: integer\n  '[C12]': text\n  '[C9]': date\n'[T4]':\n  '[C13]':\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C14]':\n    primary_key: true\n    type: integer\n'[T6]':\n  '[C15]': integer\n  '[C16]': date\n  '[C17]': integer\n  '[C18]':\n    primary_key: true\n    type: integer\n  '[C19]': text\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[T2].[C5]": "[card].[card_id]",
                "[C5]": "[card].[card_id]",
                "[T2].[C6]": "[card].[disp_id]",
                "[C6]": "[card].[disp_id]",
                "[T2].[C7]": "[card].[issued]",
                "[C7]": "[card].[issued]",
                "[T2].[C8]": "[card].[type]",
                "[C8]": "[card].[type]",
                "[T3]": "[client]",
                "[T3].[C9]": "[client].[birth_date]",
                "[C9]": "[client].[birth_date]",
                "[T3].[C10]": "[client].[client_id]",
                "[C10]": "[client].[client_id]",
                "[T3].[C11]": "[client].[district_id]",
                "[C11]": "[client].[district_id]",
                "[T3].[C12]": "[client].[gender]",
                "[C12]": "[client].[gender]",
                "[T4]": "[disp]",
                "[T4].[C13]": "[disp].[disp_id]",
                "[C13]": "[disp].[disp_id]",
                "[T5]": "[district]",
                "[T5].[C14]": "[district].[district_id]",
                "[C14]": "[district].[district_id]",
                "[T6]": "[loan]",
                "[T6].[C15]": "[loan].[amount]",
                "[C15]": "[loan].[amount]",
                "[T6].[C16]": "[loan].[date]",
                "[C16]": "[loan].[date]",
                "[T6].[C17]": "[loan].[duration]",
                "[C17]": "[loan].[duration]",
                "[T6].[C18]": "[loan].[loan_id]",
                "[C18]": "[loan].[loan_id]",
                "[T6].[C19]": "[loan].[status]",
                "[C19]": "[loan].[status]"
            },
            "question": "How many [T1] have running contracts in [V1]? Status = '[V2]' stands for running contract, OK so far; Status = '[V3]' stands for running contract, client in debt; [V1] is a value of the column [C11]; [V2] is a value of the column [C19]; [V3] is a value of the column [C19]",
            "to_value": {
                "[V1]": "Branch location 1",
                "[V2]": "C",
                "[V3]": "D"
            },
            "masked": 7,
            "masked_terms": [
                "Branch location 1",
                "C",
                "D",
                "accounts",
                "Branch",
                "location",
                "1"
            ],
            "sql": "SELECT COUNT(*) FROM [T1] WHERE [C3] IN (     SELECT [T3].[C11] FROM [T3] WHERE [T3].[C11] = [V1] ) AND [C1] IN (     SELECT [T6].[C15] FROM [T6] WHERE [T6].[C19] IN ([V2], [V3]) )",
            "repaired_sql": "SELECT COUNT(*) FROM [T1] JOIN [T5] ON [T1].[C3] = [T5].[C14] JOIN [T3] ON [T3].[C11] = [T5].[C14] JOIN [T6] ON [T6].[C19] IN ('[V2]', '[V3]') AND [T3].[C11] = [T5].[C14] WHERE [T3].[C11] = [V1];"
        },
        "values": [
            "Branch location 1",
            "C",
            "D"
        ],
        "value_links": {
            "Branch location 1": "[client].[district_id]",
            "C": "[loan].[status]",
            "D": "[loan].[status]"
        },
        "filtered_value_links": {
            "Branch location 1": "[client].[district_id]",
            "C": "[loan].[status]",
            "D": "[loan].[status]"
        },
        "schema_links": {
            "accounts": "TABLE:[account]",
            "Branch": "TABLE:[account]",
            "location": "TABLE:[account]",
            "1": "TABLE:[account]"
        },
        "filtered_schema_links": {
            "accounts": "TABLE:[account]",
            "Branch": "TABLE:[account]",
            "location": "TABLE:[account]",
            "1": "TABLE:[account]"
        },
        "attack": "How many contracts have running contracts in 2023? Status = 'active' stands for running contract, OK so far; Status = 'overdue' stands for running contract, client in debt; 2023 is a value of the column project_id; active is a value of the column status; overdue is a value of the column status"
    },
    {
        "question_id": 138,
        "db_id": "financial",
        "question": "In the branch where the second-highest number of crimes were committed in 1995 occurred, how many male clients are there? Male refers to gender = 'M'; A15 stands for no. of commited crimes 1995",
        "evidence": "Male refers to gender = 'M'; A15 stands for no. of commited crimes 1995",
        "SQL": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A15 = (SELECT T3.A15 FROM district AS T3 ORDER BY T3.A15 DESC LIMIT 1, 1)",
        "difficulty": "moderate",
        "query": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A15 = (SELECT T3.A15 FROM district AS T3 ORDER BY T3.A15 DESC LIMIT 1, 1)",
        "evidence_added": true,
        "question_toks": [
            "In",
            "the",
            "branch",
            "where",
            "the",
            "second-highest",
            "number",
            "of",
            "crimes",
            "were",
            "committed",
            "in",
            "1995",
            "occurred",
            ",",
            "how",
            "many",
            "male",
            "clients",
            "are",
            "there",
            "?",
            "Male",
            "refers",
            "to",
            "gender",
            "=",
            "'M'",
            ";",
            "A15",
            "stands",
            "for",
            "no",
            ".",
            "of",
            "commited",
            "crimes",
            "1995"
        ],
        "tc_original": [
            "client.district_id",
            "client.gender",
            "client.client_id",
            "client.birth_date",
            "client.*",
            "district.a15",
            "district.district_id",
            "district.a16",
            "district.a3",
            "district.a2",
            "district.*",
            "account.district_id",
            "account.account_id",
            "account.frequency",
            "account.date",
            "account.*",
            "disp.client_id",
            "disp.account_id",
            "disp.type",
            "disp.disp_id",
            "disp.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[client]",
            "COLUMN:[client].[district_id]",
            "COLUMN:[client].[gender]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[birth_date]",
            "COLUMN:[client].[*]",
            "TABLE:[district]",
            "COLUMN:[district].[a15]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[a16]",
            "COLUMN:[district].[a3]",
            "COLUMN:[district].[a2]",
            "COLUMN:[district].[*]",
            "TABLE:[account]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[*]",
            "TABLE:[disp]",
            "COLUMN:[disp].[client_id]",
            "COLUMN:[disp].[account_id]",
            "COLUMN:[disp].[type]",
            "COLUMN:[disp].[disp_id]",
            "COLUMN:[disp].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[client]':\n  '[birth_date]': date\n  '[client_id]':\n    primary_key: true\n    type: integer\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[gender]': text\n'[disp]':\n  '[account_id]':\n    foreign_key: '[account].[account_id]'\n    type: integer\n  '[client_id]':\n    foreign_key: '[client].[client_id]'\n    type: integer\n  '[disp_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n'[district]':\n  '[a15]': integer\n  '[a16]': integer\n  '[a2]': text\n  '[a3]': text\n  '[district_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "branch": "TABLE:[district]",
            "crimes": "COLUMN:[district].[a15]",
            "1995": "COLUMN:[district].[a15]",
            "male": "COLUMN:[client].[gender]",
            "gender": "COLUMN:[client].[gender]",
            "number": "COLUMN:[client].[client_id]",
            "clients": "TABLE:[client]",
            "A15": "COLUMN:[district].[a15]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[client]",
                "[C5]": "[client].[birth_date]",
                "[C6]": "[client].[client_id]",
                "[C7]": "[client].[district_id]",
                "[C8]": "[client].[gender]",
                "[T3]": "[disp]",
                "[C9]": "[disp].[account_id]",
                "[C10]": "[disp].[client_id]",
                "[C11]": "[disp].[disp_id]",
                "[C12]": "[disp].[type]",
                "[T4]": "[district]",
                "[C13]": "[district].[a15]",
                "[C14]": "[district].[a16]",
                "[C15]": "[district].[a2]",
                "[C16]": "[district].[a3]",
                "[C17]": "[district].[district_id]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[client]": "[T2]",
                "[client].[birth_date]": "[C5]",
                "[client].[client_id]": "[C6]",
                "[client].[district_id]": "[C7]",
                "[client].[gender]": "[C8]",
                "[disp]": "[T3]",
                "[disp].[account_id]": "[C9]",
                "[disp].[client_id]": "[C10]",
                "[disp].[disp_id]": "[C11]",
                "[disp].[type]": "[C12]",
                "[district]": "[T4]",
                "[district].[a15]": "[C13]",
                "[district].[a16]": "[C14]",
                "[district].[a2]": "[C15]",
                "[district].[a3]": "[C16]",
                "[district].[district_id]": "[C17]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T4].[C17]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]': date\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]':\n    foreign_key: '[T4].[C17]'\n    type: integer\n  '[C8]': text\n'[T3]':\n  '[C10]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': text\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T4]':\n  '[C13]': integer\n  '[C14]': integer\n  '[C15]': text\n  '[C16]': text\n  '[C17]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[client]",
                "[T2].[C5]": "[client].[birth_date]",
                "[C5]": "[client].[birth_date]",
                "[T2].[C6]": "[client].[client_id]",
                "[C6]": "[client].[client_id]",
                "[T2].[C7]": "[client].[district_id]",
                "[C7]": "[client].[district_id]",
                "[T2].[C8]": "[client].[gender]",
                "[C8]": "[client].[gender]",
                "[T3]": "[disp]",
                "[T3].[C9]": "[disp].[account_id]",
                "[C9]": "[disp].[account_id]",
                "[T3].[C10]": "[disp].[client_id]",
                "[C10]": "[disp].[client_id]",
                "[T3].[C11]": "[disp].[disp_id]",
                "[C11]": "[disp].[disp_id]",
                "[T3].[C12]": "[disp].[type]",
                "[C12]": "[disp].[type]",
                "[T4]": "[district]",
                "[T4].[C13]": "[district].[a15]",
                "[C13]": "[district].[a15]",
                "[T4].[C14]": "[district].[a16]",
                "[C14]": "[district].[a16]",
                "[T4].[C15]": "[district].[a2]",
                "[C15]": "[district].[a2]",
                "[T4].[C16]": "[district].[a3]",
                "[C16]": "[district].[a3]",
                "[T4].[C17]": "[district].[district_id]",
                "[C17]": "[district].[district_id]"
            },
            "question": "In the branch where the second-highest number of crimes were committed in 1995 occurred, how many [C8] clients are there? [C8] refers to gender = '[V2]'; [V1] stands for no. of commited crimes 1995; [V1] is a value of the column [C13]; [V2] is a value of the column [C8]",
            "to_value": {
                "[V1]": "A15",
                "[V2]": "M"
            },
            "masked": 5,
            "masked_terms": [
                "A15",
                "M",
                "a15",
                "male",
                "client"
            ],
            "sql": "SELECT COUNT(*) FROM [T2] WHERE [C7] = (     SELECT [C3] FROM [T1] WHERE strftime('%Y', [C2]) = '1995'     GROUP BY [C3]     ORDER BY COUNT(*) DESC     LIMIT 1 OFFSET 1 )",
            "repaired_sql": "SELECT COUNT(*) FROM [T2] WHERE [C7] = (SELECT [C3] FROM [T1] JOIN [T4] ON [T1].[C3] = [T4].[C17] WHERE [T4].[C13] = (SELECT DISTINCT [C13] FROM [T4] WHERE [C13] IS NOT NULL AND [C13] <> (SELECT MAX([C13]) FROM [T4] WHERE [C13] IS NOT NULL) ORDER BY [C13] DESC LIMIT 1)) AND [C8] = '[V2]';"
        },
        "values": [
            "A15",
            "M"
        ],
        "value_links": {
            "A15": "[district].[a15]",
            "M": "[client].[gender]"
        },
        "filtered_value_links": {
            "A15": "[district].[a15]",
            "M": "[client].[gender]"
        },
        "schema_links": {
            "a15": "COLUMN:[district].[a15]",
            "male": "COLUMN:[client].[gender]",
            "client": "TABLE:[client]"
        },
        "filtered_schema_links": {
            "a15": "COLUMN:[district].[a15]",
            "male": "COLUMN:[client].[gender]",
            "client": "TABLE:[client]"
        },
        "attack": "In the branch where the second-highest number of crimes were committed in 1995 occurred, how many female clients are there?"
    },
    {
        "question_id": 139,
        "db_id": "financial",
        "question": "How many high-level credit cards have \"OWNER\" type of disposition? High-level credit cards refers to the cards with the gold type.",
        "evidence": "High-level credit cards refers to the cards with the gold type.",
        "SQL": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'OWNER'",
        "difficulty": "simple",
        "query": "SELECT COUNT(T1.card_id) FROM card AS T1 INNER JOIN disp AS T2 ON T1.disp_id = T2.disp_id WHERE T1.type = 'gold' AND T2.type = 'OWNER'",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "high-level",
            "credit",
            "cards",
            "have",
            "\"OWNER\"",
            "type",
            "of",
            "disposition",
            "?",
            "High-level",
            "credit",
            "cards",
            "refers",
            "to",
            "the",
            "cards",
            "with",
            "the",
            "gold",
            "type",
            "."
        ],
        "tc_original": [
            "disp.type",
            "disp.disp_id",
            "disp.client_id",
            "disp.account_id",
            "disp.*",
            "card.type",
            "card.disp_id",
            "card.card_id",
            "card.issued",
            "card.*",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.status",
            "loan.loan_id",
            "loan.*",
            "account.frequency",
            "account.date",
            "account.account_id",
            "account.district_id",
            "account.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[disp]",
            "COLUMN:[disp].[type]",
            "COLUMN:[disp].[disp_id]",
            "COLUMN:[disp].[client_id]",
            "COLUMN:[disp].[account_id]",
            "COLUMN:[disp].[*]",
            "TABLE:[card]",
            "COLUMN:[card].[type]",
            "COLUMN:[card].[disp_id]",
            "COLUMN:[card].[card_id]",
            "COLUMN:[card].[issued]",
            "COLUMN:[card].[*]",
            "TABLE:[loan]",
            "COLUMN:[loan].[date]",
            "COLUMN:[loan].[amount]",
            "COLUMN:[loan].[duration]",
            "COLUMN:[loan].[status]",
            "COLUMN:[loan].[loan_id]",
            "COLUMN:[loan].[*]",
            "TABLE:[account]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[card]':\n  '[card_id]':\n    primary_key: true\n    type: integer\n  '[disp_id]':\n    foreign_key: '[disp].[disp_id]'\n    type: integer\n  '[issued]': date\n  '[type]': text\n'[client]':\n  '[client_id]':\n    primary_key: true\n    type: integer\n'[disp]':\n  '[account_id]':\n    foreign_key: '[account].[account_id]'\n    type: integer\n  '[client_id]':\n    foreign_key: '[client].[client_id]'\n    type: integer\n  '[disp_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[loan]':\n  '[amount]': integer\n  '[date]': date\n  '[duration]': integer\n  '[loan_id]':\n    primary_key: true\n    type: integer\n  '[status]': text\n",
        "gold_links": {
            "credit cards": "TABLE:[card]",
            "card": "TABLE:[card]",
            "gold": "VALUE:[card].[type]",
            "OWNER": "VALUE:[disp].[type]",
            "disposition": "COLUMN:[disp].[type]",
            "type": "COLUMN:[card].[type]",
            "owner": "VALUE:[disp].[type]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[C5]": "[card].[card_id]",
                "[C6]": "[card].[disp_id]",
                "[C7]": "[card].[issued]",
                "[C8]": "[card].[type]",
                "[T3]": "[client]",
                "[C9]": "[client].[client_id]",
                "[T4]": "[disp]",
                "[C10]": "[disp].[account_id]",
                "[C11]": "[disp].[client_id]",
                "[C12]": "[disp].[disp_id]",
                "[C13]": "[disp].[type]",
                "[T5]": "[district]",
                "[C14]": "[district].[district_id]",
                "[T6]": "[loan]",
                "[C15]": "[loan].[amount]",
                "[C16]": "[loan].[date]",
                "[C17]": "[loan].[duration]",
                "[C18]": "[loan].[loan_id]",
                "[C19]": "[loan].[status]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[card]": "[T2]",
                "[card].[card_id]": "[C5]",
                "[card].[disp_id]": "[C6]",
                "[card].[issued]": "[C7]",
                "[card].[type]": "[C8]",
                "[client]": "[T3]",
                "[client].[client_id]": "[C9]",
                "[disp]": "[T4]",
                "[disp].[account_id]": "[C10]",
                "[disp].[client_id]": "[C11]",
                "[disp].[disp_id]": "[C12]",
                "[disp].[type]": "[C13]",
                "[district]": "[T5]",
                "[district].[district_id]": "[C14]",
                "[loan]": "[T6]",
                "[loan].[amount]": "[C15]",
                "[loan].[date]": "[C16]",
                "[loan].[duration]": "[C17]",
                "[loan].[loan_id]": "[C18]",
                "[loan].[status]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T5].[C14]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]':\n    foreign_key: '[T4].[C12]'\n    type: integer\n  '[C7]': date\n  '[C8]': text\n'[T3]':\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C11]':\n    foreign_key: '[T3].[C9]'\n    type: integer\n  '[C12]':\n    primary_key: true\n    type: integer\n  '[C13]': text\n'[T5]':\n  '[C14]':\n    primary_key: true\n    type: integer\n'[T6]':\n  '[C15]': integer\n  '[C16]': date\n  '[C17]': integer\n  '[C18]':\n    primary_key: true\n    type: integer\n  '[C19]': text\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[T2].[C5]": "[card].[card_id]",
                "[C5]": "[card].[card_id]",
                "[T2].[C6]": "[card].[disp_id]",
                "[C6]": "[card].[disp_id]",
                "[T2].[C7]": "[card].[issued]",
                "[C7]": "[card].[issued]",
                "[T2].[C8]": "[card].[type]",
                "[C8]": "[card].[type]",
                "[T3]": "[client]",
                "[T3].[C9]": "[client].[client_id]",
                "[C9]": "[client].[client_id]",
                "[T4]": "[disp]",
                "[T4].[C10]": "[disp].[account_id]",
                "[C10]": "[disp].[account_id]",
                "[T4].[C11]": "[disp].[client_id]",
                "[C11]": "[disp].[client_id]",
                "[T4].[C12]": "[disp].[disp_id]",
                "[C12]": "[disp].[disp_id]",
                "[T4].[C13]": "[disp].[type]",
                "[C13]": "[disp].[type]",
                "[T5]": "[district]",
                "[T5].[C14]": "[district].[district_id]",
                "[C14]": "[district].[district_id]",
                "[T6]": "[loan]",
                "[T6].[C15]": "[loan].[amount]",
                "[C15]": "[loan].[amount]",
                "[T6].[C16]": "[loan].[date]",
                "[C16]": "[loan].[date]",
                "[T6].[C17]": "[loan].[duration]",
                "[C17]": "[loan].[duration]",
                "[T6].[C18]": "[loan].[loan_id]",
                "[C18]": "[loan].[loan_id]",
                "[T6].[C19]": "[loan].[status]",
                "[C19]": "[loan].[status]"
            },
            "question": "How many [C8] have \"[V1]\" [C8] of disposition? [C8] refers to the cards with the [V2] [C8].; [V1] is a value of the column [C13]; [V2] is a value of the column [C8]",
            "to_value": {
                "[V1]": "OWNER",
                "[V2]": "gold"
            },
            "masked": 7,
            "masked_terms": [
                "OWNER",
                "gold",
                "high-level credit cards",
                "credit cards",
                "type",
                "OWNER",
                "disp"
            ],
            "sql": "SELECT COUNT(*) FROM [T2] INNER JOIN [T4] ON [T2].[C6] = [T4].[C12] WHERE [T4].[C13] = '[V1]' AND [T2].[C8] = '[V2]'",
            "repaired_sql": "SELECT COUNT(*) FROM [T2] JOIN [T4] ON [T2].[C6] = [T4].[C12] WHERE [T4].[C13] = '[V1]' AND [T2].[C8] = '[V2]'"
        },
        "values": [
            "OWNER",
            "gold"
        ],
        "value_links": {
            "OWNER": "[disp].[type]",
            "gold": "[card].[type]"
        },
        "filtered_value_links": {
            "OWNER": "[disp].[type]",
            "gold": "[card].[type]"
        },
        "schema_links": {
            "high-level credit cards": "COLUMN:[card].[type]",
            "credit cards": "COLUMN:[card].[type]",
            "type": "COLUMN:[card].[type]",
            "OWNER": "COLUMN:[disp].[type]",
            "disp": "TABLE:[disp]"
        },
        "filtered_schema_links": {
            "high-level credit cards": "COLUMN:[card].[type]",
            "credit cards": "COLUMN:[card].[type]",
            "type": "COLUMN:[card].[type]",
            "OWNER": "COLUMN:[disp].[type]",
            "disp": "TABLE:[disp]"
        },
        "attack": "How many cards have \"Friendly\" type of disposition? Type refers to the cards with the value \"Attack\". \"Friendly\" is a value of the column disposition; \"Attack\" is a value of the column type."
    },
    {
        "question_id": 140,
        "db_id": "financial",
        "question": "How many accounts are there in the district of \"Pisek\"? A2 refers to district name",
        "evidence": "A2 refers to district name",
        "SQL": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek'",
        "difficulty": "simple",
        "query": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A2 = 'Pisek'",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "accounts",
            "are",
            "there",
            "in",
            "the",
            "district",
            "of",
            "\"Pisek\"",
            "?",
            "A2",
            "refers",
            "to",
            "district",
            "name"
        ],
        "tc_original": [
            "district.a2",
            "district.a9",
            "district.district_id",
            "district.a3",
            "district.a4",
            "district.*",
            "account.district_id",
            "account.account_id",
            "account.frequency",
            "account.date",
            "account.*",
            "card.type",
            "card.issued",
            "card.card_id",
            "card.disp_id",
            "card.*",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.status",
            "loan.loan_id",
            "loan.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[district]",
            "COLUMN:[district].[a2]",
            "COLUMN:[district].[a9]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[a3]",
            "COLUMN:[district].[a4]",
            "COLUMN:[district].[*]",
            "TABLE:[account]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[*]",
            "TABLE:[card]",
            "COLUMN:[card].[type]",
            "COLUMN:[card].[issued]",
            "COLUMN:[card].[card_id]",
            "COLUMN:[card].[disp_id]",
            "COLUMN:[card].[*]",
            "TABLE:[loan]",
            "COLUMN:[loan].[date]",
            "COLUMN:[loan].[amount]",
            "COLUMN:[loan].[duration]",
            "COLUMN:[loan].[status]",
            "COLUMN:[loan].[loan_id]",
            "COLUMN:[loan].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[card]':\n  '[card_id]':\n    primary_key: true\n    type: integer\n  '[disp_id]':\n    foreign_key: '[disp].[disp_id]'\n    type: integer\n  '[issued]': date\n  '[type]': text\n'[disp]':\n  '[disp_id]':\n    primary_key: true\n    type: integer\n'[district]':\n  '[a2]': text\n  '[a3]': text\n  '[a4]': text\n  '[a9]': integer\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[loan]':\n  '[amount]': integer\n  '[date]': date\n  '[duration]': integer\n  '[loan_id]':\n    primary_key: true\n    type: integer\n  '[status]': text\n",
        "gold_links": {
            "accounts": "TABLE:[account]",
            "district": "TABLE:[district]",
            "Pisek": "VALUE:[district].[a2]",
            "A2": "COLUMN:[district].[a2]",
            "district name": "COLUMN:[district].[a2]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[C5]": "[card].[card_id]",
                "[C6]": "[card].[disp_id]",
                "[C7]": "[card].[issued]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[C10]": "[district].[a2]",
                "[C11]": "[district].[a3]",
                "[C12]": "[district].[a4]",
                "[C13]": "[district].[a9]",
                "[C14]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[C15]": "[loan].[amount]",
                "[C16]": "[loan].[date]",
                "[C17]": "[loan].[duration]",
                "[C18]": "[loan].[loan_id]",
                "[C19]": "[loan].[status]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[card]": "[T2]",
                "[card].[card_id]": "[C5]",
                "[card].[disp_id]": "[C6]",
                "[card].[issued]": "[C7]",
                "[card].[type]": "[C8]",
                "[disp]": "[T3]",
                "[disp].[disp_id]": "[C9]",
                "[district]": "[T4]",
                "[district].[a2]": "[C10]",
                "[district].[a3]": "[C11]",
                "[district].[a4]": "[C12]",
                "[district].[a9]": "[C13]",
                "[district].[district_id]": "[C14]",
                "[loan]": "[T5]",
                "[loan].[amount]": "[C15]",
                "[loan].[date]": "[C16]",
                "[loan].[duration]": "[C17]",
                "[loan].[loan_id]": "[C18]",
                "[loan].[status]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T4].[C14]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]':\n    foreign_key: '[T3].[C9]'\n    type: integer\n  '[C7]': date\n  '[C8]': text\n'[T3]':\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]': text\n  '[C11]': text\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C15]': integer\n  '[C16]': date\n  '[C17]': integer\n  '[C18]':\n    primary_key: true\n    type: integer\n  '[C19]': text\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[T2].[C5]": "[card].[card_id]",
                "[C5]": "[card].[card_id]",
                "[T2].[C6]": "[card].[disp_id]",
                "[C6]": "[card].[disp_id]",
                "[T2].[C7]": "[card].[issued]",
                "[C7]": "[card].[issued]",
                "[T2].[C8]": "[card].[type]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[T3].[C9]": "[disp].[disp_id]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[T4].[C10]": "[district].[a2]",
                "[C10]": "[district].[a2]",
                "[T4].[C11]": "[district].[a3]",
                "[C11]": "[district].[a3]",
                "[T4].[C12]": "[district].[a4]",
                "[C12]": "[district].[a4]",
                "[T4].[C13]": "[district].[a9]",
                "[C13]": "[district].[a9]",
                "[T4].[C14]": "[district].[district_id]",
                "[C14]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[T5].[C15]": "[loan].[amount]",
                "[C15]": "[loan].[amount]",
                "[T5].[C16]": "[loan].[date]",
                "[C16]": "[loan].[date]",
                "[T5].[C17]": "[loan].[duration]",
                "[C17]": "[loan].[duration]",
                "[T5].[C18]": "[loan].[loan_id]",
                "[C18]": "[loan].[loan_id]",
                "[T5].[C19]": "[loan].[status]",
                "[C19]": "[loan].[status]"
            },
            "question": "How many [T1] are there in the [T4] of \"[V1]\"? A2 refers to [T4] name; [V1] is a value of the column [C10]",
            "to_value": {
                "[V1]": "Pisek"
            },
            "masked": 4,
            "masked_terms": [
                "Pisek",
                "Pisek",
                "accounts",
                "district"
            ],
            "sql": "SELECT COUNT(*) FROM [T1] INNER JOIN [T4] ON [T1].[C3] = [T4].[C14] WHERE [T4].[C10] = '[V1]'",
            "repaired_sql": "SELECT COUNT(*) FROM [T1] JOIN [T4] ON [T1].[C3] = [T4].[C14] WHERE [T4].[C10] = '[V1]'"
        },
        "values": [
            "Pisek"
        ],
        "value_links": {
            "Pisek": "[district].[a2]"
        },
        "filtered_value_links": {
            "Pisek": "[district].[a2]"
        },
        "schema_links": {
            "Pisek": "COLUMN:[district].[a2]",
            "accounts": "TABLE:[account]",
            "district": "TABLE:[district]"
        },
        "filtered_schema_links": {
            "Pisek": "COLUMN:[district].[a2]",
            "accounts": "TABLE:[account]",
            "district": "TABLE:[district]"
        },
        "attack": "How many events are there in the location of \"Central Park\"?"
    },
    {
        "question_id": 148,
        "db_id": "financial",
        "question": "Please list the accounts whose district is Tabor that are eligible for loans. District refers to column A2; when the account type = 'OWNER', it's eligible for loans",
        "evidence": "District refers to column A2; when the account type = 'OWNER', it's eligible for loans",
        "SQL": "SELECT T2.account_id FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'OWNER' AND T1.A2 = 'Tabor'",
        "difficulty": "moderate",
        "query": "SELECT T2.account_id FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type = 'OWNER' AND T1.A2 = 'Tabor'",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "list",
            "the",
            "accounts",
            "whose",
            "district",
            "is",
            "Tabor",
            "that",
            "are",
            "eligible",
            "for",
            "loans",
            ".",
            "District",
            "refers",
            "to",
            "column",
            "A2",
            ";",
            "when",
            "the",
            "account",
            "type",
            "=",
            "'OWNER'",
            ",",
            "it's",
            "eligible",
            "for",
            "loans"
        ],
        "tc_original": [
            "district.a2",
            "district.district_id",
            "district.a3",
            "district.a4",
            "district.a5",
            "district.*",
            "loan.account_id",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.status",
            "loan.*",
            "disp.type",
            "disp.account_id",
            "disp.disp_id",
            "disp.client_id",
            "disp.*",
            "account.account_id",
            "account.frequency",
            "account.date",
            "account.district_id",
            "account.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[district]",
            "COLUMN:[district].[a2]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[a3]",
            "COLUMN:[district].[a4]",
            "COLUMN:[district].[a5]",
            "COLUMN:[district].[*]",
            "TABLE:[loan]",
            "COLUMN:[loan].[account_id]",
            "COLUMN:[loan].[date]",
            "COLUMN:[loan].[amount]",
            "COLUMN:[loan].[duration]",
            "COLUMN:[loan].[status]",
            "COLUMN:[loan].[*]",
            "TABLE:[disp]",
            "COLUMN:[disp].[type]",
            "COLUMN:[disp].[account_id]",
            "COLUMN:[disp].[disp_id]",
            "COLUMN:[disp].[client_id]",
            "COLUMN:[disp].[*]",
            "TABLE:[account]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[client]':\n  '[client_id]':\n    primary_key: true\n    type: integer\n'[disp]':\n  '[account_id]':\n    foreign_key: '[account].[account_id]'\n    type: integer\n  '[client_id]':\n    foreign_key: '[client].[client_id]'\n    type: integer\n  '[disp_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n'[district]':\n  '[a2]': text\n  '[a3]': text\n  '[a4]': text\n  '[a5]': text\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[loan]':\n  '[account_id]':\n    foreign_key: '[account].[account_id]'\n    type: integer\n  '[amount]': integer\n  '[date]': date\n  '[duration]': integer\n  '[status]': text\n",
        "gold_links": {
            "accounts": "TABLE:[account]",
            "district": "TABLE:[district]",
            "Tabor": "VALUE:[district].[a2]",
            "A2": "COLUMN:[district].[a2]",
            "account type": "COLUMN:[disp].[type]",
            "OWNER": "VALUE:[disp].[type]",
            "loans": "TABLE:[loan]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[client]",
                "[C5]": "[client].[client_id]",
                "[T3]": "[disp]",
                "[C6]": "[disp].[account_id]",
                "[C7]": "[disp].[client_id]",
                "[C8]": "[disp].[disp_id]",
                "[C9]": "[disp].[type]",
                "[T4]": "[district]",
                "[C10]": "[district].[a2]",
                "[C11]": "[district].[a3]",
                "[C12]": "[district].[a4]",
                "[C13]": "[district].[a5]",
                "[C14]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[C15]": "[loan].[account_id]",
                "[C16]": "[loan].[amount]",
                "[C17]": "[loan].[date]",
                "[C18]": "[loan].[duration]",
                "[C19]": "[loan].[status]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[client]": "[T2]",
                "[client].[client_id]": "[C5]",
                "[disp]": "[T3]",
                "[disp].[account_id]": "[C6]",
                "[disp].[client_id]": "[C7]",
                "[disp].[disp_id]": "[C8]",
                "[disp].[type]": "[C9]",
                "[district]": "[T4]",
                "[district].[a2]": "[C10]",
                "[district].[a3]": "[C11]",
                "[district].[a4]": "[C12]",
                "[district].[a5]": "[C13]",
                "[district].[district_id]": "[C14]",
                "[loan]": "[T5]",
                "[loan].[account_id]": "[C15]",
                "[loan].[amount]": "[C16]",
                "[loan].[date]": "[C17]",
                "[loan].[duration]": "[C18]",
                "[loan].[status]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T4].[C14]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C7]':\n    foreign_key: '[T2].[C5]'\n    type: integer\n  '[C8]':\n    primary_key: true\n    type: integer\n  '[C9]': text\n'[T4]':\n  '[C10]': text\n  '[C11]': text\n  '[C12]': text\n  '[C13]': text\n  '[C14]':\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C15]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C16]': integer\n  '[C17]': date\n  '[C18]': integer\n  '[C19]': text\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[client]",
                "[T2].[C5]": "[client].[client_id]",
                "[C5]": "[client].[client_id]",
                "[T3]": "[disp]",
                "[T3].[C6]": "[disp].[account_id]",
                "[C6]": "[disp].[account_id]",
                "[T3].[C7]": "[disp].[client_id]",
                "[C7]": "[disp].[client_id]",
                "[T3].[C8]": "[disp].[disp_id]",
                "[C8]": "[disp].[disp_id]",
                "[T3].[C9]": "[disp].[type]",
                "[C9]": "[disp].[type]",
                "[T4]": "[district]",
                "[T4].[C10]": "[district].[a2]",
                "[C10]": "[district].[a2]",
                "[T4].[C11]": "[district].[a3]",
                "[C11]": "[district].[a3]",
                "[T4].[C12]": "[district].[a4]",
                "[C12]": "[district].[a4]",
                "[T4].[C13]": "[district].[a5]",
                "[C13]": "[district].[a5]",
                "[T4].[C14]": "[district].[district_id]",
                "[C14]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[T5].[C15]": "[loan].[account_id]",
                "[C15]": "[loan].[account_id]",
                "[T5].[C16]": "[loan].[amount]",
                "[C16]": "[loan].[amount]",
                "[T5].[C17]": "[loan].[date]",
                "[C17]": "[loan].[date]",
                "[T5].[C18]": "[loan].[duration]",
                "[C18]": "[loan].[duration]",
                "[T5].[C19]": "[loan].[status]",
                "[C19]": "[loan].[status]"
            },
            "question": "Please list the accounts whose [C10] is [V1] that are eligible for loans. [C10] refers to column A2; when the [T1] type = '[V2]', it's eligible for loans; [V1] is a value of the column [C3]; [V2] is a value of the column [C9]",
            "to_value": {
                "[V1]": "Tabor",
                "[V2]": "OWNER"
            },
            "masked": 5,
            "masked_terms": [
                "Tabor",
                "OWNER",
                "district",
                "account",
                "OWNER"
            ],
            "sql": "SELECT [T4].[C10] FROM [T1] JOIN [T4] ON [T1].[C3] = [T4].[C14] JOIN [T3] ON [T3].[C6] = [T1].[C1] WHERE [T4].[C10] = [V1] AND [T3].[C9] = [V2]",
            "repaired_sql": "SELECT [T1].[C1] FROM [T1] JOIN [T4] ON [T1].[C3] = [T4].[C14] JOIN [T3] ON [T3].[C6] = [T1].[C1] WHERE [T4].[C10] = '[V1]' AND [T3].[C9] = '[V2]'"
        },
        "values": [
            "Tabor",
            "OWNER"
        ],
        "value_links": {
            "Tabor": "[account].[district_id]",
            "OWNER": "[disp].[type]"
        },
        "filtered_value_links": {
            "Tabor": "[account].[district_id]",
            "OWNER": "[disp].[type]"
        },
        "schema_links": {
            "district": "COLUMN:[district].[a2]",
            "account": "TABLE:[account]",
            "OWNER": "COLUMN:[disp].[type]"
        },
        "filtered_schema_links": {
            "district": "COLUMN:[district].[a2]",
            "account": "TABLE:[account]",
            "OWNER": "COLUMN:[disp].[type]"
        },
        "attack": "Please list the accounts whose A2 is X that are eligible for loans. A2 refers to column A2; when the accounts type = 'loan', it's eligible for loans; X is a value of the column A3; loan is a value of the column type"
    },
    {
        "question_id": 158,
        "db_id": "financial",
        "question": "What is the district Id of the account that placed the order with the id 33333?",
        "evidence": "",
        "SQL": "SELECT T3.district_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.order_id = 33333",
        "difficulty": "simple",
        "query": "SELECT T3.district_id FROM `order` AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.order_id = 33333",
        "question_toks": [
            "What",
            "is",
            "the",
            "district",
            "Id",
            "of",
            "the",
            "account",
            "that",
            "placed",
            "the",
            "order",
            "with",
            "the",
            "id",
            "33333",
            "?"
        ],
        "tc_original": [
            "order.account_id",
            "order.order_id",
            "order.account_to",
            "order.bank_to",
            "order.amount",
            "order.*",
            "district.a2",
            "district.district_id",
            "district.a3",
            "district.a4",
            "district.a5",
            "district.*",
            "account.account_id",
            "account.frequency",
            "account.date",
            "account.district_id",
            "account.*",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.status",
            "loan.loan_id",
            "loan.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[order]",
            "COLUMN:[order].[account_id]",
            "COLUMN:[order].[order_id]",
            "COLUMN:[order].[account_to]",
            "COLUMN:[order].[bank_to]",
            "COLUMN:[order].[amount]",
            "COLUMN:[order].[*]",
            "TABLE:[district]",
            "COLUMN:[district].[a2]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[a3]",
            "COLUMN:[district].[a4]",
            "COLUMN:[district].[a5]",
            "COLUMN:[district].[*]",
            "TABLE:[account]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[*]",
            "TABLE:[loan]",
            "COLUMN:[loan].[date]",
            "COLUMN:[loan].[amount]",
            "COLUMN:[loan].[duration]",
            "COLUMN:[loan].[status]",
            "COLUMN:[loan].[loan_id]",
            "COLUMN:[loan].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[district]':\n  '[a2]': text\n  '[a3]': text\n  '[a4]': text\n  '[a5]': text\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[loan]':\n  '[amount]': integer\n  '[date]': date\n  '[duration]': integer\n  '[loan_id]':\n    primary_key: true\n    type: integer\n  '[status]': text\n'[order]':\n  '[account_id]':\n    foreign_key: '[account].[account_id]'\n    type: integer\n  '[account_to]': integer\n  '[amount]': real\n  '[bank_to]': text\n  '[order_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "district id": "COLUMN:[account].[district_id]",
            "account": "TABLE:[account]",
            "order": "TABLE:[order]",
            "id": "COLUMN:[order].[order_id]",
            "33333": "VALUE:[order].[order_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[district]",
                "[C5]": "[district].[a2]",
                "[C6]": "[district].[a3]",
                "[C7]": "[district].[a4]",
                "[C8]": "[district].[a5]",
                "[C9]": "[district].[district_id]",
                "[T3]": "[loan]",
                "[C10]": "[loan].[amount]",
                "[C11]": "[loan].[date]",
                "[C12]": "[loan].[duration]",
                "[C13]": "[loan].[loan_id]",
                "[C14]": "[loan].[status]",
                "[T4]": "[order]",
                "[C15]": "[order].[account_id]",
                "[C16]": "[order].[account_to]",
                "[C17]": "[order].[amount]",
                "[C18]": "[order].[bank_to]",
                "[C19]": "[order].[order_id]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[district]": "[T2]",
                "[district].[a2]": "[C5]",
                "[district].[a3]": "[C6]",
                "[district].[a4]": "[C7]",
                "[district].[a5]": "[C8]",
                "[district].[district_id]": "[C9]",
                "[loan]": "[T3]",
                "[loan].[amount]": "[C10]",
                "[loan].[date]": "[C11]",
                "[loan].[duration]": "[C12]",
                "[loan].[loan_id]": "[C13]",
                "[loan].[status]": "[C14]",
                "[order]": "[T4]",
                "[order].[account_id]": "[C15]",
                "[order].[account_to]": "[C16]",
                "[order].[amount]": "[C17]",
                "[order].[bank_to]": "[C18]",
                "[order].[order_id]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T2].[C9]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]': text\n  '[C6]': text\n  '[C7]': text\n  '[C8]': text\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C10]': integer\n  '[C11]': date\n  '[C12]': integer\n  '[C13]':\n    primary_key: true\n    type: integer\n  '[C14]': text\n'[T4]':\n  '[C15]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C16]': integer\n  '[C17]': real\n  '[C18]': text\n  '[C19]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[district]",
                "[T2].[C5]": "[district].[a2]",
                "[C5]": "[district].[a2]",
                "[T2].[C6]": "[district].[a3]",
                "[C6]": "[district].[a3]",
                "[T2].[C7]": "[district].[a4]",
                "[C7]": "[district].[a4]",
                "[T2].[C8]": "[district].[a5]",
                "[C8]": "[district].[a5]",
                "[T2].[C9]": "[district].[district_id]",
                "[C9]": "[district].[district_id]",
                "[T3]": "[loan]",
                "[T3].[C10]": "[loan].[amount]",
                "[C10]": "[loan].[amount]",
                "[T3].[C11]": "[loan].[date]",
                "[C11]": "[loan].[date]",
                "[T3].[C12]": "[loan].[duration]",
                "[C12]": "[loan].[duration]",
                "[T3].[C13]": "[loan].[loan_id]",
                "[C13]": "[loan].[loan_id]",
                "[T3].[C14]": "[loan].[status]",
                "[C14]": "[loan].[status]",
                "[T4]": "[order]",
                "[T4].[C15]": "[order].[account_id]",
                "[C15]": "[order].[account_id]",
                "[T4].[C16]": "[order].[account_to]",
                "[C16]": "[order].[account_to]",
                "[T4].[C17]": "[order].[amount]",
                "[C17]": "[order].[amount]",
                "[T4].[C18]": "[order].[bank_to]",
                "[C18]": "[order].[bank_to]",
                "[T4].[C19]": "[order].[order_id]",
                "[C19]": "[order].[order_id]"
            },
            "question": "What is the district [C19] of the [C15] that placed the [T4] with the [C19] [V1]?; [V1] is a value of the column [C19]",
            "to_value": {
                "[V1]": "33333"
            },
            "masked": 4,
            "masked_terms": [
                "33333",
                "id",
                "order",
                "account"
            ],
            "sql": "SELECT [T1].[C19] FROM [T4] JOIN [T1] ON [T4].[C15] = [T1].[C1] WHERE [T4].[C19] = [V1]",
            "repaired_sql": "SELECT [T4].[C19] FROM [T4] WHERE [T4].[C19] = [V1]"
        },
        "values": [
            "33333"
        ],
        "value_links": {
            "33333": "[order].[order_id]"
        },
        "filtered_value_links": {
            "33333": "[order].[order_id]"
        },
        "schema_links": {
            "id": "COLUMN:[order].[order_id]",
            "order": "TABLE:[order]",
            "account": "COLUMN:[order].[account_id]"
        },
        "filtered_schema_links": {
            "id": "COLUMN:[order].[order_id]",
            "order": "TABLE:[order]",
            "account": "COLUMN:[order].[account_id]"
        },
        "attack": "What is the district id of the candidate that placed the polling_unit with the polling_unit_id 12345?"
    },
    {
        "question_id": 162,
        "db_id": "financial",
        "question": "What is the region of the client with the id 3541 from? A3 refers to region",
        "evidence": "A3 refers to region",
        "SQL": "SELECT T1.A3 FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.client_id = 3541",
        "difficulty": "simple",
        "query": "SELECT T1.A3 FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.client_id = 3541",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "region",
            "of",
            "the",
            "client",
            "with",
            "the",
            "id",
            "3541",
            "from",
            "?",
            "A3",
            "refers",
            "to",
            "region"
        ],
        "tc_original": [
            "client.client_id",
            "client.district_id",
            "client.gender",
            "client.birth_date",
            "client.*",
            "district.a3",
            "district.district_id",
            "district.a2",
            "district.a4",
            "district.a5",
            "district.*",
            "disp.client_id",
            "disp.disp_id",
            "disp.account_id",
            "disp.type",
            "disp.*",
            "account.district_id",
            "account.frequency",
            "account.date",
            "account.account_id",
            "account.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[client]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[district_id]",
            "COLUMN:[client].[gender]",
            "COLUMN:[client].[birth_date]",
            "COLUMN:[client].[*]",
            "TABLE:[district]",
            "COLUMN:[district].[a3]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[a2]",
            "COLUMN:[district].[a4]",
            "COLUMN:[district].[a5]",
            "COLUMN:[district].[*]",
            "TABLE:[disp]",
            "COLUMN:[disp].[client_id]",
            "COLUMN:[disp].[disp_id]",
            "COLUMN:[disp].[account_id]",
            "COLUMN:[disp].[type]",
            "COLUMN:[disp].[*]",
            "TABLE:[account]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[client]':\n  '[birth_date]': date\n  '[client_id]':\n    primary_key: true\n    type: integer\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[gender]': text\n'[disp]':\n  '[account_id]':\n    foreign_key: '[account].[account_id]'\n    type: integer\n  '[client_id]':\n    foreign_key: '[client].[client_id]'\n    type: integer\n  '[disp_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n'[district]':\n  '[a2]': text\n  '[a3]': text\n  '[a4]': text\n  '[a5]': text\n  '[district_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "region": "COLUMN:[district].[a3]",
            "client": "TABLE:[client]",
            "id": "COLUMN:[client].[client_id]",
            "3541": "VALUE:[client].[client_id]",
            "A3": "COLUMN:[district].[a3]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[client]",
                "[C5]": "[client].[birth_date]",
                "[C6]": "[client].[client_id]",
                "[C7]": "[client].[district_id]",
                "[C8]": "[client].[gender]",
                "[T3]": "[disp]",
                "[C9]": "[disp].[account_id]",
                "[C10]": "[disp].[client_id]",
                "[C11]": "[disp].[disp_id]",
                "[C12]": "[disp].[type]",
                "[T4]": "[district]",
                "[C13]": "[district].[a2]",
                "[C14]": "[district].[a3]",
                "[C15]": "[district].[a4]",
                "[C16]": "[district].[a5]",
                "[C17]": "[district].[district_id]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[client]": "[T2]",
                "[client].[birth_date]": "[C5]",
                "[client].[client_id]": "[C6]",
                "[client].[district_id]": "[C7]",
                "[client].[gender]": "[C8]",
                "[disp]": "[T3]",
                "[disp].[account_id]": "[C9]",
                "[disp].[client_id]": "[C10]",
                "[disp].[disp_id]": "[C11]",
                "[disp].[type]": "[C12]",
                "[district]": "[T4]",
                "[district].[a2]": "[C13]",
                "[district].[a3]": "[C14]",
                "[district].[a4]": "[C15]",
                "[district].[a5]": "[C16]",
                "[district].[district_id]": "[C17]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T4].[C17]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]': date\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]':\n    foreign_key: '[T4].[C17]'\n    type: integer\n  '[C8]': text\n'[T3]':\n  '[C10]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': text\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T4]':\n  '[C13]': text\n  '[C14]': text\n  '[C15]': text\n  '[C16]': text\n  '[C17]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[client]",
                "[T2].[C5]": "[client].[birth_date]",
                "[C5]": "[client].[birth_date]",
                "[T2].[C6]": "[client].[client_id]",
                "[C6]": "[client].[client_id]",
                "[T2].[C7]": "[client].[district_id]",
                "[C7]": "[client].[district_id]",
                "[T2].[C8]": "[client].[gender]",
                "[C8]": "[client].[gender]",
                "[T3]": "[disp]",
                "[T3].[C9]": "[disp].[account_id]",
                "[C9]": "[disp].[account_id]",
                "[T3].[C10]": "[disp].[client_id]",
                "[C10]": "[disp].[client_id]",
                "[T3].[C11]": "[disp].[disp_id]",
                "[C11]": "[disp].[disp_id]",
                "[T3].[C12]": "[disp].[type]",
                "[C12]": "[disp].[type]",
                "[T4]": "[district]",
                "[T4].[C13]": "[district].[a2]",
                "[C13]": "[district].[a2]",
                "[T4].[C14]": "[district].[a3]",
                "[C14]": "[district].[a3]",
                "[T4].[C15]": "[district].[a4]",
                "[C15]": "[district].[a4]",
                "[T4].[C16]": "[district].[a5]",
                "[C16]": "[district].[a5]",
                "[T4].[C17]": "[district].[district_id]",
                "[C17]": "[district].[district_id]"
            },
            "question": "What is the [C14] of the [T2] with the [C6] [V1] from? [V2] refers to [C14]; [V1] is a value of the column [C6]; [V2] is a value of the column [C14]",
            "to_value": {
                "[V1]": "3541",
                "[V2]": "A3"
            },
            "masked": 5,
            "masked_terms": [
                "3541",
                "A3",
                "region",
                "client",
                "id"
            ],
            "sql": "SELECT [T4].[C14] FROM [T2] JOIN [T4] ON [T2].[C7] = [T4].[C17] WHERE [T2].[C6] = [V1]",
            "repaired_sql": "SELECT [T4].[C14] FROM [T2] JOIN [T4] ON [T2].[C7] = [T4].[C17] WHERE [T2].[C6] = [V1];"
        },
        "values": [
            "3541",
            "A3"
        ],
        "value_links": {
            "3541": "[client].[client_id]",
            "A3": "[district].[a3]"
        },
        "filtered_value_links": {
            "3541": "[client].[client_id]",
            "A3": "[district].[a3]"
        },
        "schema_links": {
            "region": "COLUMN:[district].[a3]",
            "client": "TABLE:[client]",
            "id": "COLUMN:[client].[client_id]"
        },
        "filtered_schema_links": {
            "region": "COLUMN:[district].[a3]",
            "client": "TABLE:[client]",
            "id": "COLUMN:[client].[client_id]"
        },
        "attack": "What is the name of the country with the id 3 from?"
    },
    {
        "question_id": 166,
        "db_id": "financial",
        "question": "How many of the accounts are from Jesenik district?",
        "evidence": "",
        "SQL": "SELECT COUNT(T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A2 = 'Jesenik'",
        "difficulty": "simple",
        "query": "SELECT COUNT(T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A2 = 'Jesenik'",
        "question_toks": [
            "How",
            "many",
            "of",
            "the",
            "accounts",
            "are",
            "from",
            "Jesenik",
            "district",
            "?"
        ],
        "tc_original": [
            "district.a2",
            "district.district_id",
            "district.a3",
            "district.a4",
            "district.a5",
            "district.*",
            "account.district_id",
            "account.account_id",
            "account.date",
            "account.frequency",
            "account.*",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.status",
            "loan.loan_id",
            "loan.*",
            "card.type",
            "card.issued",
            "card.card_id",
            "card.disp_id",
            "card.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[district]",
            "COLUMN:[district].[a2]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[a3]",
            "COLUMN:[district].[a4]",
            "COLUMN:[district].[a5]",
            "COLUMN:[district].[*]",
            "TABLE:[account]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[*]",
            "TABLE:[loan]",
            "COLUMN:[loan].[date]",
            "COLUMN:[loan].[amount]",
            "COLUMN:[loan].[duration]",
            "COLUMN:[loan].[status]",
            "COLUMN:[loan].[loan_id]",
            "COLUMN:[loan].[*]",
            "TABLE:[card]",
            "COLUMN:[card].[type]",
            "COLUMN:[card].[issued]",
            "COLUMN:[card].[card_id]",
            "COLUMN:[card].[disp_id]",
            "COLUMN:[card].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[card]':\n  '[card_id]':\n    primary_key: true\n    type: integer\n  '[disp_id]':\n    foreign_key: '[disp].[disp_id]'\n    type: integer\n  '[issued]': date\n  '[type]': text\n'[disp]':\n  '[disp_id]':\n    primary_key: true\n    type: integer\n'[district]':\n  '[a2]': text\n  '[a3]': text\n  '[a4]': text\n  '[a5]': text\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[loan]':\n  '[amount]': integer\n  '[date]': date\n  '[duration]': integer\n  '[loan_id]':\n    primary_key: true\n    type: integer\n  '[status]': text\n",
        "gold_links": {
            "accounts": "TABLE:[account]",
            "Jesenik": "VALUE:[district].[a2]",
            "district": "TABLE:[district]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[C5]": "[card].[card_id]",
                "[C6]": "[card].[disp_id]",
                "[C7]": "[card].[issued]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[C10]": "[district].[a2]",
                "[C11]": "[district].[a3]",
                "[C12]": "[district].[a4]",
                "[C13]": "[district].[a5]",
                "[C14]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[C15]": "[loan].[amount]",
                "[C16]": "[loan].[date]",
                "[C17]": "[loan].[duration]",
                "[C18]": "[loan].[loan_id]",
                "[C19]": "[loan].[status]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[card]": "[T2]",
                "[card].[card_id]": "[C5]",
                "[card].[disp_id]": "[C6]",
                "[card].[issued]": "[C7]",
                "[card].[type]": "[C8]",
                "[disp]": "[T3]",
                "[disp].[disp_id]": "[C9]",
                "[district]": "[T4]",
                "[district].[a2]": "[C10]",
                "[district].[a3]": "[C11]",
                "[district].[a4]": "[C12]",
                "[district].[a5]": "[C13]",
                "[district].[district_id]": "[C14]",
                "[loan]": "[T5]",
                "[loan].[amount]": "[C15]",
                "[loan].[date]": "[C16]",
                "[loan].[duration]": "[C17]",
                "[loan].[loan_id]": "[C18]",
                "[loan].[status]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T4].[C14]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]':\n    foreign_key: '[T3].[C9]'\n    type: integer\n  '[C7]': date\n  '[C8]': text\n'[T3]':\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]': text\n  '[C11]': text\n  '[C12]': text\n  '[C13]': text\n  '[C14]':\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C15]': integer\n  '[C16]': date\n  '[C17]': integer\n  '[C18]':\n    primary_key: true\n    type: integer\n  '[C19]': text\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[T2].[C5]": "[card].[card_id]",
                "[C5]": "[card].[card_id]",
                "[T2].[C6]": "[card].[disp_id]",
                "[C6]": "[card].[disp_id]",
                "[T2].[C7]": "[card].[issued]",
                "[C7]": "[card].[issued]",
                "[T2].[C8]": "[card].[type]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[T3].[C9]": "[disp].[disp_id]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[T4].[C10]": "[district].[a2]",
                "[C10]": "[district].[a2]",
                "[T4].[C11]": "[district].[a3]",
                "[C11]": "[district].[a3]",
                "[T4].[C12]": "[district].[a4]",
                "[C12]": "[district].[a4]",
                "[T4].[C13]": "[district].[a5]",
                "[C13]": "[district].[a5]",
                "[T4].[C14]": "[district].[district_id]",
                "[C14]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[T5].[C15]": "[loan].[amount]",
                "[C15]": "[loan].[amount]",
                "[T5].[C16]": "[loan].[date]",
                "[C16]": "[loan].[date]",
                "[T5].[C17]": "[loan].[duration]",
                "[C17]": "[loan].[duration]",
                "[T5].[C18]": "[loan].[loan_id]",
                "[C18]": "[loan].[loan_id]",
                "[T5].[C19]": "[loan].[status]",
                "[C19]": "[loan].[status]"
            },
            "question": "How many of the [T1] are from [V1] [T4]?; [V1] is a value of the column [C3]",
            "to_value": {
                "[V1]": "Jesenik"
            },
            "masked": 4,
            "masked_terms": [
                "Jesenik",
                "accounts",
                "district",
                "Jesenik"
            ],
            "sql": "SELECT COUNT(*) FROM [T1] WHERE [T1].[C3] = (SELECT [T4].[C14] FROM [T4] WHERE [T4].[C10] = '[V1]')",
            "repaired_sql": "SELECT COUNT(*) FROM [T1] JOIN [T4] ON [T1].[C3] = [T4].[C14] WHERE [T4].[C10] = '[V1]'"
        },
        "values": [
            "Jesenik"
        ],
        "value_links": {
            "Jesenik": "[account].[district_id]"
        },
        "filtered_value_links": {
            "Jesenik": "[account].[district_id]"
        },
        "schema_links": {
            "accounts": "TABLE:[account]",
            "district": "TABLE:[district]",
            "Jesenik": "COLUMN:[district].[a5]"
        },
        "filtered_schema_links": {
            "accounts": "TABLE:[account]",
            "district": "TABLE:[district]",
            "Jesenik": "COLUMN:[district].[a5]"
        },
        "attack": "How many of the people are from 2019 cities?"
    },
    {
        "question_id": 168,
        "db_id": "financial",
        "question": "What percentage of clients who opened their accounts in the district with an average salary of over 10000 are women? Female refers to gender = 'F'; Woman and female are closed; Average salary can be found in A11",
        "evidence": "Female refers to gender = 'F'; Woman and female are closed; Average salary can be found in A11",
        "SQL": "SELECT CAST(SUM(T2.gender = 'F') AS REAL) * 100 / COUNT(T2.client_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A11 > 10000",
        "difficulty": "moderate",
        "query": "SELECT CAST(SUM(T2.gender = 'F') AS REAL) * 100 / COUNT(T2.client_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T1.A11 > 10000",
        "evidence_added": true,
        "question_toks": [
            "What",
            "percentage",
            "of",
            "clients",
            "who",
            "opened",
            "their",
            "accounts",
            "in",
            "the",
            "district",
            "with",
            "an",
            "average",
            "salary",
            "of",
            "over",
            "10000",
            "are",
            "women",
            "?",
            "Female",
            "refers",
            "to",
            "gender",
            "=",
            "'F'",
            ";",
            "Woman",
            "and",
            "female",
            "are",
            "closed",
            ";",
            "Average",
            "salary",
            "can",
            "be",
            "found",
            "in",
            "A11"
        ],
        "tc_original": [
            "client.client_id",
            "client.gender",
            "client.district_id",
            "client.birth_date",
            "client.*",
            "district.a11",
            "district.district_id",
            "district.a2",
            "district.a9",
            "district.a3",
            "district.*",
            "account.account_id",
            "account.district_id",
            "account.frequency",
            "account.date",
            "account.*",
            "disp.client_id",
            "disp.account_id",
            "disp.disp_id",
            "disp.type",
            "disp.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[client]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[gender]",
            "COLUMN:[client].[district_id]",
            "COLUMN:[client].[birth_date]",
            "COLUMN:[client].[*]",
            "TABLE:[district]",
            "COLUMN:[district].[a11]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[a2]",
            "COLUMN:[district].[a9]",
            "COLUMN:[district].[a3]",
            "COLUMN:[district].[*]",
            "TABLE:[account]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[*]",
            "TABLE:[disp]",
            "COLUMN:[disp].[client_id]",
            "COLUMN:[disp].[account_id]",
            "COLUMN:[disp].[disp_id]",
            "COLUMN:[disp].[type]",
            "COLUMN:[disp].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[client]':\n  '[birth_date]': date\n  '[client_id]':\n    primary_key: true\n    type: integer\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[gender]': text\n'[disp]':\n  '[account_id]':\n    foreign_key: '[account].[account_id]'\n    type: integer\n  '[client_id]':\n    foreign_key: '[client].[client_id]'\n    type: integer\n  '[disp_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n'[district]':\n  '[a11]': integer\n  '[a2]': text\n  '[a3]': text\n  '[a9]': integer\n  '[district_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "percentage": "COLUMN:[client].[client_id]",
            "clients": "TABLE:[client]",
            "opened accounts": "TABLE:[account]",
            "district": "TABLE:[district]",
            "average salary": "COLUMN:[district].[a11]",
            "over 10000": "VALUE:[district].[a11]",
            "women": "COLUMN:[client].[gender]",
            "female": "COLUMN:[client].[gender]",
            "gender": "COLUMN:[client].[gender]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[client]",
                "[C5]": "[client].[birth_date]",
                "[C6]": "[client].[client_id]",
                "[C7]": "[client].[district_id]",
                "[C8]": "[client].[gender]",
                "[T3]": "[disp]",
                "[C9]": "[disp].[account_id]",
                "[C10]": "[disp].[client_id]",
                "[C11]": "[disp].[disp_id]",
                "[C12]": "[disp].[type]",
                "[T4]": "[district]",
                "[C13]": "[district].[a11]",
                "[C14]": "[district].[a2]",
                "[C15]": "[district].[a3]",
                "[C16]": "[district].[a9]",
                "[C17]": "[district].[district_id]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[client]": "[T2]",
                "[client].[birth_date]": "[C5]",
                "[client].[client_id]": "[C6]",
                "[client].[district_id]": "[C7]",
                "[client].[gender]": "[C8]",
                "[disp]": "[T3]",
                "[disp].[account_id]": "[C9]",
                "[disp].[client_id]": "[C10]",
                "[disp].[disp_id]": "[C11]",
                "[disp].[type]": "[C12]",
                "[district]": "[T4]",
                "[district].[a11]": "[C13]",
                "[district].[a2]": "[C14]",
                "[district].[a3]": "[C15]",
                "[district].[a9]": "[C16]",
                "[district].[district_id]": "[C17]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T4].[C17]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]': date\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]':\n    foreign_key: '[T4].[C17]'\n    type: integer\n  '[C8]': text\n'[T3]':\n  '[C10]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': text\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T4]':\n  '[C13]': integer\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n  '[C17]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[client]",
                "[T2].[C5]": "[client].[birth_date]",
                "[C5]": "[client].[birth_date]",
                "[T2].[C6]": "[client].[client_id]",
                "[C6]": "[client].[client_id]",
                "[T2].[C7]": "[client].[district_id]",
                "[C7]": "[client].[district_id]",
                "[T2].[C8]": "[client].[gender]",
                "[C8]": "[client].[gender]",
                "[T3]": "[disp]",
                "[T3].[C9]": "[disp].[account_id]",
                "[C9]": "[disp].[account_id]",
                "[T3].[C10]": "[disp].[client_id]",
                "[C10]": "[disp].[client_id]",
                "[T3].[C11]": "[disp].[disp_id]",
                "[C11]": "[disp].[disp_id]",
                "[T3].[C12]": "[disp].[type]",
                "[C12]": "[disp].[type]",
                "[T4]": "[district]",
                "[T4].[C13]": "[district].[a11]",
                "[C13]": "[district].[a11]",
                "[T4].[C14]": "[district].[a2]",
                "[C14]": "[district].[a2]",
                "[T4].[C15]": "[district].[a3]",
                "[C15]": "[district].[a3]",
                "[T4].[C16]": "[district].[a9]",
                "[C16]": "[district].[a9]",
                "[T4].[C17]": "[district].[district_id]",
                "[C17]": "[district].[district_id]"
            },
            "question": "What percentage of [T2] who opened their accounts in the [T4] with an [C13] of over [V3] are [C8]? [V1] refers to gender = '[V2]'; [C8] and [V1] are closed; [C13] can be found in A11; [V1] is a value of the column [C8]; [V2] is a value of the column [C8]; [V3] is a value of the column [C13]",
            "to_value": {
                "[V1]": "Female",
                "[V2]": "F",
                "[V3]": "10000"
            },
            "masked": 10,
            "masked_terms": [
                "Female",
                "F",
                "10000",
                "clients",
                "district",
                "average salary",
                "women",
                " Female",
                "Woman",
                "10000"
            ],
            "sql": "SELECT 100.0 * COUNT(CASE WHEN [T2].[C8] = '[V1]' THEN 1 END) / COUNT(*) AS percentage FROM [T2] JOIN [T4] ON [T2].[C7] = [T4].[C17] WHERE [T4].[C13] > [V3]",
            "repaired_sql": "SELECT 100.0 * COUNT(*) FILTER (WHERE [T2].[C8] = '[V2]') / NULLIF(COUNT(*),0) AS percentage FROM [T2] JOIN [T4] ON [T2].[C7] = [T4].[C17] WHERE [T4].[C13] > [V3]"
        },
        "values": [
            "Female",
            "F",
            "10000"
        ],
        "value_links": {
            "Female": "[client].[gender]",
            "F": "[client].[gender]",
            "10000": "[district].[a11]"
        },
        "filtered_value_links": {
            "Female": "[client].[gender]",
            "F": "[client].[gender]",
            "10000": "[district].[a11]"
        },
        "schema_links": {
            "percentage": "COLUMN:[client].[*]",
            "clients": "TABLE:[client]",
            "district": "TABLE:[district]",
            "average salary": "COLUMN:[district].[a11]",
            "women": "COLUMN:[client].[gender]",
            " Female": "COLUMN:[client].[gender]",
            "Woman": "COLUMN:[client].[gender]",
            "10000": "COLUMN:[district].[a11]"
        },
        "filtered_schema_links": {
            "percentage": "COLUMN:[client].[*]",
            "clients": "TABLE:[client]",
            "district": "TABLE:[district]",
            "average salary": "COLUMN:[district].[a11]",
            "women": "COLUMN:[client].[gender]",
            " Female": "COLUMN:[client].[gender]",
            "Woman": "COLUMN:[client].[gender]",
            "10000": "COLUMN:[district].[a11]"
        },
        "attack": "What percentage of customers who opened their accounts in the branch with an assets of over 1000000 are female?"
    },
    {
        "question_id": 175,
        "db_id": "financial",
        "question": "How many accounts have an owner disposition and request for a statement to be generated upon a transaction? Frequency = 'POPLATEK PO OBRATU' stands for issuance after transaction",
        "evidence": "Frequency = 'POPLATEK PO OBRATU' stands for issuance after transaction",
        "SQL": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'OWNER' AND T1.frequency = 'POPLATEK PO OBRATU'",
        "difficulty": "moderate",
        "query": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'OWNER' AND T1.frequency = 'POPLATEK PO OBRATU'",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "accounts",
            "have",
            "an",
            "owner",
            "disposition",
            "and",
            "request",
            "for",
            "a",
            "statement",
            "to",
            "be",
            "generated",
            "upon",
            "a",
            "transaction",
            "?",
            "Frequency",
            "=",
            "'POPLATEK",
            "PO",
            "OBRATU'",
            "stands",
            "for",
            "issuance",
            "after",
            "transaction"
        ],
        "tc_original": [
            "disp.account_id",
            "disp.type",
            "disp.disp_id",
            "disp.client_id",
            "disp.*",
            "trans.account_id",
            "trans.account",
            "trans.k_symbol",
            "trans.trans_id",
            "trans.date",
            "trans.*",
            "account.frequency",
            "account.account_id",
            "account.date",
            "account.district_id",
            "account.*",
            "card.type",
            "card.issued",
            "card.card_id",
            "card.disp_id",
            "card.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[disp]",
            "COLUMN:[disp].[account_id]",
            "COLUMN:[disp].[type]",
            "COLUMN:[disp].[disp_id]",
            "COLUMN:[disp].[client_id]",
            "COLUMN:[disp].[*]",
            "TABLE:[trans]",
            "COLUMN:[trans].[account_id]",
            "COLUMN:[trans].[account]",
            "COLUMN:[trans].[k_symbol]",
            "COLUMN:[trans].[trans_id]",
            "COLUMN:[trans].[date]",
            "COLUMN:[trans].[*]",
            "TABLE:[account]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[*]",
            "TABLE:[card]",
            "COLUMN:[card].[type]",
            "COLUMN:[card].[issued]",
            "COLUMN:[card].[card_id]",
            "COLUMN:[card].[disp_id]",
            "COLUMN:[card].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[card]':\n  '[card_id]':\n    primary_key: true\n    type: integer\n  '[disp_id]':\n    foreign_key: '[disp].[disp_id]'\n    type: integer\n  '[issued]': date\n  '[type]': text\n'[client]':\n  '[client_id]':\n    primary_key: true\n    type: integer\n'[disp]':\n  '[account_id]':\n    foreign_key: '[account].[account_id]'\n    type: integer\n  '[client_id]':\n    foreign_key: '[client].[client_id]'\n    type: integer\n  '[disp_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[trans]':\n  '[account]': integer\n  '[account_id]':\n    foreign_key: '[account].[account_id]'\n    type: integer\n  '[date]': date\n  '[k_symbol]': text\n  '[trans_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "accounts": "TABLE:[account]",
            "owner": "VALUE:[disp].[type]",
            "owner disposition": "VALUE:[disp].[type]",
            "statement": "COLUMN:[account].[frequency]",
            "frequency": "COLUMN:[account].[frequency]",
            "POPLATEK PO OBRATU": "VALUE:[account].[frequency]",
            "transaction": "COLUMN:[account].[frequency]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[C5]": "[card].[card_id]",
                "[C6]": "[card].[disp_id]",
                "[C7]": "[card].[issued]",
                "[C8]": "[card].[type]",
                "[T3]": "[client]",
                "[C9]": "[client].[client_id]",
                "[T4]": "[disp]",
                "[C10]": "[disp].[account_id]",
                "[C11]": "[disp].[client_id]",
                "[C12]": "[disp].[disp_id]",
                "[C13]": "[disp].[type]",
                "[T5]": "[district]",
                "[C14]": "[district].[district_id]",
                "[T6]": "[trans]",
                "[C15]": "[trans].[account]",
                "[C16]": "[trans].[account_id]",
                "[C17]": "[trans].[date]",
                "[C18]": "[trans].[k_symbol]",
                "[C19]": "[trans].[trans_id]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[card]": "[T2]",
                "[card].[card_id]": "[C5]",
                "[card].[disp_id]": "[C6]",
                "[card].[issued]": "[C7]",
                "[card].[type]": "[C8]",
                "[client]": "[T3]",
                "[client].[client_id]": "[C9]",
                "[disp]": "[T4]",
                "[disp].[account_id]": "[C10]",
                "[disp].[client_id]": "[C11]",
                "[disp].[disp_id]": "[C12]",
                "[disp].[type]": "[C13]",
                "[district]": "[T5]",
                "[district].[district_id]": "[C14]",
                "[trans]": "[T6]",
                "[trans].[account]": "[C15]",
                "[trans].[account_id]": "[C16]",
                "[trans].[date]": "[C17]",
                "[trans].[k_symbol]": "[C18]",
                "[trans].[trans_id]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T5].[C14]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]':\n    foreign_key: '[T4].[C12]'\n    type: integer\n  '[C7]': date\n  '[C8]': text\n'[T3]':\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C11]':\n    foreign_key: '[T3].[C9]'\n    type: integer\n  '[C12]':\n    primary_key: true\n    type: integer\n  '[C13]': text\n'[T5]':\n  '[C14]':\n    primary_key: true\n    type: integer\n'[T6]':\n  '[C15]': integer\n  '[C16]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C17]': date\n  '[C18]': text\n  '[C19]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[T2].[C5]": "[card].[card_id]",
                "[C5]": "[card].[card_id]",
                "[T2].[C6]": "[card].[disp_id]",
                "[C6]": "[card].[disp_id]",
                "[T2].[C7]": "[card].[issued]",
                "[C7]": "[card].[issued]",
                "[T2].[C8]": "[card].[type]",
                "[C8]": "[card].[type]",
                "[T3]": "[client]",
                "[T3].[C9]": "[client].[client_id]",
                "[C9]": "[client].[client_id]",
                "[T4]": "[disp]",
                "[T4].[C10]": "[disp].[account_id]",
                "[C10]": "[disp].[account_id]",
                "[T4].[C11]": "[disp].[client_id]",
                "[C11]": "[disp].[client_id]",
                "[T4].[C12]": "[disp].[disp_id]",
                "[C12]": "[disp].[disp_id]",
                "[T4].[C13]": "[disp].[type]",
                "[C13]": "[disp].[type]",
                "[T5]": "[district]",
                "[T5].[C14]": "[district].[district_id]",
                "[C14]": "[district].[district_id]",
                "[T6]": "[trans]",
                "[T6].[C15]": "[trans].[account]",
                "[C15]": "[trans].[account]",
                "[T6].[C16]": "[trans].[account_id]",
                "[C16]": "[trans].[account_id]",
                "[T6].[C17]": "[trans].[date]",
                "[C17]": "[trans].[date]",
                "[T6].[C18]": "[trans].[k_symbol]",
                "[C18]": "[trans].[k_symbol]",
                "[T6].[C19]": "[trans].[trans_id]",
                "[C19]": "[trans].[trans_id]"
            },
            "question": "How many [T1] have an [C13] and [C10] to be generated upon a [T6]? Frequency = 'POPLATEK PO OBRATU' stands for issuance after [T6]",
            "to_value": {},
            "masked": 4,
            "masked_terms": [
                "accounts",
                "owner disposition",
                "request for a statement",
                "transaction"
            ],
            "sql": "SELECT COUNT(*) FROM [T1] INNER JOIN [T4] ON [T1].[C1] = [T4].[C10] WHERE [T4].[C13] IS NOT NULL AND [T4].[C10] IS NOT NULL AND [T1].[C4] = 'POPLATEK PO OBRATU'",
            "repaired_sql": "SELECT COUNT(DISTINCT [T1].[C1]) FROM [T1] JOIN [T4] ON [T4].[C10] = [T1].[C1] JOIN [T6] ON [T6].[C16] = [T1].[C1] WHERE [T4].[C13] IS NOT NULL AND [T6].[C18] = 'POPLATEK PO OBRATU'"
        },
        "values": [
            "POPLATEK PO OBRATU"
        ],
        "value_links": {
            "POPLATEK PO OBRATU": "[disp].[frequency]"
        },
        "filtered_value_links": {
            "POPLATEK PO OBRATU": "[disp].[frequency]"
        },
        "schema_links": {
            "accounts": "TABLE:[account]",
            "owner disposition": "COLUMN:[disp].[type]",
            "request for a statement": "COLUMN:[disp].[account_id]",
            "transaction": "TABLE:[trans]"
        },
        "filtered_schema_links": {
            "accounts": "TABLE:[account]",
            "owner disposition": "COLUMN:[disp].[type]",
            "request for a statement": "COLUMN:[disp].[account_id]",
            "transaction": "TABLE:[trans]"
        },
        "attack": "How many cards have an issuance reason and client to be generated upon a request? Frequency = 'POPLATEK PO OBRATU' stands for issuance after request"
    },
    {
        "question_id": 183,
        "db_id": "financial",
        "question": "How many accounts in Beroun were opened after 1996?",
        "evidence": "",
        "SQL": "SELECT COUNT(account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.date) > '1996' AND T2.A2 = 'Beroun'",
        "difficulty": "simple",
        "query": "SELECT COUNT(account_id) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.date) > '1996' AND T2.A2 = 'Beroun'",
        "question_toks": [
            "How",
            "many",
            "accounts",
            "in",
            "Beroun",
            "were",
            "opened",
            "after",
            "1996",
            "?"
        ],
        "tc_original": [
            "account.date",
            "account.district_id",
            "account.account_id",
            "account.frequency",
            "account.*",
            "district.a2",
            "district.district_id",
            "district.a4",
            "district.a3",
            "district.a5",
            "district.*",
            "loan.date",
            "loan.amount",
            "loan.duration",
            "loan.status",
            "loan.loan_id",
            "loan.*",
            "card.type",
            "card.issued",
            "card.card_id",
            "card.disp_id",
            "card.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[account]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[*]",
            "TABLE:[district]",
            "COLUMN:[district].[a2]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[a4]",
            "COLUMN:[district].[a3]",
            "COLUMN:[district].[a5]",
            "COLUMN:[district].[*]",
            "TABLE:[loan]",
            "COLUMN:[loan].[date]",
            "COLUMN:[loan].[amount]",
            "COLUMN:[loan].[duration]",
            "COLUMN:[loan].[status]",
            "COLUMN:[loan].[loan_id]",
            "COLUMN:[loan].[*]",
            "TABLE:[card]",
            "COLUMN:[card].[type]",
            "COLUMN:[card].[issued]",
            "COLUMN:[card].[card_id]",
            "COLUMN:[card].[disp_id]",
            "COLUMN:[card].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[card]':\n  '[card_id]':\n    primary_key: true\n    type: integer\n  '[disp_id]':\n    foreign_key: '[disp].[disp_id]'\n    type: integer\n  '[issued]': date\n  '[type]': text\n'[disp]':\n  '[disp_id]':\n    primary_key: true\n    type: integer\n'[district]':\n  '[a2]': text\n  '[a3]': text\n  '[a4]': text\n  '[a5]': text\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[loan]':\n  '[amount]': integer\n  '[date]': date\n  '[duration]': integer\n  '[loan_id]':\n    primary_key: true\n    type: integer\n  '[status]': text\n",
        "gold_links": {
            "accounts": "TABLE:[account]",
            "Beroun": "VALUE:[district].[a2]",
            "opened": "COLUMN:[account].[date]",
            "after 1996": "COLUMN:[account].[date]",
            "1996": "VALUE:[account].[date]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[C5]": "[card].[card_id]",
                "[C6]": "[card].[disp_id]",
                "[C7]": "[card].[issued]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[C10]": "[district].[a2]",
                "[C11]": "[district].[a3]",
                "[C12]": "[district].[a4]",
                "[C13]": "[district].[a5]",
                "[C14]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[C15]": "[loan].[amount]",
                "[C16]": "[loan].[date]",
                "[C17]": "[loan].[duration]",
                "[C18]": "[loan].[loan_id]",
                "[C19]": "[loan].[status]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[card]": "[T2]",
                "[card].[card_id]": "[C5]",
                "[card].[disp_id]": "[C6]",
                "[card].[issued]": "[C7]",
                "[card].[type]": "[C8]",
                "[disp]": "[T3]",
                "[disp].[disp_id]": "[C9]",
                "[district]": "[T4]",
                "[district].[a2]": "[C10]",
                "[district].[a3]": "[C11]",
                "[district].[a4]": "[C12]",
                "[district].[a5]": "[C13]",
                "[district].[district_id]": "[C14]",
                "[loan]": "[T5]",
                "[loan].[amount]": "[C15]",
                "[loan].[date]": "[C16]",
                "[loan].[duration]": "[C17]",
                "[loan].[loan_id]": "[C18]",
                "[loan].[status]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T4].[C14]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]':\n    foreign_key: '[T3].[C9]'\n    type: integer\n  '[C7]': date\n  '[C8]': text\n'[T3]':\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]': text\n  '[C11]': text\n  '[C12]': text\n  '[C13]': text\n  '[C14]':\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C15]': integer\n  '[C16]': date\n  '[C17]': integer\n  '[C18]':\n    primary_key: true\n    type: integer\n  '[C19]': text\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[T2].[C5]": "[card].[card_id]",
                "[C5]": "[card].[card_id]",
                "[T2].[C6]": "[card].[disp_id]",
                "[C6]": "[card].[disp_id]",
                "[T2].[C7]": "[card].[issued]",
                "[C7]": "[card].[issued]",
                "[T2].[C8]": "[card].[type]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[T3].[C9]": "[disp].[disp_id]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[T4].[C10]": "[district].[a2]",
                "[C10]": "[district].[a2]",
                "[T4].[C11]": "[district].[a3]",
                "[C11]": "[district].[a3]",
                "[T4].[C12]": "[district].[a4]",
                "[C12]": "[district].[a4]",
                "[T4].[C13]": "[district].[a5]",
                "[C13]": "[district].[a5]",
                "[T4].[C14]": "[district].[district_id]",
                "[C14]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[T5].[C15]": "[loan].[amount]",
                "[C15]": "[loan].[amount]",
                "[T5].[C16]": "[loan].[date]",
                "[C16]": "[loan].[date]",
                "[T5].[C17]": "[loan].[duration]",
                "[C17]": "[loan].[duration]",
                "[T5].[C18]": "[loan].[loan_id]",
                "[C18]": "[loan].[loan_id]",
                "[T5].[C19]": "[loan].[status]",
                "[C19]": "[loan].[status]"
            },
            "question": "How many [T1] in [V1] were [C2] [C2] [V2]?; [V1] is a value of the column [C3]; [V2] is a value of the column [C2]",
            "to_value": {
                "[V1]": "Beroun",
                "[V2]": "1996"
            },
            "masked": 7,
            "masked_terms": [
                "Beroun",
                "1996",
                "accounts",
                "Beroun",
                "opened",
                "after",
                "1996"
            ],
            "sql": "SELECT COUNT(*) FROM [T1] WHERE [C3] = '[V1]' AND [C2] = '[V2]'",
            "repaired_sql": "SELECT COUNT(*) FROM [T1] WHERE [C3] = [V1] AND [C2] = '[V2]'"
        },
        "values": [
            "Beroun",
            "1996"
        ],
        "value_links": {
            "Beroun": "[account].[district_id]",
            "1996": "[account].[date]"
        },
        "filtered_value_links": {
            "Beroun": "[account].[district_id]",
            "1996": "[account].[date]"
        },
        "schema_links": {
            "accounts": "TABLE:[account]",
            "Beroun": "COLUMN:[account].[district_id]",
            "opened": "COLUMN:[account].[date]",
            "after": "COLUMN:[account].[date]",
            "1996": "COLUMN:[account].[date]"
        },
        "filtered_schema_links": {
            "accounts": "TABLE:[account]",
            "Beroun": "COLUMN:[account].[district_id]",
            "opened": "COLUMN:[account].[date]",
            "after": "COLUMN:[account].[date]",
            "1996": "COLUMN:[account].[date]"
        },
        "attack": "How many orders in France were order_date order_date 2022-01-01?"
    },
    {
        "question_id": 191,
        "db_id": "financial",
        "question": "How many loan accounts are for pre-payment of duration of 24 months with weekly issuance of statement. Frequency = 'POPLATEK TYDNE' referes to weekly statement",
        "evidence": "Frequency = 'POPLATEK TYDNE' referes to weekly statement",
        "SQL": "SELECT COUNT(T2.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration = 24 AND T1.frequency = 'POPLATEK TYDNE'",
        "difficulty": "simple",
        "query": "SELECT COUNT(T2.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration = 24 AND T1.frequency = 'POPLATEK TYDNE'",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "loan",
            "accounts",
            "are",
            "for",
            "pre-payment",
            "of",
            "duration",
            "of",
            "24",
            "months",
            "with",
            "weekly",
            "issuance",
            "of",
            "statement",
            ".",
            "Frequency",
            "=",
            "'POPLATEK",
            "TYDNE'",
            "referes",
            "to",
            "weekly",
            "statement"
        ],
        "tc_original": [
            "loan.duration",
            "loan.payments",
            "loan.account_id",
            "loan.loan_id",
            "loan.date",
            "loan.*",
            "account.frequency",
            "account.account_id",
            "account.date",
            "account.district_id",
            "account.*",
            "order.order_id",
            "order.account_id",
            "order.bank_to",
            "order.account_to",
            "order.amount",
            "order.*",
            "card.type",
            "card.issued",
            "card.card_id",
            "card.disp_id",
            "card.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[loan]",
            "COLUMN:[loan].[duration]",
            "COLUMN:[loan].[payments]",
            "COLUMN:[loan].[account_id]",
            "COLUMN:[loan].[loan_id]",
            "COLUMN:[loan].[date]",
            "COLUMN:[loan].[*]",
            "TABLE:[account]",
            "COLUMN:[account].[frequency]",
            "COLUMN:[account].[account_id]",
            "COLUMN:[account].[date]",
            "COLUMN:[account].[district_id]",
            "COLUMN:[account].[*]",
            "TABLE:[order]",
            "COLUMN:[order].[order_id]",
            "COLUMN:[order].[account_id]",
            "COLUMN:[order].[bank_to]",
            "COLUMN:[order].[account_to]",
            "COLUMN:[order].[amount]",
            "COLUMN:[order].[*]",
            "TABLE:[card]",
            "COLUMN:[card].[type]",
            "COLUMN:[card].[issued]",
            "COLUMN:[card].[card_id]",
            "COLUMN:[card].[disp_id]",
            "COLUMN:[card].[*]"
        ],
        "schema": "'[account]':\n  '[account_id]':\n    primary_key: true\n    type: integer\n  '[date]': date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[frequency]': text\n'[card]':\n  '[card_id]':\n    primary_key: true\n    type: integer\n  '[disp_id]':\n    foreign_key: '[disp].[disp_id]'\n    type: integer\n  '[issued]': date\n  '[type]': text\n'[disp]':\n  '[disp_id]':\n    primary_key: true\n    type: integer\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[loan]':\n  '[account_id]':\n    foreign_key: '[account].[account_id]'\n    type: integer\n  '[date]': date\n  '[duration]': integer\n  '[loan_id]':\n    primary_key: true\n    type: integer\n  '[payments]': real\n'[order]':\n  '[account_id]':\n    foreign_key: '[account].[account_id]'\n    type: integer\n  '[account_to]': integer\n  '[amount]': real\n  '[bank_to]': text\n  '[order_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "loan accounts": "TABLE:[loan]",
            "pre-payment": "TABLE:[loan]",
            "duration": "COLUMN:[loan].[duration]",
            "24 months": "VALUE:[loan].[duration]",
            "24": "VALUE:[loan].[duration]",
            "weekly": "VALUE:[account].[frequency]",
            "issuance": "COLUMN:[account].[frequency]",
            "statement": "COLUMN:[account].[frequency]",
            "POPLATEK TYDNE": "VALUE:[account].[frequency]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[account]",
                "[C1]": "[account].[account_id]",
                "[C2]": "[account].[date]",
                "[C3]": "[account].[district_id]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[C5]": "[card].[card_id]",
                "[C6]": "[card].[disp_id]",
                "[C7]": "[card].[issued]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[C10]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[C11]": "[loan].[account_id]",
                "[C12]": "[loan].[date]",
                "[C13]": "[loan].[duration]",
                "[C14]": "[loan].[loan_id]",
                "[C15]": "[loan].[payments]",
                "[T6]": "[order]",
                "[C16]": "[order].[account_id]",
                "[C17]": "[order].[account_to]",
                "[C18]": "[order].[amount]",
                "[C19]": "[order].[bank_to]",
                "[C20]": "[order].[order_id]"
            },
            "to_symbol": {
                "[account]": "[T1]",
                "[account].[account_id]": "[C1]",
                "[account].[date]": "[C2]",
                "[account].[district_id]": "[C3]",
                "[account].[frequency]": "[C4]",
                "[card]": "[T2]",
                "[card].[card_id]": "[C5]",
                "[card].[disp_id]": "[C6]",
                "[card].[issued]": "[C7]",
                "[card].[type]": "[C8]",
                "[disp]": "[T3]",
                "[disp].[disp_id]": "[C9]",
                "[district]": "[T4]",
                "[district].[district_id]": "[C10]",
                "[loan]": "[T5]",
                "[loan].[account_id]": "[C11]",
                "[loan].[date]": "[C12]",
                "[loan].[duration]": "[C13]",
                "[loan].[loan_id]": "[C14]",
                "[loan].[payments]": "[C15]",
                "[order]": "[T6]",
                "[order].[account_id]": "[C16]",
                "[order].[account_to]": "[C17]",
                "[order].[amount]": "[C18]",
                "[order].[bank_to]": "[C19]",
                "[order].[order_id]": "[C20]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': date\n  '[C3]':\n    foreign_key: '[T4].[C10]'\n    type: integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]':\n    foreign_key: '[T3].[C9]'\n    type: integer\n  '[C7]': date\n  '[C8]': text\n'[T3]':\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]':\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C11]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C12]': date\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': real\n'[T6]':\n  '[C16]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C17]': integer\n  '[C18]': real\n  '[C19]': text\n  '[C20]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[account]",
                "[T1].[C1]": "[account].[account_id]",
                "[C1]": "[account].[account_id]",
                "[T1].[C2]": "[account].[date]",
                "[C2]": "[account].[date]",
                "[T1].[C3]": "[account].[district_id]",
                "[C3]": "[account].[district_id]",
                "[T1].[C4]": "[account].[frequency]",
                "[C4]": "[account].[frequency]",
                "[T2]": "[card]",
                "[T2].[C5]": "[card].[card_id]",
                "[C5]": "[card].[card_id]",
                "[T2].[C6]": "[card].[disp_id]",
                "[C6]": "[card].[disp_id]",
                "[T2].[C7]": "[card].[issued]",
                "[C7]": "[card].[issued]",
                "[T2].[C8]": "[card].[type]",
                "[C8]": "[card].[type]",
                "[T3]": "[disp]",
                "[T3].[C9]": "[disp].[disp_id]",
                "[C9]": "[disp].[disp_id]",
                "[T4]": "[district]",
                "[T4].[C10]": "[district].[district_id]",
                "[C10]": "[district].[district_id]",
                "[T5]": "[loan]",
                "[T5].[C11]": "[loan].[account_id]",
                "[C11]": "[loan].[account_id]",
                "[T5].[C12]": "[loan].[date]",
                "[C12]": "[loan].[date]",
                "[T5].[C13]": "[loan].[duration]",
                "[C13]": "[loan].[duration]",
                "[T5].[C14]": "[loan].[loan_id]",
                "[C14]": "[loan].[loan_id]",
                "[T5].[C15]": "[loan].[payments]",
                "[C15]": "[loan].[payments]",
                "[T6]": "[order]",
                "[T6].[C16]": "[order].[account_id]",
                "[C16]": "[order].[account_id]",
                "[T6].[C17]": "[order].[account_to]",
                "[C17]": "[order].[account_to]",
                "[T6].[C18]": "[order].[amount]",
                "[C18]": "[order].[amount]",
                "[T6].[C19]": "[order].[bank_to]",
                "[C19]": "[order].[bank_to]",
                "[T6].[C20]": "[order].[order_id]",
                "[C20]": "[order].[order_id]"
            },
            "question": "How many [T5] accounts are for pre-payment of [C13] of [V1] months with weekly issuance of statement. [C4] = '[V2]' referes to weekly statement; [V1] is a value of the column [C13]; [V2] is a value of the column [C4]",
            "to_value": {
                "[V1]": "24",
                "[V2]": "POPLATEK TYDNE"
            },
            "masked": 6,
            "masked_terms": [
                "24",
                "POPLATEK TYDNE",
                "loan",
                "duration",
                "frequency",
                "POPLATEK"
            ],
            "sql": "SELECT COUNT(*) FROM [T5] INNER JOIN [T1] ON [T5].[C11] = [T1].[C1] WHERE [T5].[C13] = [V1] AND [T1].[C4] = '[V2]'",
            "repaired_sql": "SELECT COUNT(*) FROM [T5] JOIN [T1] ON [T5].[C11] = [T1].[C1] WHERE [T5].[C13] = [V1] AND [T1].[C4] = '[V2]'"
        },
        "values": [
            "24",
            "POPLATEK TYDNE"
        ],
        "value_links": {
            "24": "[loan].[duration]",
            "POPLATEK TYDNE": "[account].[frequency]"
        },
        "filtered_value_links": {
            "24": "[loan].[duration]",
            "POPLATEK TYDNE": "[account].[frequency]"
        },
        "schema_links": {
            "loan": "TABLE:[loan]",
            "duration": "COLUMN:[loan].[duration]",
            "frequency": "COLUMN:[account].[frequency]",
            "POPLATEK": "COLUMN:[account].[frequency]"
        },
        "filtered_schema_links": {
            "loan": "TABLE:[loan]",
            "duration": "COLUMN:[loan].[duration]",
            "frequency": "COLUMN:[account].[frequency]",
            "POPLATEK": "COLUMN:[account].[frequency]"
        },
        "attack": "How many loan accounts are for pre-payment of tenure of 12 months with weekly issuance of statement. tenure = 'weekly' refers to weekly statement; 12 is a value of the column tenure; weekly is a value of the column tenure"
    },
    {
        "question_id": 206,
        "db_id": "toxicology",
        "question": "What elements are in the TR004_8_9 bond atoms? TR004_8_9 bond atoms refers to bond_id = 'TR004_8_9';",
        "evidence": "TR004_8_9 bond atoms refers to bond_id = 'TR004_8_9';",
        "SQL": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9'",
        "difficulty": "challenging",
        "query": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR004_8_9'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "elements",
            "are",
            "in",
            "the",
            "TR004_8_9",
            "bond",
            "atoms",
            "?",
            "TR004_8_9",
            "bond",
            "atoms",
            "refers",
            "to",
            "bond_id",
            "=",
            "'TR004_8_9'",
            ";"
        ],
        "tc_original": [
            "atom.element",
            "atom.atom_id",
            "atom.molecule_id",
            "atom.*",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "bond.*",
            "connected.bond_id",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.*",
            "molecule.label",
            "molecule.molecule_id",
            "molecule.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[atom]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[*]",
            "TABLE:[molecule]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "elements": "COLUMN:[atom].[element]",
            "TR004_8_9": "VALUE:[bond].[bond_id]",
            "bond atoms": "TABLE:[connected]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "What [C2] are in the [V1] [T2] atoms? [V1] [T2] atoms refers to [C4] = '[V1]';; [V1] is a value of the column [C4]",
            "to_value": {
                "[V1]": "TR004_8_9"
            },
            "masked": 5,
            "masked_terms": [
                "TR004_8_9",
                "elements",
                "bond",
                "bond_id",
                "TR004_8_9"
            ],
            "sql": "SELECT [T1].[C2] FROM [T1] JOIN [T3] ON [T1].[C1] = [T3].[C7] JOIN [T2] ON [T3].[C9] = [T2].[C4] WHERE [T2].[C4] = '[V1]'",
            "repaired_sql": "SELECT [T1].[C2] FROM [T3] JOIN [T1] ON [T3].[C7] = [T1].[C1] JOIN [T2] ON [T3].[C9] = [T2].[C4] WHERE [T2].[C4] = '[V1]'"
        },
        "values": [
            "TR004_8_9"
        ],
        "value_links": {
            "TR004_8_9": "[bond].[bond_id]"
        },
        "filtered_value_links": {
            "TR004_8_9": "[bond].[bond_id]"
        },
        "schema_links": {
            "elements": "COLUMN:[atom].[element]",
            "bond": "TABLE:[bond]",
            "bond_id": "COLUMN:[bond].[bond_id]",
            "TR004_8_9": "COLUMN:[bond].[bond_id]"
        },
        "filtered_schema_links": {
            "elements": "COLUMN:[atom].[element]",
            "bond": "TABLE:[bond]",
            "bond_id": "COLUMN:[bond].[bond_id]",
            "TR004_8_9": "COLUMN:[bond].[bond_id]"
        },
        "attack": "What elements are in the oxygen atom atoms? Oxygen atom atoms refers to symbol = 'oxygen'; 'oxygen' is a value of the column symbol."
    },
    {
        "question_id": 213,
        "db_id": "toxicology",
        "question": "What type of bond is there between the atoms TR004_8 and TR004_20? type of bond refers to bond_type; between the atoms TR004_8 and TR004_20 refers to atom_id = 'TR004_8' AND atom_id2 = 'TR004_20' OR another way around",
        "evidence": "type of bond refers to bond_type; between the atoms TR004_8 and TR004_20 refers to atom_id = 'TR004_8' AND atom_id2 = 'TR004_20' OR another way around",
        "SQL": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR004_8' AND T2.atom_id2 = 'TR004_20' OR T2.atom_id2 = 'TR004_8' AND T2.atom_id = 'TR004_20'",
        "difficulty": "moderate",
        "query": "SELECT T1.bond_type FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T2.atom_id = 'TR004_8' AND T2.atom_id2 = 'TR004_20' OR T2.atom_id2 = 'TR004_8' AND T2.atom_id = 'TR004_20'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "type",
            "of",
            "bond",
            "is",
            "there",
            "between",
            "the",
            "atoms",
            "TR004_8",
            "and",
            "TR004_20",
            "?",
            "type",
            "of",
            "bond",
            "refers",
            "to",
            "bond_type",
            ";",
            "between",
            "the",
            "atoms",
            "TR004_8",
            "and",
            "TR004_20",
            "refers",
            "to",
            "atom_id",
            "=",
            "'TR004_8'",
            "AND",
            "atom_id2",
            "=",
            "'TR004_20'",
            "OR",
            "another",
            "way",
            "around"
        ],
        "tc_original": [
            "bond.bond_type",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.*",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "connected.*",
            "atom.atom_id",
            "atom.element",
            "atom.molecule_id",
            "atom.*",
            "molecule.label",
            "molecule.molecule_id",
            "molecule.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[*]",
            "TABLE:[atom]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[*]",
            "TABLE:[molecule]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "type": "COLUMN:[bond].[bond_type]",
            "bond": "TABLE:[bond]",
            "bond type": "COLUMN:[bond].[bond_type]",
            "atoms": "TABLE:[atom]",
            "TR004_8": "VALUE:[connected].[atom_id]",
            "TR004_20": "VALUE:[connected].[atom_id2]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "What type of [T2] is there between the [T1] [V1] and [V2]? type of [T2] refers to [V3]; between the [T1] [V1] and [V2] refers to atom_id = '[V1]' AND atom_id2 = '[V2]' OR another way around; [V1] is a value of the column [C8]; [V2] is a value of the column [C7]; [V3] is a value of the column [C5]",
            "to_value": {
                "[V1]": "TR004_8",
                "[V2]": "TR004_20",
                "[V3]": "bond_type"
            },
            "masked": 8,
            "masked_terms": [
                "TR004_8",
                "TR004_20",
                "bond_type",
                "bond_type",
                "atoms",
                "TR004_8",
                "TR004_20",
                "bond"
            ],
            "sql": "SELECT [T2].[C5] FROM [T3] JOIN [T2] ON [T3].[C9] = [T2].[C4] WHERE ([T3].[C8] = '[V1]' AND [T3].[C7] = '[V2]') OR ([T3].[C8] = '[V2]' AND [T3].[C7] = '[V1]')",
            "repaired_sql": "SELECT [T2].[C5] FROM [T3] JOIN [T2] ON [T3].[C9] = [T2].[C4] WHERE ([T3].[C8] = '[V1]' AND [T3].[C7] = '[V2]') OR ([T3].[C8] = '[V2]' AND [T3].[C7] = '[V1]')"
        },
        "values": [
            "TR004_8",
            "TR004_20",
            "bond_type"
        ],
        "value_links": {
            "TR004_8": "[connected].[atom_id]",
            "TR004_20": "[connected].[atom_id2]",
            "bond_type": "[bond].[bond_type]"
        },
        "filtered_value_links": {
            "TR004_8": "[connected].[atom_id]",
            "TR004_20": "[connected].[atom_id2]",
            "bond_type": "[bond].[bond_type]"
        },
        "schema_links": {
            "bond_type": "COLUMN:[bond].[bond_type]",
            "atoms": "TABLE:[atom]",
            "TR004_8": "COLUMN:[connected].[atom_id]",
            "TR004_20": "COLUMN:[connected].[atom_id2]",
            "bond": "TABLE:[bond]"
        },
        "filtered_schema_links": {
            "bond_type": "COLUMN:[bond].[bond_type]",
            "atoms": "TABLE:[atom]",
            "TR004_8": "COLUMN:[connected].[atom_id]",
            "TR004_20": "COLUMN:[connected].[atom_id2]",
            "bond": "TABLE:[bond]"
        },
        "attack": "What type of bond is there between the atom A and atom B? Type of bond refers to single, double, or triple; between the atom A and atom B refers to atom_id = 'A' AND atom_id2 = 'B' OR another way around."
    },
    {
        "question_id": 214,
        "db_id": "toxicology",
        "question": "What type of label is not on molecules with atoms with tin? tin refers to element ! = 'sn'; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "evidence": "tin refers to element ! = 'sn'; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "SQL": "SELECT DISTINCT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element != 'sn'",
        "difficulty": "simple",
        "query": "SELECT DISTINCT T2.label FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element != 'sn'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "type",
            "of",
            "label",
            "is",
            "not",
            "on",
            "molecules",
            "with",
            "atoms",
            "with",
            "tin",
            "?",
            "tin",
            "refers",
            "to",
            "element",
            "!",
            "=",
            "'sn'",
            ";",
            "label",
            "=",
            "'+'",
            "mean",
            "molecules",
            "are",
            "carcinogenic",
            ";",
            "label",
            "=",
            "'-'",
            "means",
            "molecules",
            "are",
            "non-carcinogenic"
        ],
        "tc_original": [
            "molecule.molecule_id",
            "molecule.label",
            "molecule.*",
            "atom.element",
            "atom.molecule_id",
            "atom.atom_id",
            "atom.*",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "connected.*",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "bond.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[molecule]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[*]",
            "TABLE:[atom]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "label": "COLUMN:[molecule].[label]",
            "type": "COLUMN:[molecule].[label]",
            "molecules": "TABLE:[molecule]",
            "atoms": "TABLE:[atom]",
            "tin": "VALUE:[atom].[element]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "What type of [C10] is not on molecules with atoms with [V3]? [V3] refers to element ! = 'sn'; [C10] = '+' mean molecules are carcinogenic; [C10] = '-' means molecules are non-carcinogenic; [V1] is a value of the column [C10]; [V2] is a value of the column [C10]; [V3] is a value of the column [C2]",
            "to_value": {
                "[V1]": "'+",
                "[V2]": "'-",
                "[V3]": "tin"
            },
            "masked": 7,
            "masked_terms": [
                "'+",
                "'-",
                "tin",
                "label",
                "tin",
                "molecule",
                "atom"
            ],
            "sql": "SELECT DISTINCT [T4].[C10] FROM [T4] WHERE [T4].[C11] NOT IN (SELECT [T1].[C3] FROM [T1] WHERE [T1].[C2] = 'sn')",
            "repaired_sql": "SELECT DISTINCT [T4].[C10] FROM [T4] WHERE [T4].[C11] NOT IN (SELECT DISTINCT [T1].[C3] FROM [T1] WHERE [T1].[C2] = '[V3]')"
        },
        "values": [
            "+'",
            "'-'",
            "tin"
        ],
        "value_links": {
            "'+": "[molecule].[label]",
            "'-": "[molecule].[label]",
            "tin": "[atom].[element]"
        },
        "filtered_value_links": {
            "'+": "[molecule].[label]",
            "'-": "[molecule].[label]",
            "tin": "[atom].[element]"
        },
        "schema_links": {
            "label": "COLUMN:[molecule].[label]",
            "tin": "COLUMN:[atom].[element]",
            "molecule": "TABLE:[molecule]",
            "atom": "TABLE:[atom]"
        },
        "filtered_schema_links": {
            "label": "COLUMN:[molecule].[label]",
            "tin": "COLUMN:[atom].[element]",
            "molecule": "TABLE:[molecule]",
            "atom": "TABLE:[atom]"
        },
        "attack": "What type of carcinogenicity is not on molecules with atoms with element != 'sn'?"
    },
    {
        "question_id": 220,
        "db_id": "toxicology",
        "question": "Please list top three elements of the toxicology of the molecule TR000 in alphabetical order. TR000 is the molecule id;",
        "evidence": "TR000 is the molecule id;",
        "SQL": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3",
        "difficulty": "challenging",
        "query": "SELECT DISTINCT T.element FROM atom AS T WHERE T.molecule_id = 'TR000' ORDER BY T.element LIMIT 3",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "list",
            "top",
            "three",
            "elements",
            "of",
            "the",
            "toxicology",
            "of",
            "the",
            "molecule",
            "TR000",
            "in",
            "alphabetical",
            "order",
            ".",
            "TR000",
            "is",
            "the",
            "molecule",
            "id",
            ";"
        ],
        "tc_original": [
            "atom.molecule_id",
            "atom.element",
            "atom.atom_id",
            "atom.*",
            "molecule.molecule_id",
            "molecule.label",
            "molecule.*",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "connected.*",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "bond.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[atom]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[*]",
            "TABLE:[molecule]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "elements": "COLUMN:[atom].[element]",
            "toxicology": "TABLE:[atom]",
            "molecule": "COLUMN:[atom].[molecule_id]",
            "TR000": "VALUE:[atom].[molecule_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "Please list [T1] three [C2] of the [T4] of the [C11] [V1] in alphabetical order. [V1] is the [C11] id;; [V1] is a value of the column [C11]",
            "to_value": {
                "[V1]": "TR000"
            },
            "masked": 6,
            "masked_terms": [
                "TR000",
                "top",
                "elements",
                "toxicology",
                "molecule",
                "TR000"
            ],
            "sql": "SELECT TOP 3 [T1].[C2] FROM [T1] INNER JOIN [T4] ON [T1].[C3] = [T4].[C11] WHERE [T4].[C11] = '[V1]' ORDER BY [T1].[C2] ASC",
            "repaired_sql": "SELECT [T1].[C2] FROM [T1] WHERE [T1].[C3] = '[V1]' ORDER BY [T1].[C2] ASC LIMIT 3;"
        },
        "values": [
            "TR000"
        ],
        "value_links": {
            "TR000": "[molecule].[molecule_id]"
        },
        "filtered_value_links": {
            "TR000": "[molecule].[molecule_id]"
        },
        "schema_links": {
            "top": "TABLE:[atom]",
            "elements": "COLUMN:[atom].[element]",
            "toxicology": "TABLE:[molecule]",
            "molecule": "COLUMN:[molecule].[molecule_id]",
            "TR000": "COLUMN:[molecule].[molecule_id]"
        },
        "filtered_schema_links": {
            "top": "TABLE:[atom]",
            "elements": "COLUMN:[atom].[element]",
            "toxicology": "TABLE:[molecule]",
            "molecule": "COLUMN:[molecule].[molecule_id]",
            "TR000": "COLUMN:[molecule].[molecule_id]"
        },
        "attack": "Please list the three names of the categories of the id cat001 in alphabetical order."
    },
    {
        "question_id": 224,
        "db_id": "toxicology",
        "question": "What are the bond IDs that have the same atom ID 2 of TR000_2? TR000_2 is the atom id; atom ID 2 refers to atom_id2",
        "evidence": "TR000_2 is the atom id; atom ID 2 refers to atom_id2",
        "SQL": "SELECT T.bond_id FROM connected AS T WHERE T.atom_id2 = 'TR000_2'",
        "difficulty": "simple",
        "query": "SELECT T.bond_id FROM connected AS T WHERE T.atom_id2 = 'TR000_2'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "are",
            "the",
            "bond",
            "IDs",
            "that",
            "have",
            "the",
            "same",
            "atom",
            "ID",
            "2",
            "of",
            "TR000_2",
            "?",
            "TR000_2",
            "is",
            "the",
            "atom",
            "id",
            ";",
            "atom",
            "ID",
            "2",
            "refers",
            "to",
            "atom_id2"
        ],
        "tc_original": [
            "connected.bond_id",
            "connected.atom_id2",
            "connected.atom_id",
            "connected.*",
            "bond.bond_id",
            "bond.bond_type",
            "bond.molecule_id",
            "bond.*",
            "molecule.label",
            "molecule.molecule_id",
            "molecule.*",
            "atom.element",
            "atom.atom_id",
            "atom.molecule_id",
            "atom.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[connected]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[*]",
            "TABLE:[molecule]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[*]",
            "TABLE:[atom]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "bond IDs": "COLUMN:[bond].[bond_id]",
            "atom ID 2": "COLUMN:[connected].[atom_id2]",
            "TR000_2": "VALUE:[connected].[atom_id2]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "What are the [T3] that [C7] [C8] [V1] of [V2]? [V2] is the [C8]; [C8] [V1] refers to [V3]; [V1] is a value of the column [C7]; [V2] is a value of the column [C3]; [V3] is a value of the column [C7]",
            "to_value": {
                "[V1]": "2",
                "[V2]": "TR000_2",
                "[V3]": "atom_id2"
            },
            "masked": 8,
            "masked_terms": [
                "2",
                "TR000_2",
                "atom_id2",
                "bond IDs",
                "have the same",
                "atom ID",
                "TR000_2",
                "2"
            ],
            "sql": "SELECT [T3].[C7] FROM [T3] WHERE [T3].[C8] = '[V2]' AND [T3].[C7] = '[V3]'",
            "repaired_sql": "SELECT * FROM [T3] WHERE [C7] = '[V1]' AND [C8] = '[V2]'"
        },
        "values": [
            "2",
            "TR000_2",
            "atom_id2"
        ],
        "value_links": {
            "2": "[connected].[atom_id2]",
            "TR000_2": "[atom].[molecule_id]",
            "atom_id2": "[connected].[atom_id2]"
        },
        "filtered_value_links": {
            "2": "[connected].[atom_id2]",
            "TR000_2": "[atom].[molecule_id]",
            "atom_id2": "[connected].[atom_id2]"
        },
        "schema_links": {
            "bond IDs": "TABLE:[connected]",
            "have the same": "COLUMN:[connected].[atom_id2]",
            "atom ID": "COLUMN:[connected].[atom_id]",
            "TR000_2": "COLUMN:[connected].[atom_id2]",
            "2": "COLUMN:[connected].[atom_id2]"
        },
        "filtered_schema_links": {
            "bond IDs": "TABLE:[connected]",
            "have the same": "COLUMN:[connected].[atom_id2]",
            "atom ID": "COLUMN:[connected].[atom_id]",
            "TR000_2": "COLUMN:[connected].[atom_id2]",
            "2": "COLUMN:[connected].[atom_id2]"
        },
        "attack": "What are the friendships that connect person John of New York? New York is the home_town; home_town John refers to Boston; John is a value of the column person_id; New York is a value of the column home_town; Boston is a value of the column person_id"
    },
    {
        "question_id": 232,
        "db_id": "toxicology",
        "question": "Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order. label = '-' means molecules are not carcinogenic; single type bond refers to bond_type = '-'; list top three molecules refers to return molecule_id and order by molecule_id;",
        "evidence": "label = '-' means molecules are not carcinogenic; single type bond refers to bond_type = '-'; list top three molecules refers to return molecule_id and order by molecule_id;",
        "SQL": "SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-' ORDER BY T2.molecule_id LIMIT 3",
        "difficulty": "moderate",
        "query": "SELECT DISTINCT T2.molecule_id FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_type = '-' AND T2.label = '-' ORDER BY T2.molecule_id LIMIT 3",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "list",
            "top",
            "three",
            "molecules",
            "that",
            "have",
            "single",
            "bonds",
            "between",
            "two",
            "atoms",
            "and",
            "are",
            "not",
            "carcinogenic",
            "in",
            "alphabetical",
            "order",
            ".",
            "label",
            "=",
            "'-'",
            "means",
            "molecules",
            "are",
            "not",
            "carcinogenic",
            ";",
            "single",
            "type",
            "bond",
            "refers",
            "to",
            "bond_type",
            "=",
            "'-'",
            ";",
            "list",
            "top",
            "three",
            "molecules",
            "refers",
            "to",
            "return",
            "molecule_id",
            "and",
            "order",
            "by",
            "molecule_id",
            ";"
        ],
        "tc_original": [
            "molecule.molecule_id",
            "molecule.label",
            "molecule.*",
            "bond.molecule_id",
            "bond.bond_id",
            "bond.bond_type",
            "bond.*",
            "connected.bond_id",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.*",
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "atom.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[molecule]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[*]",
            "TABLE:[atom]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "molecules": "TABLE:[molecule]",
            "single bonds": "COLUMN:[bond].[bond_type]",
            "single": "COLUMN:[bond].[bond_type]",
            "bond_type": "COLUMN:[bond].[bond_type]",
            "label": "COLUMN:[molecule].[label]",
            "not carcinogenic": "COLUMN:[molecule].[label]",
            "molecule_id": "COLUMN:[molecule].[molecule_id]",
            "alphabetical order": "COLUMN:[molecule].[molecule_id]",
            "top three": "COLUMN:[molecule].[molecule_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "Please list top three [T4] that have single bonds between two atoms and are not carcinogenic in alphabetical order. [C10] = '-' means [T4] are not carcinogenic; single type bond refers to [C5] = '-'; list top three [T4] refers to return [C11] and order by [C11];; [V1] is a value of the column [C10]",
            "to_value": {
                "[V1]": "-"
            },
            "masked": 5,
            "masked_terms": [
                "-",
                "molecules",
                "molecule_id",
                "label",
                "bond_type"
            ],
            "sql": "SELECT [T4].[C11] FROM [T4] JOIN [T2] ON [T4].[C11] = [T2].[C6] WHERE [T2].[C5] = '-' AND [T4].[C10] = '-' ORDER BY [T4].[C11] ASC LIMIT 3",
            "repaired_sql": "SELECT [T4].[C11] FROM [T4] WHERE [T4].[C10] = '-' AND [T4].[C11] IN (SELECT [T1].[C3] FROM [T1] JOIN [T3] ON [T1].[C1] = [T3].[C7] JOIN [T2] ON [T3].[C9] = [T2].[C4] WHERE [T2].[C5] = '-') ORDER BY [T4].[C11] ASC LIMIT 3"
        },
        "values": [
            "-"
        ],
        "value_links": {
            "-": "[molecule].[label]"
        },
        "filtered_value_links": {
            "-": "[molecule].[label]"
        },
        "schema_links": {
            "molecules": "TABLE:[molecule]",
            "molecule_id": "COLUMN:[molecule].[molecule_id]",
            "label": "COLUMN:[molecule].[label]",
            "bond_type": "COLUMN:[bond].[bond_type]"
        },
        "filtered_schema_links": {
            "molecules": "TABLE:[molecule]",
            "molecule_id": "COLUMN:[molecule].[molecule_id]",
            "label": "COLUMN:[molecule].[label]",
            "bond_type": "COLUMN:[bond].[bond_type]"
        },
        "attack": "Please list top three molecules that have single bonds between two atoms and are not carcinogenic in alphabetical order. is_carcinogenic = '-' means molecules are not carcinogenic; single type bond refers to bond_type = '-'; list top three molecules refers to return molecule_id and order by molecule_id."
    },
    {
        "question_id": 245,
        "db_id": "toxicology",
        "question": "What is the average number of bonds the atoms with the element iodine have? atoms with the element iodine refers to element = 'i'; average = DIVIDE(COUND(bond_id), COUNT(atom_id)) where element = 'i'",
        "evidence": "atoms with the element iodine refers to element = 'i'; average = DIVIDE(COUND(bond_id), COUNT(atom_id)) where element = 'i'",
        "SQL": "SELECT CAST(COUNT(T2.bond_id) AS REAL) / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i'",
        "difficulty": "moderate",
        "query": "SELECT CAST(COUNT(T2.bond_id) AS REAL) / COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T1.element = 'i'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "number",
            "of",
            "bonds",
            "the",
            "atoms",
            "with",
            "the",
            "element",
            "iodine",
            "have",
            "?",
            "atoms",
            "with",
            "the",
            "element",
            "iodine",
            "refers",
            "to",
            "element",
            "=",
            "'i'",
            ";",
            "average",
            "=",
            "DIVIDE(COUND(bond_id)",
            ",",
            "COUNT(atom_id))",
            "where",
            "element",
            "=",
            "'i'"
        ],
        "tc_original": [
            "atom.element",
            "atom.atom_id",
            "atom.molecule_id",
            "atom.*",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "bond.*",
            "connected.bond_id",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.*",
            "molecule.label",
            "molecule.molecule_id",
            "molecule.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[atom]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[*]",
            "TABLE:[molecule]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "average": "COLUMN:[bond].[bond_id]",
            "number": "COLUMN:[bond].[bond_id]",
            "bonds": "COLUMN:[bond].[bond_id]",
            "atoms": "TABLE:[atom]",
            "element": "COLUMN:[atom].[element]",
            "iodine": "VALUE:[atom].[element]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "What is the average number of bonds the [T1] with the [C2] [C2] have? [T1] with the [C2] [C2] refers to [C2] = '[V1]'; average = DIVIDE(COUND([C4]), COUNT([C1])) where [C2] = '[V1]'; [V1] is a value of the column [C2]",
            "to_value": {
                "[V1]": "i"
            },
            "masked": 6,
            "masked_terms": [
                "i",
                "atoms",
                "element",
                "iodine",
                "bond_id",
                "atom_id"
            ],
            "sql": "SELECT CAST(COUNT([T3].[C9]) AS FLOAT) / NULLIF(COUNT(DISTINCT [T1].[C1]), 0) AS [average_bonds] FROM [T1] LEFT JOIN [T3] ON [T1].[C1] = [T3].[C7] WHERE [T1].[C2] = '[V1]'",
            "repaired_sql": "SELECT 1.0 * (SELECT COUNT([T3].[C4]) FROM [T3] JOIN [T1] ON [T3].[C7] = [T1].[C1] WHERE [T1].[C2] = '[V1]') / (SELECT COUNT(DISTINCT [T1].[C1]) FROM [T1] WHERE [T1].[C2] = '[V1]')"
        },
        "values": [
            "i"
        ],
        "value_links": {
            "i": "[atom].[element]"
        },
        "filtered_value_links": {
            "i": "[atom].[element]"
        },
        "schema_links": {
            "bonds": "COLUMN:[atom].[*]",
            "atoms": "TABLE:[atom]",
            "element": "COLUMN:[atom].[element]",
            "iodine": "COLUMN:[atom].[element]",
            "bond_id": "COLUMN:[bond].[bond_id]",
            "atom_id": "COLUMN:[atom].[atom_id]"
        },
        "filtered_schema_links": {
            "bonds": "COLUMN:[atom].[*]",
            "atoms": "TABLE:[atom]",
            "element": "COLUMN:[atom].[element]",
            "iodine": "COLUMN:[atom].[element]",
            "bond_id": "COLUMN:[bond].[bond_id]",
            "atom_id": "COLUMN:[atom].[atom_id]"
        },
        "attack": "What is the average number of bonds the molecule with the molecular formula C6H6 have? Molecule with the molecular formula C6H6 refers to molecular formula = 'C6H6'; average = DIVIDE(COUNT(bond_id), COUNT(molecule_id)) where molecular formula = 'C6H6'; C6H6 is a value of the column molecular formula"
    },
    {
        "question_id": 260,
        "db_id": "toxicology",
        "question": "Calculate the total atoms with triple-bond molecules containing the element phosphorus or bromine. triple bond refers to bond_type = '#'; phosphorus refers to element = 'p'; bromine refers to element = 'br'",
        "evidence": "triple bond refers to bond_type = '#'; phosphorus refers to element = 'p'; bromine refers to element = 'br'",
        "SQL": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T1.element IN ('p', 'br')",
        "difficulty": "moderate",
        "query": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T1.element IN ('p', 'br')",
        "evidence_added": true,
        "question_toks": [
            "Calculate",
            "the",
            "total",
            "atoms",
            "with",
            "triple-bond",
            "molecules",
            "containing",
            "the",
            "element",
            "phosphorus",
            "or",
            "bromine",
            ".",
            "triple",
            "bond",
            "refers",
            "to",
            "bond_type",
            "=",
            "'#'",
            ";",
            "phosphorus",
            "refers",
            "to",
            "element",
            "=",
            "'p'",
            ";",
            "bromine",
            "refers",
            "to",
            "element",
            "=",
            "'br'"
        ],
        "tc_original": [
            "atom.atom_id",
            "atom.molecule_id",
            "atom.element",
            "atom.*",
            "bond.molecule_id",
            "bond.bond_id",
            "bond.bond_type",
            "bond.*",
            "connected.atom_id",
            "connected.bond_id",
            "connected.atom_id2",
            "connected.*",
            "molecule.molecule_id",
            "molecule.label",
            "molecule.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[atom]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[*]",
            "TABLE:[molecule]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "total atoms": "COLUMN:[atom].[atom_id]",
            "triple-bond": "COLUMN:[bond].[bond_type]",
            "triple bond": "COLUMN:[bond].[bond_type]",
            "#": "VALUE:[bond].[bond_type]",
            "molecules": "TABLE:[molecule]",
            "phosphorus": "VALUE:[atom].[element]",
            "bromine": "VALUE:[atom].[element]",
            "element": "COLUMN:[atom].[element]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "Calculate the total [T1] with triple-bond molecules containing the [C2] [V1] or [V2]. [C5] refers to bond_type = '#'; [V1] refers to [C2] = 'p'; [V2] refers to [C2] = 'br'; [V1] is a value of the column [C2]; [V2] is a value of the column [C2]; [V3] is a value of the column [C5]",
            "to_value": {
                "[V1]": "phosphorus",
                "[V2]": "bromine",
                "[V3]": "#"
            },
            "masked": 9,
            "masked_terms": [
                "phosphorus",
                "bromine",
                "#",
                "atoms",
                "element",
                "molecule",
                "phosphorus",
                "bromine",
                "triple bond"
            ],
            "sql": "SELECT COUNT(*) FROM [T1] WHERE [T1].[C2] IN ('p', 'br') AND [T1].[C1] IN (     SELECT [T3].[C7] FROM [T3]     JOIN [T2] ON [T3].[C9] = [T2].[C4]     WHERE [T2].[C5] = '#' )",
            "repaired_sql": "SELECT COUNT(DISTINCT [T1].[C1]) FROM [T1] JOIN [T3] ON [T1].[C1] = [T3].[C7] JOIN [T2] ON [T3].[C9] = [T2].[C4] WHERE [T2].[C5] = '#' AND ([T1].[C2] = 'p' OR [T1].[C2] = 'br');"
        },
        "values": [
            "phosphorus",
            "bromine",
            "#"
        ],
        "value_links": {
            "phosphorus": "[atom].[element]",
            "bromine": "[atom].[element]",
            "#": "[bond].[bond_type]"
        },
        "filtered_value_links": {
            "phosphorus": "[atom].[element]",
            "bromine": "[atom].[element]",
            "#": "[bond].[bond_type]"
        },
        "schema_links": {
            "atoms": "TABLE:[atom]",
            "element": "COLUMN:[atom].[element]",
            "molecule": "TABLE:[molecule]",
            "phosphorus": "COLUMN:[atom].[element]",
            "bromine": "COLUMN:[atom].[element]",
            "triple bond": "COLUMN:[bond].[bond_type]"
        },
        "filtered_schema_links": {
            "atoms": "TABLE:[atom]",
            "element": "COLUMN:[atom].[element]",
            "molecule": "TABLE:[molecule]",
            "phosphorus": "COLUMN:[atom].[element]",
            "bromine": "COLUMN:[atom].[element]",
            "triple bond": "COLUMN:[bond].[bond_type]"
        },
        "attack": "Calculate the total molecules with triple-bond molecules containing the element p or br. bond_type refers to bond_type = '#'; p refers to element = 'p'; br refers to element = 'br'; p is a value of the column element; br is a value of the column element; # is a value of the column bond_type."
    },
    {
        "question_id": 264,
        "db_id": "toxicology",
        "question": "What are the labels for TR000, TR001 and TR002? TR000, TR001 and TR002 are molecule id; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "evidence": "TR000, TR001 and TR002 are molecule id; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "SQL": "SELECT molecule_id, T.label FROM molecule AS T WHERE T.molecule_id IN ('TR000', 'TR001', 'TR002')",
        "difficulty": "simple",
        "query": "SELECT molecule_id, T.label FROM molecule AS T WHERE T.molecule_id IN ('TR000', 'TR001', 'TR002')",
        "evidence_added": true,
        "question_toks": [
            "What",
            "are",
            "the",
            "labels",
            "for",
            "TR000",
            ",",
            "TR001",
            "and",
            "TR002",
            "?",
            "TR000",
            ",",
            "TR001",
            "and",
            "TR002",
            "are",
            "molecule",
            "id",
            ";",
            "label",
            "=",
            "'+'",
            "mean",
            "molecules",
            "are",
            "carcinogenic",
            ";",
            "label",
            "=",
            "'-'",
            "means",
            "molecules",
            "are",
            "non-carcinogenic"
        ],
        "tc_original": [
            "molecule.label",
            "molecule.molecule_id",
            "molecule.*",
            "atom.element",
            "atom.atom_id",
            "atom.molecule_id",
            "atom.*",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "connected.*",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "bond.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[molecule]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[*]",
            "TABLE:[atom]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "labels": "COLUMN:[molecule].[label]",
            "TR000": "VALUE:[molecule].[molecule_id]",
            "TR001": "VALUE:[molecule].[molecule_id]",
            "TR002": "VALUE:[molecule].[molecule_id]",
            "molecule id": "COLUMN:[molecule].[molecule_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "What are the [C10] for [V1], [V2] and [V3]? [V1], [V2] and [V3] are molecule id; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; [V1] is a value of the column [C11]; [V2] is a value of the column [C11]; [V3] is a value of the column [C11]",
            "to_value": {
                "[V1]": "TR000",
                "[V2]": "TR001",
                "[V3]": "TR002"
            },
            "masked": 4,
            "masked_terms": [
                "TR000",
                "TR001",
                "TR002",
                "labels"
            ],
            "sql": "SELECT [T4].[C10] FROM [T4] WHERE [T4].[C11] IN ('[V1]', '[V2]', '[V3]')",
            "repaired_sql": "SELECT [C10] FROM [T4] WHERE [C11] IN ('[V1]', '[V2]', '[V3]')"
        },
        "values": [
            "TR000",
            "TR001",
            "TR002"
        ],
        "value_links": {
            "TR000": "[molecule].[molecule_id]",
            "TR001": "[molecule].[molecule_id]",
            "TR002": "[molecule].[molecule_id]"
        },
        "filtered_value_links": {
            "TR000": "[molecule].[molecule_id]",
            "TR001": "[molecule].[molecule_id]",
            "TR002": "[molecule].[molecule_id]"
        },
        "schema_links": {
            "labels": "COLUMN:[molecule].[label]"
        },
        "filtered_schema_links": {
            "labels": "COLUMN:[molecule].[label]"
        },
        "attack": "What are the labels for MOL001, MOL002 and MOL003? MOL001, MOL002 and MOL003 are molecule id; label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic; MOL001 is a value of the column molecule id; MOL002 is a value of the column molecule id; MOL003 is a value of the column molecule id"
    },
    {
        "question_id": 266,
        "db_id": "toxicology",
        "question": "Calculate the total carcinogenic molecules for molecule id from TR000 to TR030. label = '+' mean molecules are carcinogenic",
        "evidence": "label = '+' mean molecules are carcinogenic",
        "SQL": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.molecule_id BETWEEN 'TR000' AND 'TR030' AND T.label = '+'",
        "difficulty": "simple",
        "query": "SELECT COUNT(T.molecule_id) FROM molecule AS T WHERE T.molecule_id BETWEEN 'TR000' AND 'TR030' AND T.label = '+'",
        "evidence_added": true,
        "question_toks": [
            "Calculate",
            "the",
            "total",
            "carcinogenic",
            "molecules",
            "for",
            "molecule",
            "id",
            "from",
            "TR000",
            "to",
            "TR030",
            ".",
            "label",
            "=",
            "'+'",
            "mean",
            "molecules",
            "are",
            "carcinogenic"
        ],
        "tc_original": [
            "molecule.molecule_id",
            "molecule.label",
            "molecule.*",
            "atom.element",
            "atom.atom_id",
            "atom.molecule_id",
            "atom.*",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "connected.*",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "bond.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[molecule]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[*]",
            "TABLE:[atom]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "total": "COLUMN:[molecule].[molecule_id]",
            "carcinogenic": "COLUMN:[molecule].[label]",
            "molecules": "TABLE:[molecule]",
            "molecule id": "COLUMN:[molecule].[molecule_id]",
            "TR000": "VALUE:[molecule].[molecule_id]",
            "TR030": "VALUE:[molecule].[molecule_id]",
            "+": "VALUE:[molecule].[label]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "Calculate the total [C10] molecules for [C11] from [V1] to [V2]. label = '+' mean molecules are [C10]; [V1] is a value of the column [C11]; [V2] is a value of the column [C11]",
            "to_value": {
                "[V1]": "TR000",
                "[V2]": "TR030"
            },
            "masked": 7,
            "masked_terms": [
                "TR000",
                "TR030",
                "molecule id",
                "molecule",
                "carcinogenic",
                "TR000",
                "TR030"
            ],
            "sql": "SELECT SUM(CAST([T4].[C10] AS FLOAT)) FROM [T4] WHERE [T4].[C11] BETWEEN '[V1]' AND '[V2]'",
            "repaired_sql": "SELECT SUM(CAST([C10] AS INTEGER)) FROM [T4] WHERE [C11] >= '[V1]' AND [C11] <= '[V2]'"
        },
        "values": [
            "TR000",
            "TR030"
        ],
        "value_links": {
            "TR000": "[molecule].[molecule_id]",
            "TR030": "[molecule].[molecule_id]"
        },
        "filtered_value_links": {
            "TR000": "[molecule].[molecule_id]",
            "TR030": "[molecule].[molecule_id]"
        },
        "schema_links": {
            "molecule id": "COLUMN:[molecule].[molecule_id]",
            "molecule": "TABLE:[molecule]",
            "carcinogenic": "COLUMN:[molecule].[label]",
            "TR000": "COLUMN:[molecule].[molecule_id]",
            "TR030": "COLUMN:[molecule].[molecule_id]"
        },
        "filtered_schema_links": {
            "molecule id": "COLUMN:[molecule].[molecule_id]",
            "molecule": "TABLE:[molecule]",
            "carcinogenic": "COLUMN:[molecule].[label]",
            "TR000": "COLUMN:[molecule].[molecule_id]",
            "TR030": "COLUMN:[molecule].[molecule_id]"
        },
        "attack": "Calculate the total charge molecules for label from '+' to '-'. label = '+' mean molecules are charge; '+' is a value of the column label; '-' is a value of the column label"
    },
    {
        "question_id": 272,
        "db_id": "toxicology",
        "question": "List down two molecule id of triple bond non carcinogenic molecules with element carbon. carbon refers to element = 'c'; triple bond refers to bond_type = '#'; label = '-' means molecules are non-carcinogenic",
        "evidence": "carbon refers to element = 'c'; triple bond refers to bond_type = '#'; label = '-' means molecules are non-carcinogenic",
        "SQL": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T1.element = 'c' AND T2.label = '-'",
        "difficulty": "moderate",
        "query": "SELECT DISTINCT T2.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id INNER JOIN bond AS T3 ON T2.molecule_id = T3.molecule_id WHERE T3.bond_type = '#' AND T1.element = 'c' AND T2.label = '-'",
        "evidence_added": true,
        "question_toks": [
            "List",
            "down",
            "two",
            "molecule",
            "id",
            "of",
            "triple",
            "bond",
            "non",
            "carcinogenic",
            "molecules",
            "with",
            "element",
            "carbon",
            ".",
            "carbon",
            "refers",
            "to",
            "element",
            "=",
            "'c'",
            ";",
            "triple",
            "bond",
            "refers",
            "to",
            "bond_type",
            "=",
            "'#'",
            ";",
            "label",
            "=",
            "'-'",
            "means",
            "molecules",
            "are",
            "non-carcinogenic"
        ],
        "tc_original": [
            "bond.molecule_id",
            "bond.bond_type",
            "bond.bond_id",
            "bond.*",
            "atom.element",
            "atom.molecule_id",
            "atom.atom_id",
            "atom.*",
            "molecule.molecule_id",
            "molecule.label",
            "molecule.*",
            "connected.bond_id",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[bond]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[*]",
            "TABLE:[atom]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[*]",
            "TABLE:[molecule]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "molecule id": "COLUMN:[molecule].[molecule_id]",
            "triple bond": "COLUMN:[bond].[bond_type]",
            "non carcinogenic": "COLUMN:[molecule].[label]",
            "element carbon": "COLUMN:[atom].[element]",
            "carbon": "VALUE:[atom].[element]",
            "bond": "TABLE:[bond]",
            "element": "COLUMN:[atom].[element]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "List down two [V1] of [C5] [V4] molecules with element [C2]. [C2] refers to element = '[V2]'; [C5] refers to bond_type = '#'; label = '-' means molecules are non-carcinogenic; [V1] is a value of the column [C6]; [V2] is a value of the column [C2]; [V3] is a value of the column [C5]; [V4] is a value of the column [C10]",
            "to_value": {
                "[V1]": "molecule id",
                "[V2]": "c",
                "[V3]": "#",
                "[V4]": "non carcinogenic"
            },
            "masked": 7,
            "masked_terms": [
                "molecule id",
                "c",
                "#",
                "non carcinogenic",
                "carbon",
                "triple bond",
                "non carcinogenic"
            ],
            "sql": "SELECT [T2].[C6] FROM [T2] JOIN [T4] ON [T2].[C6] = [T4].[C11] WHERE [T2].[C5] = '#' AND [T4].[C10] = '-' AND [T2].[C4] IN (SELECT [T3].[C9] FROM [T3] JOIN [T1] ON [T3].[C7] = [T1].[C1] WHERE [T1].[C2] = '[V2]') LIMIT 2",
            "repaired_sql": "SELECT DISTINCT [T2].[C6] FROM [T2] JOIN [T3] ON [T2].[C4] = [T3].[C9] JOIN [T1] ON ([T1].[C1] = [T3].[C7] OR [T1].[C1] = [T3].[C8]) JOIN [T4] ON [T2].[C6] = [T4].[C11] WHERE [T1].[C2] = '[V2]' AND [T2].[C5] = '#' AND [T4].[C10] = '[V4]' AND [T4].[label] = '-' LIMIT 2"
        },
        "values": [
            "molecule id",
            "c",
            "#",
            "non carcinogenic"
        ],
        "value_links": {
            "molecule id": "[bond].[molecule_id]",
            "c": "[atom].[element]",
            "#": "[bond].[bond_type]",
            "non carcinogenic": "[molecule].[label]"
        },
        "filtered_value_links": {
            "molecule id": "[bond].[molecule_id]",
            "c": "[atom].[element]",
            "#": "[bond].[bond_type]",
            "non carcinogenic": "[molecule].[label]"
        },
        "schema_links": {
            "carbon": "COLUMN:[atom].[element]",
            "triple bond": "COLUMN:[bond].[bond_type]",
            "non carcinogenic": "COLUMN:[molecule].[label]"
        },
        "filtered_schema_links": {
            "carbon": "COLUMN:[atom].[element]",
            "triple bond": "COLUMN:[bond].[bond_type]",
            "non carcinogenic": "COLUMN:[molecule].[label]"
        },
        "attack": "List down two names of bond_type # molecules with element element. element refers to element = 'value'; bond_type refers to bond_type = '#'; label = '-' means molecules are non-carcinogenic; names is a value of the column label; value is a value of the column element; # is a value of the column bond_type; molecules is a value of the column T4.label"
    },
    {
        "question_id": 276,
        "db_id": "toxicology",
        "question": "Write down the atom IDs of the first and second atoms of triple bond type molecules. first atom refers to atom_id; second atom refers to atom_id2; triple bond refers to bond_type = '#';",
        "evidence": "first atom refers to atom_id; second atom refers to atom_id2; triple bond refers to bond_type = '#';",
        "SQL": "SELECT T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '#'",
        "difficulty": "simple",
        "query": "SELECT T2.atom_id, T2.atom_id2 FROM bond AS T1 INNER JOIN connected AS T2 ON T1.bond_id = T2.bond_id WHERE T1.bond_type = '#'",
        "evidence_added": true,
        "question_toks": [
            "Write",
            "down",
            "the",
            "atom",
            "IDs",
            "of",
            "the",
            "first",
            "and",
            "second",
            "atoms",
            "of",
            "triple",
            "bond",
            "type",
            "molecules",
            ".",
            "first",
            "atom",
            "refers",
            "to",
            "atom_id",
            ";",
            "second",
            "atom",
            "refers",
            "to",
            "atom_id2",
            ";",
            "triple",
            "bond",
            "refers",
            "to",
            "bond_type",
            "=",
            "'#'",
            ";"
        ],
        "tc_original": [
            "bond.bond_type",
            "bond.molecule_id",
            "bond.bond_id",
            "bond.*",
            "connected.atom_id2",
            "connected.bond_id",
            "connected.atom_id",
            "connected.*",
            "atom.molecule_id",
            "atom.atom_id",
            "atom.element",
            "atom.*",
            "molecule.molecule_id",
            "molecule.label",
            "molecule.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[*]",
            "TABLE:[atom]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[*]",
            "TABLE:[molecule]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "atom": "TABLE:[atom]",
            "atom IDs": "COLUMN:[connected].[atom_id]",
            "first atom": "COLUMN:[connected].[atom_id]",
            "second atom": "COLUMN:[connected].[atom_id2]",
            "triple bond": "VALUE:[bond].[bond_type]",
            "bond type": "COLUMN:[bond].[bond_type]",
            "molecules": "TABLE:[molecule]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "Write down the atom IDs of the first and second atoms of [C5] type molecules. [C8] refers to [V1]; [C7] refers to [V2]; [C5] refers to bond_type = '#';; [V1] is a value of the column [C1]; [V2] is a value of the column [C1]; [V3] is a value of the column [C5]",
            "to_value": {
                "[V1]": "atom_id",
                "[V2]": "atom_id2",
                "[V3]": "#"
            },
            "masked": 6,
            "masked_terms": [
                "atom_id",
                "atom_id2",
                "#",
                "first atom",
                "second atom",
                "triple bond"
            ],
            "sql": "SELECT [T3].[C8], [T3].[C7] FROM [T3] JOIN [T2] ON [T3].[C9] = [T2].[C4] WHERE [T2].[C5] = '#'",
            "repaired_sql": "SELECT [T3].[C7], [T3].[C8] FROM [T3] JOIN [T2] ON [T3].[C9] = [T2].[C4] WHERE [T2].[C5] = '#'"
        },
        "values": [
            "atom_id",
            "atom_id2",
            "#"
        ],
        "value_links": {
            "atom_id": "[atom].[atom_id]",
            "atom_id2": "[atom].[atom_id]",
            "#": "[bond].[bond_type]"
        },
        "filtered_value_links": {
            "atom_id": "[atom].[atom_id]",
            "atom_id2": "[atom].[atom_id]",
            "#": "[bond].[bond_type]"
        },
        "schema_links": {
            "first atom": "COLUMN:[connected].[atom_id]",
            "second atom": "COLUMN:[connected].[atom_id2]",
            "triple bond": "COLUMN:[bond].[bond_type]"
        },
        "filtered_schema_links": {
            "first atom": "COLUMN:[connected].[atom_id]",
            "second atom": "COLUMN:[connected].[atom_id2]",
            "triple bond": "COLUMN:[bond].[bond_type]"
        },
        "attack": "Write down the atom IDs of the first and second atoms of bond_type = '#' type molecules. atom_id refers to atom1_id; atom2_id refers to atom2_id; bond_type refers to bond_type = '#'; atom1_id is a value of the column atom_id; atom2_id is a value of the column atom_id; '#' is a value of the column bond_type"
    },
    {
        "question_id": 277,
        "db_id": "toxicology",
        "question": "What are the toxicology elements associated with bond ID TR000_1_2? TR000_1_2 is the bond id;",
        "evidence": "TR000_1_2 is the bond id;",
        "SQL": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR000_1_2'",
        "difficulty": "challenging",
        "query": "SELECT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR000_1_2'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "are",
            "the",
            "toxicology",
            "elements",
            "associated",
            "with",
            "bond",
            "ID",
            "TR000_1_2",
            "?",
            "TR000_1_2",
            "is",
            "the",
            "bond",
            "id",
            ";"
        ],
        "tc_original": [
            "atom.element",
            "atom.atom_id",
            "atom.molecule_id",
            "atom.*",
            "connected.bond_id",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.*",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "bond.*",
            "molecule.label",
            "molecule.molecule_id",
            "molecule.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[atom]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]",
            "TABLE:[molecule]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "toxicology elements": "COLUMN:[atom].[element]",
            "elements": "COLUMN:[atom].[element]",
            "bond ID": "COLUMN:[connected].[bond_id]",
            "TR000_1_2": "VALUE:[connected].[bond_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "What are the toxicology elements associated with [C4] [V1]? [V1] is the [C4];; [V1] is a value of the column [C4]",
            "to_value": {
                "[V1]": "TR000_1_2"
            },
            "masked": 6,
            "masked_terms": [
                "TR000_1_2",
                "bond id",
                "bond",
                "id",
                "element",
                "TR000"
            ],
            "sql": "SELECT [T4].[C10] FROM [T2] JOIN [T4] ON [T2].[C6] = [T4].[C11] WHERE [T2].[C4] = '[V1]'",
            "repaired_sql": "SELECT [T4].[C10] FROM [T1] JOIN [T3] ON ([T1].[C1] = [T3].[C7] OR [T1].[C1] = [T3].[C8]) JOIN [T2] ON [T3].[C9] = [T2].[C4] JOIN [T4] ON [T1].[C3] = [T4].[C11] WHERE [T2].[C4] = '[V1]';"
        },
        "values": [
            "TR000_1_2"
        ],
        "value_links": {
            "TR000_1_2": "[bond].[bond_id]"
        },
        "filtered_value_links": {
            "TR000_1_2": "[bond].[bond_id]"
        },
        "schema_links": {
            "bond id": "COLUMN:[bond].[bond_id]",
            "bond": "TABLE:[bond]",
            "id": "COLUMN:[atom].[atom_id]",
            "element": "COLUMN:[atom].[element]",
            "TR000": "COLUMN:[bond].[bond_id]"
        },
        "filtered_schema_links": {
            "bond id": "COLUMN:[bond].[bond_id]",
            "bond": "TABLE:[bond]",
            "id": "COLUMN:[atom].[atom_id]",
            "element": "COLUMN:[atom].[element]",
            "TR000": "COLUMN:[bond].[bond_id]"
        },
        "attack": "What are the toxicology elements associated with element name Sodium? Sodium is the element name."
    },
    {
        "question_id": 279,
        "db_id": "toxicology",
        "question": "What is the label for bond ID TR001_10_11? label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "evidence": "label = '+' mean molecules are carcinogenic; label = '-' means molecules are non-carcinogenic",
        "SQL": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11'",
        "difficulty": "simple",
        "query": "SELECT T2.label FROM bond AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.bond_id = 'TR001_10_11'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "label",
            "for",
            "bond",
            "ID",
            "TR001_10_11",
            "?",
            "label",
            "=",
            "'+'",
            "mean",
            "molecules",
            "are",
            "carcinogenic",
            ";",
            "label",
            "=",
            "'-'",
            "means",
            "molecules",
            "are",
            "non-carcinogenic"
        ],
        "tc_original": [
            "molecule.label",
            "molecule.molecule_id",
            "molecule.*",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "bond.*",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "connected.*",
            "atom.element",
            "atom.atom_id",
            "atom.molecule_id",
            "atom.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[molecule]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[*]",
            "TABLE:[atom]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "label": "COLUMN:[molecule].[label]",
            "bond id": "COLUMN:[bond].[bond_id]",
            "TR001_10_11": "VALUE:[bond].[bond_id]",
            "molecules": "TABLE:[molecule]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "What is the [C10] for [C4] [V1]? [C10] = '+' mean molecules are carcinogenic; [C10] = '-' means molecules are non[V3]carcinogenic; [V1] is a value of the column [C4]; [V2] is a value of the column [C10]; [V3] is a value of the column [C10]",
            "to_value": {
                "[V1]": "TR001_10_11",
                "[V2]": "+",
                "[V3]": "-"
            },
            "masked": 5,
            "masked_terms": [
                "TR001_10_11",
                "+",
                "-",
                "bond ID",
                "label"
            ],
            "sql": "SELECT [T4].[C10] FROM [T2] JOIN [T4] ON [T2].[C6] = [T4].[C11] WHERE [T2].[C4] = '[V1]'",
            "repaired_sql": "SELECT [T4].[C10] FROM [T2] JOIN [T4] ON [T2].[C6] = [T4].[C11] WHERE [T2].[C4] = '[V1]'"
        },
        "values": [
            "TR001_10_11",
            "+",
            "-"
        ],
        "value_links": {
            "TR001_10_11": "[bond].[bond_id]",
            "+": "[molecule].[label]",
            "-": "[molecule].[label]"
        },
        "filtered_value_links": {
            "TR001_10_11": "[bond].[bond_id]",
            "+": "[molecule].[label]",
            "-": "[molecule].[label]"
        },
        "schema_links": {
            "bond ID": "COLUMN:[bond].[bond_id]",
            "label": "COLUMN:[molecule].[label]"
        },
        "filtered_schema_links": {
            "bond ID": "COLUMN:[bond].[bond_id]",
            "label": "COLUMN:[molecule].[label]"
        },
        "attack": "What is the carcinogenicity for molecule benzene? Carcinogenicity = '+' mean molecules are carcinogenic; carcinogenicity = '-' means molecules are non-carcinogenic; benzene is a value of the column molecule; '-' is a value of the column carcinogenicity"
    },
    {
        "question_id": 293,
        "db_id": "toxicology",
        "question": "How many atoms belong to the molecule labeled with carcinogenic compounds? label = '+' mean molecules are carcinogenic;",
        "evidence": "label = '+' mean molecules are carcinogenic;",
        "SQL": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'",
        "difficulty": "simple",
        "query": "SELECT COUNT(T1.atom_id) FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T2.label = '+'",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "atoms",
            "belong",
            "to",
            "the",
            "molecule",
            "labeled",
            "with",
            "carcinogenic",
            "compounds",
            "?",
            "label",
            "=",
            "'+'",
            "mean",
            "molecules",
            "are",
            "carcinogenic",
            ";"
        ],
        "tc_original": [
            "atom.molecule_id",
            "atom.atom_id",
            "atom.element",
            "atom.*",
            "molecule.molecule_id",
            "molecule.label",
            "molecule.*",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "connected.*",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "bond.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[atom]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[*]",
            "TABLE:[molecule]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "atoms": "TABLE:[atom]",
            "molecule": "TABLE:[molecule]",
            "label": "COLUMN:[molecule].[label]",
            "carcinogenic": "COLUMN:[molecule].[label]",
            "+": "VALUE:[molecule].[label]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "How many [T1] belong to the [T4] labeled with [V1] compounds? [C10] = '+' mean molecules are [V1];; [V1] is a value of the column [C10]",
            "to_value": {
                "[V1]": "carcinogenic"
            },
            "masked": 5,
            "masked_terms": [
                "carcinogenic",
                "atoms",
                "molecule",
                "label",
                "carcinogenic"
            ],
            "sql": "SELECT COUNT(*) FROM [T1] WHERE [T1].[C3] IN (SELECT [T4].[C11] FROM [T4] WHERE [T4].[C10] = '[V1]')",
            "repaired_sql": "SELECT COUNT(*) FROM [T1] JOIN [T4] ON [T1].[C3] = [T4].[C11] WHERE [T4].[C10] = '[V1]'"
        },
        "values": [
            "carcinogenic"
        ],
        "value_links": {
            "carcinogenic": "[molecule].[label]"
        },
        "filtered_value_links": {
            "carcinogenic": "[molecule].[label]"
        },
        "schema_links": {
            "atoms": "TABLE:[atom]",
            "molecule": "TABLE:[molecule]",
            "label": "COLUMN:[molecule].[label]",
            "carcinogenic": "COLUMN:[molecule].[label]"
        },
        "filtered_schema_links": {
            "atoms": "TABLE:[atom]",
            "molecule": "TABLE:[molecule]",
            "label": "COLUMN:[molecule].[label]",
            "carcinogenic": "COLUMN:[molecule].[label]"
        },
        "attack": "How many molecules belong to the classes labeled with positive compounds? Cation = '+' mean molecules are cation; cation is a value of the column cation"
    },
    {
        "question_id": 301,
        "db_id": "toxicology",
        "question": "What is the bond type of TR007_4_19? double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';",
        "evidence": "double bond refers to bond_type = ' = '; single bond refers to bond_type = '-'; triple bond refers to bond_type = '#';",
        "SQL": "SELECT T.bond_type FROM bond AS T WHERE T.bond_id = 'TR007_4_19'",
        "difficulty": "simple",
        "query": "SELECT T.bond_type FROM bond AS T WHERE T.bond_id = 'TR007_4_19'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "bond",
            "type",
            "of",
            "TR007_4_19",
            "?",
            "double",
            "bond",
            "refers",
            "to",
            "bond_type",
            "=",
            "'",
            "=",
            "'",
            ";",
            "single",
            "bond",
            "refers",
            "to",
            "bond_type",
            "=",
            "'-'",
            ";",
            "triple",
            "bond",
            "refers",
            "to",
            "bond_type",
            "=",
            "'#'",
            ";"
        ],
        "tc_original": [
            "bond.bond_type",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.*",
            "molecule.label",
            "molecule.molecule_id",
            "molecule.*",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "connected.*",
            "atom.element",
            "atom.atom_id",
            "atom.molecule_id",
            "atom.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[*]",
            "TABLE:[molecule]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[*]",
            "TABLE:[atom]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "bond type": "COLUMN:[bond].[bond_type]",
            "TR007_4_19": "VALUE:[bond].[bond_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "What is the [C5] of [V1]? [V2] bond refers to bond_type = ' = '; [V3] bond refers to bond_type = '-'; [V4] bond refers to bond_type = '#';; [V1] is a value of the column [C4]; [V2] is a value of the column [C5]; [V3] is a value of the column [C5]; [V4] is a value of the column [C5]",
            "to_value": {
                "[V1]": "TR007_4_19",
                "[V2]": "double",
                "[V3]": "single",
                "[V4]": "triple"
            },
            "masked": 6,
            "masked_terms": [
                "TR007_4_19",
                "double",
                "single",
                "triple",
                "bond type",
                "TR007_4_19"
            ],
            "sql": "SELECT [T2].[C5] FROM [T2] WHERE [T2].[C4] = '[V1]'",
            "repaired_sql": "SELECT [C5] FROM [T2] WHERE [C4] = '[V1]'"
        },
        "values": [
            "TR007_4_19",
            "double",
            "single",
            "triple"
        ],
        "value_links": {
            "TR007_4_19": "[bond].[bond_id]",
            "double": "[bond].[bond_type]",
            "single": "[bond].[bond_type]",
            "triple": "[bond].[bond_type]"
        },
        "filtered_value_links": {
            "TR007_4_19": "[bond].[bond_id]",
            "double": "[bond].[bond_type]",
            "single": "[bond].[bond_type]",
            "triple": "[bond].[bond_type]"
        },
        "schema_links": {
            "bond type": "COLUMN:[bond].[bond_type]",
            "TR007_4_19": "COLUMN:[bond].[bond_id]"
        },
        "filtered_schema_links": {
            "bond type": "COLUMN:[bond].[bond_type]",
            "TR007_4_19": "COLUMN:[bond].[bond_id]"
        },
        "attack": "What is the bond_type of atom_id? '=' bond refers to bond_type = ' = '; '-' bond refers to bond_type = '-'; '#' bond refers to bond_type = '#'; atom_id is a value of the column atom_symbol; '=' is a value of the column bond_type; '-' is a value of the column bond_type; '#' is a value of the column bond_type"
    },
    {
        "question_id": 302,
        "db_id": "toxicology",
        "question": "Name the elements that comprise the atoms of bond TR001_2_4. element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "evidence": "element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "SQL": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4'",
        "difficulty": "challenging",
        "query": "SELECT DISTINCT T1.element FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_2_4'",
        "evidence_added": true,
        "question_toks": [
            "Name",
            "the",
            "elements",
            "that",
            "comprise",
            "the",
            "atoms",
            "of",
            "bond",
            "TR001_2_4",
            ".",
            "element",
            "=",
            "'cl'",
            "means",
            "Chlorine",
            ";",
            "element",
            "=",
            "'c'",
            "means",
            "Carbon",
            ";",
            "element",
            "=",
            "'h'",
            "means",
            "Hydrogen",
            ";",
            "element",
            "=",
            "'o'",
            "means",
            "Oxygen",
            ",",
            "element",
            "=",
            "'s'",
            "means",
            "Sulfur",
            ";",
            "element",
            "=",
            "'n'",
            "means",
            "Nitrogen",
            ",",
            "element",
            "=",
            "'p'",
            "means",
            "Phosphorus",
            ",",
            "element",
            "=",
            "'na'",
            "means",
            "Sodium",
            ",",
            "element",
            "=",
            "'br'",
            "means",
            "Bromine",
            ",",
            "element",
            "=",
            "'f'",
            "means",
            "Fluorine",
            ";",
            "element",
            "=",
            "'i'",
            "means",
            "Iodine",
            ";",
            "element",
            "=",
            "'sn'",
            "means",
            "Tin",
            ";",
            "element",
            "=",
            "'pb'",
            "means",
            "Lead",
            ";",
            "element",
            "=",
            "'te'",
            "means",
            "Tellurium",
            ";",
            "element",
            "=",
            "'ca'",
            "means",
            "Calcium"
        ],
        "tc_original": [
            "atom.atom_id",
            "atom.element",
            "atom.molecule_id",
            "atom.*",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "bond.*",
            "connected.atom_id",
            "connected.bond_id",
            "connected.atom_id2",
            "connected.*",
            "molecule.label",
            "molecule.molecule_id",
            "molecule.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[atom]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[*]",
            "TABLE:[molecule]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "elements": "COLUMN:[atom].[element]",
            "atoms": "TABLE:[atom]",
            "bond": "TABLE:[bond]",
            "TR001_2_4": "VALUE:[connected].[bond_id]",
            "element": "COLUMN:[atom].[element]",
            "chlorine": "VALUE:[atom].[element]",
            "carbon": "VALUE:[atom].[element]",
            "hydrogen": "VALUE:[atom].[element]",
            "oxygen": "VALUE:[atom].[element]",
            "sulfur": "VALUE:[atom].[element]",
            "nitrogen": "VALUE:[atom].[element]",
            "phosphorus": "VALUE:[atom].[element]",
            "sodium": "VALUE:[atom].[element]",
            "bromine": "VALUE:[atom].[element]",
            "fluorine": "VALUE:[atom].[element]",
            "iodine": "VALUE:[atom].[element]",
            "tin": "VALUE:[atom].[element]",
            "lead": "VALUE:[atom].[element]",
            "tellurium": "VALUE:[atom].[element]",
            "calcium": "VALUE:[atom].[element]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "Name the elements that comprise the [T1] of [T2] [C4]. [C2] = '[V1]' means Chlorine; [C2] = '[V2]' means Carbon; [C2] = '[V3]' means Hydrogen; [C2] = '[V4]' means Oxygen, [C2] = '[V5]' means Sulfur; [C2] = '[V6]' means Nitrogen, [C2] = '[V7]' means Phosphorus, [C2] = '[V8]' means Sodium, [C2] = '[V9]' means Bromine, [C2] = '[V10]' means Fluorine; [C2] = '[V11]' means Iodine; [C2] = '[V12]' means Tin; [C2] = '[V13]' means Lead; [C2] = '[V14]' means Tellurium; [C2] = '[V15]' means Calcium; [V1] is a value of the column [C2]; [V2] is a value of the column [C2]; [V3] is a value of the column [C2]; [V4] is a value of the column [C2]; [V5] is a value of the column [C2]; [V6] is a value of the column [C2]; [V7] is a value of the column [C2]; [V8] is a value of the column [C2]; [V9] is a value of the column [C2]; [V10] is a value of the column [C2]; [V11] is a value of the column [C2]; [V12] is a value of the column [C2]; [V13] is a value of the column [C2]; [V14] is a value of the column [C2]; [V15] is a value of the column [C2]",
            "to_value": {
                "[V1]": "cl",
                "[V2]": "c",
                "[V3]": "h",
                "[V4]": "o",
                "[V5]": "s",
                "[V6]": "n",
                "[V7]": "p",
                "[V8]": "na",
                "[V9]": "br",
                "[V10]": "f",
                "[V11]": "i",
                "[V12]": "sn",
                "[V13]": "pb",
                "[V14]": "te",
                "[V15]": "ca"
            },
            "masked": 19,
            "masked_terms": [
                "cl",
                "c",
                "h",
                "o",
                "s",
                "n",
                "p",
                "na",
                "br",
                "f",
                "i",
                "sn",
                "pb",
                "te",
                "ca",
                "atoms",
                "element",
                "bond",
                "tr001_2_4"
            ],
            "sql": "SELECT [T1].[C2] FROM [T3] JOIN [T1] ON [T3].[C7] = [T1].[C1] WHERE [T3].[C9] = [T2].[C4]",
            "repaired_sql": "SELECT [T1].[C2] FROM [T3] JOIN [T1] ON [T3].[C7] = [T1].[C1] JOIN [T2] ON [T3].[C9] = [T2].[C4] WHERE [T2].[C4] = '[V1]'"
        },
        "values": [
            "cl",
            "c",
            "h",
            "o",
            "s",
            "n",
            "p",
            "na",
            "br",
            "f",
            "i",
            "sn",
            "pb",
            "te",
            "ca"
        ],
        "value_links": {
            "cl": "[atom].[element]",
            "c": "[atom].[element]",
            "h": "[atom].[element]",
            "o": "[atom].[element]",
            "s": "[atom].[element]",
            "n": "[atom].[element]",
            "p": "[atom].[element]",
            "na": "[atom].[element]",
            "br": "[atom].[element]",
            "f": "[atom].[element]",
            "i": "[atom].[element]",
            "sn": "[atom].[element]",
            "pb": "[atom].[element]",
            "te": "[atom].[element]",
            "ca": "[atom].[element]"
        },
        "filtered_value_links": {
            "cl": "[atom].[element]",
            "c": "[atom].[element]",
            "h": "[atom].[element]",
            "o": "[atom].[element]",
            "s": "[atom].[element]",
            "n": "[atom].[element]",
            "p": "[atom].[element]",
            "na": "[atom].[element]",
            "br": "[atom].[element]",
            "f": "[atom].[element]",
            "i": "[atom].[element]",
            "sn": "[atom].[element]",
            "pb": "[atom].[element]",
            "te": "[atom].[element]",
            "ca": "[atom].[element]"
        },
        "schema_links": {
            "atoms": "TABLE:[atom]",
            "element": "COLUMN:[atom].[element]",
            "bond": "TABLE:[bond]",
            "tr001_2_4": "COLUMN:[bond].[bond_id]"
        },
        "filtered_schema_links": {
            "atoms": "TABLE:[atom]",
            "element": "COLUMN:[atom].[element]",
            "bond": "TABLE:[bond]",
            "tr001_2_4": "COLUMN:[bond].[bond_id]"
        },
        "attack": "Name the elements that comprise the composition of compound id. symbol = 'Cl' means Chlorine; symbol = 'C' means Carbon; symbol = 'H' means Hydrogen; symbol = 'O' means Oxygen, symbol = 'S' means Sulfur; symbol = 'N' means Nitrogen, symbol = 'P' means Phosphorus, symbol = 'Na' means Sodium, symbol = 'Br' means Bromine, symbol = 'F' means Fluorine; symbol = 'I' means Iodine; symbol = 'Sn' means Tin; symbol = 'Pb' means Lead; symbol = 'Te' means Tellurium; symbol = 'Ca' means Calcium; 'Cl' is a value of the column symbol; 'C' is a value of the column symbol; 'H' is a value of the column symbol; 'O' is a value of the column symbol; 'S' is a value of the column symbol; 'N' is a value of the column symbol; 'P' is a value of the column symbol; 'Na' is a value of the column symbol; 'Br' is a value of the column symbol; 'F' is a value of the column symbol; 'I' is a value of the column symbol; 'Sn' is a value of the column symbol; 'Pb' is a value of the column symbol; 'Te' is a value of the column symbol; 'Ca' is a value of the column symbol"
    },
    {
        "question_id": 315,
        "db_id": "toxicology",
        "question": "Among the molecules which contain \"cl\" element, which of them are carcinogenic? label = '+' mean molecules are carcinogenic;",
        "evidence": "label = '+' mean molecules are carcinogenic;",
        "SQL": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.label = '+'",
        "difficulty": "simple",
        "query": "SELECT DISTINCT T1.molecule_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'cl' AND T2.label = '+'",
        "evidence_added": true,
        "question_toks": [
            "Among",
            "the",
            "molecules",
            "which",
            "contain",
            "\"cl\"",
            "element",
            ",",
            "which",
            "of",
            "them",
            "are",
            "carcinogenic",
            "?",
            "label",
            "=",
            "'+'",
            "mean",
            "molecules",
            "are",
            "carcinogenic",
            ";"
        ],
        "tc_original": [
            "atom.element",
            "atom.molecule_id",
            "atom.atom_id",
            "atom.*",
            "molecule.molecule_id",
            "molecule.label",
            "molecule.*",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "bond.*",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "connected.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[atom]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[*]",
            "TABLE:[molecule]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "molecules": "TABLE:[molecule]",
            "cl": "VALUE:[atom].[element]",
            "element": "COLUMN:[atom].[element]",
            "carcinogenic": "VALUE:[molecule].[label]",
            "label": "COLUMN:[molecule].[label]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "Among the molecules which contain \"[V1]\" element, which of them are [C10]? [C10] = '+' mean molecules are [C10];; [V1] is a value of the column [C2]; [V2] is a value of the column [C10]",
            "to_value": {
                "[V1]": "cl",
                "[V2]": "+"
            },
            "masked": 6,
            "masked_terms": [
                "cl",
                "+",
                "cl",
                "molecule",
                "label",
                "carcinogenic"
            ],
            "sql": "SELECT [T1].[C1] FROM [T1] JOIN [T4] ON [T1].[C3] = [T4].[C11] WHERE [T1].[C2] = '[V1]' AND [T4].[C10] = '+'",
            "repaired_sql": "SELECT [T1].[C1] FROM [T1] JOIN [T4] ON [T1].[C3] = [T4].[C11] WHERE [T1].[C2] = '[V1]' AND [T4].[C10] = '+'"
        },
        "values": [
            "cl",
            "+"
        ],
        "value_links": {
            "cl": "[atom].[element]",
            "+": "[molecule].[label]"
        },
        "filtered_value_links": {
            "cl": "[atom].[element]",
            "+": "[molecule].[label]"
        },
        "schema_links": {
            "cl": "COLUMN:[atom].[element]",
            "molecule": "TABLE:[molecule]",
            "label": "COLUMN:[molecule].[label]",
            "carcinogenic": "COLUMN:[molecule].[label]"
        },
        "filtered_schema_links": {
            "cl": "COLUMN:[atom].[element]",
            "molecule": "TABLE:[molecule]",
            "label": "COLUMN:[molecule].[label]",
            "carcinogenic": "COLUMN:[molecule].[label]"
        },
        "attack": "Among the molecules which contain \"O\" element, which of them are charged? charged = '+' mean molecules are charged; O is a value of the column element; + is a value of the column charged"
    },
    {
        "question_id": 319,
        "db_id": "toxicology",
        "question": "How many elements are contained in bond_id TR001_3_4? element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "evidence": "element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "SQL": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4'",
        "difficulty": "challenging",
        "query": "SELECT COUNT(DISTINCT T1.element) FROM atom AS T1 INNER JOIN connected AS T2 ON T1.atom_id = T2.atom_id WHERE T2.bond_id = 'TR001_3_4'",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "elements",
            "are",
            "contained",
            "in",
            "bond_id",
            "TR001_3_4",
            "?",
            "element",
            "=",
            "'cl'",
            "means",
            "Chlorine",
            ";",
            "element",
            "=",
            "'c'",
            "means",
            "Carbon",
            ";",
            "element",
            "=",
            "'h'",
            "means",
            "Hydrogen",
            ";",
            "element",
            "=",
            "'o'",
            "means",
            "Oxygen",
            ",",
            "element",
            "=",
            "'s'",
            "means",
            "Sulfur",
            ";",
            "element",
            "=",
            "'n'",
            "means",
            "Nitrogen",
            ",",
            "element",
            "=",
            "'p'",
            "means",
            "Phosphorus",
            ",",
            "element",
            "=",
            "'na'",
            "means",
            "Sodium",
            ",",
            "element",
            "=",
            "'br'",
            "means",
            "Bromine",
            ",",
            "element",
            "=",
            "'f'",
            "means",
            "Fluorine",
            ";",
            "element",
            "=",
            "'i'",
            "means",
            "Iodine",
            ";",
            "element",
            "=",
            "'sn'",
            "means",
            "Tin",
            ";",
            "element",
            "=",
            "'pb'",
            "means",
            "Lead",
            ";",
            "element",
            "=",
            "'te'",
            "means",
            "Tellurium",
            ";",
            "element",
            "=",
            "'ca'",
            "means",
            "Calcium"
        ],
        "tc_original": [
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "bond.*",
            "atom.atom_id",
            "atom.element",
            "atom.molecule_id",
            "atom.*",
            "connected.bond_id",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.*",
            "molecule.label",
            "molecule.molecule_id",
            "molecule.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]",
            "TABLE:[atom]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[*]",
            "TABLE:[molecule]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "elements": "COLUMN:[atom].[element]",
            "bond_id": "COLUMN:[connected].[bond_id]",
            "TR001_3_4": "VALUE:[connected].[bond_id]",
            "Chlorine": "VALUE:[atom].[element]",
            "cl": "VALUE:[atom].[element]",
            "Carbon": "VALUE:[atom].[element]",
            "c": "VALUE:[atom].[element]",
            "Hydrogen": "VALUE:[atom].[element]",
            "h": "VALUE:[atom].[element]",
            "Oxygen": "VALUE:[atom].[element]",
            "o": "VALUE:[atom].[element]",
            "Sulfur": "VALUE:[atom].[element]",
            "s": "VALUE:[atom].[element]",
            "Nitrogen": "VALUE:[atom].[element]",
            "n": "VALUE:[atom].[element]",
            "Phosphorus": "VALUE:[atom].[element]",
            "p": "VALUE:[atom].[element]",
            "Sodium": "VALUE:[atom].[element]",
            "na": "VALUE:[atom].[element]",
            "Bromine": "VALUE:[atom].[element]",
            "br": "VALUE:[atom].[element]",
            "Fluorine": "VALUE:[atom].[element]",
            "f": "VALUE:[atom].[element]",
            "Iodine": "VALUE:[atom].[element]",
            "i": "VALUE:[atom].[element]",
            "Tin": "VALUE:[atom].[element]",
            "sn": "VALUE:[atom].[element]",
            "Lead": "VALUE:[atom].[element]",
            "pb": "VALUE:[atom].[element]",
            "Tellurium": "VALUE:[atom].[element]",
            "te": "VALUE:[atom].[element]",
            "Calcium": "VALUE:[atom].[element]",
            "ca": "VALUE:[atom].[element]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "How many elements are contained in [C4] [V1]? [C2] = 'cl' means Chlorine; [C2] = 'c' means Carbon; [C2] = 'h' means Hydrogen; [C2] = 'o' means Oxygen, [C2] = 's' means Sulfur; [C2] = 'n' means Nitrogen, [C2] = 'p' means Phosphorus, [C2] = 'na' means Sodium, [C2] = 'br' means Bromine, [C2] = 'f' means Fluorine; [C2] = 'i' means Iodine; [C2] = 'sn' means Tin; [C2] = 'pb' means Lead; [C2] = 'te' means Tellurium; [C2] = 'ca' means Calcium; [V1] is a value of the column [C4]",
            "to_value": {
                "[V1]": "TR001_3_4"
            },
            "masked": 3,
            "masked_terms": [
                "TR001_3_4",
                "bond_id",
                "element"
            ],
            "sql": "SELECT COUNT(*) FROM [T3] INNER JOIN [T1] ON [T3].[C7] = [T1].[C1] INNER JOIN [T2] ON [T3].[C9] = [T2].[C4] WHERE [T2].[C4] = '[V1]'",
            "repaired_sql": "SELECT COUNT(*) FROM [T1] JOIN [T3] ON [T1].[C1] = [T3].[C7] JOIN [T2] ON [T3].[C9] = [T2].[C4] WHERE [T2].[C4] = '[V1]'"
        },
        "values": [
            "TR001_3_4"
        ],
        "value_links": {
            "TR001_3_4": "[bond].[bond_id]"
        },
        "filtered_value_links": {
            "TR001_3_4": "[bond].[bond_id]"
        },
        "schema_links": {
            "bond_id": "COLUMN:[bond].[bond_id]",
            "element": "COLUMN:[atom].[element]"
        },
        "filtered_schema_links": {
            "bond_id": "COLUMN:[bond].[bond_id]",
            "element": "COLUMN:[atom].[element]"
        },
        "attack": "How many elements are contained in group X?"
    },
    {
        "question_id": 322,
        "db_id": "toxicology",
        "question": "What is the element of toxicology for the atom with the ID of TR000_1? atom with ID refers to atom_id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "evidence": "atom with ID refers to atom_id; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "SQL": "SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1'",
        "difficulty": "challenging",
        "query": "SELECT T.element FROM atom AS T WHERE T.atom_id = 'TR000_1'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "element",
            "of",
            "toxicology",
            "for",
            "the",
            "atom",
            "with",
            "the",
            "ID",
            "of",
            "TR000_1",
            "?",
            "atom",
            "with",
            "ID",
            "refers",
            "to",
            "atom_id",
            ";",
            "element",
            "=",
            "'cl'",
            "means",
            "Chlorine",
            ";",
            "element",
            "=",
            "'c'",
            "means",
            "Carbon",
            ";",
            "element",
            "=",
            "'h'",
            "means",
            "Hydrogen",
            ";",
            "element",
            "=",
            "'o'",
            "means",
            "Oxygen",
            ",",
            "element",
            "=",
            "'s'",
            "means",
            "Sulfur",
            ";",
            "element",
            "=",
            "'n'",
            "means",
            "Nitrogen",
            ",",
            "element",
            "=",
            "'p'",
            "means",
            "Phosphorus",
            ",",
            "element",
            "=",
            "'na'",
            "means",
            "Sodium",
            ",",
            "element",
            "=",
            "'br'",
            "means",
            "Bromine",
            ",",
            "element",
            "=",
            "'f'",
            "means",
            "Fluorine",
            ";",
            "element",
            "=",
            "'i'",
            "means",
            "Iodine",
            ";",
            "element",
            "=",
            "'sn'",
            "means",
            "Tin",
            ";",
            "element",
            "=",
            "'pb'",
            "means",
            "Lead",
            ";",
            "element",
            "=",
            "'te'",
            "means",
            "Tellurium",
            ";",
            "element",
            "=",
            "'ca'",
            "means",
            "Calcium"
        ],
        "tc_original": [
            "atom.atom_id",
            "atom.element",
            "atom.molecule_id",
            "atom.*",
            "molecule.label",
            "molecule.molecule_id",
            "molecule.*",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "connected.*",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "bond.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[atom]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[*]",
            "TABLE:[molecule]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "element": "COLUMN:[atom].[element]",
            "toxicology": "COLUMN:[atom].[element]",
            "atom": "TABLE:[atom]",
            "ID": "COLUMN:[atom].[atom_id]",
            "TR000_1": "VALUE:[atom].[atom_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "What is the [C2] of toxicology for the [T1] with the ID of [V1]? [T1] with ID refers to atom_id; [C2] = '[V2]' means Chlorine; [C2] = '[V3]' means Carbon; [C2] = '[V4]' means Hydrogen; [C2] = '[V5]' means Oxygen, [C2] = '[V6]' means Sulfur; [C2] = '[V7]' means Nitrogen, [C2] = '[V8]' means Phosphorus, [C2] = '[V9]' means Sodium, [C2] = '[V10]' means Bromine, [C2] = '[V11]' means Fluorine; [C2] = '[V12]' means Iodine; [C2] = '[V13]' means Tin; [C2] = '[V14]' means Lead; [C2] = '[V15]' means Tellurium; [C2] = '[V16]' means Calcium; [V1] is a value of the column [C1]; [V2] is a value of the column [C2]; [V3] is a value of the column [C2]; [V4] is a value of the column [C2]; [V5] is a value of the column [C2]; [V6] is a value of the column [C2]; [V7] is a value of the column [C2]; [V8] is a value of the column [C2]; [V9] is a value of the column [C2]; [V10] is a value of the column [C2]; [V11] is a value of the column [C2]; [V12] is a value of the column [C2]; [V13] is a value of the column [C2]; [V14] is a value of the column [C2]; [V15] is a value of the column [C2]; [V16] is a value of the column [C2]",
            "to_value": {
                "[V1]": "TR000_1",
                "[V2]": "Cl",
                "[V3]": "C",
                "[V4]": "H",
                "[V5]": "O",
                "[V6]": "S",
                "[V7]": "N",
                "[V8]": "P",
                "[V9]": "Na",
                "[V10]": "Br",
                "[V11]": "F",
                "[V12]": "I",
                "[V13]": "Sn",
                "[V14]": "Pb",
                "[V15]": "Te",
                "[V16]": "Ca"
            },
            "masked": 19,
            "masked_terms": [
                "TR000_1",
                "Cl",
                "C",
                "H",
                "O",
                "S",
                "N",
                "P",
                "Na",
                "Br",
                "F",
                "I",
                "Sn",
                "Pb",
                "Te",
                "Ca",
                "element",
                "atom",
                "TR000_1"
            ],
            "sql": "SELECT [T1].[C2] FROM [T1] WHERE [T1].[C1] = '[V1]'",
            "repaired_sql": "SELECT [T1].[C2] FROM [T1] WHERE [T1].[C1] = '[V1]'"
        },
        "values": [
            "TR000_1",
            "Cl",
            "C",
            "H",
            "O",
            "S",
            "N",
            "P",
            "Na",
            "Br",
            "F",
            "I",
            "Sn",
            "Pb",
            "Te",
            "Ca"
        ],
        "value_links": {
            "TR000_1": "[atom].[atom_id]",
            "Cl": "[atom].[element]",
            "C": "[atom].[element]",
            "H": "[atom].[element]",
            "O": "[atom].[element]",
            "S": "[atom].[element]",
            "N": "[atom].[element]",
            "P": "[atom].[element]",
            "Na": "[atom].[element]",
            "Br": "[atom].[element]",
            "F": "[atom].[element]",
            "I": "[atom].[element]",
            "Sn": "[atom].[element]",
            "Pb": "[atom].[element]",
            "Te": "[atom].[element]",
            "Ca": "[atom].[element]"
        },
        "filtered_value_links": {
            "TR000_1": "[atom].[atom_id]",
            "Cl": "[atom].[element]",
            "C": "[atom].[element]",
            "H": "[atom].[element]",
            "O": "[atom].[element]",
            "S": "[atom].[element]",
            "N": "[atom].[element]",
            "P": "[atom].[element]",
            "Na": "[atom].[element]",
            "Br": "[atom].[element]",
            "F": "[atom].[element]",
            "I": "[atom].[element]",
            "Sn": "[atom].[element]",
            "Pb": "[atom].[element]",
            "Te": "[atom].[element]",
            "Ca": "[atom].[element]"
        },
        "schema_links": {
            "element": "COLUMN:[atom].[element]",
            "atom": "TABLE:[atom]",
            "TR000_1": "COLUMN:[atom].[atom_id]"
        },
        "filtered_schema_links": {
            "element": "COLUMN:[atom].[element]",
            "atom": "TABLE:[atom]",
            "TR000_1": "COLUMN:[atom].[atom_id]"
        },
        "attack": "What is the element of toxicology for the atom with the ID of ?"
    },
    {
        "question_id": 327,
        "db_id": "toxicology",
        "question": "Which non-carcinogenic molecules consisted more than 5 atoms? label = '-' means molecules are non-carcinogenic; molecules consisted more than 5 atoms refers to COUNT(molecule_id) > 5",
        "evidence": "label = '-' means molecules are non-carcinogenic; molecules consisted more than 5 atoms refers to COUNT(molecule_id) > 5",
        "SQL": "SELECT T.molecule_id FROM ( SELECT T1.molecule_id, COUNT(T2.atom_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5 ) t",
        "difficulty": "moderate",
        "query": "SELECT T.molecule_id FROM ( SELECT T1.molecule_id, COUNT(T2.atom_id) FROM molecule AS T1 INNER JOIN atom AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.label = '-' GROUP BY T1.molecule_id HAVING COUNT(T2.atom_id) > 5 ) t",
        "evidence_added": true,
        "question_toks": [
            "Which",
            "non-carcinogenic",
            "molecules",
            "consisted",
            "more",
            "than",
            "5",
            "atoms",
            "?",
            "label",
            "=",
            "'-'",
            "means",
            "molecules",
            "are",
            "non-carcinogenic",
            ";",
            "molecules",
            "consisted",
            "more",
            "than",
            "5",
            "atoms",
            "refers",
            "to",
            "COUNT(molecule_id)",
            ">",
            "5"
        ],
        "tc_original": [
            "molecule.label",
            "molecule.molecule_id",
            "molecule.*",
            "atom.element",
            "atom.atom_id",
            "atom.molecule_id",
            "atom.*",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "connected.*",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "bond.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[molecule]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[*]",
            "TABLE:[atom]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "non-carcinogenic": "COLUMN:[molecule].[label]",
            "molecules": "TABLE:[molecule]",
            "label": "COLUMN:[molecule].[label]",
            "-": "VALUE:[molecule].[label]",
            "atoms": "TABLE:[atom]",
            "molecule_id": "COLUMN:[molecule].[molecule_id]",
            "atom_id": "COLUMN:[atom].[atom_id]",
            "5": "VALUE:[atom].[atom_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "Which [V1] [T4] consisted more than [V2] [C11]? label = '-' means [T4] are [V1]; [T4] consisted more than [V2] [C11] refers to COUNT(molecule_id) > [V2]; [V1] is a value of the column [C10]; [V2] is a value of the column [C1]",
            "to_value": {
                "[V1]": "non-carcinogenic",
                "[V2]": "5"
            },
            "masked": 5,
            "masked_terms": [
                "non-carcinogenic",
                "5",
                "non-carcinogenic",
                "molecules",
                "atoms"
            ],
            "sql": "SELECT [T4].[C10] FROM [T4] WHERE [T4].[C10] != '-' AND (SELECT COUNT([T1].[C1]) FROM [T1] WHERE [T1].[C3] = [T4].[C11]) > [T1].[C1]",
            "repaired_sql": "SELECT [T4].[C11] FROM [T4] JOIN [T1] ON [T1].[C3] = [T4].[C11] WHERE [T4].[C10] = '[V1]' GROUP BY [T4].[C11] HAVING COUNT([T1].[C1]) > [V2]"
        },
        "values": [
            "non-carcinogenic",
            "5"
        ],
        "value_links": {
            "non-carcinogenic": "[molecule].[label]",
            "5": "[atom].[atom_id]"
        },
        "filtered_value_links": {
            "non-carcinogenic": "[molecule].[label]",
            "5": "[atom].[atom_id]"
        },
        "schema_links": {
            "non-carcinogenic": "COLUMN:[molecule].[label]",
            "molecules": "TABLE:[molecule]",
            "atoms": "COLUMN:[molecule].[molecule_id]"
        },
        "filtered_schema_links": {
            "non-carcinogenic": "COLUMN:[molecule].[label]",
            "molecules": "TABLE:[molecule]",
            "atoms": "COLUMN:[molecule].[molecule_id]"
        },
        "attack": "Which label molecules consisted more than 5 molecule_id?"
    },
    {
        "question_id": 334,
        "db_id": "toxicology",
        "question": "What is the element with the atom ID of TR004_7 in molecule that is not carcinogenic? label = '-' means molecules are non-carcinogenic; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "evidence": "label = '-' means molecules are non-carcinogenic; element = 'cl' means Chlorine; element = 'c' means Carbon; element = 'h' means Hydrogen; element = 'o' means Oxygen, element = 's' means Sulfur; element = 'n' means Nitrogen, element = 'p' means Phosphorus, element = 'na' means Sodium, element = 'br' means Bromine, element = 'f' means Fluorine; element = 'i' means Iodine; element = 'sn' means Tin; element = 'pb' means Lead; element = 'te' means Tellurium; element = 'ca' means Calcium",
        "SQL": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'",
        "difficulty": "challenging",
        "query": "SELECT T1.element FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.atom_id = 'TR004_7' AND T2.label = '-'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "element",
            "with",
            "the",
            "atom",
            "ID",
            "of",
            "TR004_7",
            "in",
            "molecule",
            "that",
            "is",
            "not",
            "carcinogenic",
            "?",
            "label",
            "=",
            "'-'",
            "means",
            "molecules",
            "are",
            "non-carcinogenic",
            ";",
            "element",
            "=",
            "'cl'",
            "means",
            "Chlorine",
            ";",
            "element",
            "=",
            "'c'",
            "means",
            "Carbon",
            ";",
            "element",
            "=",
            "'h'",
            "means",
            "Hydrogen",
            ";",
            "element",
            "=",
            "'o'",
            "means",
            "Oxygen",
            ",",
            "element",
            "=",
            "'s'",
            "means",
            "Sulfur",
            ";",
            "element",
            "=",
            "'n'",
            "means",
            "Nitrogen",
            ",",
            "element",
            "=",
            "'p'",
            "means",
            "Phosphorus",
            ",",
            "element",
            "=",
            "'na'",
            "means",
            "Sodium",
            ",",
            "element",
            "=",
            "'br'",
            "means",
            "Bromine",
            ",",
            "element",
            "=",
            "'f'",
            "means",
            "Fluorine",
            ";",
            "element",
            "=",
            "'i'",
            "means",
            "Iodine",
            ";",
            "element",
            "=",
            "'sn'",
            "means",
            "Tin",
            ";",
            "element",
            "=",
            "'pb'",
            "means",
            "Lead",
            ";",
            "element",
            "=",
            "'te'",
            "means",
            "Tellurium",
            ";",
            "element",
            "=",
            "'ca'",
            "means",
            "Calcium"
        ],
        "tc_original": [
            "atom.atom_id",
            "atom.element",
            "atom.molecule_id",
            "atom.*",
            "molecule.molecule_id",
            "molecule.label",
            "molecule.*",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "connected.*",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "bond.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[atom]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[*]",
            "TABLE:[molecule]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "element": "COLUMN:[atom].[element]",
            "atom ID": "COLUMN:[atom].[atom_id]",
            "TR004_7": "VALUE:[atom].[atom_id]",
            "molecule": "TABLE:[molecule]",
            "carcinogenic": "COLUMN:[molecule].[label]",
            "-": "VALUE:[molecule].[label]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "What is the [C2] with the [C1] of [V1] in [T4] that is not carcinogenic? [C10] = '-' means molecules are non-carcinogenic; [C2] = 'cl' means Chlorine; [C2] = 'c' means Carbon; [C2] = 'h' means Hydrogen; [C2] = 'o' means Oxygen, [C2] = 's' means Sulfur; [C2] = 'n' means Nitrogen, [C2] = 'p' means Phosphorus, [C2] = 'na' means Sodium, [C2] = 'br' means Bromine, [C2] = 'f' means Fluorine; [C2] = 'i' means Iodine; [C2] = 'sn' means Tin; [C2] = 'pb' means Lead; [C2] = 'te' means Tellurium; [C2] = 'ca' means Calcium; [V1] is a value of the column [C1]",
            "to_value": {
                "[V1]": "TR004_7"
            },
            "masked": 5,
            "masked_terms": [
                "TR004_7",
                "element",
                "atom id",
                "molecule",
                "label"
            ],
            "sql": "SELECT [T1].[C2] FROM [T1] JOIN [T4] ON [T1].[C3] = [T4].[C11] WHERE [T1].[C1] = '[V1]' AND [T4].[C10] = '-'",
            "repaired_sql": "SELECT [T1].[C2] FROM [T1] JOIN [T4] ON [T1].[C3] = [T4].[C11] WHERE [T1].[C1] = '[V1]' AND [T4].[C10] = '-'"
        },
        "values": [
            "TR004_7"
        ],
        "value_links": {
            "TR004_7": "[atom].[atom_id]"
        },
        "filtered_value_links": {
            "TR004_7": "[atom].[atom_id]"
        },
        "schema_links": {
            "element": "COLUMN:[atom].[element]",
            "atom id": "COLUMN:[atom].[atom_id]",
            "molecule": "TABLE:[molecule]",
            "label": "COLUMN:[molecule].[label]"
        },
        "filtered_schema_links": {
            "element": "COLUMN:[atom].[element]",
            "atom id": "COLUMN:[atom].[atom_id]",
            "molecule": "TABLE:[molecule]",
            "label": "COLUMN:[molecule].[label]"
        },
        "attack": "What is the element with the molecule of X in molecules that is not carcinogenic?"
    },
    {
        "question_id": 339,
        "db_id": "toxicology",
        "question": "List the atom ID of the carcinogenic molecule that contains oxygen? label = '+' mean molecules are carcinogenic; oxygen refers to element = 'o'",
        "evidence": "label = '+' mean molecules are carcinogenic; oxygen refers to element = 'o'",
        "SQL": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'o' AND T2.label = '+'",
        "difficulty": "simple",
        "query": "SELECT T1.atom_id FROM atom AS T1 INNER JOIN molecule AS T2 ON T1.molecule_id = T2.molecule_id WHERE T1.element = 'o' AND T2.label = '+'",
        "evidence_added": true,
        "question_toks": [
            "List",
            "the",
            "atom",
            "ID",
            "of",
            "the",
            "carcinogenic",
            "molecule",
            "that",
            "contains",
            "oxygen",
            "?",
            "label",
            "=",
            "'+'",
            "mean",
            "molecules",
            "are",
            "carcinogenic",
            ";",
            "oxygen",
            "refers",
            "to",
            "element",
            "=",
            "'o'"
        ],
        "tc_original": [
            "molecule.molecule_id",
            "molecule.label",
            "molecule.*",
            "atom.molecule_id",
            "atom.atom_id",
            "atom.element",
            "atom.*",
            "bond.bond_id",
            "bond.molecule_id",
            "bond.bond_type",
            "bond.*",
            "connected.atom_id",
            "connected.atom_id2",
            "connected.bond_id",
            "connected.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[molecule]",
            "COLUMN:[molecule].[molecule_id]",
            "COLUMN:[molecule].[label]",
            "COLUMN:[molecule].[*]",
            "TABLE:[atom]",
            "COLUMN:[atom].[molecule_id]",
            "COLUMN:[atom].[atom_id]",
            "COLUMN:[atom].[element]",
            "COLUMN:[atom].[*]",
            "TABLE:[bond]",
            "COLUMN:[bond].[bond_id]",
            "COLUMN:[bond].[molecule_id]",
            "COLUMN:[bond].[bond_type]",
            "COLUMN:[bond].[*]",
            "TABLE:[connected]",
            "COLUMN:[connected].[atom_id]",
            "COLUMN:[connected].[atom_id2]",
            "COLUMN:[connected].[bond_id]",
            "COLUMN:[connected].[*]"
        ],
        "schema": "'[atom]':\n  '[atom_id]':\n    primary_key: true\n    type: text\n  '[element]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[bond]':\n  '[bond_id]':\n    primary_key: true\n    type: text\n  '[bond_type]': text\n  '[molecule_id]':\n    foreign_key: '[molecule].[molecule_id]'\n    type: text\n'[connected]':\n  '[atom_id2]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[atom_id]':\n    foreign_key: '[atom].[atom_id]'\n    primary_key: true\n    type: text\n  '[bond_id]':\n    foreign_key: '[bond].[bond_id]'\n    type: text\n'[molecule]':\n  '[label]': text\n  '[molecule_id]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "atom ID": "COLUMN:[atom].[atom_id]",
            "carcinogenic": "COLUMN:[molecule].[label]",
            "molecule": "TABLE:[molecule]",
            "oxygen": "VALUE:[atom].[element]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[atom]",
                "[C1]": "[atom].[atom_id]",
                "[C2]": "[atom].[element]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[C4]": "[bond].[bond_id]",
                "[C5]": "[bond].[bond_type]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[C7]": "[connected].[atom_id2]",
                "[C8]": "[connected].[atom_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[C10]": "[molecule].[label]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "to_symbol": {
                "[atom]": "[T1]",
                "[atom].[atom_id]": "[C1]",
                "[atom].[element]": "[C2]",
                "[atom].[molecule_id]": "[C3]",
                "[bond]": "[T2]",
                "[bond].[bond_id]": "[C4]",
                "[bond].[bond_type]": "[C5]",
                "[bond].[molecule_id]": "[C6]",
                "[connected]": "[T3]",
                "[connected].[atom_id2]": "[C7]",
                "[connected].[atom_id]": "[C8]",
                "[connected].[bond_id]": "[C9]",
                "[molecule]": "[T4]",
                "[molecule].[label]": "[C10]",
                "[molecule].[molecule_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: text\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T4].[C11]'\n    type: text\n'[T3]':\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T2].[C4]'\n    type: text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[atom]",
                "[T1].[C1]": "[atom].[atom_id]",
                "[C1]": "[atom].[atom_id]",
                "[T1].[C2]": "[atom].[element]",
                "[C2]": "[atom].[element]",
                "[T1].[C3]": "[atom].[molecule_id]",
                "[C3]": "[atom].[molecule_id]",
                "[T2]": "[bond]",
                "[T2].[C4]": "[bond].[bond_id]",
                "[C4]": "[bond].[bond_id]",
                "[T2].[C5]": "[bond].[bond_type]",
                "[C5]": "[bond].[bond_type]",
                "[T2].[C6]": "[bond].[molecule_id]",
                "[C6]": "[bond].[molecule_id]",
                "[T3]": "[connected]",
                "[T3].[C7]": "[connected].[atom_id2]",
                "[C7]": "[connected].[atom_id2]",
                "[T3].[C8]": "[connected].[atom_id]",
                "[C8]": "[connected].[atom_id]",
                "[T3].[C9]": "[connected].[bond_id]",
                "[C9]": "[connected].[bond_id]",
                "[T4]": "[molecule]",
                "[T4].[C10]": "[molecule].[label]",
                "[C10]": "[molecule].[label]",
                "[T4].[C11]": "[molecule].[molecule_id]",
                "[C11]": "[molecule].[molecule_id]"
            },
            "question": "List the [C1] of the [C10] [T4] that contains [C2]? label = '+' mean molecules are [C10]; [C2] refers to element = '[V1]'; [V1] is a value of the column [C2]",
            "to_value": {
                "[V1]": "o"
            },
            "masked": 5,
            "masked_terms": [
                "o",
                "atom id",
                "molecule",
                "carcinogenic",
                "oxygen"
            ],
            "sql": "SELECT [T1].[C1] FROM [T1] JOIN [T4] ON [T1].[C3] = [T4].[C11] WHERE [T4].[C10] = '+' AND [T1].[C2] = '[V1]'",
            "repaired_sql": "SELECT [T4].[C1] FROM [T4] JOIN [T1] ON [T4].[C11] = [T1].[C3] WHERE [T4].[C10] = '+' AND [T1].[C2] = '[V1]'"
        },
        "values": [
            "o"
        ],
        "value_links": {
            "o": "[atom].[element]"
        },
        "filtered_value_links": {
            "o": "[atom].[element]"
        },
        "schema_links": {
            "atom id": "COLUMN:[atom].[atom_id]",
            "molecule": "TABLE:[molecule]",
            "carcinogenic": "COLUMN:[molecule].[label]",
            "oxygen": "COLUMN:[atom].[element]"
        },
        "filtered_schema_links": {
            "atom id": "COLUMN:[atom].[atom_id]",
            "molecule": "TABLE:[molecule]",
            "carcinogenic": "COLUMN:[molecule].[label]",
            "oxygen": "COLUMN:[atom].[element]"
        },
        "attack": "List the name of the positive molecules that contains element? label = '+' mean molecules are positive; element refers to element = 'H'; 'H' is a value of the column element"
    },
    {
        "db_id": "movie_platform",
        "question": "What are the movie popularity of the movies released in 2021 that were directed by Steven Spielberg? List the names of the movies and their corresponding popularity. movie released in 2021 refers to movie_release_year = 2021; popularity refers to movie_popularity;",
        "evidence": "movie released in 2021 refers to movie_release_year = 2021; popularity refers to movie_popularity;",
        "SQL": "SELECT movie_title, movie_popularity FROM movies WHERE movie_release_year = 2021 AND director_name = 'Steven Spielberg'",
        "query": "SELECT movie_title, movie_popularity FROM movies WHERE movie_release_year = 2021 AND director_name = 'Steven Spielberg'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "are",
            "the",
            "movie",
            "popularity",
            "of",
            "the",
            "movies",
            "released",
            "in",
            "2021",
            "that",
            "were",
            "directed",
            "by",
            "Steven",
            "Spielberg",
            "?",
            "List",
            "the",
            "names",
            "of",
            "the",
            "movies",
            "and",
            "their",
            "corresponding",
            "popularity",
            ".",
            "movie",
            "released",
            "in",
            "2021",
            "refers",
            "to",
            "movie_release_year",
            "=",
            "2021",
            ";",
            "popularity",
            "refers",
            "to",
            "movie_popularity",
            ";"
        ],
        "tc_original": [
            "movies.movie_title",
            "movies.movie_release_year",
            "movies.movie_popularity",
            "movies.director_name",
            "movies.movie_id",
            "movies.*",
            "lists.user_id",
            "lists.list_id",
            "lists.list_title",
            "lists.list_movie_number",
            "lists.list_update_timestamp_utc",
            "lists.*",
            "ratings_users.user_id",
            "ratings_users.rating_date_utc",
            "ratings_users.user_trialist",
            "ratings_users.user_subscriber",
            "ratings_users.user_avatar_image_url",
            "ratings_users.*",
            "lists_users.user_id",
            "lists_users.list_id",
            "lists_users.list_update_date_utc",
            "lists_users.list_creation_date_utc",
            "lists_users.user_trialist",
            "lists_users.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movies]",
            "COLUMN:[movies].[movie_title]",
            "COLUMN:[movies].[movie_release_year]",
            "COLUMN:[movies].[movie_popularity]",
            "COLUMN:[movies].[director_name]",
            "COLUMN:[movies].[movie_id]",
            "COLUMN:[movies].[*]",
            "TABLE:[lists]",
            "COLUMN:[lists].[user_id]",
            "COLUMN:[lists].[list_id]",
            "COLUMN:[lists].[list_title]",
            "COLUMN:[lists].[list_movie_number]",
            "COLUMN:[lists].[list_update_timestamp_utc]",
            "COLUMN:[lists].[*]",
            "TABLE:[ratings_users]",
            "COLUMN:[ratings_users].[user_id]",
            "COLUMN:[ratings_users].[rating_date_utc]",
            "COLUMN:[ratings_users].[user_trialist]",
            "COLUMN:[ratings_users].[user_subscriber]",
            "COLUMN:[ratings_users].[user_avatar_image_url]",
            "COLUMN:[ratings_users].[*]",
            "TABLE:[lists_users]",
            "COLUMN:[lists_users].[user_id]",
            "COLUMN:[lists_users].[list_id]",
            "COLUMN:[lists_users].[list_update_date_utc]",
            "COLUMN:[lists_users].[list_creation_date_utc]",
            "COLUMN:[lists_users].[user_trialist]",
            "COLUMN:[lists_users].[*]"
        ],
        "schema": "'[lists]':\n  '[list_id]':\n    primary_key: true\n    type: integer\n  '[list_movie_number]': integer\n  '[list_title]': text\n  '[list_update_timestamp_utc]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[lists_users]':\n  '[list_creation_date_utc]': text\n  '[list_id]':\n    foreign_key: '[lists].[list_id]'\n    primary_key: true\n    type: integer\n  '[list_update_date_utc]': text\n  '[user_id]':\n    foreign_key: '[lists].[user_id]'\n    primary_key: true\n    type: integer\n  '[user_trialist]': integer\n'[movies]':\n  '[director_name]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_popularity]': integer\n  '[movie_release_year]': integer\n  '[movie_title]': text\n'[ratings_users]':\n  '[rating_date_utc]': text\n  '[user_avatar_image_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n  '[user_subscriber]': integer\n  '[user_trialist]': integer\n",
        "gold_links": {
            "movie popularity": "COLUMN:[movies].[movie_popularity]",
            "movies": "TABLE:[movies]",
            "released": "COLUMN:[movies].[movie_release_year]",
            "2021": "VALUE:[movies].[movie_release_year]",
            "directed": "COLUMN:[movies].[director_name]",
            "Steven Spielberg": "VALUE:[movies].[director_name]",
            "names": "COLUMN:[movies].[movie_title]",
            "popularity": "COLUMN:[movies].[movie_popularity]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[lists]",
                "[C1]": "[lists].[list_id]",
                "[C2]": "[lists].[list_movie_number]",
                "[C3]": "[lists].[list_title]",
                "[C4]": "[lists].[list_update_timestamp_utc]",
                "[C5]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[C6]": "[lists_users].[list_creation_date_utc]",
                "[C7]": "[lists_users].[list_id]",
                "[C8]": "[lists_users].[list_update_date_utc]",
                "[C9]": "[lists_users].[user_id]",
                "[C10]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[C11]": "[movies].[director_name]",
                "[C12]": "[movies].[movie_id]",
                "[C13]": "[movies].[movie_popularity]",
                "[C14]": "[movies].[movie_release_year]",
                "[C15]": "[movies].[movie_title]",
                "[T4]": "[ratings_users]",
                "[C16]": "[ratings_users].[rating_date_utc]",
                "[C17]": "[ratings_users].[user_avatar_image_url]",
                "[C18]": "[ratings_users].[user_id]",
                "[C19]": "[ratings_users].[user_subscriber]",
                "[C20]": "[ratings_users].[user_trialist]"
            },
            "to_symbol": {
                "[lists]": "[T1]",
                "[lists].[list_id]": "[C1]",
                "[lists].[list_movie_number]": "[C2]",
                "[lists].[list_title]": "[C3]",
                "[lists].[list_update_timestamp_utc]": "[C4]",
                "[lists].[user_id]": "[C5]",
                "[lists_users]": "[T2]",
                "[lists_users].[list_creation_date_utc]": "[C6]",
                "[lists_users].[list_id]": "[C7]",
                "[lists_users].[list_update_date_utc]": "[C8]",
                "[lists_users].[user_id]": "[C9]",
                "[lists_users].[user_trialist]": "[C10]",
                "[movies]": "[T3]",
                "[movies].[director_name]": "[C11]",
                "[movies].[movie_id]": "[C12]",
                "[movies].[movie_popularity]": "[C13]",
                "[movies].[movie_release_year]": "[C14]",
                "[movies].[movie_title]": "[C15]",
                "[ratings_users]": "[T4]",
                "[ratings_users].[rating_date_utc]": "[C16]",
                "[ratings_users].[user_avatar_image_url]": "[C17]",
                "[ratings_users].[user_id]": "[C18]",
                "[ratings_users].[user_subscriber]": "[C19]",
                "[ratings_users].[user_trialist]": "[C20]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]':\n    foreign_key: '[T2].[C9]'\n    type: integer\n'[T2]':\n  '[C10]': integer\n  '[C6]': text\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]':\n    foreign_key: '[T1].[C5]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: integer\n  '[C13]': integer\n  '[C14]': integer\n  '[C15]': text\n'[T4]':\n  '[C16]': text\n  '[C17]': text\n  '[C18]':\n    foreign_key: '[T2].[C9]'\n    type: integer\n  '[C19]': integer\n  '[C20]': integer\n",
            "reverse_dict": {
                "[T1]": "[lists]",
                "[T1].[C1]": "[lists].[list_id]",
                "[C1]": "[lists].[list_id]",
                "[T1].[C2]": "[lists].[list_movie_number]",
                "[C2]": "[lists].[list_movie_number]",
                "[T1].[C3]": "[lists].[list_title]",
                "[C3]": "[lists].[list_title]",
                "[T1].[C4]": "[lists].[list_update_timestamp_utc]",
                "[C4]": "[lists].[list_update_timestamp_utc]",
                "[T1].[C5]": "[lists].[user_id]",
                "[C5]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[T2].[C6]": "[lists_users].[list_creation_date_utc]",
                "[C6]": "[lists_users].[list_creation_date_utc]",
                "[T2].[C7]": "[lists_users].[list_id]",
                "[C7]": "[lists_users].[list_id]",
                "[T2].[C8]": "[lists_users].[list_update_date_utc]",
                "[C8]": "[lists_users].[list_update_date_utc]",
                "[T2].[C9]": "[lists_users].[user_id]",
                "[C9]": "[lists_users].[user_id]",
                "[T2].[C10]": "[lists_users].[user_trialist]",
                "[C10]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[T3].[C11]": "[movies].[director_name]",
                "[C11]": "[movies].[director_name]",
                "[T3].[C12]": "[movies].[movie_id]",
                "[C12]": "[movies].[movie_id]",
                "[T3].[C13]": "[movies].[movie_popularity]",
                "[C13]": "[movies].[movie_popularity]",
                "[T3].[C14]": "[movies].[movie_release_year]",
                "[C14]": "[movies].[movie_release_year]",
                "[T3].[C15]": "[movies].[movie_title]",
                "[C15]": "[movies].[movie_title]",
                "[T4]": "[ratings_users]",
                "[T4].[C16]": "[ratings_users].[rating_date_utc]",
                "[C16]": "[ratings_users].[rating_date_utc]",
                "[T4].[C17]": "[ratings_users].[user_avatar_image_url]",
                "[C17]": "[ratings_users].[user_avatar_image_url]",
                "[T4].[C18]": "[ratings_users].[user_id]",
                "[C18]": "[ratings_users].[user_id]",
                "[T4].[C19]": "[ratings_users].[user_subscriber]",
                "[C19]": "[ratings_users].[user_subscriber]",
                "[T4].[C20]": "[ratings_users].[user_trialist]",
                "[C20]": "[ratings_users].[user_trialist]"
            },
            "question": "What are the movie [C13] of the [T3] [C14] in [V2] that were directed by [V1]? List the names of the [T3] and their corresponding [C13]. movie [C14] in [V2] refers to movie_release_year = [V2]; [C13] refers to [V3];; [V1] is a value of the column [C11]; [V2] is a value of the column [C14]; [V3] is a value of the column [C13]",
            "to_value": {
                "[V1]": "Steven Spielberg",
                "[V2]": "2021",
                "[V3]": "movie_popularity"
            },
            "masked": 9,
            "masked_terms": [
                "Steven Spielberg",
                "2021",
                "movie_popularity",
                "popularity",
                "movies",
                "released",
                "Steven",
                "Spielberg",
                "2021"
            ],
            "sql": "SELECT [T3].[C15], [T3].[C13] FROM [T3] WHERE [T3].[C11] = '[V1]' AND [T3].[C14] = [V2]",
            "repaired_sql": "SELECT [T3].[C15], [T3].[C13] FROM [T3] WHERE [T3].[C14] = [V2] AND [T3].[C11] = '[V1]' AND [T3].[C13] = [V3]"
        },
        "values": [
            "Steven Spielberg",
            "2021",
            "movie_popularity"
        ],
        "value_links": {
            "Steven Spielberg": "[movies].[director_name]",
            "2021": "[movies].[movie_release_year]",
            "movie_popularity": "[movies].[movie_popularity]"
        },
        "filtered_value_links": {
            "Steven Spielberg": "[movies].[director_name]",
            "2021": "[movies].[movie_release_year]",
            "movie_popularity": "[movies].[movie_popularity]"
        },
        "schema_links": {
            "popularity": "COLUMN:[movies].[movie_popularity]",
            "movies": "TABLE:[movies]",
            "released": "COLUMN:[movies].[movie_release_year]",
            "Steven": "COLUMN:[movies].[director_name]",
            "Spielberg": "COLUMN:[movies].[director_name]",
            "2021": "COLUMN:[movies].[movie_release_year]"
        },
        "filtered_schema_links": {
            "popularity": "COLUMN:[movies].[movie_popularity]",
            "movies": "TABLE:[movies]",
            "released": "COLUMN:[movies].[movie_release_year]",
            "Steven": "COLUMN:[movies].[director_name]",
            "Spielberg": "COLUMN:[movies].[director_name]",
            "2021": "COLUMN:[movies].[movie_release_year]"
        },
        "attack": "What are the movie ratings of the movies released in 2020 that were directed by Christopher Nolan? List the names of the movies and their corresponding ratings."
    },
    {
        "db_id": "movie_platform",
        "question": "What is the URL to the movie director page on Mubi of the director whose movie was critic by user 2452551 and was given 39 likes? URL to the movie director page on Mubi refers to director_url; likes refers to critic_likes; critic_likes = 39;",
        "evidence": "URL to the movie director page on Mubi refers to director_url; likes refers to critic_likes; critic_likes = 39;",
        "SQL": "SELECT T2.director_url FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 2452551 AND T1.critic_likes = 39",
        "query": "SELECT T2.director_url FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 2452551 AND T1.critic_likes = 39",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "URL",
            "to",
            "the",
            "movie",
            "director",
            "page",
            "on",
            "Mubi",
            "of",
            "the",
            "director",
            "whose",
            "movie",
            "was",
            "critic",
            "by",
            "user",
            "2452551",
            "and",
            "was",
            "given",
            "39",
            "likes",
            "?",
            "URL",
            "to",
            "the",
            "movie",
            "director",
            "page",
            "on",
            "Mubi",
            "refers",
            "to",
            "director_url",
            ";",
            "likes",
            "refers",
            "to",
            "critic_likes",
            ";",
            "critic_likes",
            "=",
            "39",
            ";"
        ],
        "tc_original": [
            "ratings.critic_likes",
            "ratings.critic",
            "ratings.movie_id",
            "ratings.user_id",
            "ratings.rating_id",
            "ratings.*",
            "movies.movie_id",
            "movies.director_id",
            "movies.director_url",
            "movies.director_name",
            "movies.movie_title",
            "movies.*",
            "lists.user_id",
            "lists.list_id",
            "lists.list_title",
            "lists.list_movie_number",
            "lists.list_update_timestamp_utc",
            "lists.*",
            "ratings_users.user_id",
            "ratings_users.rating_date_utc",
            "ratings_users.user_trialist",
            "ratings_users.user_subscriber",
            "ratings_users.user_avatar_image_url",
            "ratings_users.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[ratings]",
            "COLUMN:[ratings].[critic_likes]",
            "COLUMN:[ratings].[critic]",
            "COLUMN:[ratings].[movie_id]",
            "COLUMN:[ratings].[user_id]",
            "COLUMN:[ratings].[rating_id]",
            "COLUMN:[ratings].[*]",
            "TABLE:[movies]",
            "COLUMN:[movies].[movie_id]",
            "COLUMN:[movies].[director_id]",
            "COLUMN:[movies].[director_url]",
            "COLUMN:[movies].[director_name]",
            "COLUMN:[movies].[movie_title]",
            "COLUMN:[movies].[*]",
            "TABLE:[lists]",
            "COLUMN:[lists].[user_id]",
            "COLUMN:[lists].[list_id]",
            "COLUMN:[lists].[list_title]",
            "COLUMN:[lists].[list_movie_number]",
            "COLUMN:[lists].[list_update_timestamp_utc]",
            "COLUMN:[lists].[*]",
            "TABLE:[ratings_users]",
            "COLUMN:[ratings_users].[user_id]",
            "COLUMN:[ratings_users].[rating_date_utc]",
            "COLUMN:[ratings_users].[user_trialist]",
            "COLUMN:[ratings_users].[user_subscriber]",
            "COLUMN:[ratings_users].[user_avatar_image_url]",
            "COLUMN:[ratings_users].[*]"
        ],
        "schema": "'[lists]':\n  '[list_id]':\n    primary_key: true\n    type: integer\n  '[list_movie_number]': integer\n  '[list_title]': text\n  '[list_update_timestamp_utc]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[lists_users]':\n  '[user_id]':\n    foreign_key: '[lists].[user_id]'\n    primary_key: true\n    type: integer\n'[movies]':\n  '[director_id]': text\n  '[director_name]': text\n  '[director_url]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_title]': text\n'[ratings]':\n  '[critic]': text\n  '[critic_likes]': integer\n  '[movie_id]':\n    foreign_key: '[movies].[movie_id]'\n    type: integer\n  '[rating_id]': integer\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[ratings_users]':\n  '[rating_date_utc]': text\n  '[user_avatar_image_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n  '[user_subscriber]': integer\n  '[user_trialist]': integer\n",
        "gold_links": {
            "URL": "COLUMN:[movies].[director_url]",
            "movie director page": "COLUMN:[movies].[director_url]",
            "Mubi": "COLUMN:[movies].[director_url]",
            "director": "COLUMN:[movies].[director_url]",
            "critic": "COLUMN:[ratings].[critic]",
            "user": "COLUMN:[ratings].[user_id]",
            "2452551": "VALUE:[ratings].[user_id]",
            "likes": "COLUMN:[ratings].[critic_likes]",
            "39": "VALUE:[ratings].[critic_likes]",
            "movie": "COLUMN:[ratings].[movie_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[lists]",
                "[C1]": "[lists].[list_id]",
                "[C2]": "[lists].[list_movie_number]",
                "[C3]": "[lists].[list_title]",
                "[C4]": "[lists].[list_update_timestamp_utc]",
                "[C5]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[C6]": "[lists_users].[user_id]",
                "[T3]": "[movies]",
                "[C7]": "[movies].[director_id]",
                "[C8]": "[movies].[director_name]",
                "[C9]": "[movies].[director_url]",
                "[C10]": "[movies].[movie_id]",
                "[C11]": "[movies].[movie_title]",
                "[T4]": "[ratings]",
                "[C12]": "[ratings].[critic]",
                "[C13]": "[ratings].[critic_likes]",
                "[C14]": "[ratings].[movie_id]",
                "[C15]": "[ratings].[rating_id]",
                "[C16]": "[ratings].[user_id]",
                "[T5]": "[ratings_users]",
                "[C17]": "[ratings_users].[rating_date_utc]",
                "[C18]": "[ratings_users].[user_avatar_image_url]",
                "[C19]": "[ratings_users].[user_id]",
                "[C20]": "[ratings_users].[user_subscriber]",
                "[C21]": "[ratings_users].[user_trialist]"
            },
            "to_symbol": {
                "[lists]": "[T1]",
                "[lists].[list_id]": "[C1]",
                "[lists].[list_movie_number]": "[C2]",
                "[lists].[list_title]": "[C3]",
                "[lists].[list_update_timestamp_utc]": "[C4]",
                "[lists].[user_id]": "[C5]",
                "[lists_users]": "[T2]",
                "[lists_users].[user_id]": "[C6]",
                "[movies]": "[T3]",
                "[movies].[director_id]": "[C7]",
                "[movies].[director_name]": "[C8]",
                "[movies].[director_url]": "[C9]",
                "[movies].[movie_id]": "[C10]",
                "[movies].[movie_title]": "[C11]",
                "[ratings]": "[T4]",
                "[ratings].[critic]": "[C12]",
                "[ratings].[critic_likes]": "[C13]",
                "[ratings].[movie_id]": "[C14]",
                "[ratings].[rating_id]": "[C15]",
                "[ratings].[user_id]": "[C16]",
                "[ratings_users]": "[T5]",
                "[ratings_users].[rating_date_utc]": "[C17]",
                "[ratings_users].[user_avatar_image_url]": "[C18]",
                "[ratings_users].[user_id]": "[C19]",
                "[ratings_users].[user_subscriber]": "[C20]",
                "[ratings_users].[user_trialist]": "[C21]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T2]':\n  '[C6]':\n    foreign_key: '[T1].[C5]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C10]':\n    primary_key: true\n    type: integer\n  '[C11]': text\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T4]':\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    foreign_key: '[T3].[C10]'\n    type: integer\n  '[C15]': integer\n  '[C16]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T5]':\n  '[C17]': text\n  '[C18]': text\n  '[C19]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n  '[C20]': integer\n  '[C21]': integer\n",
            "reverse_dict": {
                "[T1]": "[lists]",
                "[T1].[C1]": "[lists].[list_id]",
                "[C1]": "[lists].[list_id]",
                "[T1].[C2]": "[lists].[list_movie_number]",
                "[C2]": "[lists].[list_movie_number]",
                "[T1].[C3]": "[lists].[list_title]",
                "[C3]": "[lists].[list_title]",
                "[T1].[C4]": "[lists].[list_update_timestamp_utc]",
                "[C4]": "[lists].[list_update_timestamp_utc]",
                "[T1].[C5]": "[lists].[user_id]",
                "[C5]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[T2].[C6]": "[lists_users].[user_id]",
                "[C6]": "[lists_users].[user_id]",
                "[T3]": "[movies]",
                "[T3].[C7]": "[movies].[director_id]",
                "[C7]": "[movies].[director_id]",
                "[T3].[C8]": "[movies].[director_name]",
                "[C8]": "[movies].[director_name]",
                "[T3].[C9]": "[movies].[director_url]",
                "[C9]": "[movies].[director_url]",
                "[T3].[C10]": "[movies].[movie_id]",
                "[C10]": "[movies].[movie_id]",
                "[T3].[C11]": "[movies].[movie_title]",
                "[C11]": "[movies].[movie_title]",
                "[T4]": "[ratings]",
                "[T4].[C12]": "[ratings].[critic]",
                "[C12]": "[ratings].[critic]",
                "[T4].[C13]": "[ratings].[critic_likes]",
                "[C13]": "[ratings].[critic_likes]",
                "[T4].[C14]": "[ratings].[movie_id]",
                "[C14]": "[ratings].[movie_id]",
                "[T4].[C15]": "[ratings].[rating_id]",
                "[C15]": "[ratings].[rating_id]",
                "[T4].[C16]": "[ratings].[user_id]",
                "[C16]": "[ratings].[user_id]",
                "[T5]": "[ratings_users]",
                "[T5].[C17]": "[ratings_users].[rating_date_utc]",
                "[C17]": "[ratings_users].[rating_date_utc]",
                "[T5].[C18]": "[ratings_users].[user_avatar_image_url]",
                "[C18]": "[ratings_users].[user_avatar_image_url]",
                "[T5].[C19]": "[ratings_users].[user_id]",
                "[C19]": "[ratings_users].[user_id]",
                "[T5].[C20]": "[ratings_users].[user_subscriber]",
                "[C20]": "[ratings_users].[user_subscriber]",
                "[T5].[C21]": "[ratings_users].[user_trialist]",
                "[C21]": "[ratings_users].[user_trialist]"
            },
            "question": "What is the [C9] to the [T3] on Mubi of the [C7] whose movie was [C12] [V1] and was given [V2] likes? [C9] to the [T3] on Mubi refers to [C9]; likes refers to critic_likes; critic_likes = [V2];; [V1] is a value of the column [C19]; [V2] is a value of the column [C13]",
            "to_value": {
                "[V1]": "user 2452551",
                "[V2]": "39"
            },
            "masked": 9,
            "masked_terms": [
                "user 2452551",
                "39",
                "URL",
                "movie director page",
                "director",
                "director_url",
                "critic by",
                "user 2452551",
                "39 likes"
            ],
            "sql": "SELECT [T3].[C9] FROM [T4] JOIN [T3] ON [T4].[C14] = [T3].[C10] JOIN [T5] ON [T5].[C19] = [T4].[C16] WHERE [T3].[C7] = '[C7]' AND [T4].[C12] = '[V1]' AND [T4].[C13] = [V2]",
            "repaired_sql": "SELECT [T3].[C9] FROM [T3] JOIN [T4] ON [T3].[C10] = [T4].[C14] WHERE [T4].[C12] = '[V1]' AND [T4].[C13] = [V2]"
        },
        "values": [
            "user 2452551",
            "39"
        ],
        "value_links": {
            "user 2452551": "[ratings_users].[user_id]",
            "39": "[ratings].[critic_likes]"
        },
        "filtered_value_links": {
            "user 2452551": "[ratings_users].[user_id]",
            "39": "[ratings].[critic_likes]"
        },
        "schema_links": {
            "URL": "COLUMN:[movies].[director_url]",
            "movie director page": "TABLE:[movies]",
            "director": "COLUMN:[movies].[director_id]",
            "director_url": "COLUMN:[movies].[director_url]",
            "critic by": "COLUMN:[ratings].[critic]",
            "user 2452551": "COLUMN:[ratings].[user_id]",
            "39 likes": "COLUMN:[ratings].[critic_likes]"
        },
        "filtered_schema_links": {
            "URL": "COLUMN:[movies].[director_url]",
            "movie director page": "TABLE:[movies]",
            "director": "COLUMN:[movies].[director_id]",
            "director_url": "COLUMN:[movies].[director_url]",
            "critic by": "COLUMN:[ratings].[critic]",
            "user 2452551": "COLUMN:[ratings].[user_id]",
            "39 likes": "COLUMN:[ratings].[critic_likes]"
        },
        "attack": "What is the link to the critics on Mubi of the title whose movie was reviewed 6753 and was given 5 likes?"
    },
    {
        "db_id": "movie_platform",
        "question": "What is the URL to the rating on Mubi of the Riff-Raff movie that was given the highest rating score by user 22030372? URL refer to rating_url; user 22030372 refer to user_id",
        "evidence": "URL refer to rating_url; user 22030372 refer to user_id",
        "SQL": "SELECT T2.rating_url FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T2.user_id = 22030372 AND T2.rating_score = 5 AND T1.movie_title = 'Riff-Raff'",
        "query": "SELECT T2.rating_url FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T2.user_id = 22030372 AND T2.rating_score = 5 AND T1.movie_title = 'Riff-Raff'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "URL",
            "to",
            "the",
            "rating",
            "on",
            "Mubi",
            "of",
            "the",
            "Riff-Raff",
            "movie",
            "that",
            "was",
            "given",
            "the",
            "highest",
            "rating",
            "score",
            "by",
            "user",
            "22030372",
            "?",
            "URL",
            "refer",
            "to",
            "rating_url",
            ";",
            "user",
            "22030372",
            "refer",
            "to",
            "user_id"
        ],
        "tc_original": [
            "ratings.rating_score",
            "ratings.movie_id",
            "ratings.rating_url",
            "ratings.user_id",
            "ratings.rating_id",
            "ratings.*",
            "movies.movie_id",
            "movies.movie_title",
            "movies.movie_url",
            "movies.movie_popularity",
            "movies.movie_release_year",
            "movies.*",
            "ratings_users.user_id",
            "ratings_users.rating_date_utc",
            "ratings_users.user_trialist",
            "ratings_users.user_subscriber",
            "ratings_users.user_avatar_image_url",
            "ratings_users.*",
            "lists_users.user_id",
            "lists_users.list_id",
            "lists_users.list_update_date_utc",
            "lists_users.list_creation_date_utc",
            "lists_users.user_trialist",
            "lists_users.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[ratings]",
            "COLUMN:[ratings].[rating_score]",
            "COLUMN:[ratings].[movie_id]",
            "COLUMN:[ratings].[rating_url]",
            "COLUMN:[ratings].[user_id]",
            "COLUMN:[ratings].[rating_id]",
            "COLUMN:[ratings].[*]",
            "TABLE:[movies]",
            "COLUMN:[movies].[movie_id]",
            "COLUMN:[movies].[movie_title]",
            "COLUMN:[movies].[movie_url]",
            "COLUMN:[movies].[movie_popularity]",
            "COLUMN:[movies].[movie_release_year]",
            "COLUMN:[movies].[*]",
            "TABLE:[ratings_users]",
            "COLUMN:[ratings_users].[user_id]",
            "COLUMN:[ratings_users].[rating_date_utc]",
            "COLUMN:[ratings_users].[user_trialist]",
            "COLUMN:[ratings_users].[user_subscriber]",
            "COLUMN:[ratings_users].[user_avatar_image_url]",
            "COLUMN:[ratings_users].[*]",
            "TABLE:[lists_users]",
            "COLUMN:[lists_users].[user_id]",
            "COLUMN:[lists_users].[list_id]",
            "COLUMN:[lists_users].[list_update_date_utc]",
            "COLUMN:[lists_users].[list_creation_date_utc]",
            "COLUMN:[lists_users].[user_trialist]",
            "COLUMN:[lists_users].[*]"
        ],
        "schema": "'[lists]':\n  '[list_id]':\n    primary_key: true\n    type: integer\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[lists_users]':\n  '[list_creation_date_utc]': text\n  '[list_id]':\n    foreign_key: '[lists].[list_id]'\n    primary_key: true\n    type: integer\n  '[list_update_date_utc]': text\n  '[user_id]':\n    foreign_key: '[lists].[user_id]'\n    primary_key: true\n    type: integer\n  '[user_trialist]': integer\n'[movies]':\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_popularity]': integer\n  '[movie_release_year]': integer\n  '[movie_title]': text\n  '[movie_url]': text\n'[ratings]':\n  '[movie_id]':\n    foreign_key: '[movies].[movie_id]'\n    type: integer\n  '[rating_id]': integer\n  '[rating_score]': integer\n  '[rating_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[ratings_users]':\n  '[rating_date_utc]': text\n  '[user_avatar_image_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n  '[user_subscriber]': integer\n  '[user_trialist]': integer\n",
        "gold_links": {
            "URL": "COLUMN:[ratings].[rating_url]",
            "rating": "COLUMN:[ratings].[rating_score]",
            "Mubi": "COLUMN:[ratings].[rating_url]",
            "Riff-Raff": "COLUMN:[movies].[movie_title]",
            "highest score": "COLUMN:[ratings].[rating_score]",
            "user 22030372": "COLUMN:[ratings].[user_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[lists]",
                "[C1]": "[lists].[list_id]",
                "[C2]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[C3]": "[lists_users].[list_creation_date_utc]",
                "[C4]": "[lists_users].[list_id]",
                "[C5]": "[lists_users].[list_update_date_utc]",
                "[C6]": "[lists_users].[user_id]",
                "[C7]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[C8]": "[movies].[movie_id]",
                "[C9]": "[movies].[movie_popularity]",
                "[C10]": "[movies].[movie_release_year]",
                "[C11]": "[movies].[movie_title]",
                "[C12]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[C13]": "[ratings].[movie_id]",
                "[C14]": "[ratings].[rating_id]",
                "[C15]": "[ratings].[rating_score]",
                "[C16]": "[ratings].[rating_url]",
                "[C17]": "[ratings].[user_id]",
                "[T5]": "[ratings_users]",
                "[C18]": "[ratings_users].[rating_date_utc]",
                "[C19]": "[ratings_users].[user_avatar_image_url]",
                "[C20]": "[ratings_users].[user_id]",
                "[C21]": "[ratings_users].[user_subscriber]",
                "[C22]": "[ratings_users].[user_trialist]"
            },
            "to_symbol": {
                "[lists]": "[T1]",
                "[lists].[list_id]": "[C1]",
                "[lists].[user_id]": "[C2]",
                "[lists_users]": "[T2]",
                "[lists_users].[list_creation_date_utc]": "[C3]",
                "[lists_users].[list_id]": "[C4]",
                "[lists_users].[list_update_date_utc]": "[C5]",
                "[lists_users].[user_id]": "[C6]",
                "[lists_users].[user_trialist]": "[C7]",
                "[movies]": "[T3]",
                "[movies].[movie_id]": "[C8]",
                "[movies].[movie_popularity]": "[C9]",
                "[movies].[movie_release_year]": "[C10]",
                "[movies].[movie_title]": "[C11]",
                "[movies].[movie_url]": "[C12]",
                "[ratings]": "[T4]",
                "[ratings].[movie_id]": "[C13]",
                "[ratings].[rating_id]": "[C14]",
                "[ratings].[rating_score]": "[C15]",
                "[ratings].[rating_url]": "[C16]",
                "[ratings].[user_id]": "[C17]",
                "[ratings_users]": "[T5]",
                "[ratings_users].[rating_date_utc]": "[C18]",
                "[ratings_users].[user_avatar_image_url]": "[C19]",
                "[ratings_users].[user_id]": "[C20]",
                "[ratings_users].[user_subscriber]": "[C21]",
                "[ratings_users].[user_trialist]": "[C22]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T2]':\n  '[C3]': text\n  '[C4]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T1].[C2]'\n    primary_key: true\n    type: integer\n  '[C7]': integer\n'[T3]':\n  '[C10]': integer\n  '[C11]': text\n  '[C12]': text\n  '[C8]':\n    primary_key: true\n    type: integer\n  '[C9]': integer\n'[T4]':\n  '[C13]':\n    foreign_key: '[T3].[C8]'\n    type: integer\n  '[C14]': integer\n  '[C15]': integer\n  '[C16]': text\n  '[C17]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T5]':\n  '[C18]': text\n  '[C19]': text\n  '[C20]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n  '[C21]': integer\n  '[C22]': integer\n",
            "reverse_dict": {
                "[T1]": "[lists]",
                "[T1].[C1]": "[lists].[list_id]",
                "[C1]": "[lists].[list_id]",
                "[T1].[C2]": "[lists].[user_id]",
                "[C2]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[T2].[C3]": "[lists_users].[list_creation_date_utc]",
                "[C3]": "[lists_users].[list_creation_date_utc]",
                "[T2].[C4]": "[lists_users].[list_id]",
                "[C4]": "[lists_users].[list_id]",
                "[T2].[C5]": "[lists_users].[list_update_date_utc]",
                "[C5]": "[lists_users].[list_update_date_utc]",
                "[T2].[C6]": "[lists_users].[user_id]",
                "[C6]": "[lists_users].[user_id]",
                "[T2].[C7]": "[lists_users].[user_trialist]",
                "[C7]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[T3].[C8]": "[movies].[movie_id]",
                "[C8]": "[movies].[movie_id]",
                "[T3].[C9]": "[movies].[movie_popularity]",
                "[C9]": "[movies].[movie_popularity]",
                "[T3].[C10]": "[movies].[movie_release_year]",
                "[C10]": "[movies].[movie_release_year]",
                "[T3].[C11]": "[movies].[movie_title]",
                "[C11]": "[movies].[movie_title]",
                "[T3].[C12]": "[movies].[movie_url]",
                "[C12]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[T4].[C13]": "[ratings].[movie_id]",
                "[C13]": "[ratings].[movie_id]",
                "[T4].[C14]": "[ratings].[rating_id]",
                "[C14]": "[ratings].[rating_id]",
                "[T4].[C15]": "[ratings].[rating_score]",
                "[C15]": "[ratings].[rating_score]",
                "[T4].[C16]": "[ratings].[rating_url]",
                "[C16]": "[ratings].[rating_url]",
                "[T4].[C17]": "[ratings].[user_id]",
                "[C17]": "[ratings].[user_id]",
                "[T5]": "[ratings_users]",
                "[T5].[C18]": "[ratings_users].[rating_date_utc]",
                "[C18]": "[ratings_users].[rating_date_utc]",
                "[T5].[C19]": "[ratings_users].[user_avatar_image_url]",
                "[C19]": "[ratings_users].[user_avatar_image_url]",
                "[T5].[C20]": "[ratings_users].[user_id]",
                "[C20]": "[ratings_users].[user_id]",
                "[T5].[C21]": "[ratings_users].[user_subscriber]",
                "[C21]": "[ratings_users].[user_subscriber]",
                "[T5].[C22]": "[ratings_users].[user_trialist]",
                "[C22]": "[ratings_users].[user_trialist]"
            },
            "question": "What is the [C16] to the [C15] on [V1] of the [V2] [C11] that was given the highest [C15] score by [C20] [V3]? [C16] refer to [V4]; [C20] [V3] refer to user_id; [V1] is a value of the column [C12]; [V2] is a value of the column [C11]; [V3] is a value of the column [C20]; [V4] is a value of the column [C16]",
            "to_value": {
                "[V1]": "Mubi",
                "[V2]": "Riff-Raff",
                "[V3]": "22030372",
                "[V4]": "rating_url"
            },
            "masked": 10,
            "masked_terms": [
                "Mubi",
                "Riff-Raff",
                "22030372",
                "rating_url",
                "url",
                "rating",
                "movie",
                "mubi",
                "user",
                "22030372"
            ],
            "sql": "SELECT [T4].[C16] FROM [T4] JOIN [T3] ON [T4].[C13] = [T3].[C8] WHERE [T3].[C12] = 'V1' AND [T3].[C11] = 'V2' AND [T4].[C17] = (SELECT [T2].[C6] FROM [T2] WHERE [T2].[C20] = 'V3') ORDER BY [T4].[C15] DESC LIMIT 1",
            "repaired_sql": "SELECT [T4].[C16] FROM [T4] JOIN [T3] ON [T4].[C13] = [T3].[C8] WHERE [T3].[C12] = '[V1]' AND [T3].[C11] = '[V2]' AND [T4].[C15] = (SELECT MAX([T4b].[C15]) FROM [T4] AS [T4b] JOIN [T3] AS [T3b] ON [T4b].[C13] = [T3b].[C8] JOIN [T5] ON [T4b].[C17] = [T5].[C20] WHERE [T3b].[C12] = '[V1]' AND [T3b].[C11] = '[V2]' AND [T5].[C20] = '[V3]') AND [T4].[C17] = (SELECT [T20ref].[C20] FROM [T5] AS [T20ref] WHERE [T20ref].[C20] = '[V3]')"
        },
        "values": [
            "Mubi",
            "Riff-Raff",
            "22030372",
            "rating_url"
        ],
        "value_links": {
            "Mubi": "[movies].[movie_url]",
            "Riff-Raff": "[movies].[movie_title]",
            "22030372": "[ratings_users].[user_id]",
            "rating_url": "[ratings].[rating_url]"
        },
        "filtered_value_links": {
            "Mubi": "[movies].[movie_url]",
            "Riff-Raff": "[movies].[movie_title]",
            "22030372": "[ratings_users].[user_id]",
            "rating_url": "[ratings].[rating_url]"
        },
        "schema_links": {
            "url": "COLUMN:[ratings].[rating_url]",
            "rating": "COLUMN:[ratings].[rating_score]",
            "movie": "COLUMN:[movies].[movie_title]",
            "mubi": "TABLE:[movies]",
            "user": "COLUMN:[ratings_users].[user_id]",
            "22030372": "COLUMN:[ratings_users].[user_id]"
        },
        "filtered_schema_links": {
            "url": "COLUMN:[ratings].[rating_url]",
            "rating": "COLUMN:[ratings].[rating_score]",
            "movie": "COLUMN:[movies].[movie_title]",
            "mubi": "TABLE:[movies]",
            "user": "COLUMN:[ratings_users].[user_id]",
            "22030372": "COLUMN:[ratings_users].[user_id]"
        },
        "attack": "What is the answer to the question on 2020-01-01 of the quiz math that was given the highest score by user 42?"
    },
    {
        "db_id": "movie_platform",
        "question": "What is the URL to the rating on Mubi made by user 45579900 for the movie \"The Vertical Ray of the Sun\" that received 20 likes? URL refer to rating_url; 20 likes refer to critic_likes = \u201920\u2019; user 45579900 refer to user_id",
        "evidence": "URL refer to rating_url; 20 likes refer to critic_likes = \u201920\u2019; user 45579900 refer to user_id",
        "SQL": "SELECT T2.rating_url FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T2.user_id = 45579900 AND T1.movie_title = 'The Vertical Ray of the Sun' AND T2.critic_likes = 20",
        "query": "SELECT T2.rating_url FROM movies AS T1 INNER JOIN ratings AS T2 ON T1.movie_id = T2.movie_id WHERE T2.user_id = 45579900 AND T1.movie_title = 'The Vertical Ray of the Sun' AND T2.critic_likes = 20",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "URL",
            "to",
            "the",
            "rating",
            "on",
            "Mubi",
            "made",
            "by",
            "user",
            "45579900",
            "for",
            "the",
            "movie",
            "\"The",
            "Vertical",
            "Ray",
            "of",
            "the",
            "Sun\"",
            "that",
            "received",
            "20",
            "likes",
            "?",
            "URL",
            "refer",
            "to",
            "rating_url",
            ";",
            "20",
            "likes",
            "refer",
            "to",
            "critic_likes",
            "=",
            "\u201920\u2019",
            ";",
            "user",
            "45579900",
            "refer",
            "to",
            "user_id"
        ],
        "tc_original": [
            "ratings.user_id",
            "ratings.rating_url",
            "ratings.critic_likes",
            "ratings.movie_id",
            "ratings.rating_id",
            "ratings.*",
            "movies.movie_title",
            "movies.movie_id",
            "movies.movie_url",
            "movies.movie_release_year",
            "movies.movie_title_language",
            "movies.*",
            "ratings_users.user_id",
            "ratings_users.rating_date_utc",
            "ratings_users.user_trialist",
            "ratings_users.user_subscriber",
            "ratings_users.user_avatar_image_url",
            "ratings_users.*",
            "lists_users.user_id",
            "lists_users.list_id",
            "lists_users.list_update_date_utc",
            "lists_users.list_creation_date_utc",
            "lists_users.user_trialist",
            "lists_users.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[ratings]",
            "COLUMN:[ratings].[user_id]",
            "COLUMN:[ratings].[rating_url]",
            "COLUMN:[ratings].[critic_likes]",
            "COLUMN:[ratings].[movie_id]",
            "COLUMN:[ratings].[rating_id]",
            "COLUMN:[ratings].[*]",
            "TABLE:[movies]",
            "COLUMN:[movies].[movie_title]",
            "COLUMN:[movies].[movie_id]",
            "COLUMN:[movies].[movie_url]",
            "COLUMN:[movies].[movie_release_year]",
            "COLUMN:[movies].[movie_title_language]",
            "COLUMN:[movies].[*]",
            "TABLE:[ratings_users]",
            "COLUMN:[ratings_users].[user_id]",
            "COLUMN:[ratings_users].[rating_date_utc]",
            "COLUMN:[ratings_users].[user_trialist]",
            "COLUMN:[ratings_users].[user_subscriber]",
            "COLUMN:[ratings_users].[user_avatar_image_url]",
            "COLUMN:[ratings_users].[*]",
            "TABLE:[lists_users]",
            "COLUMN:[lists_users].[user_id]",
            "COLUMN:[lists_users].[list_id]",
            "COLUMN:[lists_users].[list_update_date_utc]",
            "COLUMN:[lists_users].[list_creation_date_utc]",
            "COLUMN:[lists_users].[user_trialist]",
            "COLUMN:[lists_users].[*]"
        ],
        "schema": "'[lists]':\n  '[list_id]':\n    primary_key: true\n    type: integer\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[lists_users]':\n  '[list_creation_date_utc]': text\n  '[list_id]':\n    foreign_key: '[lists].[list_id]'\n    primary_key: true\n    type: integer\n  '[list_update_date_utc]': text\n  '[user_id]':\n    foreign_key: '[lists].[user_id]'\n    primary_key: true\n    type: integer\n  '[user_trialist]': integer\n'[movies]':\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_release_year]': integer\n  '[movie_title]': text\n  '[movie_title_language]': text\n  '[movie_url]': text\n'[ratings]':\n  '[critic_likes]': integer\n  '[movie_id]':\n    foreign_key: '[movies].[movie_id]'\n    type: integer\n  '[rating_id]': integer\n  '[rating_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[ratings_users]':\n  '[rating_date_utc]': text\n  '[user_avatar_image_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n  '[user_subscriber]': integer\n  '[user_trialist]': integer\n",
        "gold_links": {
            "URL": "COLUMN:[ratings].[rating_url]",
            "rating": "TABLE:[ratings]",
            "Mubi": "TABLE:[ratings]",
            "user 45579900": "VALUE:[ratings].[user_id]",
            "45579900": "VALUE:[ratings].[user_id]",
            "movie": "TABLE:[movies]",
            "The Vertical Ray of the Sun": "VALUE:[movies].[movie_title]",
            "20 likes": "VALUE:[ratings].[critic_likes]",
            "20": "VALUE:[ratings].[critic_likes]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[lists]",
                "[C1]": "[lists].[list_id]",
                "[C2]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[C3]": "[lists_users].[list_creation_date_utc]",
                "[C4]": "[lists_users].[list_id]",
                "[C5]": "[lists_users].[list_update_date_utc]",
                "[C6]": "[lists_users].[user_id]",
                "[C7]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[C8]": "[movies].[movie_id]",
                "[C9]": "[movies].[movie_release_year]",
                "[C10]": "[movies].[movie_title]",
                "[C11]": "[movies].[movie_title_language]",
                "[C12]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[C13]": "[ratings].[critic_likes]",
                "[C14]": "[ratings].[movie_id]",
                "[C15]": "[ratings].[rating_id]",
                "[C16]": "[ratings].[rating_url]",
                "[C17]": "[ratings].[user_id]",
                "[T5]": "[ratings_users]",
                "[C18]": "[ratings_users].[rating_date_utc]",
                "[C19]": "[ratings_users].[user_avatar_image_url]",
                "[C20]": "[ratings_users].[user_id]",
                "[C21]": "[ratings_users].[user_subscriber]",
                "[C22]": "[ratings_users].[user_trialist]"
            },
            "to_symbol": {
                "[lists]": "[T1]",
                "[lists].[list_id]": "[C1]",
                "[lists].[user_id]": "[C2]",
                "[lists_users]": "[T2]",
                "[lists_users].[list_creation_date_utc]": "[C3]",
                "[lists_users].[list_id]": "[C4]",
                "[lists_users].[list_update_date_utc]": "[C5]",
                "[lists_users].[user_id]": "[C6]",
                "[lists_users].[user_trialist]": "[C7]",
                "[movies]": "[T3]",
                "[movies].[movie_id]": "[C8]",
                "[movies].[movie_release_year]": "[C9]",
                "[movies].[movie_title]": "[C10]",
                "[movies].[movie_title_language]": "[C11]",
                "[movies].[movie_url]": "[C12]",
                "[ratings]": "[T4]",
                "[ratings].[critic_likes]": "[C13]",
                "[ratings].[movie_id]": "[C14]",
                "[ratings].[rating_id]": "[C15]",
                "[ratings].[rating_url]": "[C16]",
                "[ratings].[user_id]": "[C17]",
                "[ratings_users]": "[T5]",
                "[ratings_users].[rating_date_utc]": "[C18]",
                "[ratings_users].[user_avatar_image_url]": "[C19]",
                "[ratings_users].[user_id]": "[C20]",
                "[ratings_users].[user_subscriber]": "[C21]",
                "[ratings_users].[user_trialist]": "[C22]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T2]':\n  '[C3]': text\n  '[C4]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T1].[C2]'\n    primary_key: true\n    type: integer\n  '[C7]': integer\n'[T3]':\n  '[C10]': text\n  '[C11]': text\n  '[C12]': text\n  '[C8]':\n    primary_key: true\n    type: integer\n  '[C9]': integer\n'[T4]':\n  '[C13]': integer\n  '[C14]':\n    foreign_key: '[T3].[C8]'\n    type: integer\n  '[C15]': integer\n  '[C16]': text\n  '[C17]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T5]':\n  '[C18]': text\n  '[C19]': text\n  '[C20]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n  '[C21]': integer\n  '[C22]': integer\n",
            "reverse_dict": {
                "[T1]": "[lists]",
                "[T1].[C1]": "[lists].[list_id]",
                "[C1]": "[lists].[list_id]",
                "[T1].[C2]": "[lists].[user_id]",
                "[C2]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[T2].[C3]": "[lists_users].[list_creation_date_utc]",
                "[C3]": "[lists_users].[list_creation_date_utc]",
                "[T2].[C4]": "[lists_users].[list_id]",
                "[C4]": "[lists_users].[list_id]",
                "[T2].[C5]": "[lists_users].[list_update_date_utc]",
                "[C5]": "[lists_users].[list_update_date_utc]",
                "[T2].[C6]": "[lists_users].[user_id]",
                "[C6]": "[lists_users].[user_id]",
                "[T2].[C7]": "[lists_users].[user_trialist]",
                "[C7]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[T3].[C8]": "[movies].[movie_id]",
                "[C8]": "[movies].[movie_id]",
                "[T3].[C9]": "[movies].[movie_release_year]",
                "[C9]": "[movies].[movie_release_year]",
                "[T3].[C10]": "[movies].[movie_title]",
                "[C10]": "[movies].[movie_title]",
                "[T3].[C11]": "[movies].[movie_title_language]",
                "[C11]": "[movies].[movie_title_language]",
                "[T3].[C12]": "[movies].[movie_url]",
                "[C12]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[T4].[C13]": "[ratings].[critic_likes]",
                "[C13]": "[ratings].[critic_likes]",
                "[T4].[C14]": "[ratings].[movie_id]",
                "[C14]": "[ratings].[movie_id]",
                "[T4].[C15]": "[ratings].[rating_id]",
                "[C15]": "[ratings].[rating_id]",
                "[T4].[C16]": "[ratings].[rating_url]",
                "[C16]": "[ratings].[rating_url]",
                "[T4].[C17]": "[ratings].[user_id]",
                "[C17]": "[ratings].[user_id]",
                "[T5]": "[ratings_users]",
                "[T5].[C18]": "[ratings_users].[rating_date_utc]",
                "[C18]": "[ratings_users].[rating_date_utc]",
                "[T5].[C19]": "[ratings_users].[user_avatar_image_url]",
                "[C19]": "[ratings_users].[user_avatar_image_url]",
                "[T5].[C20]": "[ratings_users].[user_id]",
                "[C20]": "[ratings_users].[user_id]",
                "[T5].[C21]": "[ratings_users].[user_subscriber]",
                "[C21]": "[ratings_users].[user_subscriber]",
                "[T5].[C22]": "[ratings_users].[user_trialist]",
                "[C22]": "[ratings_users].[user_trialist]"
            },
            "question": "What is the [C16] to the [C16] on [V1] made by [C17] [V2] for the [T3] \"[V3]\" that received [V4] [C13]? [C16] refer to rating_url; [V4] [C13] refer to critic_likes = \u2019[V4]\u2019; [C17] [V2] refer to user_id; [V1] is a value of the column [C12]; [V2] is a value of the column [C20]; [V3] is a value of the column [C10]; [V4] is a value of the column [C13]",
            "to_value": {
                "[V1]": "Mubi",
                "[V2]": "45579900",
                "[V3]": "The Vertical Ray of the Sun",
                "[V4]": "20"
            },
            "masked": 12,
            "masked_terms": [
                "Mubi",
                "45579900",
                "The Vertical Ray of the Sun",
                "20",
                "url",
                "rating",
                "mubi",
                "user",
                "45579900",
                "movie",
                "The Vertical Ray of the Sun",
                "likes"
            ],
            "sql": "SELECT [T4].[C16] FROM [T4] JOIN [T3] ON [T4].[C14] = [T3].[C8] JOIN [T5] ON [T4].[C17] = [T5].[C20] WHERE [T3].[C12] = '[V1]' AND [T4].[C17] = (SELECT [C20] FROM [T5] WHERE [T5].[C20] = [T4].[C17] AND [T5].[C20] = '[V2]') AND [T3].[C10] = '[V3]' AND [T4].[C13] = '[V4]'",
            "repaired_sql": "SELECT [T4].[C16] FROM [T4] JOIN [T3] ON [T4].[C14] = [T3].[C8] WHERE [T4].[C16] <> '' AND [T3].[C10] = '[V3]' AND [T3].[C12] = '[V1]' AND [T4].[C17] = [V2] AND [T4].[C13] = [V4];"
        },
        "values": [
            "Mubi",
            "45579900",
            "The Vertical Ray of the Sun",
            "20"
        ],
        "value_links": {
            "Mubi": "[movies].[movie_url]",
            "45579900": "[ratings_users].[user_id]",
            "The Vertical Ray of the Sun": "[movies].[movie_title]",
            "20": "[ratings].[critic_likes]"
        },
        "filtered_value_links": {
            "Mubi": "[movies].[movie_url]",
            "45579900": "[ratings_users].[user_id]",
            "The Vertical Ray of the Sun": "[movies].[movie_title]",
            "20": "[ratings].[critic_likes]"
        },
        "schema_links": {
            "url": "COLUMN:[ratings].[rating_url]",
            "rating": "COLUMN:[ratings].[rating_url]",
            "mubi": "TABLE:[ratings]",
            "user": "COLUMN:[ratings].[user_id]",
            "45579900": "COLUMN:[ratings].[user_id]",
            "movie": "TABLE:[movies]",
            "The Vertical Ray of the Sun": "COLUMN:[movies].[movie_title]",
            "likes": "COLUMN:[ratings].[critic_likes]"
        },
        "filtered_schema_links": {
            "url": "COLUMN:[ratings].[rating_url]",
            "rating": "COLUMN:[ratings].[rating_url]",
            "mubi": "TABLE:[ratings]",
            "user": "COLUMN:[ratings].[user_id]",
            "45579900": "COLUMN:[ratings].[user_id]",
            "movie": "TABLE:[movies]",
            "The Vertical Ray of the Sun": "COLUMN:[movies].[movie_title]",
            "likes": "COLUMN:[ratings].[critic_likes]"
        },
        "attack": "What is the rating_url to the rating_url on [value of C12] made by user_id [value of C20] for the [T3] \"[value of C10]\" that received [value of C13] critic_likes?"
    },
    {
        "db_id": "movie_platform",
        "question": "Where can I find the movie list \"Short and pretty damn sweet\"? Short and pretty damn sweet is list_title; location of the movie refers to list_url;",
        "evidence": "Short and pretty damn sweet is list_title; location of the movie refers to list_url;",
        "SQL": "SELECT list_url FROM lists WHERE list_title = 'Short and pretty damn sweet'",
        "query": "SELECT list_url FROM lists WHERE list_title = 'Short and pretty damn sweet'",
        "evidence_added": true,
        "question_toks": [
            "Where",
            "can",
            "I",
            "find",
            "the",
            "movie",
            "list",
            "\"Short",
            "and",
            "pretty",
            "damn",
            "sweet\"",
            "?",
            "Short",
            "and",
            "pretty",
            "damn",
            "sweet",
            "is",
            "list_title",
            ";",
            "location",
            "of",
            "the",
            "movie",
            "refers",
            "to",
            "list_url",
            ";"
        ],
        "tc_original": [
            "movies.movie_title",
            "movies.movie_url",
            "movies.movie_id",
            "movies.movie_title_language",
            "movies.movie_popularity",
            "movies.*",
            "lists.list_title",
            "lists.list_id",
            "lists.list_url",
            "lists.user_id",
            "lists.list_movie_number",
            "lists.*",
            "ratings_users.user_id",
            "ratings_users.rating_date_utc",
            "ratings_users.user_trialist",
            "ratings_users.user_subscriber",
            "ratings_users.user_avatar_image_url",
            "ratings_users.*",
            "lists_users.user_id",
            "lists_users.list_id",
            "lists_users.list_update_date_utc",
            "lists_users.list_creation_date_utc",
            "lists_users.user_trialist",
            "lists_users.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movies]",
            "COLUMN:[movies].[movie_title]",
            "COLUMN:[movies].[movie_url]",
            "COLUMN:[movies].[movie_id]",
            "COLUMN:[movies].[movie_title_language]",
            "COLUMN:[movies].[movie_popularity]",
            "COLUMN:[movies].[*]",
            "TABLE:[lists]",
            "COLUMN:[lists].[list_title]",
            "COLUMN:[lists].[list_id]",
            "COLUMN:[lists].[list_url]",
            "COLUMN:[lists].[user_id]",
            "COLUMN:[lists].[list_movie_number]",
            "COLUMN:[lists].[*]",
            "TABLE:[ratings_users]",
            "COLUMN:[ratings_users].[user_id]",
            "COLUMN:[ratings_users].[rating_date_utc]",
            "COLUMN:[ratings_users].[user_trialist]",
            "COLUMN:[ratings_users].[user_subscriber]",
            "COLUMN:[ratings_users].[user_avatar_image_url]",
            "COLUMN:[ratings_users].[*]",
            "TABLE:[lists_users]",
            "COLUMN:[lists_users].[user_id]",
            "COLUMN:[lists_users].[list_id]",
            "COLUMN:[lists_users].[list_update_date_utc]",
            "COLUMN:[lists_users].[list_creation_date_utc]",
            "COLUMN:[lists_users].[user_trialist]",
            "COLUMN:[lists_users].[*]"
        ],
        "schema": "'[lists]':\n  '[list_id]':\n    primary_key: true\n    type: integer\n  '[list_movie_number]': integer\n  '[list_title]': text\n  '[list_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[lists_users]':\n  '[list_creation_date_utc]': text\n  '[list_id]':\n    foreign_key: '[lists].[list_id]'\n    primary_key: true\n    type: integer\n  '[list_update_date_utc]': text\n  '[user_id]':\n    foreign_key: '[lists].[user_id]'\n    primary_key: true\n    type: integer\n  '[user_trialist]': integer\n'[movies]':\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_popularity]': integer\n  '[movie_title]': text\n  '[movie_title_language]': text\n  '[movie_url]': text\n'[ratings_users]':\n  '[rating_date_utc]': text\n  '[user_avatar_image_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n  '[user_subscriber]': integer\n  '[user_trialist]': integer\n",
        "gold_links": {
            "movie list": "TABLE:[lists]",
            "Short and pretty damn sweet": "VALUE:[lists].[list_title]",
            "list_title": "COLUMN:[lists].[list_title]",
            "location": "COLUMN:[lists].[list_url]",
            "list_url": "COLUMN:[lists].[list_url]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[lists]",
                "[C1]": "[lists].[list_id]",
                "[C2]": "[lists].[list_movie_number]",
                "[C3]": "[lists].[list_title]",
                "[C4]": "[lists].[list_url]",
                "[C5]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[C6]": "[lists_users].[list_creation_date_utc]",
                "[C7]": "[lists_users].[list_id]",
                "[C8]": "[lists_users].[list_update_date_utc]",
                "[C9]": "[lists_users].[user_id]",
                "[C10]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[C11]": "[movies].[movie_id]",
                "[C12]": "[movies].[movie_popularity]",
                "[C13]": "[movies].[movie_title]",
                "[C14]": "[movies].[movie_title_language]",
                "[C15]": "[movies].[movie_url]",
                "[T4]": "[ratings_users]",
                "[C16]": "[ratings_users].[rating_date_utc]",
                "[C17]": "[ratings_users].[user_avatar_image_url]",
                "[C18]": "[ratings_users].[user_id]",
                "[C19]": "[ratings_users].[user_subscriber]",
                "[C20]": "[ratings_users].[user_trialist]"
            },
            "to_symbol": {
                "[lists]": "[T1]",
                "[lists].[list_id]": "[C1]",
                "[lists].[list_movie_number]": "[C2]",
                "[lists].[list_title]": "[C3]",
                "[lists].[list_url]": "[C4]",
                "[lists].[user_id]": "[C5]",
                "[lists_users]": "[T2]",
                "[lists_users].[list_creation_date_utc]": "[C6]",
                "[lists_users].[list_id]": "[C7]",
                "[lists_users].[list_update_date_utc]": "[C8]",
                "[lists_users].[user_id]": "[C9]",
                "[lists_users].[user_trialist]": "[C10]",
                "[movies]": "[T3]",
                "[movies].[movie_id]": "[C11]",
                "[movies].[movie_popularity]": "[C12]",
                "[movies].[movie_title]": "[C13]",
                "[movies].[movie_title_language]": "[C14]",
                "[movies].[movie_url]": "[C15]",
                "[ratings_users]": "[T4]",
                "[ratings_users].[rating_date_utc]": "[C16]",
                "[ratings_users].[user_avatar_image_url]": "[C17]",
                "[ratings_users].[user_id]": "[C18]",
                "[ratings_users].[user_subscriber]": "[C19]",
                "[ratings_users].[user_trialist]": "[C20]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]':\n    foreign_key: '[T2].[C9]'\n    type: integer\n'[T2]':\n  '[C10]': integer\n  '[C6]': text\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]':\n    foreign_key: '[T1].[C5]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': text\n  '[C14]': text\n  '[C15]': text\n'[T4]':\n  '[C16]': text\n  '[C17]': text\n  '[C18]':\n    foreign_key: '[T2].[C9]'\n    type: integer\n  '[C19]': integer\n  '[C20]': integer\n",
            "reverse_dict": {
                "[T1]": "[lists]",
                "[T1].[C1]": "[lists].[list_id]",
                "[C1]": "[lists].[list_id]",
                "[T1].[C2]": "[lists].[list_movie_number]",
                "[C2]": "[lists].[list_movie_number]",
                "[T1].[C3]": "[lists].[list_title]",
                "[C3]": "[lists].[list_title]",
                "[T1].[C4]": "[lists].[list_url]",
                "[C4]": "[lists].[list_url]",
                "[T1].[C5]": "[lists].[user_id]",
                "[C5]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[T2].[C6]": "[lists_users].[list_creation_date_utc]",
                "[C6]": "[lists_users].[list_creation_date_utc]",
                "[T2].[C7]": "[lists_users].[list_id]",
                "[C7]": "[lists_users].[list_id]",
                "[T2].[C8]": "[lists_users].[list_update_date_utc]",
                "[C8]": "[lists_users].[list_update_date_utc]",
                "[T2].[C9]": "[lists_users].[user_id]",
                "[C9]": "[lists_users].[user_id]",
                "[T2].[C10]": "[lists_users].[user_trialist]",
                "[C10]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[T3].[C11]": "[movies].[movie_id]",
                "[C11]": "[movies].[movie_id]",
                "[T3].[C12]": "[movies].[movie_popularity]",
                "[C12]": "[movies].[movie_popularity]",
                "[T3].[C13]": "[movies].[movie_title]",
                "[C13]": "[movies].[movie_title]",
                "[T3].[C14]": "[movies].[movie_title_language]",
                "[C14]": "[movies].[movie_title_language]",
                "[T3].[C15]": "[movies].[movie_url]",
                "[C15]": "[movies].[movie_url]",
                "[T4]": "[ratings_users]",
                "[T4].[C16]": "[ratings_users].[rating_date_utc]",
                "[C16]": "[ratings_users].[rating_date_utc]",
                "[T4].[C17]": "[ratings_users].[user_avatar_image_url]",
                "[C17]": "[ratings_users].[user_avatar_image_url]",
                "[T4].[C18]": "[ratings_users].[user_id]",
                "[C18]": "[ratings_users].[user_id]",
                "[T4].[C19]": "[ratings_users].[user_subscriber]",
                "[C19]": "[ratings_users].[user_subscriber]",
                "[T4].[C20]": "[ratings_users].[user_trialist]",
                "[C20]": "[ratings_users].[user_trialist]"
            },
            "question": "Where can I find the [T3] \"[V1]\"? [V1] is [V2]; location of the movie refers to [V3];; [V1] is a value of the column [C3]; [V2] is a value of the column [C3]; [V3] is a value of the column [C4]",
            "to_value": {
                "[V1]": "Short and pretty damn sweet",
                "[V2]": "list_title",
                "[V3]": "list_url"
            },
            "masked": 6,
            "masked_terms": [
                "Short and pretty damn sweet",
                "list_title",
                "list_url",
                "movie list",
                "list_title",
                "list_url"
            ],
            "sql": "SELECT [T3].[C14] FROM [T3] WHERE [T3].[C13] = '[V2]'",
            "repaired_sql": "SELECT [T3].[C14] FROM [T3] WHERE [T3].[C13] = '[V1]'"
        },
        "values": [
            "Short and pretty damn sweet",
            "list_title",
            "list_url"
        ],
        "value_links": {
            "Short and pretty damn sweet": "[lists].[list_title]",
            "list_title": "[lists].[list_title]",
            "list_url": "[lists].[list_url]"
        },
        "filtered_value_links": {
            "Short and pretty damn sweet": "[lists].[list_title]",
            "list_title": "[lists].[list_title]",
            "list_url": "[lists].[list_url]"
        },
        "schema_links": {
            "movie list": "TABLE:[movies]",
            "list_title": "COLUMN:[lists].[list_title]",
            "list_url": "COLUMN:[lists].[list_url]"
        },
        "filtered_schema_links": {
            "movie list": "TABLE:[movies]",
            "list_title": "COLUMN:[lists].[list_title]",
            "list_url": "COLUMN:[lists].[list_url]"
        },
        "attack": "Where can I find the movie \"Inception\"? Inception is a movie; location of the movie refers to theater; Inception is a value of the column title; movie is a value of the column title; theater is a value of the column location."
    },
    {
        "db_id": "movie_platform",
        "question": "Please list all the critics made by the user rating the movie \"A Way of Life\". A Way of Life refers to movie_title;",
        "evidence": "A Way of Life refers to movie_title;",
        "SQL": "SELECT T1.critic FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'A Way of Life'",
        "query": "SELECT T1.critic FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'A Way of Life'",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "list",
            "all",
            "the",
            "critics",
            "made",
            "by",
            "the",
            "user",
            "rating",
            "the",
            "movie",
            "\"A",
            "Way",
            "of",
            "Life\"",
            ".",
            "A",
            "Way",
            "of",
            "Life",
            "refers",
            "to",
            "movie_title",
            ";"
        ],
        "tc_original": [
            "ratings.critic",
            "ratings.movie_id",
            "ratings.user_id",
            "ratings.rating_id",
            "ratings.rating_url",
            "ratings.*",
            "movies.movie_title",
            "movies.movie_id",
            "movies.movie_release_year",
            "movies.movie_url",
            "movies.movie_title_language",
            "movies.*",
            "ratings_users.user_id",
            "ratings_users.rating_date_utc",
            "ratings_users.user_trialist",
            "ratings_users.user_subscriber",
            "ratings_users.user_avatar_image_url",
            "ratings_users.*",
            "lists.user_id",
            "lists.list_id",
            "lists.list_title",
            "lists.list_movie_number",
            "lists.list_update_timestamp_utc",
            "lists.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[ratings]",
            "COLUMN:[ratings].[critic]",
            "COLUMN:[ratings].[movie_id]",
            "COLUMN:[ratings].[user_id]",
            "COLUMN:[ratings].[rating_id]",
            "COLUMN:[ratings].[rating_url]",
            "COLUMN:[ratings].[*]",
            "TABLE:[movies]",
            "COLUMN:[movies].[movie_title]",
            "COLUMN:[movies].[movie_id]",
            "COLUMN:[movies].[movie_release_year]",
            "COLUMN:[movies].[movie_url]",
            "COLUMN:[movies].[movie_title_language]",
            "COLUMN:[movies].[*]",
            "TABLE:[ratings_users]",
            "COLUMN:[ratings_users].[user_id]",
            "COLUMN:[ratings_users].[rating_date_utc]",
            "COLUMN:[ratings_users].[user_trialist]",
            "COLUMN:[ratings_users].[user_subscriber]",
            "COLUMN:[ratings_users].[user_avatar_image_url]",
            "COLUMN:[ratings_users].[*]",
            "TABLE:[lists]",
            "COLUMN:[lists].[user_id]",
            "COLUMN:[lists].[list_id]",
            "COLUMN:[lists].[list_title]",
            "COLUMN:[lists].[list_movie_number]",
            "COLUMN:[lists].[list_update_timestamp_utc]",
            "COLUMN:[lists].[*]"
        ],
        "schema": "'[lists]':\n  '[list_id]':\n    primary_key: true\n    type: integer\n  '[list_movie_number]': integer\n  '[list_title]': text\n  '[list_update_timestamp_utc]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[lists_users]':\n  '[user_id]':\n    foreign_key: '[lists].[user_id]'\n    primary_key: true\n    type: integer\n'[movies]':\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_release_year]': integer\n  '[movie_title]': text\n  '[movie_title_language]': text\n  '[movie_url]': text\n'[ratings]':\n  '[critic]': text\n  '[movie_id]':\n    foreign_key: '[movies].[movie_id]'\n    type: integer\n  '[rating_id]': integer\n  '[rating_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[ratings_users]':\n  '[rating_date_utc]': text\n  '[user_avatar_image_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n  '[user_subscriber]': integer\n  '[user_trialist]': integer\n",
        "gold_links": {
            "critics": "COLUMN:[ratings].[critic]",
            "user": "COLUMN:[ratings].[user_id]",
            "rating": "COLUMN:[ratings].[user_id]",
            "movie": "TABLE:[movies]",
            "A Way of Life": "VALUE:[movies].[movie_title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[lists]",
                "[C1]": "[lists].[list_id]",
                "[C2]": "[lists].[list_movie_number]",
                "[C3]": "[lists].[list_title]",
                "[C4]": "[lists].[list_update_timestamp_utc]",
                "[C5]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[C6]": "[lists_users].[user_id]",
                "[T3]": "[movies]",
                "[C7]": "[movies].[movie_id]",
                "[C8]": "[movies].[movie_release_year]",
                "[C9]": "[movies].[movie_title]",
                "[C10]": "[movies].[movie_title_language]",
                "[C11]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[C12]": "[ratings].[critic]",
                "[C13]": "[ratings].[movie_id]",
                "[C14]": "[ratings].[rating_id]",
                "[C15]": "[ratings].[rating_url]",
                "[C16]": "[ratings].[user_id]",
                "[T5]": "[ratings_users]",
                "[C17]": "[ratings_users].[rating_date_utc]",
                "[C18]": "[ratings_users].[user_avatar_image_url]",
                "[C19]": "[ratings_users].[user_id]",
                "[C20]": "[ratings_users].[user_subscriber]",
                "[C21]": "[ratings_users].[user_trialist]"
            },
            "to_symbol": {
                "[lists]": "[T1]",
                "[lists].[list_id]": "[C1]",
                "[lists].[list_movie_number]": "[C2]",
                "[lists].[list_title]": "[C3]",
                "[lists].[list_update_timestamp_utc]": "[C4]",
                "[lists].[user_id]": "[C5]",
                "[lists_users]": "[T2]",
                "[lists_users].[user_id]": "[C6]",
                "[movies]": "[T3]",
                "[movies].[movie_id]": "[C7]",
                "[movies].[movie_release_year]": "[C8]",
                "[movies].[movie_title]": "[C9]",
                "[movies].[movie_title_language]": "[C10]",
                "[movies].[movie_url]": "[C11]",
                "[ratings]": "[T4]",
                "[ratings].[critic]": "[C12]",
                "[ratings].[movie_id]": "[C13]",
                "[ratings].[rating_id]": "[C14]",
                "[ratings].[rating_url]": "[C15]",
                "[ratings].[user_id]": "[C16]",
                "[ratings_users]": "[T5]",
                "[ratings_users].[rating_date_utc]": "[C17]",
                "[ratings_users].[user_avatar_image_url]": "[C18]",
                "[ratings_users].[user_id]": "[C19]",
                "[ratings_users].[user_subscriber]": "[C20]",
                "[ratings_users].[user_trialist]": "[C21]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T2]':\n  '[C6]':\n    foreign_key: '[T1].[C5]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C10]': text\n  '[C11]': text\n  '[C7]':\n    primary_key: true\n    type: integer\n  '[C8]': integer\n  '[C9]': text\n'[T4]':\n  '[C12]': text\n  '[C13]':\n    foreign_key: '[T3].[C7]'\n    type: integer\n  '[C14]': integer\n  '[C15]': text\n  '[C16]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T5]':\n  '[C17]': text\n  '[C18]': text\n  '[C19]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n  '[C20]': integer\n  '[C21]': integer\n",
            "reverse_dict": {
                "[T1]": "[lists]",
                "[T1].[C1]": "[lists].[list_id]",
                "[C1]": "[lists].[list_id]",
                "[T1].[C2]": "[lists].[list_movie_number]",
                "[C2]": "[lists].[list_movie_number]",
                "[T1].[C3]": "[lists].[list_title]",
                "[C3]": "[lists].[list_title]",
                "[T1].[C4]": "[lists].[list_update_timestamp_utc]",
                "[C4]": "[lists].[list_update_timestamp_utc]",
                "[T1].[C5]": "[lists].[user_id]",
                "[C5]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[T2].[C6]": "[lists_users].[user_id]",
                "[C6]": "[lists_users].[user_id]",
                "[T3]": "[movies]",
                "[T3].[C7]": "[movies].[movie_id]",
                "[C7]": "[movies].[movie_id]",
                "[T3].[C8]": "[movies].[movie_release_year]",
                "[C8]": "[movies].[movie_release_year]",
                "[T3].[C9]": "[movies].[movie_title]",
                "[C9]": "[movies].[movie_title]",
                "[T3].[C10]": "[movies].[movie_title_language]",
                "[C10]": "[movies].[movie_title_language]",
                "[T3].[C11]": "[movies].[movie_url]",
                "[C11]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[T4].[C12]": "[ratings].[critic]",
                "[C12]": "[ratings].[critic]",
                "[T4].[C13]": "[ratings].[movie_id]",
                "[C13]": "[ratings].[movie_id]",
                "[T4].[C14]": "[ratings].[rating_id]",
                "[C14]": "[ratings].[rating_id]",
                "[T4].[C15]": "[ratings].[rating_url]",
                "[C15]": "[ratings].[rating_url]",
                "[T4].[C16]": "[ratings].[user_id]",
                "[C16]": "[ratings].[user_id]",
                "[T5]": "[ratings_users]",
                "[T5].[C17]": "[ratings_users].[rating_date_utc]",
                "[C17]": "[ratings_users].[rating_date_utc]",
                "[T5].[C18]": "[ratings_users].[user_avatar_image_url]",
                "[C18]": "[ratings_users].[user_avatar_image_url]",
                "[T5].[C19]": "[ratings_users].[user_id]",
                "[C19]": "[ratings_users].[user_id]",
                "[T5].[C20]": "[ratings_users].[user_subscriber]",
                "[C20]": "[ratings_users].[user_subscriber]",
                "[T5].[C21]": "[ratings_users].[user_trialist]",
                "[C21]": "[ratings_users].[user_trialist]"
            },
            "question": "Please list all the critics made by the [C16] the [T3] \"[V1]\". [V1] refers to movie_title;; [V1] is a value of the column [C9]",
            "to_value": {
                "[V1]": "A Way of Life"
            },
            "masked": 5,
            "masked_terms": [
                "A Way of Life",
                "critic",
                "user rating",
                "A Way of Life",
                "movie"
            ],
            "sql": "SELECT [T4].* FROM [T4] INNER JOIN [T3] ON [T4].[C13] = [T3].[C7] WHERE [T3].[C9] = '[V1]'",
            "repaired_sql": "SELECT [T4].[C12] FROM [T4] JOIN [T3] ON [T4].[C13] = [T3].[C7] WHERE [T3].[C9] = '[V1]'"
        },
        "values": [
            "A Way of Life"
        ],
        "value_links": {
            "A Way of Life": "[movies].[movie_title]"
        },
        "filtered_value_links": {
            "A Way of Life": "[movies].[movie_title]"
        },
        "schema_links": {
            "critic": "COLUMN:[ratings].[critic]",
            "user rating": "COLUMN:[ratings].[user_id]",
            "A Way of Life": "COLUMN:[movies].[movie_title]",
            "movie": "TABLE:[movies]"
        },
        "filtered_schema_links": {
            "critic": "COLUMN:[ratings].[critic]",
            "user rating": "COLUMN:[ratings].[user_id]",
            "A Way of Life": "COLUMN:[movies].[movie_title]",
            "movie": "TABLE:[movies]"
        },
        "attack": "Please list all the critics made by the director of the movie \"The Godfather\". \"The Godfather\" refers to movie_title; \"The Godfather\" is a value of the column movie_title."
    },
    {
        "db_id": "movie_platform",
        "question": "Was user 39115684 a trialist when he or she rated the movie \"A Way of Life\"? A Way of Life' refers to movie_title; user 39115684 refers to userid = 39115684;\u00a0 the user was a trialist when he rated the movie refers to user_trialist = 1;",
        "evidence": "A Way of Life' refers to movie_title; user 39115684 refers to userid = 39115684;\u00a0 the user was a trialist when he rated the movie refers to user_trialist = 1;",
        "SQL": "SELECT T1.user_trialist FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'A Way of Life' AND T1.user_id = 39115684",
        "query": "SELECT T1.user_trialist FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_title = 'A Way of Life' AND T1.user_id = 39115684",
        "evidence_added": true,
        "question_toks": [
            "Was",
            "user",
            "39115684",
            "a",
            "trialist",
            "when",
            "he",
            "or",
            "she",
            "rated",
            "the",
            "movie",
            "\"A",
            "Way",
            "of",
            "Life\"",
            "?",
            "A",
            "Way",
            "of",
            "Life'",
            "refers",
            "to",
            "movie_title",
            ";",
            "user",
            "39115684",
            "refers",
            "to",
            "userid",
            "=",
            "39115684;\u00a0",
            "the",
            "user",
            "was",
            "a",
            "trialist",
            "when",
            "he",
            "rated",
            "the",
            "movie",
            "refers",
            "to",
            "user_trialist",
            "=",
            "1",
            ";"
        ],
        "tc_original": [
            "movies.movie_title",
            "movies.movie_id",
            "movies.movie_release_year",
            "movies.movie_url",
            "movies.movie_title_language",
            "movies.*",
            "ratings_users.user_trialist",
            "ratings_users.user_id",
            "ratings_users.rating_date_utc",
            "ratings_users.user_subscriber",
            "ratings_users.user_avatar_image_url",
            "ratings_users.*",
            "ratings.movie_id",
            "ratings.user_id",
            "ratings.user_trialist",
            "ratings.critic",
            "ratings.rating_id",
            "ratings.*",
            "lists_users.user_id",
            "lists_users.list_id",
            "lists_users.list_update_date_utc",
            "lists_users.list_creation_date_utc",
            "lists_users.user_trialist",
            "lists_users.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movies]",
            "COLUMN:[movies].[movie_title]",
            "COLUMN:[movies].[movie_id]",
            "COLUMN:[movies].[movie_release_year]",
            "COLUMN:[movies].[movie_url]",
            "COLUMN:[movies].[movie_title_language]",
            "COLUMN:[movies].[*]",
            "TABLE:[ratings_users]",
            "COLUMN:[ratings_users].[user_trialist]",
            "COLUMN:[ratings_users].[user_id]",
            "COLUMN:[ratings_users].[rating_date_utc]",
            "COLUMN:[ratings_users].[user_subscriber]",
            "COLUMN:[ratings_users].[user_avatar_image_url]",
            "COLUMN:[ratings_users].[*]",
            "TABLE:[ratings]",
            "COLUMN:[ratings].[movie_id]",
            "COLUMN:[ratings].[user_id]",
            "COLUMN:[ratings].[user_trialist]",
            "COLUMN:[ratings].[critic]",
            "COLUMN:[ratings].[rating_id]",
            "COLUMN:[ratings].[*]",
            "TABLE:[lists_users]",
            "COLUMN:[lists_users].[user_id]",
            "COLUMN:[lists_users].[list_id]",
            "COLUMN:[lists_users].[list_update_date_utc]",
            "COLUMN:[lists_users].[list_creation_date_utc]",
            "COLUMN:[lists_users].[user_trialist]",
            "COLUMN:[lists_users].[*]"
        ],
        "schema": "'[lists]':\n  '[list_id]':\n    primary_key: true\n    type: integer\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[lists_users]':\n  '[list_creation_date_utc]': text\n  '[list_id]':\n    foreign_key: '[lists].[list_id]'\n    primary_key: true\n    type: integer\n  '[list_update_date_utc]': text\n  '[user_id]':\n    foreign_key: '[lists].[user_id]'\n    primary_key: true\n    type: integer\n  '[user_trialist]': integer\n'[movies]':\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_release_year]': integer\n  '[movie_title]': text\n  '[movie_title_language]': text\n  '[movie_url]': text\n'[ratings]':\n  '[critic]': text\n  '[movie_id]':\n    foreign_key: '[movies].[movie_id]'\n    type: integer\n  '[rating_id]': integer\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n  '[user_trialist]': integer\n'[ratings_users]':\n  '[rating_date_utc]': text\n  '[user_avatar_image_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n  '[user_subscriber]': integer\n  '[user_trialist]': integer\n",
        "gold_links": {
            "user": "COLUMN:[ratings].[user_id]",
            "39115684": "VALUE:[ratings].[user_id]",
            "trialist": "COLUMN:[ratings].[user_trialist]",
            "rated": "TABLE:[ratings]",
            "movie": "TABLE:[movies]",
            "A Way of Life": "VALUE:[movies].[movie_title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[lists]",
                "[C1]": "[lists].[list_id]",
                "[C2]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[C3]": "[lists_users].[list_creation_date_utc]",
                "[C4]": "[lists_users].[list_id]",
                "[C5]": "[lists_users].[list_update_date_utc]",
                "[C6]": "[lists_users].[user_id]",
                "[C7]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[C8]": "[movies].[movie_id]",
                "[C9]": "[movies].[movie_release_year]",
                "[C10]": "[movies].[movie_title]",
                "[C11]": "[movies].[movie_title_language]",
                "[C12]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[C13]": "[ratings].[critic]",
                "[C14]": "[ratings].[movie_id]",
                "[C15]": "[ratings].[rating_id]",
                "[C16]": "[ratings].[user_id]",
                "[C17]": "[ratings].[user_trialist]",
                "[T5]": "[ratings_users]",
                "[C18]": "[ratings_users].[rating_date_utc]",
                "[C19]": "[ratings_users].[user_avatar_image_url]",
                "[C20]": "[ratings_users].[user_id]",
                "[C21]": "[ratings_users].[user_subscriber]",
                "[C22]": "[ratings_users].[user_trialist]"
            },
            "to_symbol": {
                "[lists]": "[T1]",
                "[lists].[list_id]": "[C1]",
                "[lists].[user_id]": "[C2]",
                "[lists_users]": "[T2]",
                "[lists_users].[list_creation_date_utc]": "[C3]",
                "[lists_users].[list_id]": "[C4]",
                "[lists_users].[list_update_date_utc]": "[C5]",
                "[lists_users].[user_id]": "[C6]",
                "[lists_users].[user_trialist]": "[C7]",
                "[movies]": "[T3]",
                "[movies].[movie_id]": "[C8]",
                "[movies].[movie_release_year]": "[C9]",
                "[movies].[movie_title]": "[C10]",
                "[movies].[movie_title_language]": "[C11]",
                "[movies].[movie_url]": "[C12]",
                "[ratings]": "[T4]",
                "[ratings].[critic]": "[C13]",
                "[ratings].[movie_id]": "[C14]",
                "[ratings].[rating_id]": "[C15]",
                "[ratings].[user_id]": "[C16]",
                "[ratings].[user_trialist]": "[C17]",
                "[ratings_users]": "[T5]",
                "[ratings_users].[rating_date_utc]": "[C18]",
                "[ratings_users].[user_avatar_image_url]": "[C19]",
                "[ratings_users].[user_id]": "[C20]",
                "[ratings_users].[user_subscriber]": "[C21]",
                "[ratings_users].[user_trialist]": "[C22]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T2]':\n  '[C3]': text\n  '[C4]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T1].[C2]'\n    primary_key: true\n    type: integer\n  '[C7]': integer\n'[T3]':\n  '[C10]': text\n  '[C11]': text\n  '[C12]': text\n  '[C8]':\n    primary_key: true\n    type: integer\n  '[C9]': integer\n'[T4]':\n  '[C13]': text\n  '[C14]':\n    foreign_key: '[T3].[C8]'\n    type: integer\n  '[C15]': integer\n  '[C16]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n  '[C17]': integer\n'[T5]':\n  '[C18]': text\n  '[C19]': text\n  '[C20]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n  '[C21]': integer\n  '[C22]': integer\n",
            "reverse_dict": {
                "[T1]": "[lists]",
                "[T1].[C1]": "[lists].[list_id]",
                "[C1]": "[lists].[list_id]",
                "[T1].[C2]": "[lists].[user_id]",
                "[C2]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[T2].[C3]": "[lists_users].[list_creation_date_utc]",
                "[C3]": "[lists_users].[list_creation_date_utc]",
                "[T2].[C4]": "[lists_users].[list_id]",
                "[C4]": "[lists_users].[list_id]",
                "[T2].[C5]": "[lists_users].[list_update_date_utc]",
                "[C5]": "[lists_users].[list_update_date_utc]",
                "[T2].[C6]": "[lists_users].[user_id]",
                "[C6]": "[lists_users].[user_id]",
                "[T2].[C7]": "[lists_users].[user_trialist]",
                "[C7]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[T3].[C8]": "[movies].[movie_id]",
                "[C8]": "[movies].[movie_id]",
                "[T3].[C9]": "[movies].[movie_release_year]",
                "[C9]": "[movies].[movie_release_year]",
                "[T3].[C10]": "[movies].[movie_title]",
                "[C10]": "[movies].[movie_title]",
                "[T3].[C11]": "[movies].[movie_title_language]",
                "[C11]": "[movies].[movie_title_language]",
                "[T3].[C12]": "[movies].[movie_url]",
                "[C12]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[T4].[C13]": "[ratings].[critic]",
                "[C13]": "[ratings].[critic]",
                "[T4].[C14]": "[ratings].[movie_id]",
                "[C14]": "[ratings].[movie_id]",
                "[T4].[C15]": "[ratings].[rating_id]",
                "[C15]": "[ratings].[rating_id]",
                "[T4].[C16]": "[ratings].[user_id]",
                "[C16]": "[ratings].[user_id]",
                "[T4].[C17]": "[ratings].[user_trialist]",
                "[C17]": "[ratings].[user_trialist]",
                "[T5]": "[ratings_users]",
                "[T5].[C18]": "[ratings_users].[rating_date_utc]",
                "[C18]": "[ratings_users].[rating_date_utc]",
                "[T5].[C19]": "[ratings_users].[user_avatar_image_url]",
                "[C19]": "[ratings_users].[user_avatar_image_url]",
                "[T5].[C20]": "[ratings_users].[user_id]",
                "[C20]": "[ratings_users].[user_id]",
                "[T5].[C21]": "[ratings_users].[user_subscriber]",
                "[C21]": "[ratings_users].[user_subscriber]",
                "[T5].[C22]": "[ratings_users].[user_trialist]",
                "[C22]": "[ratings_users].[user_trialist]"
            },
            "question": "Was [C20] [V2] a trialist when he or she rated the movie \"[V1]\"? [V1]' refers to movie_title; [C20] [V2] refers to userid = [V2];\u00a0 the [C20] was a trialist when he rated the movie refers to [V3];; [V1] is a value of the column [C10]; [V2] is a value of the column [C20]; [V3] is a value of the column [C22]",
            "to_value": {
                "[V1]": "A Way of Life",
                "[V2]": "39115684",
                "[V3]": "user_trialist = 1"
            },
            "masked": 4,
            "masked_terms": [
                "A Way of Life",
                "39115684",
                "user_trialist = 1",
                "user"
            ],
            "sql": "SELECT [T5].[C22] FROM [T5] INNER JOIN [T3] ON [T5].[C21] = [T3].[C8] WHERE [T3].[C10] = '[V1]' AND [T5].[C20] = [V2]",
            "repaired_sql": "SELECT [T5].[C22] = [V3] FROM [T5] JOIN [T3] ON [T5].[C21] = [T3].[C8] WHERE [T5].[C20] = [V2] AND [T3].[C10] = '[V1]'"
        },
        "values": [
            "A Way of Life",
            "39115684",
            "user_trialist = 1"
        ],
        "value_links": {
            "A Way of Life": "[movies].[movie_title]",
            "39115684": "[ratings_users].[user_id]",
            "user_trialist = 1": "[ratings_users].[user_trialist]"
        },
        "filtered_value_links": {
            "A Way of Life": "[movies].[movie_title]",
            "39115684": "[ratings_users].[user_id]",
            "user_trialist = 1": "[ratings_users].[user_trialist]"
        },
        "schema_links": {
            "user": "COLUMN:[ratings_users].[user_id]"
        },
        "filtered_schema_links": {
            "user": "COLUMN:[ratings_users].[user_id]"
        },
        "attack": "Was userid 12345 a trialist when he or she rated the movie \"The Godfather\"?"
    },
    {
        "db_id": "movie_platform",
        "question": "Who was the director of the movie \"Tokyo Eyes\"\uff1f Tokyo Eyes' is movie_title, director refers to director_name;",
        "evidence": "Tokyo Eyes' is movie_title, director refers to director_name;",
        "SQL": "SELECT director_name FROM movies WHERE movie_title = 'Tokyo Eyes'",
        "query": "SELECT director_name FROM movies WHERE movie_title = 'Tokyo Eyes'",
        "evidence_added": true,
        "question_toks": [
            "Who",
            "was",
            "the",
            "director",
            "of",
            "the",
            "movie",
            "\"Tokyo",
            "Eyes\"\uff1f",
            "Tokyo",
            "Eyes'",
            "is",
            "movie_title",
            ",",
            "director",
            "refers",
            "to",
            "director_name",
            ";"
        ],
        "tc_original": [
            "movies.director_name",
            "movies.movie_title",
            "movies.director_id",
            "movies.movie_id",
            "movies.movie_release_year",
            "movies.*",
            "lists.user_id",
            "lists.list_id",
            "lists.list_title",
            "lists.list_movie_number",
            "lists.list_update_timestamp_utc",
            "lists.*",
            "ratings_users.user_id",
            "ratings_users.rating_date_utc",
            "ratings_users.user_trialist",
            "ratings_users.user_subscriber",
            "ratings_users.user_avatar_image_url",
            "ratings_users.*",
            "lists_users.user_id",
            "lists_users.list_id",
            "lists_users.list_update_date_utc",
            "lists_users.list_creation_date_utc",
            "lists_users.user_trialist",
            "lists_users.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movies]",
            "COLUMN:[movies].[director_name]",
            "COLUMN:[movies].[movie_title]",
            "COLUMN:[movies].[director_id]",
            "COLUMN:[movies].[movie_id]",
            "COLUMN:[movies].[movie_release_year]",
            "COLUMN:[movies].[*]",
            "TABLE:[lists]",
            "COLUMN:[lists].[user_id]",
            "COLUMN:[lists].[list_id]",
            "COLUMN:[lists].[list_title]",
            "COLUMN:[lists].[list_movie_number]",
            "COLUMN:[lists].[list_update_timestamp_utc]",
            "COLUMN:[lists].[*]",
            "TABLE:[ratings_users]",
            "COLUMN:[ratings_users].[user_id]",
            "COLUMN:[ratings_users].[rating_date_utc]",
            "COLUMN:[ratings_users].[user_trialist]",
            "COLUMN:[ratings_users].[user_subscriber]",
            "COLUMN:[ratings_users].[user_avatar_image_url]",
            "COLUMN:[ratings_users].[*]",
            "TABLE:[lists_users]",
            "COLUMN:[lists_users].[user_id]",
            "COLUMN:[lists_users].[list_id]",
            "COLUMN:[lists_users].[list_update_date_utc]",
            "COLUMN:[lists_users].[list_creation_date_utc]",
            "COLUMN:[lists_users].[user_trialist]",
            "COLUMN:[lists_users].[*]"
        ],
        "schema": "'[lists]':\n  '[list_id]':\n    primary_key: true\n    type: integer\n  '[list_movie_number]': integer\n  '[list_title]': text\n  '[list_update_timestamp_utc]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[lists_users]':\n  '[list_creation_date_utc]': text\n  '[list_id]':\n    foreign_key: '[lists].[list_id]'\n    primary_key: true\n    type: integer\n  '[list_update_date_utc]': text\n  '[user_id]':\n    foreign_key: '[lists].[user_id]'\n    primary_key: true\n    type: integer\n  '[user_trialist]': integer\n'[movies]':\n  '[director_id]': text\n  '[director_name]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_release_year]': integer\n  '[movie_title]': text\n'[ratings_users]':\n  '[rating_date_utc]': text\n  '[user_avatar_image_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n  '[user_subscriber]': integer\n  '[user_trialist]': integer\n",
        "gold_links": {
            "director": "COLUMN:[movies].[director_name]",
            "movie": "TABLE:[movies]",
            "Tokyo Eyes": "VALUE:[movies].[movie_title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[lists]",
                "[C1]": "[lists].[list_id]",
                "[C2]": "[lists].[list_movie_number]",
                "[C3]": "[lists].[list_title]",
                "[C4]": "[lists].[list_update_timestamp_utc]",
                "[C5]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[C6]": "[lists_users].[list_creation_date_utc]",
                "[C7]": "[lists_users].[list_id]",
                "[C8]": "[lists_users].[list_update_date_utc]",
                "[C9]": "[lists_users].[user_id]",
                "[C10]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[C11]": "[movies].[director_id]",
                "[C12]": "[movies].[director_name]",
                "[C13]": "[movies].[movie_id]",
                "[C14]": "[movies].[movie_release_year]",
                "[C15]": "[movies].[movie_title]",
                "[T4]": "[ratings_users]",
                "[C16]": "[ratings_users].[rating_date_utc]",
                "[C17]": "[ratings_users].[user_avatar_image_url]",
                "[C18]": "[ratings_users].[user_id]",
                "[C19]": "[ratings_users].[user_subscriber]",
                "[C20]": "[ratings_users].[user_trialist]"
            },
            "to_symbol": {
                "[lists]": "[T1]",
                "[lists].[list_id]": "[C1]",
                "[lists].[list_movie_number]": "[C2]",
                "[lists].[list_title]": "[C3]",
                "[lists].[list_update_timestamp_utc]": "[C4]",
                "[lists].[user_id]": "[C5]",
                "[lists_users]": "[T2]",
                "[lists_users].[list_creation_date_utc]": "[C6]",
                "[lists_users].[list_id]": "[C7]",
                "[lists_users].[list_update_date_utc]": "[C8]",
                "[lists_users].[user_id]": "[C9]",
                "[lists_users].[user_trialist]": "[C10]",
                "[movies]": "[T3]",
                "[movies].[director_id]": "[C11]",
                "[movies].[director_name]": "[C12]",
                "[movies].[movie_id]": "[C13]",
                "[movies].[movie_release_year]": "[C14]",
                "[movies].[movie_title]": "[C15]",
                "[ratings_users]": "[T4]",
                "[ratings_users].[rating_date_utc]": "[C16]",
                "[ratings_users].[user_avatar_image_url]": "[C17]",
                "[ratings_users].[user_id]": "[C18]",
                "[ratings_users].[user_subscriber]": "[C19]",
                "[ratings_users].[user_trialist]": "[C20]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]':\n    foreign_key: '[T2].[C9]'\n    type: integer\n'[T2]':\n  '[C10]': integer\n  '[C6]': text\n  '[C7]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]':\n    foreign_key: '[T1].[C5]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': text\n  '[C12]': text\n  '[C13]':\n    primary_key: true\n    type: integer\n  '[C14]': integer\n  '[C15]': text\n'[T4]':\n  '[C16]': text\n  '[C17]': text\n  '[C18]':\n    foreign_key: '[T2].[C9]'\n    type: integer\n  '[C19]': integer\n  '[C20]': integer\n",
            "reverse_dict": {
                "[T1]": "[lists]",
                "[T1].[C1]": "[lists].[list_id]",
                "[C1]": "[lists].[list_id]",
                "[T1].[C2]": "[lists].[list_movie_number]",
                "[C2]": "[lists].[list_movie_number]",
                "[T1].[C3]": "[lists].[list_title]",
                "[C3]": "[lists].[list_title]",
                "[T1].[C4]": "[lists].[list_update_timestamp_utc]",
                "[C4]": "[lists].[list_update_timestamp_utc]",
                "[T1].[C5]": "[lists].[user_id]",
                "[C5]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[T2].[C6]": "[lists_users].[list_creation_date_utc]",
                "[C6]": "[lists_users].[list_creation_date_utc]",
                "[T2].[C7]": "[lists_users].[list_id]",
                "[C7]": "[lists_users].[list_id]",
                "[T2].[C8]": "[lists_users].[list_update_date_utc]",
                "[C8]": "[lists_users].[list_update_date_utc]",
                "[T2].[C9]": "[lists_users].[user_id]",
                "[C9]": "[lists_users].[user_id]",
                "[T2].[C10]": "[lists_users].[user_trialist]",
                "[C10]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[T3].[C11]": "[movies].[director_id]",
                "[C11]": "[movies].[director_id]",
                "[T3].[C12]": "[movies].[director_name]",
                "[C12]": "[movies].[director_name]",
                "[T3].[C13]": "[movies].[movie_id]",
                "[C13]": "[movies].[movie_id]",
                "[T3].[C14]": "[movies].[movie_release_year]",
                "[C14]": "[movies].[movie_release_year]",
                "[T3].[C15]": "[movies].[movie_title]",
                "[C15]": "[movies].[movie_title]",
                "[T4]": "[ratings_users]",
                "[T4].[C16]": "[ratings_users].[rating_date_utc]",
                "[C16]": "[ratings_users].[rating_date_utc]",
                "[T4].[C17]": "[ratings_users].[user_avatar_image_url]",
                "[C17]": "[ratings_users].[user_avatar_image_url]",
                "[T4].[C18]": "[ratings_users].[user_id]",
                "[C18]": "[ratings_users].[user_id]",
                "[T4].[C19]": "[ratings_users].[user_subscriber]",
                "[C19]": "[ratings_users].[user_subscriber]",
                "[T4].[C20]": "[ratings_users].[user_trialist]",
                "[C20]": "[ratings_users].[user_trialist]"
            },
            "question": "Who was the [C12] of the [C15] \"[V1]\"\uff1f [V1]' is movie_title, [C12] refers to [V2];; [V1] is a value of the column [C15]; [V2] is a value of the column [C12]",
            "to_value": {
                "[V1]": "Tokyo Eyes",
                "[V2]": "director_name"
            },
            "masked": 4,
            "masked_terms": [
                "Tokyo Eyes",
                "director_name",
                "director",
                "movie"
            ],
            "sql": "SELECT [T3].[C12] FROM [T3] WHERE [T3].[C15] = '[V1]'",
            "repaired_sql": "SELECT [C12] FROM [T3] WHERE [C15] = '[V1]'"
        },
        "values": [
            "Tokyo Eyes",
            "director_name"
        ],
        "value_links": {
            "Tokyo Eyes": "[movies].[movie_title]",
            "director_name": "[movies].[director_name]"
        },
        "filtered_value_links": {
            "Tokyo Eyes": "[movies].[movie_title]",
            "director_name": "[movies].[director_name]"
        },
        "schema_links": {
            "director": "COLUMN:[movies].[director_name]",
            "movie": "COLUMN:[movies].[movie_title]"
        },
        "filtered_schema_links": {
            "director": "COLUMN:[movies].[director_name]",
            "movie": "COLUMN:[movies].[movie_title]"
        },
        "attack": "Who was the director of the movie \"Inception\"?"
    },
    {
        "db_id": "movie_platform",
        "question": "Please provide the ID of the user with the most followers on the list. most followers refers to Max(list_followers);",
        "evidence": "most followers refers to Max(list_followers);",
        "SQL": "SELECT user_id FROM lists ORDER BY list_followers DESC LIMIT 1",
        "query": "SELECT user_id FROM lists ORDER BY list_followers DESC LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "provide",
            "the",
            "ID",
            "of",
            "the",
            "user",
            "with",
            "the",
            "most",
            "followers",
            "on",
            "the",
            "list",
            ".",
            "most",
            "followers",
            "refers",
            "to",
            "Max(list_followers)",
            ";"
        ],
        "tc_original": [
            "lists.list_followers",
            "lists.user_id",
            "lists.list_id",
            "lists.list_title",
            "lists.list_movie_number",
            "lists.*",
            "lists_users.user_id",
            "lists_users.list_id",
            "lists_users.list_update_date_utc",
            "lists_users.list_creation_date_utc",
            "lists_users.user_trialist",
            "lists_users.*",
            "movies.movie_id",
            "movies.movie_title",
            "movies.movie_release_year",
            "movies.movie_url",
            "movies.movie_title_language",
            "movies.*",
            "ratings.critic",
            "ratings.movie_id",
            "ratings.rating_id",
            "ratings.rating_url",
            "ratings.rating_score",
            "ratings.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[lists]",
            "COLUMN:[lists].[list_followers]",
            "COLUMN:[lists].[user_id]",
            "COLUMN:[lists].[list_id]",
            "COLUMN:[lists].[list_title]",
            "COLUMN:[lists].[list_movie_number]",
            "COLUMN:[lists].[*]",
            "TABLE:[lists_users]",
            "COLUMN:[lists_users].[user_id]",
            "COLUMN:[lists_users].[list_id]",
            "COLUMN:[lists_users].[list_update_date_utc]",
            "COLUMN:[lists_users].[list_creation_date_utc]",
            "COLUMN:[lists_users].[user_trialist]",
            "COLUMN:[lists_users].[*]",
            "TABLE:[movies]",
            "COLUMN:[movies].[movie_id]",
            "COLUMN:[movies].[movie_title]",
            "COLUMN:[movies].[movie_release_year]",
            "COLUMN:[movies].[movie_url]",
            "COLUMN:[movies].[movie_title_language]",
            "COLUMN:[movies].[*]",
            "TABLE:[ratings]",
            "COLUMN:[ratings].[critic]",
            "COLUMN:[ratings].[movie_id]",
            "COLUMN:[ratings].[rating_id]",
            "COLUMN:[ratings].[rating_url]",
            "COLUMN:[ratings].[rating_score]",
            "COLUMN:[ratings].[*]"
        ],
        "schema": "'[lists]':\n  '[list_followers]': integer\n  '[list_id]':\n    primary_key: true\n    type: integer\n  '[list_movie_number]': integer\n  '[list_title]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[lists_users]':\n  '[list_creation_date_utc]': text\n  '[list_id]':\n    foreign_key: '[lists].[list_id]'\n    primary_key: true\n    type: integer\n  '[list_update_date_utc]': text\n  '[user_id]':\n    foreign_key: '[lists].[user_id]'\n    primary_key: true\n    type: integer\n  '[user_trialist]': integer\n'[movies]':\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_release_year]': integer\n  '[movie_title]': text\n  '[movie_title_language]': text\n  '[movie_url]': text\n'[ratings]':\n  '[critic]': text\n  '[movie_id]':\n    foreign_key: '[movies].[movie_id]'\n    type: integer\n  '[rating_id]': integer\n  '[rating_score]': integer\n  '[rating_url]': text\n",
        "gold_links": {
            "user id": "COLUMN:[lists].[user_id]",
            "user": "COLUMN:[lists].[user_id]",
            "id": "COLUMN:[lists].[user_id]",
            "most followers": "COLUMN:[lists].[list_followers]",
            "followers": "COLUMN:[lists].[list_followers]",
            "list": "TABLE:[lists]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[lists]",
                "[C1]": "[lists].[list_followers]",
                "[C2]": "[lists].[list_id]",
                "[C3]": "[lists].[list_movie_number]",
                "[C4]": "[lists].[list_title]",
                "[C5]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[C6]": "[lists_users].[list_creation_date_utc]",
                "[C7]": "[lists_users].[list_id]",
                "[C8]": "[lists_users].[list_update_date_utc]",
                "[C9]": "[lists_users].[user_id]",
                "[C10]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[C11]": "[movies].[movie_id]",
                "[C12]": "[movies].[movie_release_year]",
                "[C13]": "[movies].[movie_title]",
                "[C14]": "[movies].[movie_title_language]",
                "[C15]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[C16]": "[ratings].[critic]",
                "[C17]": "[ratings].[movie_id]",
                "[C18]": "[ratings].[rating_id]",
                "[C19]": "[ratings].[rating_score]",
                "[C20]": "[ratings].[rating_url]"
            },
            "to_symbol": {
                "[lists]": "[T1]",
                "[lists].[list_followers]": "[C1]",
                "[lists].[list_id]": "[C2]",
                "[lists].[list_movie_number]": "[C3]",
                "[lists].[list_title]": "[C4]",
                "[lists].[user_id]": "[C5]",
                "[lists_users]": "[T2]",
                "[lists_users].[list_creation_date_utc]": "[C6]",
                "[lists_users].[list_id]": "[C7]",
                "[lists_users].[list_update_date_utc]": "[C8]",
                "[lists_users].[user_id]": "[C9]",
                "[lists_users].[user_trialist]": "[C10]",
                "[movies]": "[T3]",
                "[movies].[movie_id]": "[C11]",
                "[movies].[movie_release_year]": "[C12]",
                "[movies].[movie_title]": "[C13]",
                "[movies].[movie_title_language]": "[C14]",
                "[movies].[movie_url]": "[C15]",
                "[ratings]": "[T4]",
                "[ratings].[critic]": "[C16]",
                "[ratings].[movie_id]": "[C17]",
                "[ratings].[rating_id]": "[C18]",
                "[ratings].[rating_score]": "[C19]",
                "[ratings].[rating_url]": "[C20]"
            },
            "schema": "'[T1]':\n  '[C1]': integer\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': integer\n  '[C4]': text\n  '[C5]':\n    foreign_key: '[T2].[C9]'\n    type: integer\n'[T2]':\n  '[C10]': integer\n  '[C6]': text\n  '[C7]':\n    foreign_key: '[T1].[C2]'\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]':\n    foreign_key: '[T1].[C5]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': text\n  '[C14]': text\n  '[C15]': text\n'[T4]':\n  '[C16]': text\n  '[C17]':\n    foreign_key: '[T3].[C11]'\n    type: integer\n  '[C18]': integer\n  '[C19]': integer\n  '[C20]': text\n",
            "reverse_dict": {
                "[T1]": "[lists]",
                "[T1].[C1]": "[lists].[list_followers]",
                "[C1]": "[lists].[list_followers]",
                "[T1].[C2]": "[lists].[list_id]",
                "[C2]": "[lists].[list_id]",
                "[T1].[C3]": "[lists].[list_movie_number]",
                "[C3]": "[lists].[list_movie_number]",
                "[T1].[C4]": "[lists].[list_title]",
                "[C4]": "[lists].[list_title]",
                "[T1].[C5]": "[lists].[user_id]",
                "[C5]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[T2].[C6]": "[lists_users].[list_creation_date_utc]",
                "[C6]": "[lists_users].[list_creation_date_utc]",
                "[T2].[C7]": "[lists_users].[list_id]",
                "[C7]": "[lists_users].[list_id]",
                "[T2].[C8]": "[lists_users].[list_update_date_utc]",
                "[C8]": "[lists_users].[list_update_date_utc]",
                "[T2].[C9]": "[lists_users].[user_id]",
                "[C9]": "[lists_users].[user_id]",
                "[T2].[C10]": "[lists_users].[user_trialist]",
                "[C10]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[T3].[C11]": "[movies].[movie_id]",
                "[C11]": "[movies].[movie_id]",
                "[T3].[C12]": "[movies].[movie_release_year]",
                "[C12]": "[movies].[movie_release_year]",
                "[T3].[C13]": "[movies].[movie_title]",
                "[C13]": "[movies].[movie_title]",
                "[T3].[C14]": "[movies].[movie_title_language]",
                "[C14]": "[movies].[movie_title_language]",
                "[T3].[C15]": "[movies].[movie_url]",
                "[C15]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[T4].[C16]": "[ratings].[critic]",
                "[C16]": "[ratings].[critic]",
                "[T4].[C17]": "[ratings].[movie_id]",
                "[C17]": "[ratings].[movie_id]",
                "[T4].[C18]": "[ratings].[rating_id]",
                "[C18]": "[ratings].[rating_id]",
                "[T4].[C19]": "[ratings].[rating_score]",
                "[C19]": "[ratings].[rating_score]",
                "[T4].[C20]": "[ratings].[rating_url]",
                "[C20]": "[ratings].[rating_url]"
            },
            "question": "Please provide the [V1] of the [T1] with the [C1] [C1] on the list. [C1] [C1] refers to Max(list_followers);; [V1] is a value of the column [C9]",
            "to_value": {
                "[V1]": "ID"
            },
            "masked": 5,
            "masked_terms": [
                "ID",
                "ID",
                "user",
                "followers",
                "most"
            ],
            "sql": "SELECT [C9] FROM [T1] WHERE [C1] = (SELECT MAX([C1]) FROM [T1])",
            "repaired_sql": "SELECT [T1].[C5] FROM [T1] WHERE [T1].[C1] = (SELECT MAX([C1]) FROM [T1])"
        },
        "values": [],
        "value_links": {
            "ID": "[lists_users].[user_id]"
        },
        "filtered_value_links": {
            "ID": "[lists_users].[user_id]"
        },
        "schema_links": {
            "ID": "COLUMN:[lists].[user_id]",
            "user": "TABLE:[lists]",
            "followers": "COLUMN:[lists].[list_followers]",
            "most": "COLUMN:[lists].[list_followers]"
        },
        "filtered_schema_links": {
            "ID": "COLUMN:[lists].[user_id]",
            "user": "TABLE:[lists]",
            "followers": "COLUMN:[lists].[list_followers]",
            "most": "COLUMN:[lists].[list_followers]"
        },
        "attack": "Please provide the list_followers of the users with the user_id user_id on the list. user_id user_id refers to Max(list_followers); list_followers is a value of the column list_followers."
    },
    {
        "db_id": "movie_platform",
        "question": "Please list the names of the movies that user 94978 scored as 5. user 94978 refers to user_id = 94978; scored as 5 refers to rating_score = 5;",
        "evidence": "user 94978 refers to user_id = 94978; scored as 5 refers to rating_score = 5;",
        "SQL": "SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.rating_score = 5 AND T1.user_id = 94978",
        "query": "SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.rating_score = 5 AND T1.user_id = 94978",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "list",
            "the",
            "names",
            "of",
            "the",
            "movies",
            "that",
            "user",
            "94978",
            "scored",
            "as",
            "5",
            ".",
            "user",
            "94978",
            "refers",
            "to",
            "user_id",
            "=",
            "94978",
            ";",
            "scored",
            "as",
            "5",
            "refers",
            "to",
            "rating_score",
            "=",
            "5",
            ";"
        ],
        "tc_original": [
            "movies.movie_title",
            "movies.movie_id",
            "movies.movie_url",
            "movies.movie_release_year",
            "movies.movie_title_language",
            "movies.*",
            "ratings.rating_score",
            "ratings.movie_id",
            "ratings.user_id",
            "ratings.rating_id",
            "ratings.critic",
            "ratings.*",
            "ratings_users.user_id",
            "ratings_users.rating_date_utc",
            "ratings_users.user_trialist",
            "ratings_users.user_subscriber",
            "ratings_users.user_avatar_image_url",
            "ratings_users.*",
            "lists_users.user_id",
            "lists_users.list_id",
            "lists_users.list_update_date_utc",
            "lists_users.list_creation_date_utc",
            "lists_users.user_trialist",
            "lists_users.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movies]",
            "COLUMN:[movies].[movie_title]",
            "COLUMN:[movies].[movie_id]",
            "COLUMN:[movies].[movie_url]",
            "COLUMN:[movies].[movie_release_year]",
            "COLUMN:[movies].[movie_title_language]",
            "COLUMN:[movies].[*]",
            "TABLE:[ratings]",
            "COLUMN:[ratings].[rating_score]",
            "COLUMN:[ratings].[movie_id]",
            "COLUMN:[ratings].[user_id]",
            "COLUMN:[ratings].[rating_id]",
            "COLUMN:[ratings].[critic]",
            "COLUMN:[ratings].[*]",
            "TABLE:[ratings_users]",
            "COLUMN:[ratings_users].[user_id]",
            "COLUMN:[ratings_users].[rating_date_utc]",
            "COLUMN:[ratings_users].[user_trialist]",
            "COLUMN:[ratings_users].[user_subscriber]",
            "COLUMN:[ratings_users].[user_avatar_image_url]",
            "COLUMN:[ratings_users].[*]",
            "TABLE:[lists_users]",
            "COLUMN:[lists_users].[user_id]",
            "COLUMN:[lists_users].[list_id]",
            "COLUMN:[lists_users].[list_update_date_utc]",
            "COLUMN:[lists_users].[list_creation_date_utc]",
            "COLUMN:[lists_users].[user_trialist]",
            "COLUMN:[lists_users].[*]"
        ],
        "schema": "'[lists]':\n  '[list_id]':\n    primary_key: true\n    type: integer\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[lists_users]':\n  '[list_creation_date_utc]': text\n  '[list_id]':\n    foreign_key: '[lists].[list_id]'\n    primary_key: true\n    type: integer\n  '[list_update_date_utc]': text\n  '[user_id]':\n    foreign_key: '[lists].[user_id]'\n    primary_key: true\n    type: integer\n  '[user_trialist]': integer\n'[movies]':\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_release_year]': integer\n  '[movie_title]': text\n  '[movie_title_language]': text\n  '[movie_url]': text\n'[ratings]':\n  '[critic]': text\n  '[movie_id]':\n    foreign_key: '[movies].[movie_id]'\n    type: integer\n  '[rating_id]': integer\n  '[rating_score]': integer\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[ratings_users]':\n  '[rating_date_utc]': text\n  '[user_avatar_image_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n  '[user_subscriber]': integer\n  '[user_trialist]': integer\n",
        "gold_links": {
            "names": "COLUMN:[movies].[movie_title]",
            "movies": "TABLE:[movies]",
            "user 94978": "VALUE:[ratings].[user_id]",
            "scored": "COLUMN:[ratings].[rating_score]",
            "5": "VALUE:[ratings].[rating_score]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[lists]",
                "[C1]": "[lists].[list_id]",
                "[C2]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[C3]": "[lists_users].[list_creation_date_utc]",
                "[C4]": "[lists_users].[list_id]",
                "[C5]": "[lists_users].[list_update_date_utc]",
                "[C6]": "[lists_users].[user_id]",
                "[C7]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[C8]": "[movies].[movie_id]",
                "[C9]": "[movies].[movie_release_year]",
                "[C10]": "[movies].[movie_title]",
                "[C11]": "[movies].[movie_title_language]",
                "[C12]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[C13]": "[ratings].[critic]",
                "[C14]": "[ratings].[movie_id]",
                "[C15]": "[ratings].[rating_id]",
                "[C16]": "[ratings].[rating_score]",
                "[C17]": "[ratings].[user_id]",
                "[T5]": "[ratings_users]",
                "[C18]": "[ratings_users].[rating_date_utc]",
                "[C19]": "[ratings_users].[user_avatar_image_url]",
                "[C20]": "[ratings_users].[user_id]",
                "[C21]": "[ratings_users].[user_subscriber]",
                "[C22]": "[ratings_users].[user_trialist]"
            },
            "to_symbol": {
                "[lists]": "[T1]",
                "[lists].[list_id]": "[C1]",
                "[lists].[user_id]": "[C2]",
                "[lists_users]": "[T2]",
                "[lists_users].[list_creation_date_utc]": "[C3]",
                "[lists_users].[list_id]": "[C4]",
                "[lists_users].[list_update_date_utc]": "[C5]",
                "[lists_users].[user_id]": "[C6]",
                "[lists_users].[user_trialist]": "[C7]",
                "[movies]": "[T3]",
                "[movies].[movie_id]": "[C8]",
                "[movies].[movie_release_year]": "[C9]",
                "[movies].[movie_title]": "[C10]",
                "[movies].[movie_title_language]": "[C11]",
                "[movies].[movie_url]": "[C12]",
                "[ratings]": "[T4]",
                "[ratings].[critic]": "[C13]",
                "[ratings].[movie_id]": "[C14]",
                "[ratings].[rating_id]": "[C15]",
                "[ratings].[rating_score]": "[C16]",
                "[ratings].[user_id]": "[C17]",
                "[ratings_users]": "[T5]",
                "[ratings_users].[rating_date_utc]": "[C18]",
                "[ratings_users].[user_avatar_image_url]": "[C19]",
                "[ratings_users].[user_id]": "[C20]",
                "[ratings_users].[user_subscriber]": "[C21]",
                "[ratings_users].[user_trialist]": "[C22]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T2]':\n  '[C3]': text\n  '[C4]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T1].[C2]'\n    primary_key: true\n    type: integer\n  '[C7]': integer\n'[T3]':\n  '[C10]': text\n  '[C11]': text\n  '[C12]': text\n  '[C8]':\n    primary_key: true\n    type: integer\n  '[C9]': integer\n'[T4]':\n  '[C13]': text\n  '[C14]':\n    foreign_key: '[T3].[C8]'\n    type: integer\n  '[C15]': integer\n  '[C16]': integer\n  '[C17]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T5]':\n  '[C18]': text\n  '[C19]': text\n  '[C20]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n  '[C21]': integer\n  '[C22]': integer\n",
            "reverse_dict": {
                "[T1]": "[lists]",
                "[T1].[C1]": "[lists].[list_id]",
                "[C1]": "[lists].[list_id]",
                "[T1].[C2]": "[lists].[user_id]",
                "[C2]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[T2].[C3]": "[lists_users].[list_creation_date_utc]",
                "[C3]": "[lists_users].[list_creation_date_utc]",
                "[T2].[C4]": "[lists_users].[list_id]",
                "[C4]": "[lists_users].[list_id]",
                "[T2].[C5]": "[lists_users].[list_update_date_utc]",
                "[C5]": "[lists_users].[list_update_date_utc]",
                "[T2].[C6]": "[lists_users].[user_id]",
                "[C6]": "[lists_users].[user_id]",
                "[T2].[C7]": "[lists_users].[user_trialist]",
                "[C7]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[T3].[C8]": "[movies].[movie_id]",
                "[C8]": "[movies].[movie_id]",
                "[T3].[C9]": "[movies].[movie_release_year]",
                "[C9]": "[movies].[movie_release_year]",
                "[T3].[C10]": "[movies].[movie_title]",
                "[C10]": "[movies].[movie_title]",
                "[T3].[C11]": "[movies].[movie_title_language]",
                "[C11]": "[movies].[movie_title_language]",
                "[T3].[C12]": "[movies].[movie_url]",
                "[C12]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[T4].[C13]": "[ratings].[critic]",
                "[C13]": "[ratings].[critic]",
                "[T4].[C14]": "[ratings].[movie_id]",
                "[C14]": "[ratings].[movie_id]",
                "[T4].[C15]": "[ratings].[rating_id]",
                "[C15]": "[ratings].[rating_id]",
                "[T4].[C16]": "[ratings].[rating_score]",
                "[C16]": "[ratings].[rating_score]",
                "[T4].[C17]": "[ratings].[user_id]",
                "[C17]": "[ratings].[user_id]",
                "[T5]": "[ratings_users]",
                "[T5].[C18]": "[ratings_users].[rating_date_utc]",
                "[C18]": "[ratings_users].[rating_date_utc]",
                "[T5].[C19]": "[ratings_users].[user_avatar_image_url]",
                "[C19]": "[ratings_users].[user_avatar_image_url]",
                "[T5].[C20]": "[ratings_users].[user_id]",
                "[C20]": "[ratings_users].[user_id]",
                "[T5].[C21]": "[ratings_users].[user_subscriber]",
                "[C21]": "[ratings_users].[user_subscriber]",
                "[T5].[C22]": "[ratings_users].[user_trialist]",
                "[C22]": "[ratings_users].[user_trialist]"
            },
            "question": "Please list the [C10] of the [T3] that [C20] [V1] [C16] as [V2]. [C20] [V1] refers to user_id = [V1]; [C16] as [V2] refers to rating_score = [V2];; [V1] is a value of the column [C20]; [V2] is a value of the column [C16]",
            "to_value": {
                "[V1]": "94978",
                "[V2]": "5"
            },
            "masked": 8,
            "masked_terms": [
                "94978",
                "5",
                "names",
                "movies",
                "user",
                "scored",
                "94978",
                "5"
            ],
            "sql": "SELECT [T3].[C10] FROM [T3] JOIN [T4] ON [T3].[C8] = [T4].[C14] JOIN [T5] ON [T4].[C17] = [T5].[C20] WHERE [T5].[C20] = [V1] AND [T4].[C16] = [V2]",
            "repaired_sql": "SELECT [T3].[C10] FROM [T3] JOIN [T4] ON [T4].[C14] = [T3].[C8] JOIN [T2] ON [T4].[C17] = [T2].[C6] JOIN [T5] ON [T5].[C20] = [T2].[C6] WHERE [T5].[C20] = [V1] AND [T4].[C16] = [V2];"
        },
        "values": [
            "94978",
            "5"
        ],
        "value_links": {
            "94978": "[ratings_users].[user_id]",
            "5": "[ratings].[rating_score]"
        },
        "filtered_value_links": {
            "94978": "[ratings_users].[user_id]",
            "5": "[ratings].[rating_score]"
        },
        "schema_links": {
            "names": "COLUMN:[movies].[movie_title]",
            "movies": "TABLE:[movies]",
            "user": "COLUMN:[ratings_users].[user_id]",
            "scored": "COLUMN:[ratings].[rating_score]",
            "94978": "COLUMN:[ratings_users].[user_id]",
            "5": "COLUMN:[ratings].[rating_score]"
        },
        "filtered_schema_links": {
            "names": "COLUMN:[movies].[movie_title]",
            "movies": "TABLE:[movies]",
            "user": "COLUMN:[ratings_users].[user_id]",
            "scored": "COLUMN:[ratings].[rating_score]",
            "94978": "COLUMN:[ratings_users].[user_id]",
            "5": "COLUMN:[ratings].[rating_score]"
        },
        "attack": "Please list the title of the books that user_id 5 rating_score as 4. user_id 5 refers to user_id = 5; rating_score as 4 refers to rating_score = 4; 5 is a value of the column user_id; 4 is a value of the column rating_score"
    },
    {
        "db_id": "movie_platform",
        "question": "Please list the names of the films released in 2003 among the films scored by user 2941 . released in 2003 refers to movie_release_year = 2003; user 2941 refers to user_id = 2941; film refers to movie;",
        "evidence": "released in 2003 refers to movie_release_year = 2003; user 2941 refers to user_id = 2941; film refers to movie;",
        "SQL": "SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_release_year = 2003 AND T1.user_id = 2941",
        "query": "SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T2.movie_release_year = 2003 AND T1.user_id = 2941",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "list",
            "the",
            "names",
            "of",
            "the",
            "films",
            "released",
            "in",
            "2003",
            "among",
            "the",
            "films",
            "scored",
            "by",
            "user",
            "2941",
            ".",
            "released",
            "in",
            "2003",
            "refers",
            "to",
            "movie_release_year",
            "=",
            "2003",
            ";",
            "user",
            "2941",
            "refers",
            "to",
            "user_id",
            "=",
            "2941",
            ";",
            "film",
            "refers",
            "to",
            "movie",
            ";"
        ],
        "tc_original": [
            "movies.movie_release_year",
            "movies.movie_id",
            "movies.movie_title",
            "movies.movie_url",
            "movies.movie_title_language",
            "movies.*",
            "ratings.movie_id",
            "ratings.user_id",
            "ratings.rating_score",
            "ratings.critic",
            "ratings.rating_id",
            "ratings.*",
            "ratings_users.user_id",
            "ratings_users.rating_date_utc",
            "ratings_users.user_trialist",
            "ratings_users.user_subscriber",
            "ratings_users.user_avatar_image_url",
            "ratings_users.*",
            "lists_users.user_id",
            "lists_users.list_id",
            "lists_users.list_update_date_utc",
            "lists_users.list_creation_date_utc",
            "lists_users.user_trialist",
            "lists_users.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movies]",
            "COLUMN:[movies].[movie_release_year]",
            "COLUMN:[movies].[movie_id]",
            "COLUMN:[movies].[movie_title]",
            "COLUMN:[movies].[movie_url]",
            "COLUMN:[movies].[movie_title_language]",
            "COLUMN:[movies].[*]",
            "TABLE:[ratings]",
            "COLUMN:[ratings].[movie_id]",
            "COLUMN:[ratings].[user_id]",
            "COLUMN:[ratings].[rating_score]",
            "COLUMN:[ratings].[critic]",
            "COLUMN:[ratings].[rating_id]",
            "COLUMN:[ratings].[*]",
            "TABLE:[ratings_users]",
            "COLUMN:[ratings_users].[user_id]",
            "COLUMN:[ratings_users].[rating_date_utc]",
            "COLUMN:[ratings_users].[user_trialist]",
            "COLUMN:[ratings_users].[user_subscriber]",
            "COLUMN:[ratings_users].[user_avatar_image_url]",
            "COLUMN:[ratings_users].[*]",
            "TABLE:[lists_users]",
            "COLUMN:[lists_users].[user_id]",
            "COLUMN:[lists_users].[list_id]",
            "COLUMN:[lists_users].[list_update_date_utc]",
            "COLUMN:[lists_users].[list_creation_date_utc]",
            "COLUMN:[lists_users].[user_trialist]",
            "COLUMN:[lists_users].[*]"
        ],
        "schema": "'[lists]':\n  '[list_id]':\n    primary_key: true\n    type: integer\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[lists_users]':\n  '[list_creation_date_utc]': text\n  '[list_id]':\n    foreign_key: '[lists].[list_id]'\n    primary_key: true\n    type: integer\n  '[list_update_date_utc]': text\n  '[user_id]':\n    foreign_key: '[lists].[user_id]'\n    primary_key: true\n    type: integer\n  '[user_trialist]': integer\n'[movies]':\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_release_year]': integer\n  '[movie_title]': text\n  '[movie_title_language]': text\n  '[movie_url]': text\n'[ratings]':\n  '[critic]': text\n  '[movie_id]':\n    foreign_key: '[movies].[movie_id]'\n    type: integer\n  '[rating_id]': integer\n  '[rating_score]': integer\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[ratings_users]':\n  '[rating_date_utc]': text\n  '[user_avatar_image_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n  '[user_subscriber]': integer\n  '[user_trialist]': integer\n",
        "gold_links": {
            "names": "COLUMN:[movies].[movie_title]",
            "films": "TABLE:[movies]",
            "film": "TABLE:[movies]",
            "released 2003": "COLUMN:[movies].[movie_release_year]",
            "2003": "VALUE:[movies].[movie_release_year]",
            "user 2941": "VALUE:[ratings].[user_id]",
            "2941": "VALUE:[ratings].[user_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[lists]",
                "[C1]": "[lists].[list_id]",
                "[C2]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[C3]": "[lists_users].[list_creation_date_utc]",
                "[C4]": "[lists_users].[list_id]",
                "[C5]": "[lists_users].[list_update_date_utc]",
                "[C6]": "[lists_users].[user_id]",
                "[C7]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[C8]": "[movies].[movie_id]",
                "[C9]": "[movies].[movie_release_year]",
                "[C10]": "[movies].[movie_title]",
                "[C11]": "[movies].[movie_title_language]",
                "[C12]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[C13]": "[ratings].[critic]",
                "[C14]": "[ratings].[movie_id]",
                "[C15]": "[ratings].[rating_id]",
                "[C16]": "[ratings].[rating_score]",
                "[C17]": "[ratings].[user_id]",
                "[T5]": "[ratings_users]",
                "[C18]": "[ratings_users].[rating_date_utc]",
                "[C19]": "[ratings_users].[user_avatar_image_url]",
                "[C20]": "[ratings_users].[user_id]",
                "[C21]": "[ratings_users].[user_subscriber]",
                "[C22]": "[ratings_users].[user_trialist]"
            },
            "to_symbol": {
                "[lists]": "[T1]",
                "[lists].[list_id]": "[C1]",
                "[lists].[user_id]": "[C2]",
                "[lists_users]": "[T2]",
                "[lists_users].[list_creation_date_utc]": "[C3]",
                "[lists_users].[list_id]": "[C4]",
                "[lists_users].[list_update_date_utc]": "[C5]",
                "[lists_users].[user_id]": "[C6]",
                "[lists_users].[user_trialist]": "[C7]",
                "[movies]": "[T3]",
                "[movies].[movie_id]": "[C8]",
                "[movies].[movie_release_year]": "[C9]",
                "[movies].[movie_title]": "[C10]",
                "[movies].[movie_title_language]": "[C11]",
                "[movies].[movie_url]": "[C12]",
                "[ratings]": "[T4]",
                "[ratings].[critic]": "[C13]",
                "[ratings].[movie_id]": "[C14]",
                "[ratings].[rating_id]": "[C15]",
                "[ratings].[rating_score]": "[C16]",
                "[ratings].[user_id]": "[C17]",
                "[ratings_users]": "[T5]",
                "[ratings_users].[rating_date_utc]": "[C18]",
                "[ratings_users].[user_avatar_image_url]": "[C19]",
                "[ratings_users].[user_id]": "[C20]",
                "[ratings_users].[user_subscriber]": "[C21]",
                "[ratings_users].[user_trialist]": "[C22]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T2]':\n  '[C3]': text\n  '[C4]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T1].[C2]'\n    primary_key: true\n    type: integer\n  '[C7]': integer\n'[T3]':\n  '[C10]': text\n  '[C11]': text\n  '[C12]': text\n  '[C8]':\n    primary_key: true\n    type: integer\n  '[C9]': integer\n'[T4]':\n  '[C13]': text\n  '[C14]':\n    foreign_key: '[T3].[C8]'\n    type: integer\n  '[C15]': integer\n  '[C16]': integer\n  '[C17]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T5]':\n  '[C18]': text\n  '[C19]': text\n  '[C20]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n  '[C21]': integer\n  '[C22]': integer\n",
            "reverse_dict": {
                "[T1]": "[lists]",
                "[T1].[C1]": "[lists].[list_id]",
                "[C1]": "[lists].[list_id]",
                "[T1].[C2]": "[lists].[user_id]",
                "[C2]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[T2].[C3]": "[lists_users].[list_creation_date_utc]",
                "[C3]": "[lists_users].[list_creation_date_utc]",
                "[T2].[C4]": "[lists_users].[list_id]",
                "[C4]": "[lists_users].[list_id]",
                "[T2].[C5]": "[lists_users].[list_update_date_utc]",
                "[C5]": "[lists_users].[list_update_date_utc]",
                "[T2].[C6]": "[lists_users].[user_id]",
                "[C6]": "[lists_users].[user_id]",
                "[T2].[C7]": "[lists_users].[user_trialist]",
                "[C7]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[T3].[C8]": "[movies].[movie_id]",
                "[C8]": "[movies].[movie_id]",
                "[T3].[C9]": "[movies].[movie_release_year]",
                "[C9]": "[movies].[movie_release_year]",
                "[T3].[C10]": "[movies].[movie_title]",
                "[C10]": "[movies].[movie_title]",
                "[T3].[C11]": "[movies].[movie_title_language]",
                "[C11]": "[movies].[movie_title_language]",
                "[T3].[C12]": "[movies].[movie_url]",
                "[C12]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[T4].[C13]": "[ratings].[critic]",
                "[C13]": "[ratings].[critic]",
                "[T4].[C14]": "[ratings].[movie_id]",
                "[C14]": "[ratings].[movie_id]",
                "[T4].[C15]": "[ratings].[rating_id]",
                "[C15]": "[ratings].[rating_id]",
                "[T4].[C16]": "[ratings].[rating_score]",
                "[C16]": "[ratings].[rating_score]",
                "[T4].[C17]": "[ratings].[user_id]",
                "[C17]": "[ratings].[user_id]",
                "[T5]": "[ratings_users]",
                "[T5].[C18]": "[ratings_users].[rating_date_utc]",
                "[C18]": "[ratings_users].[rating_date_utc]",
                "[T5].[C19]": "[ratings_users].[user_avatar_image_url]",
                "[C19]": "[ratings_users].[user_avatar_image_url]",
                "[T5].[C20]": "[ratings_users].[user_id]",
                "[C20]": "[ratings_users].[user_id]",
                "[T5].[C21]": "[ratings_users].[user_subscriber]",
                "[C21]": "[ratings_users].[user_subscriber]",
                "[T5].[C22]": "[ratings_users].[user_trialist]",
                "[C22]": "[ratings_users].[user_trialist]"
            },
            "question": "Please list the [C10] of the [T3] [C9] in [V1] among the [T3] scored by [C20] [V2] . [C9] in [V1] refers to movie_release_year = [V1]; [C20] [V2] refers to user_id = [V2]; film refers to movie;; [V1] is a value of the column [C9]; [V2] is a value of the column [C20]",
            "to_value": {
                "[V1]": "2003",
                "[V2]": "2941"
            },
            "masked": 8,
            "masked_terms": [
                "2003",
                "2941",
                "names",
                "films",
                "released",
                "2003",
                "user",
                "2941"
            ],
            "sql": "SELECT [T3].[C10] FROM [T3] JOIN [T5] ON [T3].[C8] = [T5].[C21] WHERE [T3].[C9] = [V1] AND [T5].[C20] = [V2]",
            "repaired_sql": "SELECT [T3].[C10] FROM [T3] JOIN [T5] ON [T3].[C8] = [T5].[C21] WHERE [T3].[C9] = [V1] AND [T5].[C20] = [V2]"
        },
        "values": [
            "2003",
            "2941"
        ],
        "value_links": {
            "2003": "[movies].[movie_release_year]",
            "2941": "[ratings_users].[user_id]"
        },
        "filtered_value_links": {
            "2003": "[movies].[movie_release_year]",
            "2941": "[ratings_users].[user_id]"
        },
        "schema_links": {
            "names": "COLUMN:[movies].[movie_title]",
            "films": "TABLE:[movies]",
            "released": "COLUMN:[movies].[movie_release_year]",
            "2003": "COLUMN:[movies].[movie_release_year]",
            "user": "COLUMN:[ratings_users].[user_id]",
            "2941": "COLUMN:[ratings_users].[user_id]"
        },
        "filtered_schema_links": {
            "names": "COLUMN:[movies].[movie_title]",
            "films": "TABLE:[movies]",
            "released": "COLUMN:[movies].[movie_release_year]",
            "2003": "COLUMN:[movies].[movie_release_year]",
            "user": "COLUMN:[ratings_users].[user_id]",
            "2941": "COLUMN:[ratings_users].[user_id]"
        },
        "attack": "Please list the title of the films released in 2010 among the films scored by user 42."
    },
    {
        "db_id": "movie_platform",
        "question": "What was the title of the first list created by a user 85981819? And please provide the user_avatar_image_url. user 85981819 refers to user_id = 85981819;\u00a0 first list created refers to Min (list_creation_date_utc);",
        "evidence": "user 85981819 refers to user_id = 85981819;\u00a0 first list created refers to Min (list_creation_date_utc);",
        "SQL": "SELECT T2.list_title, T1.user_avatar_image_url FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T1.user_id = 85981819 ORDER BY T2.list_creation_timestamp_utc LIMIT 1",
        "query": "SELECT T2.list_title, T1.user_avatar_image_url FROM lists_users AS T1 INNER JOIN lists AS T2 ON T1.list_id = T2.list_id WHERE T1.user_id = 85981819 ORDER BY T2.list_creation_timestamp_utc LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "What",
            "was",
            "the",
            "title",
            "of",
            "the",
            "first",
            "list",
            "created",
            "by",
            "a",
            "user",
            "85981819",
            "?",
            "And",
            "please",
            "provide",
            "the",
            "user_avatar_image_url",
            ".",
            "user",
            "85981819",
            "refers",
            "to",
            "user_id",
            "=",
            "85981819;\u00a0",
            "first",
            "list",
            "created",
            "refers",
            "to",
            "Min",
            "(list_creation_date_utc)",
            ";"
        ],
        "tc_original": [
            "lists.list_title",
            "lists.list_creation_timestamp_utc",
            "lists.user_id",
            "lists.list_id",
            "lists.list_update_timestamp_utc",
            "lists.*",
            "lists_users.list_creation_date_utc",
            "lists_users.user_id",
            "lists_users.list_id",
            "lists_users.list_update_date_utc",
            "lists_users.user_avatar_image_url",
            "lists_users.*",
            "movies.movie_id",
            "movies.movie_title",
            "movies.movie_release_year",
            "movies.movie_url",
            "movies.movie_title_language",
            "movies.*",
            "ratings_users.user_id",
            "ratings_users.rating_date_utc",
            "ratings_users.user_trialist",
            "ratings_users.user_subscriber",
            "ratings_users.user_avatar_image_url",
            "ratings_users.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[lists]",
            "COLUMN:[lists].[list_title]",
            "COLUMN:[lists].[list_creation_timestamp_utc]",
            "COLUMN:[lists].[user_id]",
            "COLUMN:[lists].[list_id]",
            "COLUMN:[lists].[list_update_timestamp_utc]",
            "COLUMN:[lists].[*]",
            "TABLE:[lists_users]",
            "COLUMN:[lists_users].[list_creation_date_utc]",
            "COLUMN:[lists_users].[user_id]",
            "COLUMN:[lists_users].[list_id]",
            "COLUMN:[lists_users].[list_update_date_utc]",
            "COLUMN:[lists_users].[user_avatar_image_url]",
            "COLUMN:[lists_users].[*]",
            "TABLE:[movies]",
            "COLUMN:[movies].[movie_id]",
            "COLUMN:[movies].[movie_title]",
            "COLUMN:[movies].[movie_release_year]",
            "COLUMN:[movies].[movie_url]",
            "COLUMN:[movies].[movie_title_language]",
            "COLUMN:[movies].[*]",
            "TABLE:[ratings_users]",
            "COLUMN:[ratings_users].[user_id]",
            "COLUMN:[ratings_users].[rating_date_utc]",
            "COLUMN:[ratings_users].[user_trialist]",
            "COLUMN:[ratings_users].[user_subscriber]",
            "COLUMN:[ratings_users].[user_avatar_image_url]",
            "COLUMN:[ratings_users].[*]"
        ],
        "schema": "'[lists]':\n  '[list_creation_timestamp_utc]': text\n  '[list_id]':\n    primary_key: true\n    type: integer\n  '[list_title]': text\n  '[list_update_timestamp_utc]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[lists_users]':\n  '[list_creation_date_utc]': text\n  '[list_id]':\n    foreign_key: '[lists].[list_id]'\n    primary_key: true\n    type: integer\n  '[list_update_date_utc]': text\n  '[user_avatar_image_url]': text\n  '[user_id]':\n    foreign_key: '[lists].[user_id]'\n    primary_key: true\n    type: integer\n'[movies]':\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_release_year]': integer\n  '[movie_title]': text\n  '[movie_title_language]': text\n  '[movie_url]': text\n'[ratings_users]':\n  '[rating_date_utc]': text\n  '[user_avatar_image_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n  '[user_subscriber]': integer\n  '[user_trialist]': integer\n",
        "gold_links": {
            "title": "COLUMN:[lists].[list_title]",
            "first list": "COLUMN:[lists].[list_creation_timestamp_utc]",
            "created": "COLUMN:[lists].[list_creation_timestamp_utc]",
            "user 85981819": "VALUE:[lists_users].[user_id]",
            "user_avatar_image_url": "COLUMN:[lists_users].[user_avatar_image_url]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[lists]",
                "[C1]": "[lists].[list_creation_timestamp_utc]",
                "[C2]": "[lists].[list_id]",
                "[C3]": "[lists].[list_title]",
                "[C4]": "[lists].[list_update_timestamp_utc]",
                "[C5]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[C6]": "[lists_users].[list_creation_date_utc]",
                "[C7]": "[lists_users].[list_id]",
                "[C8]": "[lists_users].[list_update_date_utc]",
                "[C9]": "[lists_users].[user_avatar_image_url]",
                "[C10]": "[lists_users].[user_id]",
                "[T3]": "[movies]",
                "[C11]": "[movies].[movie_id]",
                "[C12]": "[movies].[movie_release_year]",
                "[C13]": "[movies].[movie_title]",
                "[C14]": "[movies].[movie_title_language]",
                "[C15]": "[movies].[movie_url]",
                "[T4]": "[ratings_users]",
                "[C16]": "[ratings_users].[rating_date_utc]",
                "[C17]": "[ratings_users].[user_avatar_image_url]",
                "[C18]": "[ratings_users].[user_id]",
                "[C19]": "[ratings_users].[user_subscriber]",
                "[C20]": "[ratings_users].[user_trialist]"
            },
            "to_symbol": {
                "[lists]": "[T1]",
                "[lists].[list_creation_timestamp_utc]": "[C1]",
                "[lists].[list_id]": "[C2]",
                "[lists].[list_title]": "[C3]",
                "[lists].[list_update_timestamp_utc]": "[C4]",
                "[lists].[user_id]": "[C5]",
                "[lists_users]": "[T2]",
                "[lists_users].[list_creation_date_utc]": "[C6]",
                "[lists_users].[list_id]": "[C7]",
                "[lists_users].[list_update_date_utc]": "[C8]",
                "[lists_users].[user_avatar_image_url]": "[C9]",
                "[lists_users].[user_id]": "[C10]",
                "[movies]": "[T3]",
                "[movies].[movie_id]": "[C11]",
                "[movies].[movie_release_year]": "[C12]",
                "[movies].[movie_title]": "[C13]",
                "[movies].[movie_title_language]": "[C14]",
                "[movies].[movie_url]": "[C15]",
                "[ratings_users]": "[T4]",
                "[ratings_users].[rating_date_utc]": "[C16]",
                "[ratings_users].[user_avatar_image_url]": "[C17]",
                "[ratings_users].[user_id]": "[C18]",
                "[ratings_users].[user_subscriber]": "[C19]",
                "[ratings_users].[user_trialist]": "[C20]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]':\n    foreign_key: '[T2].[C10]'\n    type: integer\n'[T2]':\n  '[C10]':\n    foreign_key: '[T1].[C5]'\n    primary_key: true\n    type: integer\n  '[C6]': text\n  '[C7]':\n    foreign_key: '[T1].[C2]'\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': text\n  '[C14]': text\n  '[C15]': text\n'[T4]':\n  '[C16]': text\n  '[C17]': text\n  '[C18]':\n    foreign_key: '[T2].[C10]'\n    type: integer\n  '[C19]': integer\n  '[C20]': integer\n",
            "reverse_dict": {
                "[T1]": "[lists]",
                "[T1].[C1]": "[lists].[list_creation_timestamp_utc]",
                "[C1]": "[lists].[list_creation_timestamp_utc]",
                "[T1].[C2]": "[lists].[list_id]",
                "[C2]": "[lists].[list_id]",
                "[T1].[C3]": "[lists].[list_title]",
                "[C3]": "[lists].[list_title]",
                "[T1].[C4]": "[lists].[list_update_timestamp_utc]",
                "[C4]": "[lists].[list_update_timestamp_utc]",
                "[T1].[C5]": "[lists].[user_id]",
                "[C5]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[T2].[C6]": "[lists_users].[list_creation_date_utc]",
                "[C6]": "[lists_users].[list_creation_date_utc]",
                "[T2].[C7]": "[lists_users].[list_id]",
                "[C7]": "[lists_users].[list_id]",
                "[T2].[C8]": "[lists_users].[list_update_date_utc]",
                "[C8]": "[lists_users].[list_update_date_utc]",
                "[T2].[C9]": "[lists_users].[user_avatar_image_url]",
                "[C9]": "[lists_users].[user_avatar_image_url]",
                "[T2].[C10]": "[lists_users].[user_id]",
                "[C10]": "[lists_users].[user_id]",
                "[T3]": "[movies]",
                "[T3].[C11]": "[movies].[movie_id]",
                "[C11]": "[movies].[movie_id]",
                "[T3].[C12]": "[movies].[movie_release_year]",
                "[C12]": "[movies].[movie_release_year]",
                "[T3].[C13]": "[movies].[movie_title]",
                "[C13]": "[movies].[movie_title]",
                "[T3].[C14]": "[movies].[movie_title_language]",
                "[C14]": "[movies].[movie_title_language]",
                "[T3].[C15]": "[movies].[movie_url]",
                "[C15]": "[movies].[movie_url]",
                "[T4]": "[ratings_users]",
                "[T4].[C16]": "[ratings_users].[rating_date_utc]",
                "[C16]": "[ratings_users].[rating_date_utc]",
                "[T4].[C17]": "[ratings_users].[user_avatar_image_url]",
                "[C17]": "[ratings_users].[user_avatar_image_url]",
                "[T4].[C18]": "[ratings_users].[user_id]",
                "[C18]": "[ratings_users].[user_id]",
                "[T4].[C19]": "[ratings_users].[user_subscriber]",
                "[C19]": "[ratings_users].[user_subscriber]",
                "[T4].[C20]": "[ratings_users].[user_trialist]",
                "[C20]": "[ratings_users].[user_trialist]"
            },
            "question": "What was the [C3] of the [C1] list [C1] by a [C10] [C10]? And please provide the [V3]. [C10] [C10] refers to [V1];\u00a0 [C1] list [C1] refers to Min (list_creation_date_utc);; [V1] is a value of the column [C10]; [V2] is a value of the column [C1]; [V3] is a value of the column [C9]",
            "to_value": {
                "[V1]": "user_id = 85981819",
                "[V2]": "Min(list_creation_date_utc)",
                "[V3]": "user_avatar_image_url"
            },
            "masked": 9,
            "masked_terms": [
                "user_id = 85981819",
                "Min(list_creation_date_utc)",
                "user_avatar_image_url",
                "title",
                "first",
                "created",
                "user",
                "85981819",
                "user_avatar_image_url"
            ],
            "sql": "SELECT [T1].[C3], MIN([T1].[C1]), [T2].[C9] FROM [T1] INNER JOIN [T2] ON [T1].[C5] = [T2].[C10] WHERE [T2].[C10] = [V1] GROUP BY [T1].[C3], [T2].[C9]",
            "repaired_sql": "SELECT [T1].[C3], MIN([T1].[C1]), [T2].[C9] FROM [T1] JOIN [T2] ON [T1].[C5] = [T2].[C10] WHERE [T2].[C10] = '[V1]' GROUP BY [T1].[C3], [T2].[C9]"
        },
        "values": [
            "user_id = 85981819",
            "Min(list_creation_date_utc)",
            "user_avatar_image_url"
        ],
        "value_links": {
            "user_id = 85981819": "[lists_users].[user_id]",
            "Min(list_creation_date_utc)": "[lists].[list_creation_timestamp_utc]",
            "user_avatar_image_url": "[lists_users].[user_avatar_image_url]"
        },
        "filtered_value_links": {
            "user_id = 85981819": "[lists_users].[user_id]",
            "Min(list_creation_date_utc)": "[lists].[list_creation_timestamp_utc]",
            "user_avatar_image_url": "[lists_users].[user_avatar_image_url]"
        },
        "schema_links": {
            "title": "COLUMN:[lists].[list_title]",
            "first": "COLUMN:[lists].[list_creation_timestamp_utc]",
            "created": "COLUMN:[lists].[list_creation_timestamp_utc]",
            "user": "COLUMN:[lists_users].[user_id]",
            "85981819": "COLUMN:[lists_users].[user_id]",
            "user_avatar_image_url": "COLUMN:[lists_users].[user_avatar_image_url]"
        },
        "filtered_schema_links": {
            "title": "COLUMN:[lists].[list_title]",
            "first": "COLUMN:[lists].[list_creation_timestamp_utc]",
            "created": "COLUMN:[lists].[list_creation_timestamp_utc]",
            "user": "COLUMN:[lists_users].[user_id]",
            "85981819": "COLUMN:[lists_users].[user_id]",
            "user_avatar_image_url": "COLUMN:[lists_users].[user_avatar_image_url]"
        },
        "attack": "What was the description of the earliest list list_creation_date_utc by a group_id group_id? And please provide the group_name. group_id group_id refers to 108; earliest list list_creation_date_utc refers to Min (list_creation_date_utc); 108 is a value of the column group_id; abc123 is a value of the column list_creation_date_utc; group_name is a value of the column group_name"
    },
    {
        "db_id": "movie_platform",
        "question": "List all movies rated by user 39115684. State the title, rating date and rating score. user 39115684 refers to user_id = 39115684; title refers to movie_title; rating date refers to rating_timestamp_utc",
        "evidence": "user 39115684 refers to user_id = 39115684; title refers to movie_title; rating date refers to rating_timestamp_utc\n",
        "SQL": "SELECT T2.movie_title, T1.rating_timestamp_utc, T1.rating_score FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 39115684",
        "query": "SELECT T2.movie_title, T1.rating_timestamp_utc, T1.rating_score FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 39115684",
        "evidence_added": true,
        "question_toks": [
            "List",
            "all",
            "movies",
            "rated",
            "by",
            "user",
            "39115684",
            ".",
            "State",
            "the",
            "title",
            ",",
            "rating",
            "date",
            "and",
            "rating",
            "score",
            ".",
            "user",
            "39115684",
            "refers",
            "to",
            "user_id",
            "=",
            "39115684",
            ";",
            "title",
            "refers",
            "to",
            "movie_title",
            ";",
            "rating",
            "date",
            "refers",
            "to",
            "rating_timestamp_utc"
        ],
        "tc_original": [
            "movies.movie_title",
            "movies.movie_id",
            "movies.movie_release_year",
            "movies.movie_url",
            "movies.movie_title_language",
            "movies.*",
            "ratings.rating_score",
            "ratings.movie_id",
            "ratings.user_id",
            "ratings.rating_timestamp_utc",
            "ratings.rating_id",
            "ratings.*",
            "ratings_users.rating_date_utc",
            "ratings_users.user_id",
            "ratings_users.user_trialist",
            "ratings_users.user_subscriber",
            "ratings_users.user_avatar_image_url",
            "ratings_users.*",
            "lists_users.user_id",
            "lists_users.list_id",
            "lists_users.list_update_date_utc",
            "lists_users.list_creation_date_utc",
            "lists_users.user_trialist",
            "lists_users.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movies]",
            "COLUMN:[movies].[movie_title]",
            "COLUMN:[movies].[movie_id]",
            "COLUMN:[movies].[movie_release_year]",
            "COLUMN:[movies].[movie_url]",
            "COLUMN:[movies].[movie_title_language]",
            "COLUMN:[movies].[*]",
            "TABLE:[ratings]",
            "COLUMN:[ratings].[rating_score]",
            "COLUMN:[ratings].[movie_id]",
            "COLUMN:[ratings].[user_id]",
            "COLUMN:[ratings].[rating_timestamp_utc]",
            "COLUMN:[ratings].[rating_id]",
            "COLUMN:[ratings].[*]",
            "TABLE:[ratings_users]",
            "COLUMN:[ratings_users].[rating_date_utc]",
            "COLUMN:[ratings_users].[user_id]",
            "COLUMN:[ratings_users].[user_trialist]",
            "COLUMN:[ratings_users].[user_subscriber]",
            "COLUMN:[ratings_users].[user_avatar_image_url]",
            "COLUMN:[ratings_users].[*]",
            "TABLE:[lists_users]",
            "COLUMN:[lists_users].[user_id]",
            "COLUMN:[lists_users].[list_id]",
            "COLUMN:[lists_users].[list_update_date_utc]",
            "COLUMN:[lists_users].[list_creation_date_utc]",
            "COLUMN:[lists_users].[user_trialist]",
            "COLUMN:[lists_users].[*]"
        ],
        "schema": "'[lists]':\n  '[list_id]':\n    primary_key: true\n    type: integer\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[lists_users]':\n  '[list_creation_date_utc]': text\n  '[list_id]':\n    foreign_key: '[lists].[list_id]'\n    primary_key: true\n    type: integer\n  '[list_update_date_utc]': text\n  '[user_id]':\n    foreign_key: '[lists].[user_id]'\n    primary_key: true\n    type: integer\n  '[user_trialist]': integer\n'[movies]':\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_release_year]': integer\n  '[movie_title]': text\n  '[movie_title_language]': text\n  '[movie_url]': text\n'[ratings]':\n  '[movie_id]':\n    foreign_key: '[movies].[movie_id]'\n    type: integer\n  '[rating_id]': integer\n  '[rating_score]': integer\n  '[rating_timestamp_utc]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[ratings_users]':\n  '[rating_date_utc]': text\n  '[user_avatar_image_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n  '[user_subscriber]': integer\n  '[user_trialist]': integer\n",
        "gold_links": {
            "movies": "TABLE:[movies]",
            "rated": "TABLE:[ratings]",
            "user 39115684": "VALUE:[ratings].[user_id]",
            "title": "COLUMN:[movies].[movie_title]",
            "rating date": "COLUMN:[ratings].[rating_timestamp_utc]",
            "rating score": "COLUMN:[ratings].[rating_score]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[lists]",
                "[C1]": "[lists].[list_id]",
                "[C2]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[C3]": "[lists_users].[list_creation_date_utc]",
                "[C4]": "[lists_users].[list_id]",
                "[C5]": "[lists_users].[list_update_date_utc]",
                "[C6]": "[lists_users].[user_id]",
                "[C7]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[C8]": "[movies].[movie_id]",
                "[C9]": "[movies].[movie_release_year]",
                "[C10]": "[movies].[movie_title]",
                "[C11]": "[movies].[movie_title_language]",
                "[C12]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[C13]": "[ratings].[movie_id]",
                "[C14]": "[ratings].[rating_id]",
                "[C15]": "[ratings].[rating_score]",
                "[C16]": "[ratings].[rating_timestamp_utc]",
                "[C17]": "[ratings].[user_id]",
                "[T5]": "[ratings_users]",
                "[C18]": "[ratings_users].[rating_date_utc]",
                "[C19]": "[ratings_users].[user_avatar_image_url]",
                "[C20]": "[ratings_users].[user_id]",
                "[C21]": "[ratings_users].[user_subscriber]",
                "[C22]": "[ratings_users].[user_trialist]"
            },
            "to_symbol": {
                "[lists]": "[T1]",
                "[lists].[list_id]": "[C1]",
                "[lists].[user_id]": "[C2]",
                "[lists_users]": "[T2]",
                "[lists_users].[list_creation_date_utc]": "[C3]",
                "[lists_users].[list_id]": "[C4]",
                "[lists_users].[list_update_date_utc]": "[C5]",
                "[lists_users].[user_id]": "[C6]",
                "[lists_users].[user_trialist]": "[C7]",
                "[movies]": "[T3]",
                "[movies].[movie_id]": "[C8]",
                "[movies].[movie_release_year]": "[C9]",
                "[movies].[movie_title]": "[C10]",
                "[movies].[movie_title_language]": "[C11]",
                "[movies].[movie_url]": "[C12]",
                "[ratings]": "[T4]",
                "[ratings].[movie_id]": "[C13]",
                "[ratings].[rating_id]": "[C14]",
                "[ratings].[rating_score]": "[C15]",
                "[ratings].[rating_timestamp_utc]": "[C16]",
                "[ratings].[user_id]": "[C17]",
                "[ratings_users]": "[T5]",
                "[ratings_users].[rating_date_utc]": "[C18]",
                "[ratings_users].[user_avatar_image_url]": "[C19]",
                "[ratings_users].[user_id]": "[C20]",
                "[ratings_users].[user_subscriber]": "[C21]",
                "[ratings_users].[user_trialist]": "[C22]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T2]':\n  '[C3]': text\n  '[C4]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T1].[C2]'\n    primary_key: true\n    type: integer\n  '[C7]': integer\n'[T3]':\n  '[C10]': text\n  '[C11]': text\n  '[C12]': text\n  '[C8]':\n    primary_key: true\n    type: integer\n  '[C9]': integer\n'[T4]':\n  '[C13]':\n    foreign_key: '[T3].[C8]'\n    type: integer\n  '[C14]': integer\n  '[C15]': integer\n  '[C16]': text\n  '[C17]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T5]':\n  '[C18]': text\n  '[C19]': text\n  '[C20]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n  '[C21]': integer\n  '[C22]': integer\n",
            "reverse_dict": {
                "[T1]": "[lists]",
                "[T1].[C1]": "[lists].[list_id]",
                "[C1]": "[lists].[list_id]",
                "[T1].[C2]": "[lists].[user_id]",
                "[C2]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[T2].[C3]": "[lists_users].[list_creation_date_utc]",
                "[C3]": "[lists_users].[list_creation_date_utc]",
                "[T2].[C4]": "[lists_users].[list_id]",
                "[C4]": "[lists_users].[list_id]",
                "[T2].[C5]": "[lists_users].[list_update_date_utc]",
                "[C5]": "[lists_users].[list_update_date_utc]",
                "[T2].[C6]": "[lists_users].[user_id]",
                "[C6]": "[lists_users].[user_id]",
                "[T2].[C7]": "[lists_users].[user_trialist]",
                "[C7]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[T3].[C8]": "[movies].[movie_id]",
                "[C8]": "[movies].[movie_id]",
                "[T3].[C9]": "[movies].[movie_release_year]",
                "[C9]": "[movies].[movie_release_year]",
                "[T3].[C10]": "[movies].[movie_title]",
                "[C10]": "[movies].[movie_title]",
                "[T3].[C11]": "[movies].[movie_title_language]",
                "[C11]": "[movies].[movie_title_language]",
                "[T3].[C12]": "[movies].[movie_url]",
                "[C12]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[T4].[C13]": "[ratings].[movie_id]",
                "[C13]": "[ratings].[movie_id]",
                "[T4].[C14]": "[ratings].[rating_id]",
                "[C14]": "[ratings].[rating_id]",
                "[T4].[C15]": "[ratings].[rating_score]",
                "[C15]": "[ratings].[rating_score]",
                "[T4].[C16]": "[ratings].[rating_timestamp_utc]",
                "[C16]": "[ratings].[rating_timestamp_utc]",
                "[T4].[C17]": "[ratings].[user_id]",
                "[C17]": "[ratings].[user_id]",
                "[T5]": "[ratings_users]",
                "[T5].[C18]": "[ratings_users].[rating_date_utc]",
                "[C18]": "[ratings_users].[rating_date_utc]",
                "[T5].[C19]": "[ratings_users].[user_avatar_image_url]",
                "[C19]": "[ratings_users].[user_avatar_image_url]",
                "[T5].[C20]": "[ratings_users].[user_id]",
                "[C20]": "[ratings_users].[user_id]",
                "[T5].[C21]": "[ratings_users].[user_subscriber]",
                "[C21]": "[ratings_users].[user_subscriber]",
                "[T5].[C22]": "[ratings_users].[user_trialist]",
                "[C22]": "[ratings_users].[user_trialist]"
            },
            "question": "List all movies rated by user [V1]. State the title, rating date and rating score. user [V1] refers to [C17] = [V1]; title refers to [V2]; rating date refers to [V3]; [V1] is a value of the column [C17]; [V2] is a value of the column [C10]; [V3] is a value of the column [C16]; [V4] is a value of the column [C15]",
            "to_value": {
                "[V1]": "39115684",
                "[V2]": "movie_title",
                "[V3]": "rating_timestamp_utc",
                "[V4]": "rating_score"
            },
            "masked": 7,
            "masked_terms": [
                "39115684",
                "movie_title",
                "rating_timestamp_utc",
                "rating_score",
                "user_id",
                "movie_title",
                "rating_timestamp_utc"
            ],
            "sql": "SELECT [T3].[C10] AS [V2], [T4].[C16] AS [V3], [T4].[C15] AS [V4] FROM [T4] JOIN [T3] ON [T4].[C13] = [T3].[C8] WHERE [T4].[C17] = [V1]",
            "repaired_sql": "SELECT [T3].[C10], [T4].[C16], [T4].[C15] FROM [T4] JOIN [T3] ON [T4].[C13] = [T3].[C8] WHERE [T4].[C17] = [V1]"
        },
        "values": [
            "39115684",
            "movie_title",
            "rating_timestamp_utc",
            "rating_score"
        ],
        "value_links": {
            "39115684": "[ratings].[user_id]",
            "movie_title": "[movies].[movie_title]",
            "rating_timestamp_utc": "[ratings].[rating_timestamp_utc]",
            "rating_score": "[ratings].[rating_score]"
        },
        "filtered_value_links": {
            "39115684": "[ratings].[user_id]",
            "movie_title": "[movies].[movie_title]",
            "rating_timestamp_utc": "[ratings].[rating_timestamp_utc]",
            "rating_score": "[ratings].[rating_score]"
        },
        "schema_links": {
            "user_id": "COLUMN:[ratings].[user_id]",
            "movie_title": "COLUMN:[movies].[movie_title]",
            "rating_timestamp_utc": "COLUMN:[ratings].[rating_timestamp_utc]"
        },
        "filtered_schema_links": {
            "user_id": "COLUMN:[ratings].[user_id]",
            "movie_title": "COLUMN:[movies].[movie_title]",
            "rating_timestamp_utc": "COLUMN:[ratings].[rating_timestamp_utc]"
        },
        "attack": "List all movies rated by user 123. State the title, rating date and rating score. user 123 refers to user_id = 123; title refers to title; rating date refers to rating_date; 123 is a value of the column user_id; title is a value of the column title; rating date is a value of the column rating_date; rating score is a value of the column rating."
    },
    {
        "db_id": "movie_platform",
        "question": "What is the name of the movie that was rated recently by user 57756708? user 57756708 refers to user_id = 57756708; rated recently refers to MAX(rating_timestamp_utc)",
        "evidence": "user 57756708 refers to user_id = 57756708; rated recently refers to MAX(rating_timestamp_utc)",
        "SQL": "SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 57756708 ORDER BY T1.rating_timestamp_utc DESC LIMIT 1",
        "query": "SELECT T2.movie_title FROM ratings AS T1 INNER JOIN movies AS T2 ON T1.movie_id = T2.movie_id WHERE T1.user_id = 57756708 ORDER BY T1.rating_timestamp_utc DESC LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "name",
            "of",
            "the",
            "movie",
            "that",
            "was",
            "rated",
            "recently",
            "by",
            "user",
            "57756708",
            "?",
            "user",
            "57756708",
            "refers",
            "to",
            "user_id",
            "=",
            "57756708",
            ";",
            "rated",
            "recently",
            "refers",
            "to",
            "MAX(rating_timestamp_utc)"
        ],
        "tc_original": [
            "movies.movie_title",
            "movies.movie_id",
            "movies.movie_url",
            "movies.movie_release_year",
            "movies.movie_title_language",
            "movies.*",
            "ratings.movie_id",
            "ratings.rating_timestamp_utc",
            "ratings.user_id",
            "ratings.critic",
            "ratings.rating_id",
            "ratings.*",
            "ratings_users.user_id",
            "ratings_users.rating_date_utc",
            "ratings_users.user_trialist",
            "ratings_users.user_subscriber",
            "ratings_users.user_avatar_image_url",
            "ratings_users.*",
            "lists_users.user_id",
            "lists_users.list_id",
            "lists_users.list_update_date_utc",
            "lists_users.list_creation_date_utc",
            "lists_users.user_trialist",
            "lists_users.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movies]",
            "COLUMN:[movies].[movie_title]",
            "COLUMN:[movies].[movie_id]",
            "COLUMN:[movies].[movie_url]",
            "COLUMN:[movies].[movie_release_year]",
            "COLUMN:[movies].[movie_title_language]",
            "COLUMN:[movies].[*]",
            "TABLE:[ratings]",
            "COLUMN:[ratings].[movie_id]",
            "COLUMN:[ratings].[rating_timestamp_utc]",
            "COLUMN:[ratings].[user_id]",
            "COLUMN:[ratings].[critic]",
            "COLUMN:[ratings].[rating_id]",
            "COLUMN:[ratings].[*]",
            "TABLE:[ratings_users]",
            "COLUMN:[ratings_users].[user_id]",
            "COLUMN:[ratings_users].[rating_date_utc]",
            "COLUMN:[ratings_users].[user_trialist]",
            "COLUMN:[ratings_users].[user_subscriber]",
            "COLUMN:[ratings_users].[user_avatar_image_url]",
            "COLUMN:[ratings_users].[*]",
            "TABLE:[lists_users]",
            "COLUMN:[lists_users].[user_id]",
            "COLUMN:[lists_users].[list_id]",
            "COLUMN:[lists_users].[list_update_date_utc]",
            "COLUMN:[lists_users].[list_creation_date_utc]",
            "COLUMN:[lists_users].[user_trialist]",
            "COLUMN:[lists_users].[*]"
        ],
        "schema": "'[lists]':\n  '[list_id]':\n    primary_key: true\n    type: integer\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[lists_users]':\n  '[list_creation_date_utc]': text\n  '[list_id]':\n    foreign_key: '[lists].[list_id]'\n    primary_key: true\n    type: integer\n  '[list_update_date_utc]': text\n  '[user_id]':\n    foreign_key: '[lists].[user_id]'\n    primary_key: true\n    type: integer\n  '[user_trialist]': integer\n'[movies]':\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_release_year]': integer\n  '[movie_title]': text\n  '[movie_title_language]': text\n  '[movie_url]': text\n'[ratings]':\n  '[critic]': text\n  '[movie_id]':\n    foreign_key: '[movies].[movie_id]'\n    type: integer\n  '[rating_id]': integer\n  '[rating_timestamp_utc]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n'[ratings_users]':\n  '[rating_date_utc]': text\n  '[user_avatar_image_url]': text\n  '[user_id]':\n    foreign_key: '[lists_users].[user_id]'\n    type: integer\n  '[user_subscriber]': integer\n  '[user_trialist]': integer\n",
        "gold_links": {
            "name": "COLUMN:[movies].[movie_title]",
            "movie": "TABLE:[movies]",
            "rated": "COLUMN:[ratings].[rating_timestamp_utc]",
            "recently": "COLUMN:[ratings].[rating_timestamp_utc]",
            "user": "COLUMN:[ratings].[user_id]",
            "57756708": "VALUE:[ratings].[user_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[lists]",
                "[C1]": "[lists].[list_id]",
                "[C2]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[C3]": "[lists_users].[list_creation_date_utc]",
                "[C4]": "[lists_users].[list_id]",
                "[C5]": "[lists_users].[list_update_date_utc]",
                "[C6]": "[lists_users].[user_id]",
                "[C7]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[C8]": "[movies].[movie_id]",
                "[C9]": "[movies].[movie_release_year]",
                "[C10]": "[movies].[movie_title]",
                "[C11]": "[movies].[movie_title_language]",
                "[C12]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[C13]": "[ratings].[critic]",
                "[C14]": "[ratings].[movie_id]",
                "[C15]": "[ratings].[rating_id]",
                "[C16]": "[ratings].[rating_timestamp_utc]",
                "[C17]": "[ratings].[user_id]",
                "[T5]": "[ratings_users]",
                "[C18]": "[ratings_users].[rating_date_utc]",
                "[C19]": "[ratings_users].[user_avatar_image_url]",
                "[C20]": "[ratings_users].[user_id]",
                "[C21]": "[ratings_users].[user_subscriber]",
                "[C22]": "[ratings_users].[user_trialist]"
            },
            "to_symbol": {
                "[lists]": "[T1]",
                "[lists].[list_id]": "[C1]",
                "[lists].[user_id]": "[C2]",
                "[lists_users]": "[T2]",
                "[lists_users].[list_creation_date_utc]": "[C3]",
                "[lists_users].[list_id]": "[C4]",
                "[lists_users].[list_update_date_utc]": "[C5]",
                "[lists_users].[user_id]": "[C6]",
                "[lists_users].[user_trialist]": "[C7]",
                "[movies]": "[T3]",
                "[movies].[movie_id]": "[C8]",
                "[movies].[movie_release_year]": "[C9]",
                "[movies].[movie_title]": "[C10]",
                "[movies].[movie_title_language]": "[C11]",
                "[movies].[movie_url]": "[C12]",
                "[ratings]": "[T4]",
                "[ratings].[critic]": "[C13]",
                "[ratings].[movie_id]": "[C14]",
                "[ratings].[rating_id]": "[C15]",
                "[ratings].[rating_timestamp_utc]": "[C16]",
                "[ratings].[user_id]": "[C17]",
                "[ratings_users]": "[T5]",
                "[ratings_users].[rating_date_utc]": "[C18]",
                "[ratings_users].[user_avatar_image_url]": "[C19]",
                "[ratings_users].[user_id]": "[C20]",
                "[ratings_users].[user_subscriber]": "[C21]",
                "[ratings_users].[user_trialist]": "[C22]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T2]':\n  '[C3]': text\n  '[C4]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C5]': text\n  '[C6]':\n    foreign_key: '[T1].[C2]'\n    primary_key: true\n    type: integer\n  '[C7]': integer\n'[T3]':\n  '[C10]': text\n  '[C11]': text\n  '[C12]': text\n  '[C8]':\n    primary_key: true\n    type: integer\n  '[C9]': integer\n'[T4]':\n  '[C13]': text\n  '[C14]':\n    foreign_key: '[T3].[C8]'\n    type: integer\n  '[C15]': integer\n  '[C16]': text\n  '[C17]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n'[T5]':\n  '[C18]': text\n  '[C19]': text\n  '[C20]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n  '[C21]': integer\n  '[C22]': integer\n",
            "reverse_dict": {
                "[T1]": "[lists]",
                "[T1].[C1]": "[lists].[list_id]",
                "[C1]": "[lists].[list_id]",
                "[T1].[C2]": "[lists].[user_id]",
                "[C2]": "[lists].[user_id]",
                "[T2]": "[lists_users]",
                "[T2].[C3]": "[lists_users].[list_creation_date_utc]",
                "[C3]": "[lists_users].[list_creation_date_utc]",
                "[T2].[C4]": "[lists_users].[list_id]",
                "[C4]": "[lists_users].[list_id]",
                "[T2].[C5]": "[lists_users].[list_update_date_utc]",
                "[C5]": "[lists_users].[list_update_date_utc]",
                "[T2].[C6]": "[lists_users].[user_id]",
                "[C6]": "[lists_users].[user_id]",
                "[T2].[C7]": "[lists_users].[user_trialist]",
                "[C7]": "[lists_users].[user_trialist]",
                "[T3]": "[movies]",
                "[T3].[C8]": "[movies].[movie_id]",
                "[C8]": "[movies].[movie_id]",
                "[T3].[C9]": "[movies].[movie_release_year]",
                "[C9]": "[movies].[movie_release_year]",
                "[T3].[C10]": "[movies].[movie_title]",
                "[C10]": "[movies].[movie_title]",
                "[T3].[C11]": "[movies].[movie_title_language]",
                "[C11]": "[movies].[movie_title_language]",
                "[T3].[C12]": "[movies].[movie_url]",
                "[C12]": "[movies].[movie_url]",
                "[T4]": "[ratings]",
                "[T4].[C13]": "[ratings].[critic]",
                "[C13]": "[ratings].[critic]",
                "[T4].[C14]": "[ratings].[movie_id]",
                "[C14]": "[ratings].[movie_id]",
                "[T4].[C15]": "[ratings].[rating_id]",
                "[C15]": "[ratings].[rating_id]",
                "[T4].[C16]": "[ratings].[rating_timestamp_utc]",
                "[C16]": "[ratings].[rating_timestamp_utc]",
                "[T4].[C17]": "[ratings].[user_id]",
                "[C17]": "[ratings].[user_id]",
                "[T5]": "[ratings_users]",
                "[T5].[C18]": "[ratings_users].[rating_date_utc]",
                "[C18]": "[ratings_users].[rating_date_utc]",
                "[T5].[C19]": "[ratings_users].[user_avatar_image_url]",
                "[C19]": "[ratings_users].[user_avatar_image_url]",
                "[T5].[C20]": "[ratings_users].[user_id]",
                "[C20]": "[ratings_users].[user_id]",
                "[T5].[C21]": "[ratings_users].[user_subscriber]",
                "[C21]": "[ratings_users].[user_subscriber]",
                "[T5].[C22]": "[ratings_users].[user_trialist]",
                "[C22]": "[ratings_users].[user_trialist]"
            },
            "question": "What is the [C10] of the [V3] that was [C16] [V2] by [C17] [V1]? [C17] [V1] refers to user_id = [V1]; [C16] [V2] refers to MAX(rating_timestamp_utc); [V1] is a value of the column [C20]; [V2] is a value of the column [C16]; [V3] is a value of the column [C10]",
            "to_value": {
                "[V1]": "57756708",
                "[V2]": "recently",
                "[V3]": "movie"
            },
            "masked": 9,
            "masked_terms": [
                "57756708",
                "recently",
                "movie",
                "name",
                "movie",
                "rated",
                "recently",
                "user",
                "57756708"
            ],
            "sql": "SELECT [T3].[C10] FROM [T4] INNER JOIN [T3] ON [T4].[C14] = [T3].[C8] INNER JOIN [T5] ON [T4].[C17] = [T5].[C20] WHERE [T4].[C16] = (SELECT MAX([C16]) FROM [T4] WHERE [T4].[C17] = [T5].[C20]) AND [T5].[C20] = [V1]",
            "repaired_sql": "SELECT [T3].[C10] FROM [T4] JOIN [T3] ON [T4].[C14] = [T3].[C8] WHERE [T4].[C17] = [V1] AND [T4].[C16] = (SELECT MAX([C16]) FROM [T4] WHERE [C17] = [V1]) AND [T3].[C10] = '[V3]'"
        },
        "values": [],
        "value_links": {
            "57756708": "[ratings_users].[user_id]",
            "recently": "[ratings].[rating_timestamp_utc]",
            "movie": "[movies].[movie_title]"
        },
        "filtered_value_links": {
            "57756708": "[ratings_users].[user_id]",
            "recently": "[ratings].[rating_timestamp_utc]",
            "movie": "[movies].[movie_title]"
        },
        "schema_links": {
            "name": "COLUMN:[movies].[movie_title]",
            "movie": "TABLE:[movies]",
            "rated": "COLUMN:[ratings].[rating_timestamp_utc]",
            "recently": "COLUMN:[ratings].[rating_timestamp_utc]",
            "user": "COLUMN:[ratings].[user_id]",
            "57756708": "COLUMN:[ratings].[user_id]"
        },
        "filtered_schema_links": {
            "name": "COLUMN:[movies].[movie_title]",
            "movie": "TABLE:[movies]",
            "rated": "COLUMN:[ratings].[rating_timestamp_utc]",
            "recently": "COLUMN:[ratings].[rating_timestamp_utc]",
            "user": "COLUMN:[ratings].[user_id]",
            "57756708": "COLUMN:[ratings].[user_id]"
        },
        "attack": "What is the restaurant name of the restaurant that was rating_timestamp_utc MAX(rating_timestamp_utc) by user_id = [V1]? user_id = [V1] refers to user_id = [V1]; rating_timestamp_utc MAX(rating_timestamp_utc) refers to MAX(rating_timestamp_utc); [V1] is a value of the column user_id; MAX(rating_timestamp_utc) is a value of the column rating_timestamp_utc; restaurant name is a value of the column restaurant name"
    },
    {
        "db_id": "book_publishing_company",
        "question": "Name all employees who were hired before year 1990. hired before year 1990 refers to YEAR(hire_date)<1990",
        "evidence": "hired before year 1990 refers to YEAR(hire_date)<1990",
        "SQL": "SELECT fname, lname FROM employee WHERE STRFTIME('%Y', hire_date) < '1990'",
        "query": "SELECT fname, lname FROM employee WHERE STRFTIME('%Y', hire_date) < '1990'",
        "evidence_added": true,
        "question_toks": [
            "Name",
            "all",
            "employees",
            "who",
            "were",
            "hired",
            "before",
            "year",
            "1990",
            ".",
            "hired",
            "before",
            "year",
            "1990",
            "refers",
            "to",
            "YEAR(hire_date)<1990"
        ],
        "tc_original": [
            "employee.hire_date",
            "employee.emp_id",
            "employee.pub_id",
            "employee.fname",
            "employee.minit",
            "employee.*",
            "authors.phone",
            "authors.address",
            "authors.city",
            "authors.state",
            "authors.zip",
            "authors.*",
            "publishers.city",
            "publishers.state",
            "publishers.country",
            "publishers.pub_id",
            "publishers.pub_name",
            "publishers.*",
            "pub_info.logo",
            "pub_info.pub_id",
            "pub_info.pr_info",
            "pub_info.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[employee]",
            "COLUMN:[employee].[hire_date]",
            "COLUMN:[employee].[emp_id]",
            "COLUMN:[employee].[pub_id]",
            "COLUMN:[employee].[fname]",
            "COLUMN:[employee].[minit]",
            "COLUMN:[employee].[*]",
            "TABLE:[authors]",
            "COLUMN:[authors].[phone]",
            "COLUMN:[authors].[address]",
            "COLUMN:[authors].[city]",
            "COLUMN:[authors].[state]",
            "COLUMN:[authors].[zip]",
            "COLUMN:[authors].[*]",
            "TABLE:[publishers]",
            "COLUMN:[publishers].[city]",
            "COLUMN:[publishers].[state]",
            "COLUMN:[publishers].[country]",
            "COLUMN:[publishers].[pub_id]",
            "COLUMN:[publishers].[pub_name]",
            "COLUMN:[publishers].[*]",
            "TABLE:[pub_info]",
            "COLUMN:[pub_info].[logo]",
            "COLUMN:[pub_info].[pub_id]",
            "COLUMN:[pub_info].[pr_info]",
            "COLUMN:[pub_info].[*]"
        ],
        "schema": "'[authors]':\n  '[address]': text\n  '[city]': text\n  '[phone]': text\n  '[state]': text\n  '[zip]': text\n'[employee]':\n  '[emp_id]':\n    primary_key: true\n    type: text\n  '[fname]': text\n  '[hire_date]': datetime\n  '[minit]': text\n  '[pub_id]':\n    foreign_key: '[publishers].[pub_id]'\n    type: text\n'[pub_info]':\n  '[logo]': blob\n  '[pr_info]': text\n  '[pub_id]':\n    foreign_key: '[publishers].[pub_id]'\n    primary_key: true\n    type: text\n'[publishers]':\n  '[city]': text\n  '[country]': text\n  '[pub_id]':\n    primary_key: true\n    type: text\n  '[pub_name]': text\n  '[state]': text\n",
        "gold_links": {
            "employees": "TABLE:[employee]",
            "hired": "COLUMN:[employee].[hire_date]",
            "1990": "VALUE:[employee].[hire_date]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[authors]",
                "[C1]": "[authors].[address]",
                "[C2]": "[authors].[city]",
                "[C3]": "[authors].[phone]",
                "[C4]": "[authors].[state]",
                "[C5]": "[authors].[zip]",
                "[T2]": "[employee]",
                "[C6]": "[employee].[emp_id]",
                "[C7]": "[employee].[fname]",
                "[C8]": "[employee].[hire_date]",
                "[C9]": "[employee].[minit]",
                "[C10]": "[employee].[pub_id]",
                "[T3]": "[pub_info]",
                "[C11]": "[pub_info].[logo]",
                "[C12]": "[pub_info].[pr_info]",
                "[C13]": "[pub_info].[pub_id]",
                "[T4]": "[publishers]",
                "[C14]": "[publishers].[city]",
                "[C15]": "[publishers].[country]",
                "[C16]": "[publishers].[pub_id]",
                "[C17]": "[publishers].[pub_name]",
                "[C18]": "[publishers].[state]"
            },
            "to_symbol": {
                "[authors]": "[T1]",
                "[authors].[address]": "[C1]",
                "[authors].[city]": "[C2]",
                "[authors].[phone]": "[C3]",
                "[authors].[state]": "[C4]",
                "[authors].[zip]": "[C5]",
                "[employee]": "[T2]",
                "[employee].[emp_id]": "[C6]",
                "[employee].[fname]": "[C7]",
                "[employee].[hire_date]": "[C8]",
                "[employee].[minit]": "[C9]",
                "[employee].[pub_id]": "[C10]",
                "[pub_info]": "[T3]",
                "[pub_info].[logo]": "[C11]",
                "[pub_info].[pr_info]": "[C12]",
                "[pub_info].[pub_id]": "[C13]",
                "[publishers]": "[T4]",
                "[publishers].[city]": "[C14]",
                "[publishers].[country]": "[C15]",
                "[publishers].[pub_id]": "[C16]",
                "[publishers].[pub_name]": "[C17]",
                "[publishers].[state]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]':\n    foreign_key: '[T4].[C16]'\n    type: text\n  '[C6]':\n    primary_key: true\n    type: text\n  '[C7]': text\n  '[C8]': datetime\n  '[C9]': text\n'[T3]':\n  '[C11]': blob\n  '[C12]': text\n  '[C13]':\n    foreign_key: '[T4].[C16]'\n    primary_key: true\n    type: text\n'[T4]':\n  '[C14]': text\n  '[C15]': text\n  '[C16]':\n    primary_key: true\n    type: text\n  '[C17]': text\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[authors]",
                "[T1].[C1]": "[authors].[address]",
                "[C1]": "[authors].[address]",
                "[T1].[C2]": "[authors].[city]",
                "[C2]": "[authors].[city]",
                "[T1].[C3]": "[authors].[phone]",
                "[C3]": "[authors].[phone]",
                "[T1].[C4]": "[authors].[state]",
                "[C4]": "[authors].[state]",
                "[T1].[C5]": "[authors].[zip]",
                "[C5]": "[authors].[zip]",
                "[T2]": "[employee]",
                "[T2].[C6]": "[employee].[emp_id]",
                "[C6]": "[employee].[emp_id]",
                "[T2].[C7]": "[employee].[fname]",
                "[C7]": "[employee].[fname]",
                "[T2].[C8]": "[employee].[hire_date]",
                "[C8]": "[employee].[hire_date]",
                "[T2].[C9]": "[employee].[minit]",
                "[C9]": "[employee].[minit]",
                "[T2].[C10]": "[employee].[pub_id]",
                "[C10]": "[employee].[pub_id]",
                "[T3]": "[pub_info]",
                "[T3].[C11]": "[pub_info].[logo]",
                "[C11]": "[pub_info].[logo]",
                "[T3].[C12]": "[pub_info].[pr_info]",
                "[C12]": "[pub_info].[pr_info]",
                "[T3].[C13]": "[pub_info].[pub_id]",
                "[C13]": "[pub_info].[pub_id]",
                "[T4]": "[publishers]",
                "[T4].[C14]": "[publishers].[city]",
                "[C14]": "[publishers].[city]",
                "[T4].[C15]": "[publishers].[country]",
                "[C15]": "[publishers].[country]",
                "[T4].[C16]": "[publishers].[pub_id]",
                "[C16]": "[publishers].[pub_id]",
                "[T4].[C17]": "[publishers].[pub_name]",
                "[C17]": "[publishers].[pub_name]",
                "[T4].[C18]": "[publishers].[state]",
                "[C18]": "[publishers].[state]"
            },
            "question": "Name all employees who were [C8] before [C8] [V1]. [C8] before [C8] [V1] refers to [C8](hire_date)<[V1]; [V1] is a value of the column [C8]",
            "to_value": {
                "[V1]": "1990"
            },
            "masked": 4,
            "masked_terms": [
                "1990",
                "hired",
                "year",
                "1990"
            ],
            "sql": "SELECT [T2].[C6] FROM [T2] WHERE [T2].[C8] < (SELECT MIN([T2].[C8]) FROM [T2])",
            "repaired_sql": "SELECT [T1].[C1] FROM [T1] JOIN [T2] ON [T1].[C2] = [T2].[C6] WHERE [T2].[C8] < '[V1]'"
        },
        "values": [
            "1990"
        ],
        "value_links": {
            "1990": "[employee].[hire_date]"
        },
        "filtered_value_links": {
            "1990": "[employee].[hire_date]"
        },
        "schema_links": {
            "hired": "COLUMN:[employee].[hire_date]",
            "year": "COLUMN:[employee].[hire_date]",
            "1990": "COLUMN:[employee].[hire_date]"
        },
        "filtered_schema_links": {
            "hired": "COLUMN:[employee].[hire_date]",
            "year": "COLUMN:[employee].[hire_date]",
            "1990": "COLUMN:[employee].[hire_date]"
        },
        "attack": "Name all employees who were hired before hire_date 2020-01-01. hire_date before hire_date 2020-01-01 refers to hire_date(hire_date)<2020-01-01; 2020-01-01 is a value of the column hire_date"
    },
    {
        "db_id": "book_publishing_company",
        "question": "Among all employees, who have job level greater than 200. State the employee name and job description. job level greater than 200 refers to job_lvl>200; job description refers to job_desc",
        "evidence": "job level greater than 200 refers to job_lvl>200; job description refers to job_desc",
        "SQL": "SELECT T1.fname, T1.lname, T2.job_desc FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.job_lvl > 200",
        "query": "SELECT T1.fname, T1.lname, T2.job_desc FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.job_lvl > 200",
        "evidence_added": true,
        "question_toks": [
            "Among",
            "all",
            "employees",
            ",",
            "who",
            "have",
            "job",
            "level",
            "greater",
            "than",
            "200",
            ".",
            "State",
            "the",
            "employee",
            "name",
            "and",
            "job",
            "description",
            ".",
            "job",
            "level",
            "greater",
            "than",
            "200",
            "refers",
            "to",
            "job_lvl>200",
            ";",
            "job",
            "description",
            "refers",
            "to",
            "job_desc"
        ],
        "tc_original": [
            "employee.job_lvl",
            "employee.fname",
            "employee.job_id",
            "employee.lname",
            "employee.emp_id",
            "employee.*",
            "jobs.job_desc",
            "jobs.job_id",
            "jobs.min_lvl",
            "jobs.max_lvl",
            "jobs.*",
            "authors.phone",
            "authors.address",
            "authors.city",
            "authors.state",
            "authors.zip",
            "authors.*",
            "titles.title",
            "titles.type",
            "titles.price",
            "titles.advance",
            "titles.royalty",
            "titles.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[employee]",
            "COLUMN:[employee].[job_lvl]",
            "COLUMN:[employee].[fname]",
            "COLUMN:[employee].[job_id]",
            "COLUMN:[employee].[lname]",
            "COLUMN:[employee].[emp_id]",
            "COLUMN:[employee].[*]",
            "TABLE:[jobs]",
            "COLUMN:[jobs].[job_desc]",
            "COLUMN:[jobs].[job_id]",
            "COLUMN:[jobs].[min_lvl]",
            "COLUMN:[jobs].[max_lvl]",
            "COLUMN:[jobs].[*]",
            "TABLE:[authors]",
            "COLUMN:[authors].[phone]",
            "COLUMN:[authors].[address]",
            "COLUMN:[authors].[city]",
            "COLUMN:[authors].[state]",
            "COLUMN:[authors].[zip]",
            "COLUMN:[authors].[*]",
            "TABLE:[titles]",
            "COLUMN:[titles].[title]",
            "COLUMN:[titles].[type]",
            "COLUMN:[titles].[price]",
            "COLUMN:[titles].[advance]",
            "COLUMN:[titles].[royalty]",
            "COLUMN:[titles].[*]"
        ],
        "schema": "'[authors]':\n  '[address]': text\n  '[city]': text\n  '[phone]': text\n  '[state]': text\n  '[zip]': text\n'[employee]':\n  '[emp_id]':\n    primary_key: true\n    type: text\n  '[fname]': text\n  '[job_id]':\n    foreign_key: '[jobs].[job_id]'\n    type: integer\n  '[job_lvl]': integer\n  '[lname]': text\n'[jobs]':\n  '[job_desc]': text\n  '[job_id]':\n    primary_key: true\n    type: integer\n  '[max_lvl]': integer\n  '[min_lvl]': integer\n'[titles]':\n  '[advance]': real\n  '[price]': real\n  '[royalty]': integer\n  '[title]': text\n  '[type]': text\n",
        "gold_links": {
            "employees": "TABLE:[employee]",
            "employee name": "COLUMN:[employee].[fname]",
            "name": "COLUMN:[employee].[fname]",
            "job description": "COLUMN:[jobs].[job_desc]",
            "job level": "COLUMN:[employee].[job_lvl]",
            "200": "VALUE:[employee].[job_lvl]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[authors]",
                "[C1]": "[authors].[address]",
                "[C2]": "[authors].[city]",
                "[C3]": "[authors].[phone]",
                "[C4]": "[authors].[state]",
                "[C5]": "[authors].[zip]",
                "[T2]": "[employee]",
                "[C6]": "[employee].[emp_id]",
                "[C7]": "[employee].[fname]",
                "[C8]": "[employee].[job_id]",
                "[C9]": "[employee].[job_lvl]",
                "[C10]": "[employee].[lname]",
                "[T3]": "[jobs]",
                "[C11]": "[jobs].[job_desc]",
                "[C12]": "[jobs].[job_id]",
                "[C13]": "[jobs].[max_lvl]",
                "[C14]": "[jobs].[min_lvl]",
                "[T4]": "[titles]",
                "[C15]": "[titles].[advance]",
                "[C16]": "[titles].[price]",
                "[C17]": "[titles].[royalty]",
                "[C18]": "[titles].[title]",
                "[C19]": "[titles].[type]"
            },
            "to_symbol": {
                "[authors]": "[T1]",
                "[authors].[address]": "[C1]",
                "[authors].[city]": "[C2]",
                "[authors].[phone]": "[C3]",
                "[authors].[state]": "[C4]",
                "[authors].[zip]": "[C5]",
                "[employee]": "[T2]",
                "[employee].[emp_id]": "[C6]",
                "[employee].[fname]": "[C7]",
                "[employee].[job_id]": "[C8]",
                "[employee].[job_lvl]": "[C9]",
                "[employee].[lname]": "[C10]",
                "[jobs]": "[T3]",
                "[jobs].[job_desc]": "[C11]",
                "[jobs].[job_id]": "[C12]",
                "[jobs].[max_lvl]": "[C13]",
                "[jobs].[min_lvl]": "[C14]",
                "[titles]": "[T4]",
                "[titles].[advance]": "[C15]",
                "[titles].[price]": "[C16]",
                "[titles].[royalty]": "[C17]",
                "[titles].[title]": "[C18]",
                "[titles].[type]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    primary_key: true\n    type: text\n  '[C7]': text\n  '[C8]':\n    foreign_key: '[T3].[C12]'\n    type: integer\n  '[C9]': integer\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: integer\n  '[C13]': integer\n  '[C14]': integer\n'[T4]':\n  '[C15]': real\n  '[C16]': real\n  '[C17]': integer\n  '[C18]': text\n  '[C19]': text\n",
            "reverse_dict": {
                "[T1]": "[authors]",
                "[T1].[C1]": "[authors].[address]",
                "[C1]": "[authors].[address]",
                "[T1].[C2]": "[authors].[city]",
                "[C2]": "[authors].[city]",
                "[T1].[C3]": "[authors].[phone]",
                "[C3]": "[authors].[phone]",
                "[T1].[C4]": "[authors].[state]",
                "[C4]": "[authors].[state]",
                "[T1].[C5]": "[authors].[zip]",
                "[C5]": "[authors].[zip]",
                "[T2]": "[employee]",
                "[T2].[C6]": "[employee].[emp_id]",
                "[C6]": "[employee].[emp_id]",
                "[T2].[C7]": "[employee].[fname]",
                "[C7]": "[employee].[fname]",
                "[T2].[C8]": "[employee].[job_id]",
                "[C8]": "[employee].[job_id]",
                "[T2].[C9]": "[employee].[job_lvl]",
                "[C9]": "[employee].[job_lvl]",
                "[T2].[C10]": "[employee].[lname]",
                "[C10]": "[employee].[lname]",
                "[T3]": "[jobs]",
                "[T3].[C11]": "[jobs].[job_desc]",
                "[C11]": "[jobs].[job_desc]",
                "[T3].[C12]": "[jobs].[job_id]",
                "[C12]": "[jobs].[job_id]",
                "[T3].[C13]": "[jobs].[max_lvl]",
                "[C13]": "[jobs].[max_lvl]",
                "[T3].[C14]": "[jobs].[min_lvl]",
                "[C14]": "[jobs].[min_lvl]",
                "[T4]": "[titles]",
                "[T4].[C15]": "[titles].[advance]",
                "[C15]": "[titles].[advance]",
                "[T4].[C16]": "[titles].[price]",
                "[C16]": "[titles].[price]",
                "[T4].[C17]": "[titles].[royalty]",
                "[C17]": "[titles].[royalty]",
                "[T4].[C18]": "[titles].[title]",
                "[C18]": "[titles].[title]",
                "[T4].[C19]": "[titles].[type]",
                "[C19]": "[titles].[type]"
            },
            "question": "Among all employees, who have job level greater than 200. State the [T2] name and job description. job level greater than 200 refers to [V1]; job description refers to [V2]; [V1] is a value of the column [C13]; [V2] is a value of the column [C11]",
            "to_value": {
                "[V1]": "job_lvl>200",
                "[V2]": "job_desc"
            },
            "masked": 5,
            "masked_terms": [
                "job_lvl>200",
                "job_desc",
                "employee",
                "job_lvl",
                "job_desc"
            ],
            "sql": "SELECT [T2].[C10], [T3].[C11] FROM [T2] JOIN [T3] ON [T2].[C8] = [T3].[C12] WHERE [T3].[C13] > 200",
            "repaired_sql": "SELECT [T2].[C10], [T3].[C11] FROM [T2] JOIN [T3] ON [T2].[C8] = [T3].[C12] WHERE [T3].[C13] > 200"
        },
        "values": [
            "job_lvl>200",
            "job_desc"
        ],
        "value_links": {
            "job_lvl>200": "[jobs].[max_lvl]",
            "job_desc": "[jobs].[job_desc]"
        },
        "filtered_value_links": {
            "job_lvl>200": "[jobs].[max_lvl]",
            "job_desc": "[jobs].[job_desc]"
        },
        "schema_links": {
            "employee": "TABLE:[employee]",
            "job_lvl": "COLUMN:[employee].[job_lvl]",
            "job_desc": "COLUMN:[jobs].[job_desc]"
        },
        "filtered_schema_links": {
            "employee": "TABLE:[employee]",
            "job_lvl": "COLUMN:[employee].[job_lvl]",
            "job_desc": "COLUMN:[jobs].[job_desc]"
        },
        "attack": "Among all employees, who have job level greater than 200. State the department name and job description. job level greater than 200 refers to 200; job description refers to description; 200 is a value of the column job level; description is a value of the column description"
    },
    {
        "db_id": "book_publishing_company",
        "question": "How many books on business have the bookstores in Massachusetts ordered? Massachusetts is a state; business books refers to type = 'business'",
        "evidence": "Massachusetts is a state; business books refers to type = 'business'",
        "SQL": "SELECT SUM(T1.qty) FROM sales AS T1 INNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id INNER JOIN titles AS T3 ON T1.title_id = T3.title_id WHERE T2.state = 'Massachusetts' AND T3.type = 'business'",
        "query": "SELECT SUM(T1.qty) FROM sales AS T1 INNER JOIN stores AS T2 ON T1.stor_id = T2.stor_id INNER JOIN titles AS T3 ON T1.title_id = T3.title_id WHERE T2.state = 'Massachusetts' AND T3.type = 'business'",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "books",
            "on",
            "business",
            "have",
            "the",
            "bookstores",
            "in",
            "Massachusetts",
            "ordered",
            "?",
            "Massachusetts",
            "is",
            "a",
            "state",
            ";",
            "business",
            "books",
            "refers",
            "to",
            "type",
            "=",
            "'business'"
        ],
        "tc_original": [
            "stores.stor_id",
            "stores.state",
            "stores.city",
            "stores.zip",
            "stores.stor_name",
            "stores.*",
            "titles.type",
            "titles.title_id",
            "titles.title",
            "titles.pub_id",
            "titles.price",
            "titles.*",
            "sales.stor_id",
            "sales.title_id",
            "sales.ord_num",
            "sales.ord_date",
            "sales.qty",
            "sales.*",
            "roysched.royalty",
            "roysched.title_id",
            "roysched.lorange",
            "roysched.hirange",
            "roysched.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[stores]",
            "COLUMN:[stores].[stor_id]",
            "COLUMN:[stores].[state]",
            "COLUMN:[stores].[city]",
            "COLUMN:[stores].[zip]",
            "COLUMN:[stores].[stor_name]",
            "COLUMN:[stores].[*]",
            "TABLE:[titles]",
            "COLUMN:[titles].[type]",
            "COLUMN:[titles].[title_id]",
            "COLUMN:[titles].[title]",
            "COLUMN:[titles].[pub_id]",
            "COLUMN:[titles].[price]",
            "COLUMN:[titles].[*]",
            "TABLE:[sales]",
            "COLUMN:[sales].[stor_id]",
            "COLUMN:[sales].[title_id]",
            "COLUMN:[sales].[ord_num]",
            "COLUMN:[sales].[ord_date]",
            "COLUMN:[sales].[qty]",
            "COLUMN:[sales].[*]",
            "TABLE:[roysched]",
            "COLUMN:[roysched].[royalty]",
            "COLUMN:[roysched].[title_id]",
            "COLUMN:[roysched].[lorange]",
            "COLUMN:[roysched].[hirange]",
            "COLUMN:[roysched].[*]"
        ],
        "schema": "'[publishers]':\n  '[pub_id]':\n    primary_key: true\n    type: text\n'[roysched]':\n  '[hirange]': integer\n  '[lorange]': integer\n  '[royalty]': integer\n  '[title_id]':\n    foreign_key: '[titles].[title_id]'\n    type: text\n'[sales]':\n  '[ord_date]': datetime\n  '[ord_num]':\n    primary_key: true\n    type: text\n  '[qty]': integer\n  '[stor_id]':\n    foreign_key: '[stores].[stor_id]'\n    primary_key: true\n    type: text\n  '[title_id]':\n    foreign_key: '[titles].[title_id]'\n    primary_key: true\n    type: text\n'[stores]':\n  '[city]': text\n  '[state]': text\n  '[stor_id]':\n    primary_key: true\n    type: text\n  '[stor_name]': text\n  '[zip]': text\n'[titles]':\n  '[price]': real\n  '[pub_id]':\n    foreign_key: '[publishers].[pub_id]'\n    type: text\n  '[title]': text\n  '[title_id]':\n    primary_key: true\n    type: text\n  '[type]': text\n",
        "gold_links": {
            "books": "TABLE:[titles]",
            "business": "VALUE:[titles].[type]",
            "bookstores": "TABLE:[stores]",
            "Massachusetts": "VALUE:[stores].[state]",
            "ordered": "COLUMN:[sales].[qty]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[publishers]",
                "[C1]": "[publishers].[pub_id]",
                "[T2]": "[roysched]",
                "[C2]": "[roysched].[hirange]",
                "[C3]": "[roysched].[lorange]",
                "[C4]": "[roysched].[royalty]",
                "[C5]": "[roysched].[title_id]",
                "[T3]": "[sales]",
                "[C6]": "[sales].[ord_date]",
                "[C7]": "[sales].[ord_num]",
                "[C8]": "[sales].[qty]",
                "[C9]": "[sales].[stor_id]",
                "[C10]": "[sales].[title_id]",
                "[T4]": "[stores]",
                "[C11]": "[stores].[city]",
                "[C12]": "[stores].[state]",
                "[C13]": "[stores].[stor_id]",
                "[C14]": "[stores].[stor_name]",
                "[C15]": "[stores].[zip]",
                "[T5]": "[titles]",
                "[C16]": "[titles].[price]",
                "[C17]": "[titles].[pub_id]",
                "[C18]": "[titles].[title]",
                "[C19]": "[titles].[title_id]",
                "[C20]": "[titles].[type]"
            },
            "to_symbol": {
                "[publishers]": "[T1]",
                "[publishers].[pub_id]": "[C1]",
                "[roysched]": "[T2]",
                "[roysched].[hirange]": "[C2]",
                "[roysched].[lorange]": "[C3]",
                "[roysched].[royalty]": "[C4]",
                "[roysched].[title_id]": "[C5]",
                "[sales]": "[T3]",
                "[sales].[ord_date]": "[C6]",
                "[sales].[ord_num]": "[C7]",
                "[sales].[qty]": "[C8]",
                "[sales].[stor_id]": "[C9]",
                "[sales].[title_id]": "[C10]",
                "[stores]": "[T4]",
                "[stores].[city]": "[C11]",
                "[stores].[state]": "[C12]",
                "[stores].[stor_id]": "[C13]",
                "[stores].[stor_name]": "[C14]",
                "[stores].[zip]": "[C15]",
                "[titles]": "[T5]",
                "[titles].[price]": "[C16]",
                "[titles].[pub_id]": "[C17]",
                "[titles].[title]": "[C18]",
                "[titles].[title_id]": "[C19]",
                "[titles].[type]": "[C20]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n'[T2]':\n  '[C2]': integer\n  '[C3]': integer\n  '[C4]': integer\n  '[C5]':\n    foreign_key: '[T5].[C19]'\n    type: text\n'[T3]':\n  '[C10]':\n    foreign_key: '[T5].[C19]'\n    primary_key: true\n    type: text\n  '[C6]': datetime\n  '[C7]':\n    primary_key: true\n    type: text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T4].[C13]'\n    primary_key: true\n    type: text\n'[T4]':\n  '[C11]': text\n  '[C12]': text\n  '[C13]':\n    primary_key: true\n    type: text\n  '[C14]': text\n  '[C15]': text\n'[T5]':\n  '[C16]': real\n  '[C17]':\n    foreign_key: '[T1].[C1]'\n    type: text\n  '[C18]': text\n  '[C19]':\n    primary_key: true\n    type: text\n  '[C20]': text\n",
            "reverse_dict": {
                "[T1]": "[publishers]",
                "[T1].[C1]": "[publishers].[pub_id]",
                "[C1]": "[publishers].[pub_id]",
                "[T2]": "[roysched]",
                "[T2].[C2]": "[roysched].[hirange]",
                "[C2]": "[roysched].[hirange]",
                "[T2].[C3]": "[roysched].[lorange]",
                "[C3]": "[roysched].[lorange]",
                "[T2].[C4]": "[roysched].[royalty]",
                "[C4]": "[roysched].[royalty]",
                "[T2].[C5]": "[roysched].[title_id]",
                "[C5]": "[roysched].[title_id]",
                "[T3]": "[sales]",
                "[T3].[C6]": "[sales].[ord_date]",
                "[C6]": "[sales].[ord_date]",
                "[T3].[C7]": "[sales].[ord_num]",
                "[C7]": "[sales].[ord_num]",
                "[T3].[C8]": "[sales].[qty]",
                "[C8]": "[sales].[qty]",
                "[T3].[C9]": "[sales].[stor_id]",
                "[C9]": "[sales].[stor_id]",
                "[T3].[C10]": "[sales].[title_id]",
                "[C10]": "[sales].[title_id]",
                "[T4]": "[stores]",
                "[T4].[C11]": "[stores].[city]",
                "[C11]": "[stores].[city]",
                "[T4].[C12]": "[stores].[state]",
                "[C12]": "[stores].[state]",
                "[T4].[C13]": "[stores].[stor_id]",
                "[C13]": "[stores].[stor_id]",
                "[T4].[C14]": "[stores].[stor_name]",
                "[C14]": "[stores].[stor_name]",
                "[T4].[C15]": "[stores].[zip]",
                "[C15]": "[stores].[zip]",
                "[T5]": "[titles]",
                "[T5].[C16]": "[titles].[price]",
                "[C16]": "[titles].[price]",
                "[T5].[C17]": "[titles].[pub_id]",
                "[C17]": "[titles].[pub_id]",
                "[T5].[C18]": "[titles].[title]",
                "[C18]": "[titles].[title]",
                "[T5].[C19]": "[titles].[title_id]",
                "[C19]": "[titles].[title_id]",
                "[T5].[C20]": "[titles].[type]",
                "[C20]": "[titles].[type]"
            },
            "question": "How many [C18] on [V2] have the [T4] in [V1] [C8]? [V1] is a state; [V2] [C18] refers to type = '[V2]'; [V1] is a value of the column [C12]; [V2] is a value of the column [C20]",
            "to_value": {
                "[V1]": "Massachusetts",
                "[V2]": "business"
            },
            "masked": 7,
            "masked_terms": [
                "Massachusetts",
                "business",
                "books",
                "business",
                "Massachusetts",
                "bookstores",
                "ordered"
            ],
            "sql": "SELECT COUNT(*) FROM [T5] WHERE [C18] IS NOT NULL AND [C20] = '[V2]' AND [C19] IN (SELECT [T3].[C10] FROM [T3] JOIN [T4] ON [T3].[C9] = [T4].[C13] WHERE [T4].[C12] = '[V1]' AND [T3].[C8] = [V1])",
            "repaired_sql": "SELECT COUNT([T5].[C18]) FROM [T5] JOIN [T4] ON [T5].[C19] = [T4].[C13] JOIN [T3] ON [T3].[C10] = [T5].[C19] WHERE [T5].[C20] = '[V2]' AND [T4].[C12] = '[V1]' AND [T3].[C8] IS NOT NULL"
        },
        "values": [
            "Massachusetts",
            "business"
        ],
        "value_links": {
            "Massachusetts": "[stores].[state]",
            "business": "[titles].[type]"
        },
        "filtered_value_links": {
            "Massachusetts": "[stores].[state]",
            "business": "[titles].[type]"
        },
        "schema_links": {
            "books": "COLUMN:[titles].[title]",
            "business": "COLUMN:[titles].[type]",
            "Massachusetts": "COLUMN:[stores].[state]",
            "bookstores": "TABLE:[stores]",
            "ordered": "COLUMN:[sales].[qty]"
        },
        "filtered_schema_links": {
            "books": "COLUMN:[titles].[title]",
            "business": "COLUMN:[titles].[type]",
            "Massachusetts": "COLUMN:[stores].[state]",
            "bookstores": "TABLE:[stores]",
            "ordered": "COLUMN:[sales].[qty]"
        },
        "attack": "How many species on mammal have the parks in Texas area?"
    },
    {
        "db_id": "book_publishing_company",
        "question": "How many levels are there left for Diego W Roel to reach if he/she could go to the max level for his/her position? max level for his position refers to max_lvl; job level refers to job_lvl; level left to reach the max = SUBTRACT(max_lvl, job_lvl)",
        "evidence": "max level for his position refers to max_lvl; job level refers to job_lvl; level left to reach the max = SUBTRACT(max_lvl, job_lvl)",
        "SQL": "SELECT T2.max_lvl - T1.job_lvl FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.fname = 'Diego' AND T1.minit = 'W' AND T1.lname = 'Roel'",
        "query": "SELECT T2.max_lvl - T1.job_lvl FROM employee AS T1 INNER JOIN jobs AS T2 ON T1.job_id = T2.job_id WHERE T1.fname = 'Diego' AND T1.minit = 'W' AND T1.lname = 'Roel'",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "levels",
            "are",
            "there",
            "left",
            "for",
            "Diego",
            "W",
            "Roel",
            "to",
            "reach",
            "if",
            "he/she",
            "could",
            "go",
            "to",
            "the",
            "max",
            "level",
            "for",
            "his/her",
            "position",
            "?",
            "max",
            "level",
            "for",
            "his",
            "position",
            "refers",
            "to",
            "max_lvl",
            ";",
            "job",
            "level",
            "refers",
            "to",
            "job_lvl",
            ";",
            "level",
            "left",
            "to",
            "reach",
            "the",
            "max",
            "=",
            "SUBTRACT(max_lvl",
            ",",
            "job_lvl)"
        ],
        "tc_original": [
            "employee.lname",
            "employee.fname",
            "employee.job_lvl",
            "employee.job_id",
            "employee.emp_id",
            "employee.*",
            "jobs.job_id",
            "jobs.max_lvl",
            "jobs.min_lvl",
            "jobs.job_desc",
            "jobs.*",
            "authors.phone",
            "authors.address",
            "authors.city",
            "authors.state",
            "authors.zip",
            "authors.*",
            "titles.title",
            "titles.type",
            "titles.price",
            "titles.advance",
            "titles.royalty",
            "titles.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[employee]",
            "COLUMN:[employee].[lname]",
            "COLUMN:[employee].[fname]",
            "COLUMN:[employee].[job_lvl]",
            "COLUMN:[employee].[job_id]",
            "COLUMN:[employee].[emp_id]",
            "COLUMN:[employee].[*]",
            "TABLE:[jobs]",
            "COLUMN:[jobs].[job_id]",
            "COLUMN:[jobs].[max_lvl]",
            "COLUMN:[jobs].[min_lvl]",
            "COLUMN:[jobs].[job_desc]",
            "COLUMN:[jobs].[*]",
            "TABLE:[authors]",
            "COLUMN:[authors].[phone]",
            "COLUMN:[authors].[address]",
            "COLUMN:[authors].[city]",
            "COLUMN:[authors].[state]",
            "COLUMN:[authors].[zip]",
            "COLUMN:[authors].[*]",
            "TABLE:[titles]",
            "COLUMN:[titles].[title]",
            "COLUMN:[titles].[type]",
            "COLUMN:[titles].[price]",
            "COLUMN:[titles].[advance]",
            "COLUMN:[titles].[royalty]",
            "COLUMN:[titles].[*]"
        ],
        "schema": "'[authors]':\n  '[address]': text\n  '[city]': text\n  '[phone]': text\n  '[state]': text\n  '[zip]': text\n'[employee]':\n  '[emp_id]':\n    primary_key: true\n    type: text\n  '[fname]': text\n  '[job_id]':\n    foreign_key: '[jobs].[job_id]'\n    type: integer\n  '[job_lvl]': integer\n  '[lname]': text\n'[jobs]':\n  '[job_desc]': text\n  '[job_id]':\n    primary_key: true\n    type: integer\n  '[max_lvl]': integer\n  '[min_lvl]': integer\n'[titles]':\n  '[advance]': real\n  '[price]': real\n  '[royalty]': integer\n  '[title]': text\n  '[type]': text\n",
        "gold_links": {
            "levels": "COLUMN:[employee].[job_lvl]",
            "max level": "COLUMN:[jobs].[max_lvl]",
            "job level": "COLUMN:[employee].[job_lvl]",
            "Diego": "COLUMN:[employee].[fname]",
            "Roel": "COLUMN:[employee].[lname]",
            "position": "COLUMN:[jobs].[job_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[authors]",
                "[C1]": "[authors].[address]",
                "[C2]": "[authors].[city]",
                "[C3]": "[authors].[phone]",
                "[C4]": "[authors].[state]",
                "[C5]": "[authors].[zip]",
                "[T2]": "[employee]",
                "[C6]": "[employee].[emp_id]",
                "[C7]": "[employee].[fname]",
                "[C8]": "[employee].[job_id]",
                "[C9]": "[employee].[job_lvl]",
                "[C10]": "[employee].[lname]",
                "[T3]": "[jobs]",
                "[C11]": "[jobs].[job_desc]",
                "[C12]": "[jobs].[job_id]",
                "[C13]": "[jobs].[max_lvl]",
                "[C14]": "[jobs].[min_lvl]",
                "[T4]": "[titles]",
                "[C15]": "[titles].[advance]",
                "[C16]": "[titles].[price]",
                "[C17]": "[titles].[royalty]",
                "[C18]": "[titles].[title]",
                "[C19]": "[titles].[type]"
            },
            "to_symbol": {
                "[authors]": "[T1]",
                "[authors].[address]": "[C1]",
                "[authors].[city]": "[C2]",
                "[authors].[phone]": "[C3]",
                "[authors].[state]": "[C4]",
                "[authors].[zip]": "[C5]",
                "[employee]": "[T2]",
                "[employee].[emp_id]": "[C6]",
                "[employee].[fname]": "[C7]",
                "[employee].[job_id]": "[C8]",
                "[employee].[job_lvl]": "[C9]",
                "[employee].[lname]": "[C10]",
                "[jobs]": "[T3]",
                "[jobs].[job_desc]": "[C11]",
                "[jobs].[job_id]": "[C12]",
                "[jobs].[max_lvl]": "[C13]",
                "[jobs].[min_lvl]": "[C14]",
                "[titles]": "[T4]",
                "[titles].[advance]": "[C15]",
                "[titles].[price]": "[C16]",
                "[titles].[royalty]": "[C17]",
                "[titles].[title]": "[C18]",
                "[titles].[type]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    primary_key: true\n    type: text\n  '[C7]': text\n  '[C8]':\n    foreign_key: '[T3].[C12]'\n    type: integer\n  '[C9]': integer\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: integer\n  '[C13]': integer\n  '[C14]': integer\n'[T4]':\n  '[C15]': real\n  '[C16]': real\n  '[C17]': integer\n  '[C18]': text\n  '[C19]': text\n",
            "reverse_dict": {
                "[T1]": "[authors]",
                "[T1].[C1]": "[authors].[address]",
                "[C1]": "[authors].[address]",
                "[T1].[C2]": "[authors].[city]",
                "[C2]": "[authors].[city]",
                "[T1].[C3]": "[authors].[phone]",
                "[C3]": "[authors].[phone]",
                "[T1].[C4]": "[authors].[state]",
                "[C4]": "[authors].[state]",
                "[T1].[C5]": "[authors].[zip]",
                "[C5]": "[authors].[zip]",
                "[T2]": "[employee]",
                "[T2].[C6]": "[employee].[emp_id]",
                "[C6]": "[employee].[emp_id]",
                "[T2].[C7]": "[employee].[fname]",
                "[C7]": "[employee].[fname]",
                "[T2].[C8]": "[employee].[job_id]",
                "[C8]": "[employee].[job_id]",
                "[T2].[C9]": "[employee].[job_lvl]",
                "[C9]": "[employee].[job_lvl]",
                "[T2].[C10]": "[employee].[lname]",
                "[C10]": "[employee].[lname]",
                "[T3]": "[jobs]",
                "[T3].[C11]": "[jobs].[job_desc]",
                "[C11]": "[jobs].[job_desc]",
                "[T3].[C12]": "[jobs].[job_id]",
                "[C12]": "[jobs].[job_id]",
                "[T3].[C13]": "[jobs].[max_lvl]",
                "[C13]": "[jobs].[max_lvl]",
                "[T3].[C14]": "[jobs].[min_lvl]",
                "[C14]": "[jobs].[min_lvl]",
                "[T4]": "[titles]",
                "[T4].[C15]": "[titles].[advance]",
                "[C15]": "[titles].[advance]",
                "[T4].[C16]": "[titles].[price]",
                "[C16]": "[titles].[price]",
                "[T4].[C17]": "[titles].[royalty]",
                "[C17]": "[titles].[royalty]",
                "[T4].[C18]": "[titles].[title]",
                "[C18]": "[titles].[title]",
                "[T4].[C19]": "[titles].[type]",
                "[C19]": "[titles].[type]"
            },
            "question": "How many [C13] are there left for Diego W Roel to reach if he/she could go to the max level for his/her position? max level for his position refers to [V1]; job level refers to [V2]; level left to reach the max = SUBTRACT([V1], [V2]); [V1] is a value of the column [C13]; [V2] is a value of the column [C9]",
            "to_value": {
                "[V1]": "max_lvl",
                "[V2]": "job_lvl"
            },
            "masked": 4,
            "masked_terms": [
                "max_lvl",
                "job_lvl",
                "levels",
                "job_lvl"
            ],
            "sql": "SELECT [T3].[C13] - [T2].[C9] AS [level_left] FROM [T2] JOIN [T3] ON [T2].[C8] = [T3].[C12] WHERE [T2].[C10] = 'Diego W Roel'",
            "repaired_sql": "SELECT ([T3].[C13] - [T2].[C9]) AS level_left FROM [T2] JOIN [T1] ON [T2].[C6] = [T1].[C4] JOIN [T3] ON [T2].[C8] = [T3].[C12] WHERE [T1].[C1] = 'Diego W Roel'"
        },
        "values": [
            "Diego W Roel",
            "max_lvl",
            "job_lvl"
        ],
        "value_links": {
            "Diego W Roel": "[employee].[fname] [employee].[lname]",
            "max_lvl": "[jobs].[max_lvl]",
            "job_lvl": "[employee].[job_lvl]"
        },
        "filtered_value_links": {
            "Diego W Roel": "[employee].[fname] [employee].[lname]",
            "max_lvl": "[jobs].[max_lvl]",
            "job_lvl": "[employee].[job_lvl]"
        },
        "schema_links": {
            "levels": "COLUMN:[jobs].[max_lvl]",
            "job_lvl": "COLUMN:[employee].[job_lvl]"
        },
        "filtered_schema_links": {
            "levels": "COLUMN:[jobs].[max_lvl]",
            "job_lvl": "COLUMN:[employee].[job_lvl]"
        },
        "attack": "How many levels are there left for Diego W Roel to reach if he/she could go to the max level for his/her position? max level for his position refers to levels; job level refers to level; level left to reach the max = SUBTRACT(levels, level); levels is a value of the column levels; level is a value of the column level"
    },
    {
        "db_id": "retail_complains",
        "question": "What is the full name of the client whose complaint on 2017/3/27 was received by MICHAL? full names = first, middle, last; on 2017/3/27 refers to \"Date received\" = '2017-03-27'; MICHAL refers to server = 'MICHAL';",
        "evidence": "full names = first, middle, last; on 2017/3/27 refers to \"Date received\" = '2017-03-27'; MICHAL refers to server = 'MICHAL';",
        "SQL": "SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.`Date received` = '2017-03-27' AND T2.server = 'MICHAL'",
        "query": "SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.`Date received` = '2017-03-27' AND T2.server = 'MICHAL'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "full",
            "name",
            "of",
            "the",
            "client",
            "whose",
            "complaint",
            "on",
            "2017/3/27",
            "was",
            "received",
            "by",
            "MICHAL",
            "?",
            "full",
            "names",
            "=",
            "first",
            ",",
            "middle",
            ",",
            "last",
            ";",
            "on",
            "2017/3/27",
            "refers",
            "to",
            "\"Date",
            "received\"",
            "=",
            "'2017-03-27'",
            ";",
            "MICHAL",
            "refers",
            "to",
            "server",
            "=",
            "'MICHAL'",
            ";"
        ],
        "tc_original": [
            "client.client_id",
            "client.first",
            "client.last",
            "client.middle",
            "client.sex",
            "client.*",
            "callcenterlogs.date received",
            "callcenterlogs.server",
            "callcenterlogs.rand client",
            "callcenterlogs.complaint id",
            "callcenterlogs.priority",
            "callcenterlogs.*",
            "events.product",
            "events.issue",
            "events.tags",
            "events.complaint id",
            "events.client_id",
            "events.*",
            "reviews.date",
            "reviews.stars",
            "reviews.reviews",
            "reviews.product",
            "reviews.district_id",
            "reviews.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[client]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[first]",
            "COLUMN:[client].[last]",
            "COLUMN:[client].[middle]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[*]",
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[date received]",
            "COLUMN:[callcenterlogs].[server]",
            "COLUMN:[callcenterlogs].[rand client]",
            "COLUMN:[callcenterlogs].[complaint id]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[*]",
            "TABLE:[events]",
            "COLUMN:[events].[product]",
            "COLUMN:[events].[issue]",
            "COLUMN:[events].[tags]",
            "COLUMN:[events].[complaint id]",
            "COLUMN:[events].[client_id]",
            "COLUMN:[events].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[complaint id]':\n    primary_key: true\n    type: text\n  '[date received]': date\n  '[priority]': integer\n  '[rand client]':\n    foreign_key: '[client].[client_id]'\n    type: text\n  '[server]': text\n'[client]':\n  '[client_id]':\n    primary_key: true\n    type: text\n  '[first]': text\n  '[last]': text\n  '[middle]': text\n  '[sex]': text\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[events]':\n  '[client_id]':\n    foreign_key: '[client].[client_id]'\n    primary_key: true\n    type: text\n  '[complaint id]':\n    foreign_key: '[callcenterlogs].[complaint id]'\n    primary_key: true\n    type: text\n  '[issue]': text\n  '[product]': text\n  '[tags]': text\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n",
        "gold_links": {
            "full name": "TABLE:[client]",
            "first": "COLUMN:[client].[first]",
            "middle": "COLUMN:[client].[middle]",
            "last": "COLUMN:[client].[last]",
            "client": "TABLE:[client]",
            "complaint": "TABLE:[callcenterlogs]",
            "2017/3/27": "VALUE:[callcenterlogs].[date received]",
            "Date received": "COLUMN:[callcenterlogs].[date received]",
            "MICHAL": "VALUE:[callcenterlogs].[server]",
            "server": "COLUMN:[callcenterlogs].[server]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[complaint id]",
                "[C2]": "[callcenterlogs].[date received]",
                "[C3]": "[callcenterlogs].[priority]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[C5]": "[callcenterlogs].[server]",
                "[T2]": "[client]",
                "[C6]": "[client].[client_id]",
                "[C7]": "[client].[first]",
                "[C8]": "[client].[last]",
                "[C9]": "[client].[middle]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[events]",
                "[C12]": "[events].[client_id]",
                "[C13]": "[events].[complaint id]",
                "[C14]": "[events].[issue]",
                "[C15]": "[events].[product]",
                "[C16]": "[events].[tags]",
                "[T5]": "[reviews]",
                "[C17]": "[reviews].[date]",
                "[C18]": "[reviews].[district_id]",
                "[C19]": "[reviews].[product]",
                "[C20]": "[reviews].[reviews]",
                "[C21]": "[reviews].[stars]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[complaint id]": "[C1]",
                "[callcenterlogs].[date received]": "[C2]",
                "[callcenterlogs].[priority]": "[C3]",
                "[callcenterlogs].[rand client]": "[C4]",
                "[callcenterlogs].[server]": "[C5]",
                "[client]": "[T2]",
                "[client].[client_id]": "[C6]",
                "[client].[first]": "[C7]",
                "[client].[last]": "[C8]",
                "[client].[middle]": "[C9]",
                "[client].[sex]": "[C10]",
                "[district]": "[T3]",
                "[district].[district_id]": "[C11]",
                "[events]": "[T4]",
                "[events].[client_id]": "[C12]",
                "[events].[complaint id]": "[C13]",
                "[events].[issue]": "[C14]",
                "[events].[product]": "[C15]",
                "[events].[tags]": "[C16]",
                "[reviews]": "[T5]",
                "[reviews].[date]": "[C17]",
                "[reviews].[district_id]": "[C18]",
                "[reviews].[product]": "[C19]",
                "[reviews].[reviews]": "[C20]",
                "[reviews].[stars]": "[C21]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': date\n  '[C3]': integer\n  '[C4]':\n    foreign_key: '[T2].[C6]'\n    type: text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    primary_key: true\n    type: text\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C12]':\n    foreign_key: '[T2].[C6]'\n    primary_key: true\n    type: text\n  '[C13]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C14]': text\n  '[C15]': text\n  '[C16]': text\n'[T5]':\n  '[C17]':\n    primary_key: true\n    type: date\n  '[C18]':\n    foreign_key: '[T3].[C11]'\n    type: integer\n  '[C19]': text\n  '[C20]': text\n  '[C21]': integer\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[complaint id]",
                "[C1]": "[callcenterlogs].[complaint id]",
                "[T1].[C2]": "[callcenterlogs].[date received]",
                "[C2]": "[callcenterlogs].[date received]",
                "[T1].[C3]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[priority]",
                "[T1].[C4]": "[callcenterlogs].[rand client]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[T1].[C5]": "[callcenterlogs].[server]",
                "[C5]": "[callcenterlogs].[server]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[client_id]",
                "[C6]": "[client].[client_id]",
                "[T2].[C7]": "[client].[first]",
                "[C7]": "[client].[first]",
                "[T2].[C8]": "[client].[last]",
                "[C8]": "[client].[last]",
                "[T2].[C9]": "[client].[middle]",
                "[C9]": "[client].[middle]",
                "[T2].[C10]": "[client].[sex]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[district_id]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[events]",
                "[T4].[C12]": "[events].[client_id]",
                "[C12]": "[events].[client_id]",
                "[T4].[C13]": "[events].[complaint id]",
                "[C13]": "[events].[complaint id]",
                "[T4].[C14]": "[events].[issue]",
                "[C14]": "[events].[issue]",
                "[T4].[C15]": "[events].[product]",
                "[C15]": "[events].[product]",
                "[T4].[C16]": "[events].[tags]",
                "[C16]": "[events].[tags]",
                "[T5]": "[reviews]",
                "[T5].[C17]": "[reviews].[date]",
                "[C17]": "[reviews].[date]",
                "[T5].[C18]": "[reviews].[district_id]",
                "[C18]": "[reviews].[district_id]",
                "[T5].[C19]": "[reviews].[product]",
                "[C19]": "[reviews].[product]",
                "[T5].[C20]": "[reviews].[reviews]",
                "[C20]": "[reviews].[reviews]",
                "[T5].[C21]": "[reviews].[stars]",
                "[C21]": "[reviews].[stars]"
            },
            "question": "What is the full name of the [T2] whose complaint on 2017/3/27 was received by [V1]? full names = first, middle, last; on 2017/3/27 refers to \"[C2]\" = '[V2]'; [V1] refers to server = '[V1]';; [V1] is a value of the column [C5]; [V2] is a value of the column [C2]",
            "to_value": {
                "[V1]": "MICHAL",
                "[V2]": "2017-03-27"
            },
            "masked": 6,
            "masked_terms": [
                "MICHAL",
                "2017-03-27",
                "client",
                "date received",
                "MICHAL",
                "2017-03-27"
            ],
            "sql": "SELECT [T2].[C7], [T2].[C8], [T2].[C9] FROM [T1] INNER JOIN [T2] ON [T1].[C4] = [T2].[C6] WHERE [T1].[C2] = '2017-03-27' AND [T1].[C5] = '[V1]'",
            "repaired_sql": "SELECT [T2].[C7], [T2].[C8], [T2].[C9] FROM [T1] JOIN [T2] ON [T1].[C4] = [T2].[C6] WHERE [T1].[C2] = '[V2]' AND [T1].[C5] = '[V1]'"
        },
        "values": [
            "MICHAL",
            "2017-03-27"
        ],
        "value_links": {
            "MICHAL": "[callcenterlogs].[server]",
            "2017-03-27": "[callcenterlogs].[date received]"
        },
        "filtered_value_links": {
            "MICHAL": "[callcenterlogs].[server]",
            "2017-03-27": "[callcenterlogs].[date received]"
        },
        "schema_links": {
            "client": "TABLE:[client]",
            "date received": "COLUMN:[callcenterlogs].[date received]",
            "MICHAL": "COLUMN:[callcenterlogs].[server]",
            "2017-03-27": "COLUMN:[callcenterlogs].[date received]"
        },
        "filtered_schema_links": {
            "client": "TABLE:[client]",
            "date received": "COLUMN:[callcenterlogs].[date received]",
            "MICHAL": "COLUMN:[callcenterlogs].[server]",
            "2017-03-27": "COLUMN:[callcenterlogs].[date received]"
        },
        "attack": "What is the full name of the employee whose complaint on 2017/3/27 was received by server?"
    },
    {
        "db_id": "retail_complains",
        "question": "For how long did the complaint filed on 2017/3/27 by Rachel Hicks last? how long did the complaint filed last refers to ser_time; on 2017/3/27 refers to \"Date received\" = '2017-03-27';",
        "evidence": "how long did the complaint filed last refers to ser_time; on 2017/3/27 refers to \"Date received\" = '2017-03-27';",
        "SQL": "SELECT T2.ser_time FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.first = 'Rachel' AND T1.last = 'Hicks' AND T2.`Date received` = '2017-03-27'",
        "query": "SELECT T2.ser_time FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.first = 'Rachel' AND T1.last = 'Hicks' AND T2.`Date received` = '2017-03-27'",
        "evidence_added": true,
        "question_toks": [
            "For",
            "how",
            "long",
            "did",
            "the",
            "complaint",
            "filed",
            "on",
            "2017/3/27",
            "by",
            "Rachel",
            "Hicks",
            "last",
            "?",
            "how",
            "long",
            "did",
            "the",
            "complaint",
            "filed",
            "last",
            "refers",
            "to",
            "ser_time",
            ";",
            "on",
            "2017/3/27",
            "refers",
            "to",
            "\"Date",
            "received\"",
            "=",
            "'2017-03-27'",
            ";"
        ],
        "tc_original": [
            "client.client_id",
            "client.first",
            "client.last",
            "client.middle",
            "client.phone",
            "client.*",
            "callcenterlogs.ser_time",
            "callcenterlogs.date received",
            "callcenterlogs.complaint id",
            "callcenterlogs.rand client",
            "callcenterlogs.call_id",
            "callcenterlogs.*",
            "events.client_id",
            "events.complaint id",
            "events.product",
            "events.issue",
            "events.tags",
            "events.*",
            "reviews.date",
            "reviews.stars",
            "reviews.reviews",
            "reviews.product",
            "reviews.district_id",
            "reviews.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[client]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[first]",
            "COLUMN:[client].[last]",
            "COLUMN:[client].[middle]",
            "COLUMN:[client].[phone]",
            "COLUMN:[client].[*]",
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[ser_time]",
            "COLUMN:[callcenterlogs].[date received]",
            "COLUMN:[callcenterlogs].[complaint id]",
            "COLUMN:[callcenterlogs].[rand client]",
            "COLUMN:[callcenterlogs].[call_id]",
            "COLUMN:[callcenterlogs].[*]",
            "TABLE:[events]",
            "COLUMN:[events].[client_id]",
            "COLUMN:[events].[complaint id]",
            "COLUMN:[events].[product]",
            "COLUMN:[events].[issue]",
            "COLUMN:[events].[tags]",
            "COLUMN:[events].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[call_id]': integer\n  '[complaint id]':\n    primary_key: true\n    type: text\n  '[date received]': date\n  '[rand client]':\n    foreign_key: '[client].[client_id]'\n    type: text\n  '[ser_time]': text\n'[client]':\n  '[client_id]':\n    primary_key: true\n    type: text\n  '[first]': text\n  '[last]': text\n  '[middle]': text\n  '[phone]': text\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[events]':\n  '[client_id]':\n    foreign_key: '[client].[client_id]'\n    primary_key: true\n    type: text\n  '[complaint id]':\n    foreign_key: '[callcenterlogs].[complaint id]'\n    primary_key: true\n    type: text\n  '[issue]': text\n  '[product]': text\n  '[tags]': text\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n",
        "gold_links": {
            "how long": "COLUMN:[callcenterlogs].[ser_time]",
            "complaint": "TABLE:[callcenterlogs]",
            "Rachel": "COLUMN:[client].[first]",
            "Hicks": "COLUMN:[client].[last]",
            "2017/3/27": "VALUE:[callcenterlogs].[date received]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[call_id]",
                "[C2]": "[callcenterlogs].[complaint id]",
                "[C3]": "[callcenterlogs].[date received]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[C5]": "[callcenterlogs].[ser_time]",
                "[T2]": "[client]",
                "[C6]": "[client].[client_id]",
                "[C7]": "[client].[first]",
                "[C8]": "[client].[last]",
                "[C9]": "[client].[middle]",
                "[C10]": "[client].[phone]",
                "[T3]": "[district]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[events]",
                "[C12]": "[events].[client_id]",
                "[C13]": "[events].[complaint id]",
                "[C14]": "[events].[issue]",
                "[C15]": "[events].[product]",
                "[C16]": "[events].[tags]",
                "[T5]": "[reviews]",
                "[C17]": "[reviews].[date]",
                "[C18]": "[reviews].[district_id]",
                "[C19]": "[reviews].[product]",
                "[C20]": "[reviews].[reviews]",
                "[C21]": "[reviews].[stars]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[call_id]": "[C1]",
                "[callcenterlogs].[complaint id]": "[C2]",
                "[callcenterlogs].[date received]": "[C3]",
                "[callcenterlogs].[rand client]": "[C4]",
                "[callcenterlogs].[ser_time]": "[C5]",
                "[client]": "[T2]",
                "[client].[client_id]": "[C6]",
                "[client].[first]": "[C7]",
                "[client].[last]": "[C8]",
                "[client].[middle]": "[C9]",
                "[client].[phone]": "[C10]",
                "[district]": "[T3]",
                "[district].[district_id]": "[C11]",
                "[events]": "[T4]",
                "[events].[client_id]": "[C12]",
                "[events].[complaint id]": "[C13]",
                "[events].[issue]": "[C14]",
                "[events].[product]": "[C15]",
                "[events].[tags]": "[C16]",
                "[reviews]": "[T5]",
                "[reviews].[date]": "[C17]",
                "[reviews].[district_id]": "[C18]",
                "[reviews].[product]": "[C19]",
                "[reviews].[reviews]": "[C20]",
                "[reviews].[stars]": "[C21]"
            },
            "schema": "'[T1]':\n  '[C1]': integer\n  '[C2]':\n    primary_key: true\n    type: text\n  '[C3]': date\n  '[C4]':\n    foreign_key: '[T2].[C6]'\n    type: text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    primary_key: true\n    type: text\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C12]':\n    foreign_key: '[T2].[C6]'\n    primary_key: true\n    type: text\n  '[C13]':\n    foreign_key: '[T1].[C2]'\n    primary_key: true\n    type: text\n  '[C14]': text\n  '[C15]': text\n  '[C16]': text\n'[T5]':\n  '[C17]':\n    primary_key: true\n    type: date\n  '[C18]':\n    foreign_key: '[T3].[C11]'\n    type: integer\n  '[C19]': text\n  '[C20]': text\n  '[C21]': integer\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[call_id]",
                "[C1]": "[callcenterlogs].[call_id]",
                "[T1].[C2]": "[callcenterlogs].[complaint id]",
                "[C2]": "[callcenterlogs].[complaint id]",
                "[T1].[C3]": "[callcenterlogs].[date received]",
                "[C3]": "[callcenterlogs].[date received]",
                "[T1].[C4]": "[callcenterlogs].[rand client]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[T1].[C5]": "[callcenterlogs].[ser_time]",
                "[C5]": "[callcenterlogs].[ser_time]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[client_id]",
                "[C6]": "[client].[client_id]",
                "[T2].[C7]": "[client].[first]",
                "[C7]": "[client].[first]",
                "[T2].[C8]": "[client].[last]",
                "[C8]": "[client].[last]",
                "[T2].[C9]": "[client].[middle]",
                "[C9]": "[client].[middle]",
                "[T2].[C10]": "[client].[phone]",
                "[C10]": "[client].[phone]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[district_id]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[events]",
                "[T4].[C12]": "[events].[client_id]",
                "[C12]": "[events].[client_id]",
                "[T4].[C13]": "[events].[complaint id]",
                "[C13]": "[events].[complaint id]",
                "[T4].[C14]": "[events].[issue]",
                "[C14]": "[events].[issue]",
                "[T4].[C15]": "[events].[product]",
                "[C15]": "[events].[product]",
                "[T4].[C16]": "[events].[tags]",
                "[C16]": "[events].[tags]",
                "[T5]": "[reviews]",
                "[T5].[C17]": "[reviews].[date]",
                "[C17]": "[reviews].[date]",
                "[T5].[C18]": "[reviews].[district_id]",
                "[C18]": "[reviews].[district_id]",
                "[T5].[C19]": "[reviews].[product]",
                "[C19]": "[reviews].[product]",
                "[T5].[C20]": "[reviews].[reviews]",
                "[C20]": "[reviews].[reviews]",
                "[T5].[C21]": "[reviews].[stars]",
                "[C21]": "[reviews].[stars]"
            },
            "question": "For how long did the complaint filed on 2017/3/27 by [C4] last? [C5] refers to [V2]; on 2017/3/27 refers to \"Date received\" = '[V1]';; [V1] is a value of the column [C3]; [V2] is a value of the column [C5]",
            "to_value": {
                "[V1]": "2017-03-27",
                "[V2]": "ser_time"
            },
            "masked": 5,
            "masked_terms": [
                "2017-03-27",
                "ser_time",
                "how long did the complaint filed last",
                "2017-03-27",
                "Rachel Hicks"
            ],
            "sql": "SELECT [T1].[C5] FROM [T1] WHERE [T1].[C4] = '[C4]' AND [T1].[C3] = '2017-03-27'",
            "repaired_sql": "SELECT DATEDIFF(day, [T1].[C3], [T4].[C15]) FROM [T1] JOIN [T4] ON [T1].[C2] = [T4].[C13] WHERE [T1].[C3] = '[V1]' AND [T1].[C5] = '[V2]'"
        },
        "values": [
            "2017-03-27",
            "Rachel Hicks",
            "ser_time"
        ],
        "value_links": {
            "2017-03-27": "[callcenterlogs].[date received]",
            "Rachel Hicks": "[client].[first] [client].[last]",
            "ser_time": "[callcenterlogs].[ser_time]"
        },
        "filtered_value_links": {
            "2017-03-27": "[callcenterlogs].[date received]",
            "Rachel Hicks": "[client].[first] [client].[last]",
            "ser_time": "[callcenterlogs].[ser_time]"
        },
        "schema_links": {
            "how long did the complaint filed last": "COLUMN:[callcenterlogs].[ser_time]",
            "2017-03-27": "COLUMN:[callcenterlogs].[date received]",
            "Rachel Hicks": "COLUMN:[callcenterlogs].[rand client]"
        },
        "filtered_schema_links": {
            "how long did the complaint filed last": "COLUMN:[callcenterlogs].[ser_time]",
            "2017-03-27": "COLUMN:[callcenterlogs].[date received]",
            "Rachel Hicks": "COLUMN:[callcenterlogs].[rand client]"
        },
        "attack": "For how long did the complaint filed on 2017/3/27 by company name last? status refers to resolved; on 2017/3/27 refers to \"Date received\" = '2017/3/27';"
    },
    {
        "db_id": "retail_complains",
        "question": "What was the serve time for the complaint call from client \"C00007127\" on 2017/2/22? serve time refers to ser_time; longer ser_time means more verbose or longer complaint; on 2017/2/22 refers to \"Date received\" = '2017-02-22';",
        "evidence": "serve time refers to ser_time; longer ser_time means more verbose or longer complaint; on 2017/2/22 refers to \"Date received\" = '2017-02-22';",
        "SQL": "SELECT T1.ser_time FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T2.Client_ID = 'C00007127' AND T1.`Date received` = '2017-02-22'",
        "query": "SELECT T1.ser_time FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T2.Client_ID = 'C00007127' AND T1.`Date received` = '2017-02-22'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "was",
            "the",
            "serve",
            "time",
            "for",
            "the",
            "complaint",
            "call",
            "from",
            "client",
            "\"C00007127\"",
            "on",
            "2017/2/22",
            "?",
            "serve",
            "time",
            "refers",
            "to",
            "ser_time",
            ";",
            "longer",
            "ser_time",
            "means",
            "more",
            "verbose",
            "or",
            "longer",
            "complaint",
            ";",
            "on",
            "2017/2/22",
            "refers",
            "to",
            "\"Date",
            "received\"",
            "=",
            "'2017-02-22'",
            ";"
        ],
        "tc_original": [
            "callcenterlogs.ser_time",
            "callcenterlogs.date received",
            "callcenterlogs.rand client",
            "callcenterlogs.complaint id",
            "callcenterlogs.call_id",
            "callcenterlogs.*",
            "client.sex",
            "client.day",
            "client.month",
            "client.year",
            "client.age",
            "client.*",
            "reviews.stars",
            "reviews.reviews",
            "reviews.product",
            "reviews.date",
            "reviews.district_id",
            "reviews.*",
            "state.state",
            "state.region",
            "state.statecode",
            "state.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[ser_time]",
            "COLUMN:[callcenterlogs].[date received]",
            "COLUMN:[callcenterlogs].[rand client]",
            "COLUMN:[callcenterlogs].[complaint id]",
            "COLUMN:[callcenterlogs].[call_id]",
            "COLUMN:[callcenterlogs].[*]",
            "TABLE:[client]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[day]",
            "COLUMN:[client].[month]",
            "COLUMN:[client].[year]",
            "COLUMN:[client].[age]",
            "COLUMN:[client].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]",
            "TABLE:[state]",
            "COLUMN:[state].[state]",
            "COLUMN:[state].[region]",
            "COLUMN:[state].[statecode]",
            "COLUMN:[state].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[call_id]': integer\n  '[complaint id]':\n    primary_key: true\n    type: text\n  '[date received]': date\n  '[rand client]':\n    foreign_key: '[client].[client_id]'\n    type: text\n  '[ser_time]': text\n'[client]':\n  '[age]': integer\n  '[client_id]':\n    primary_key: true\n    type: text\n  '[day]': integer\n  '[month]': integer\n  '[sex]': text\n  '[year]': integer\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n'[state]':\n  '[region]': text\n  '[state]': text\n  '[statecode]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "serve time": "COLUMN:[callcenterlogs].[ser_time]",
            "complaint call": "TABLE:[callcenterlogs]",
            "client": "TABLE:[client]",
            "C00007127": "VALUE:[client].[client_id]",
            "2017/2/22": "VALUE:[callcenterlogs].[date received]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[call_id]",
                "[C2]": "[callcenterlogs].[complaint id]",
                "[C3]": "[callcenterlogs].[date received]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[C5]": "[callcenterlogs].[ser_time]",
                "[T2]": "[client]",
                "[C6]": "[client].[age]",
                "[C7]": "[client].[client_id]",
                "[C8]": "[client].[day]",
                "[C9]": "[client].[month]",
                "[C10]": "[client].[sex]",
                "[C11]": "[client].[year]",
                "[T3]": "[district]",
                "[C12]": "[district].[district_id]",
                "[T4]": "[reviews]",
                "[C13]": "[reviews].[date]",
                "[C14]": "[reviews].[district_id]",
                "[C15]": "[reviews].[product]",
                "[C16]": "[reviews].[reviews]",
                "[C17]": "[reviews].[stars]",
                "[T5]": "[state]",
                "[C18]": "[state].[region]",
                "[C19]": "[state].[state]",
                "[C20]": "[state].[statecode]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[call_id]": "[C1]",
                "[callcenterlogs].[complaint id]": "[C2]",
                "[callcenterlogs].[date received]": "[C3]",
                "[callcenterlogs].[rand client]": "[C4]",
                "[callcenterlogs].[ser_time]": "[C5]",
                "[client]": "[T2]",
                "[client].[age]": "[C6]",
                "[client].[client_id]": "[C7]",
                "[client].[day]": "[C8]",
                "[client].[month]": "[C9]",
                "[client].[sex]": "[C10]",
                "[client].[year]": "[C11]",
                "[district]": "[T3]",
                "[district].[district_id]": "[C12]",
                "[reviews]": "[T4]",
                "[reviews].[date]": "[C13]",
                "[reviews].[district_id]": "[C14]",
                "[reviews].[product]": "[C15]",
                "[reviews].[reviews]": "[C16]",
                "[reviews].[stars]": "[C17]",
                "[state]": "[T5]",
                "[state].[region]": "[C18]",
                "[state].[state]": "[C19]",
                "[state].[statecode]": "[C20]"
            },
            "schema": "'[T1]':\n  '[C1]': integer\n  '[C2]':\n    primary_key: true\n    type: text\n  '[C3]': date\n  '[C4]':\n    foreign_key: '[T2].[C7]'\n    type: text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C11]': integer\n  '[C6]': integer\n  '[C7]':\n    primary_key: true\n    type: text\n  '[C8]': integer\n  '[C9]': integer\n'[T3]':\n  '[C12]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C13]':\n    primary_key: true\n    type: date\n  '[C14]':\n    foreign_key: '[T3].[C12]'\n    type: integer\n  '[C15]': text\n  '[C16]': text\n  '[C17]': integer\n'[T5]':\n  '[C18]': text\n  '[C19]': text\n  '[C20]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[call_id]",
                "[C1]": "[callcenterlogs].[call_id]",
                "[T1].[C2]": "[callcenterlogs].[complaint id]",
                "[C2]": "[callcenterlogs].[complaint id]",
                "[T1].[C3]": "[callcenterlogs].[date received]",
                "[C3]": "[callcenterlogs].[date received]",
                "[T1].[C4]": "[callcenterlogs].[rand client]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[T1].[C5]": "[callcenterlogs].[ser_time]",
                "[C5]": "[callcenterlogs].[ser_time]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[age]",
                "[C6]": "[client].[age]",
                "[T2].[C7]": "[client].[client_id]",
                "[C7]": "[client].[client_id]",
                "[T2].[C8]": "[client].[day]",
                "[C8]": "[client].[day]",
                "[T2].[C9]": "[client].[month]",
                "[C9]": "[client].[month]",
                "[T2].[C10]": "[client].[sex]",
                "[C10]": "[client].[sex]",
                "[T2].[C11]": "[client].[year]",
                "[C11]": "[client].[year]",
                "[T3]": "[district]",
                "[T3].[C12]": "[district].[district_id]",
                "[C12]": "[district].[district_id]",
                "[T4]": "[reviews]",
                "[T4].[C13]": "[reviews].[date]",
                "[C13]": "[reviews].[date]",
                "[T4].[C14]": "[reviews].[district_id]",
                "[C14]": "[reviews].[district_id]",
                "[T4].[C15]": "[reviews].[product]",
                "[C15]": "[reviews].[product]",
                "[T4].[C16]": "[reviews].[reviews]",
                "[C16]": "[reviews].[reviews]",
                "[T4].[C17]": "[reviews].[stars]",
                "[C17]": "[reviews].[stars]",
                "[T5]": "[state]",
                "[T5].[C18]": "[state].[region]",
                "[C18]": "[state].[region]",
                "[T5].[C19]": "[state].[state]",
                "[C19]": "[state].[state]",
                "[T5].[C20]": "[state].[statecode]",
                "[C20]": "[state].[statecode]"
            },
            "question": "What was the [C5] for the [T1] from [C4] \"[V1]\" on 2017/2/22? [C5] refers to ser_time; longer ser_time means more verbose or longer complaint; on 2017/2/22 refers to \"Date received\" = '[V2]';; [V1] is a value of the column [C4]; [V2] is a value of the column [C3]",
            "to_value": {
                "[V1]": "C00007127",
                "[V2]": "2017-02-22"
            },
            "masked": 6,
            "masked_terms": [
                "C00007127",
                "2017-02-22",
                "complaint call",
                "serve time",
                "client",
                "2017-02-22"
            ],
            "sql": "SELECT [T1].[C5] FROM [T1] WHERE [T1].[C4] = '[V1]' AND [T1].[C3] = '2017-02-22'",
            "repaired_sql": "SELECT [C5] FROM [T1] WHERE [C4] = '[V1]' AND [C3] = '[V2]'"
        },
        "values": [
            "C00007127",
            "2017-02-22"
        ],
        "value_links": {
            "C00007127": "[callcenterlogs].[rand client]",
            "2017-02-22": "[callcenterlogs].[date received]"
        },
        "filtered_value_links": {
            "C00007127": "[callcenterlogs].[rand client]",
            "2017-02-22": "[callcenterlogs].[date received]"
        },
        "schema_links": {
            "complaint call": "TABLE:[callcenterlogs]",
            "serve time": "COLUMN:[callcenterlogs].[ser_time]",
            "client": "COLUMN:[callcenterlogs].[rand client]",
            "2017-02-22": "COLUMN:[callcenterlogs].[date received]"
        },
        "filtered_schema_links": {
            "complaint call": "TABLE:[callcenterlogs]",
            "serve time": "COLUMN:[callcenterlogs].[ser_time]",
            "client": "COLUMN:[callcenterlogs].[rand client]",
            "2017-02-22": "COLUMN:[callcenterlogs].[date received]"
        },
        "attack": "What was the ser_time for the complaints from Product \"Credit reporting, credit repair services, or other personal consumer reports\" on 2017/2/22?"
    },
    {
        "db_id": "retail_complains",
        "question": "What was the detailed issue did Mr Gunner Omer Fuller complain about? detailed issue refers to Sub-issue; Mr refers to sex = 'Male';",
        "evidence": "detailed issue refers to Sub-issue; Mr refers to sex = 'Male';",
        "SQL": "SELECT T2.`Sub-issue` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Gunner' AND T1.middle = 'Omer' AND T1.last = 'Fuller' AND T1.sex = 'Male'",
        "query": "SELECT T2.`Sub-issue` FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.first = 'Gunner' AND T1.middle = 'Omer' AND T1.last = 'Fuller' AND T1.sex = 'Male'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "was",
            "the",
            "detailed",
            "issue",
            "did",
            "Mr",
            "Gunner",
            "Omer",
            "Fuller",
            "complain",
            "about",
            "?",
            "detailed",
            "issue",
            "refers",
            "to",
            "Sub-issue",
            ";",
            "Mr",
            "refers",
            "to",
            "sex",
            "=",
            "'Male'",
            ";"
        ],
        "tc_original": [
            "client.sex",
            "client.first",
            "client.client_id",
            "client.last",
            "client.middle",
            "client.*",
            "events.client_id",
            "events.sub-issue",
            "events.complaint id",
            "events.issue",
            "events.product",
            "events.*",
            "callcenterlogs.complaint id",
            "callcenterlogs.rand client",
            "callcenterlogs.call_id",
            "callcenterlogs.priority",
            "callcenterlogs.type",
            "callcenterlogs.*",
            "reviews.date",
            "reviews.stars",
            "reviews.reviews",
            "reviews.product",
            "reviews.district_id",
            "reviews.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[client]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[first]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[last]",
            "COLUMN:[client].[middle]",
            "COLUMN:[client].[*]",
            "TABLE:[events]",
            "COLUMN:[events].[client_id]",
            "COLUMN:[events].[sub-issue]",
            "COLUMN:[events].[complaint id]",
            "COLUMN:[events].[issue]",
            "COLUMN:[events].[product]",
            "COLUMN:[events].[*]",
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[complaint id]",
            "COLUMN:[callcenterlogs].[rand client]",
            "COLUMN:[callcenterlogs].[call_id]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[type]",
            "COLUMN:[callcenterlogs].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[call_id]': integer\n  '[complaint id]':\n    primary_key: true\n    type: text\n  '[priority]': integer\n  '[rand client]':\n    foreign_key: '[client].[client_id]'\n    type: text\n  '[type]': text\n'[client]':\n  '[client_id]':\n    primary_key: true\n    type: text\n  '[first]': text\n  '[last]': text\n  '[middle]': text\n  '[sex]': text\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[events]':\n  '[client_id]':\n    foreign_key: '[client].[client_id]'\n    primary_key: true\n    type: text\n  '[complaint id]':\n    foreign_key: '[callcenterlogs].[complaint id]'\n    primary_key: true\n    type: text\n  '[issue]': text\n  '[product]': text\n  '[sub-issue]': text\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n",
        "gold_links": {
            "detailed issue": "COLUMN:[events].[sub-issue]",
            "Sub-issue": "COLUMN:[events].[sub-issue]",
            "Gunner": "COLUMN:[client].[first]",
            "Omer": "COLUMN:[client].[middle]",
            "Fuller": "COLUMN:[client].[last]",
            "Mr": "COLUMN:[client].[sex]",
            "Male": "VALUE:[client].[sex]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[call_id]",
                "[C2]": "[callcenterlogs].[complaint id]",
                "[C3]": "[callcenterlogs].[priority]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[C6]": "[client].[client_id]",
                "[C7]": "[client].[first]",
                "[C8]": "[client].[last]",
                "[C9]": "[client].[middle]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[events]",
                "[C12]": "[events].[client_id]",
                "[C13]": "[events].[complaint id]",
                "[C14]": "[events].[issue]",
                "[C15]": "[events].[product]",
                "[C16]": "[events].[sub-issue]",
                "[T5]": "[reviews]",
                "[C17]": "[reviews].[date]",
                "[C18]": "[reviews].[district_id]",
                "[C19]": "[reviews].[product]",
                "[C20]": "[reviews].[reviews]",
                "[C21]": "[reviews].[stars]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[call_id]": "[C1]",
                "[callcenterlogs].[complaint id]": "[C2]",
                "[callcenterlogs].[priority]": "[C3]",
                "[callcenterlogs].[rand client]": "[C4]",
                "[callcenterlogs].[type]": "[C5]",
                "[client]": "[T2]",
                "[client].[client_id]": "[C6]",
                "[client].[first]": "[C7]",
                "[client].[last]": "[C8]",
                "[client].[middle]": "[C9]",
                "[client].[sex]": "[C10]",
                "[district]": "[T3]",
                "[district].[district_id]": "[C11]",
                "[events]": "[T4]",
                "[events].[client_id]": "[C12]",
                "[events].[complaint id]": "[C13]",
                "[events].[issue]": "[C14]",
                "[events].[product]": "[C15]",
                "[events].[sub-issue]": "[C16]",
                "[reviews]": "[T5]",
                "[reviews].[date]": "[C17]",
                "[reviews].[district_id]": "[C18]",
                "[reviews].[product]": "[C19]",
                "[reviews].[reviews]": "[C20]",
                "[reviews].[stars]": "[C21]"
            },
            "schema": "'[T1]':\n  '[C1]': integer\n  '[C2]':\n    primary_key: true\n    type: text\n  '[C3]': integer\n  '[C4]':\n    foreign_key: '[T2].[C6]'\n    type: text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    primary_key: true\n    type: text\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C12]':\n    foreign_key: '[T2].[C6]'\n    primary_key: true\n    type: text\n  '[C13]':\n    foreign_key: '[T1].[C2]'\n    primary_key: true\n    type: text\n  '[C14]': text\n  '[C15]': text\n  '[C16]': text\n'[T5]':\n  '[C17]':\n    primary_key: true\n    type: date\n  '[C18]':\n    foreign_key: '[T3].[C11]'\n    type: integer\n  '[C19]': text\n  '[C20]': text\n  '[C21]': integer\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[call_id]",
                "[C1]": "[callcenterlogs].[call_id]",
                "[T1].[C2]": "[callcenterlogs].[complaint id]",
                "[C2]": "[callcenterlogs].[complaint id]",
                "[T1].[C3]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[priority]",
                "[T1].[C4]": "[callcenterlogs].[rand client]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[T1].[C5]": "[callcenterlogs].[type]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[client_id]",
                "[C6]": "[client].[client_id]",
                "[T2].[C7]": "[client].[first]",
                "[C7]": "[client].[first]",
                "[T2].[C8]": "[client].[last]",
                "[C8]": "[client].[last]",
                "[T2].[C9]": "[client].[middle]",
                "[C9]": "[client].[middle]",
                "[T2].[C10]": "[client].[sex]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[district_id]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[events]",
                "[T4].[C12]": "[events].[client_id]",
                "[C12]": "[events].[client_id]",
                "[T4].[C13]": "[events].[complaint id]",
                "[C13]": "[events].[complaint id]",
                "[T4].[C14]": "[events].[issue]",
                "[C14]": "[events].[issue]",
                "[T4].[C15]": "[events].[product]",
                "[C15]": "[events].[product]",
                "[T4].[C16]": "[events].[sub-issue]",
                "[C16]": "[events].[sub-issue]",
                "[T5]": "[reviews]",
                "[T5].[C17]": "[reviews].[date]",
                "[C17]": "[reviews].[date]",
                "[T5].[C18]": "[reviews].[district_id]",
                "[C18]": "[reviews].[district_id]",
                "[T5].[C19]": "[reviews].[product]",
                "[C19]": "[reviews].[product]",
                "[T5].[C20]": "[reviews].[reviews]",
                "[C20]": "[reviews].[reviews]",
                "[T5].[C21]": "[reviews].[stars]",
                "[C21]": "[reviews].[stars]"
            },
            "question": "What was the [C16] did [V1] complain about? [C16] refers to [V2]; [C10] refers to sex = 'Male';; [V1] is a value of the column [C6]; [V2] is a value of the column [C16]",
            "to_value": {
                "[V1]": "Mr Gunner Omer Fuller",
                "[V2]": "Sub-issue"
            },
            "masked": 5,
            "masked_terms": [
                "Mr Gunner Omer Fuller",
                "Sub-issue",
                "detailed issue",
                "Mr",
                "Gunner Omer Fuller"
            ],
            "sql": "SELECT [T4].[C16] FROM [T4] INNER JOIN [T2] ON [T4].[C12] = [T2].[C6] WHERE [T2].[C10] = 'Male'",
            "repaired_sql": "SELECT [T4].[C16] FROM [T4] JOIN [T2] ON [T4].[C12] = [T2].[C6] WHERE [T2].[C6] = '[V1]'"
        },
        "values": [
            "Mr Gunner Omer Fuller",
            "Sub-issue"
        ],
        "value_links": {
            "Mr Gunner Omer Fuller": "[client].[client_id]",
            "Sub-issue": "[events].[sub-issue]"
        },
        "filtered_value_links": {
            "Mr Gunner Omer Fuller": "[client].[client_id]",
            "Sub-issue": "[events].[sub-issue]"
        },
        "schema_links": {
            "detailed issue": "COLUMN:[events].[sub-issue]",
            "Mr": "COLUMN:[client].[sex]",
            "Gunner Omer Fuller": "COLUMN:[client].[client_id]"
        },
        "filtered_schema_links": {
            "detailed issue": "COLUMN:[events].[sub-issue]",
            "Mr": "COLUMN:[client].[sex]",
            "Gunner Omer Fuller": "COLUMN:[client].[client_id]"
        },
        "attack": "What was the complaint did John complain about? Complaint refers to headache; sex refers to sex = 'Male'; John is a value of the column patient_id; headache is a value of the column complaint"
    },
    {
        "db_id": "retail_complains",
        "question": "Which product received a review from Indianapolis on 2016/10/7? Indianapolis refers to state = 'Indianapolis'; on 2016/10/7 refers to Date = '2013-04-04';",
        "evidence": "Indianapolis refers to state = 'Indianapolis'; on 2016/10/7 refers to Date = '2013-04-04';",
        "SQL": "SELECT T1.Product FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Indianapolis' AND T1.Date = '2016-10-07'",
        "query": "SELECT T1.Product FROM reviews AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Indianapolis' AND T1.Date = '2016-10-07'",
        "evidence_added": true,
        "question_toks": [
            "Which",
            "product",
            "received",
            "a",
            "review",
            "from",
            "Indianapolis",
            "on",
            "2016/10/7",
            "?",
            "Indianapolis",
            "refers",
            "to",
            "state",
            "=",
            "'Indianapolis'",
            ";",
            "on",
            "2016/10/7",
            "refers",
            "to",
            "Date",
            "=",
            "'2013-04-04'",
            ";"
        ],
        "tc_original": [
            "reviews.district_id",
            "reviews.date",
            "reviews.product",
            "reviews.reviews",
            "reviews.stars",
            "reviews.*",
            "district.city",
            "district.district_id",
            "district.state_abbrev",
            "district.division",
            "district.*",
            "state.state",
            "state.statecode",
            "state.region",
            "state.*",
            "client.district_id",
            "client.sex",
            "client.day",
            "client.month",
            "client.year",
            "client.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[reviews]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[*]",
            "TABLE:[district]",
            "COLUMN:[district].[city]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[state_abbrev]",
            "COLUMN:[district].[division]",
            "COLUMN:[district].[*]",
            "TABLE:[state]",
            "COLUMN:[state].[state]",
            "COLUMN:[state].[statecode]",
            "COLUMN:[state].[region]",
            "COLUMN:[state].[*]",
            "TABLE:[client]",
            "COLUMN:[client].[district_id]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[day]",
            "COLUMN:[client].[month]",
            "COLUMN:[client].[year]",
            "COLUMN:[client].[*]"
        ],
        "schema": "'[client]':\n  '[day]': integer\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[month]': integer\n  '[sex]': text\n  '[year]': integer\n'[district]':\n  '[city]': text\n  '[district_id]':\n    primary_key: true\n    type: integer\n  '[division]': text\n  '[state_abbrev]':\n    foreign_key: '[state].[statecode]'\n    type: text\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n'[state]':\n  '[region]': text\n  '[state]': text\n  '[statecode]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "product": "COLUMN:[reviews].[product]",
            "review": "TABLE:[reviews]",
            "Indianapolis": "COLUMN:[district].[city]",
            "2016/10/7": "VALUE:[reviews].[date]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[client]",
                "[C1]": "[client].[day]",
                "[C2]": "[client].[district_id]",
                "[C3]": "[client].[month]",
                "[C4]": "[client].[sex]",
                "[C5]": "[client].[year]",
                "[T2]": "[district]",
                "[C6]": "[district].[city]",
                "[C7]": "[district].[district_id]",
                "[C8]": "[district].[division]",
                "[C9]": "[district].[state_abbrev]",
                "[T3]": "[reviews]",
                "[C10]": "[reviews].[date]",
                "[C11]": "[reviews].[district_id]",
                "[C12]": "[reviews].[product]",
                "[C13]": "[reviews].[reviews]",
                "[C14]": "[reviews].[stars]",
                "[T4]": "[state]",
                "[C15]": "[state].[region]",
                "[C16]": "[state].[state]",
                "[C17]": "[state].[statecode]"
            },
            "to_symbol": {
                "[client]": "[T1]",
                "[client].[day]": "[C1]",
                "[client].[district_id]": "[C2]",
                "[client].[month]": "[C3]",
                "[client].[sex]": "[C4]",
                "[client].[year]": "[C5]",
                "[district]": "[T2]",
                "[district].[city]": "[C6]",
                "[district].[district_id]": "[C7]",
                "[district].[division]": "[C8]",
                "[district].[state_abbrev]": "[C9]",
                "[reviews]": "[T3]",
                "[reviews].[date]": "[C10]",
                "[reviews].[district_id]": "[C11]",
                "[reviews].[product]": "[C12]",
                "[reviews].[reviews]": "[C13]",
                "[reviews].[stars]": "[C14]",
                "[state]": "[T4]",
                "[state].[region]": "[C15]",
                "[state].[state]": "[C16]",
                "[state].[statecode]": "[C17]"
            },
            "schema": "'[T1]':\n  '[C1]': integer\n  '[C2]':\n    foreign_key: '[T2].[C7]'\n    type: integer\n  '[C3]': integer\n  '[C4]': text\n  '[C5]': integer\n'[T2]':\n  '[C6]': text\n  '[C7]':\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]':\n    foreign_key: '[T4].[C17]'\n    type: text\n'[T3]':\n  '[C10]':\n    primary_key: true\n    type: date\n  '[C11]':\n    foreign_key: '[T2].[C7]'\n    type: integer\n  '[C12]': text\n  '[C13]': text\n  '[C14]': integer\n'[T4]':\n  '[C15]': text\n  '[C16]': text\n  '[C17]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[client]",
                "[T1].[C1]": "[client].[day]",
                "[C1]": "[client].[day]",
                "[T1].[C2]": "[client].[district_id]",
                "[C2]": "[client].[district_id]",
                "[T1].[C3]": "[client].[month]",
                "[C3]": "[client].[month]",
                "[T1].[C4]": "[client].[sex]",
                "[C4]": "[client].[sex]",
                "[T1].[C5]": "[client].[year]",
                "[C5]": "[client].[year]",
                "[T2]": "[district]",
                "[T2].[C6]": "[district].[city]",
                "[C6]": "[district].[city]",
                "[T2].[C7]": "[district].[district_id]",
                "[C7]": "[district].[district_id]",
                "[T2].[C8]": "[district].[division]",
                "[C8]": "[district].[division]",
                "[T2].[C9]": "[district].[state_abbrev]",
                "[C9]": "[district].[state_abbrev]",
                "[T3]": "[reviews]",
                "[T3].[C10]": "[reviews].[date]",
                "[C10]": "[reviews].[date]",
                "[T3].[C11]": "[reviews].[district_id]",
                "[C11]": "[reviews].[district_id]",
                "[T3].[C12]": "[reviews].[product]",
                "[C12]": "[reviews].[product]",
                "[T3].[C13]": "[reviews].[reviews]",
                "[C13]": "[reviews].[reviews]",
                "[T3].[C14]": "[reviews].[stars]",
                "[C14]": "[reviews].[stars]",
                "[T4]": "[state]",
                "[T4].[C15]": "[state].[region]",
                "[C15]": "[state].[region]",
                "[T4].[C16]": "[state].[state]",
                "[C16]": "[state].[state]",
                "[T4].[C17]": "[state].[statecode]",
                "[C17]": "[state].[statecode]"
            },
            "question": "Which [C12] received a review from [V1] on 2016/10/7? [V1] refers to state = '[V1]'; on 2016/10/7 refers to [C10] = '2013-04-04';; [V1] is a value of the column [C9]; [V2] is a value of the column [C10]",
            "to_value": {
                "[V1]": "Indianapolis",
                "[V2]": "2016-10-07"
            },
            "masked": 4,
            "masked_terms": [
                "Indianapolis",
                "2016-10-07",
                "product",
                "date"
            ],
            "sql": "SELECT [T3].[C12] FROM [T3] JOIN [T2] ON [T3].[C11] = [T2].[C7] WHERE [T2].[C9] = '[V1]' AND [T3].[C10] = '2016-10-07'",
            "repaired_sql": "SELECT [T3].[C12] FROM [T3] JOIN [T2] ON [T3].[C11] = [T2].[C7] WHERE [T3].[C10] = '2013-04-04' AND [T2].[C9] = '[V1]'"
        },
        "values": [
            "Indianapolis",
            "2016-10-07"
        ],
        "value_links": {
            "Indianapolis": "[district].[state_abbrev]",
            "2016-10-07": "[reviews].[date]"
        },
        "filtered_value_links": {
            "Indianapolis": "[district].[state_abbrev]",
            "2016-10-07": "[reviews].[date]"
        },
        "schema_links": {
            "product": "COLUMN:[reviews].[product]",
            "date": "COLUMN:[reviews].[date]"
        },
        "filtered_schema_links": {
            "product": "COLUMN:[reviews].[product]",
            "date": "COLUMN:[reviews].[date]"
        },
        "attack": "Which restaurant received a review from California on 2013-04-04?"
    },
    {
        "db_id": "retail_complains",
        "question": "What is the email id of clients whose calls were hung? email id refers to email; calls were hung refers to outcome = 'Hang';",
        "evidence": "email id refers to email; calls were hung refers to outcome = 'Hang';",
        "SQL": "SELECT T1.email FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.outcome = 'HANG'",
        "query": "SELECT T1.email FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.outcome = 'HANG'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "email",
            "id",
            "of",
            "clients",
            "whose",
            "calls",
            "were",
            "hung",
            "?",
            "email",
            "id",
            "refers",
            "to",
            "email",
            ";",
            "calls",
            "were",
            "hung",
            "refers",
            "to",
            "outcome",
            "=",
            "'Hang'",
            ";"
        ],
        "tc_original": [
            "client.client_id",
            "client.email",
            "client.sex",
            "client.day",
            "client.month",
            "client.*",
            "callcenterlogs.outcome",
            "callcenterlogs.rand client",
            "callcenterlogs.call_id",
            "callcenterlogs.priority",
            "callcenterlogs.type",
            "callcenterlogs.*",
            "reviews.date",
            "reviews.stars",
            "reviews.reviews",
            "reviews.product",
            "reviews.district_id",
            "reviews.*",
            "state.state",
            "state.region",
            "state.statecode",
            "state.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[client]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[email]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[day]",
            "COLUMN:[client].[month]",
            "COLUMN:[client].[*]",
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[outcome]",
            "COLUMN:[callcenterlogs].[rand client]",
            "COLUMN:[callcenterlogs].[call_id]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[type]",
            "COLUMN:[callcenterlogs].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]",
            "TABLE:[state]",
            "COLUMN:[state].[state]",
            "COLUMN:[state].[region]",
            "COLUMN:[state].[statecode]",
            "COLUMN:[state].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[call_id]': integer\n  '[outcome]': text\n  '[priority]': integer\n  '[rand client]':\n    foreign_key: '[client].[client_id]'\n    type: text\n  '[type]': text\n'[client]':\n  '[client_id]':\n    primary_key: true\n    type: text\n  '[day]': integer\n  '[email]': text\n  '[month]': integer\n  '[sex]': text\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n'[state]':\n  '[region]': text\n  '[state]': text\n  '[statecode]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "email": "COLUMN:[client].[email]",
            "clients": "TABLE:[client]",
            "calls": "TABLE:[callcenterlogs]",
            "hung": "VALUE:[callcenterlogs].[outcome]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[call_id]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[C3]": "[callcenterlogs].[priority]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[C6]": "[client].[client_id]",
                "[C7]": "[client].[day]",
                "[C8]": "[client].[email]",
                "[C9]": "[client].[month]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[reviews]",
                "[C12]": "[reviews].[date]",
                "[C13]": "[reviews].[district_id]",
                "[C14]": "[reviews].[product]",
                "[C15]": "[reviews].[reviews]",
                "[C16]": "[reviews].[stars]",
                "[T5]": "[state]",
                "[C17]": "[state].[region]",
                "[C18]": "[state].[state]",
                "[C19]": "[state].[statecode]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[call_id]": "[C1]",
                "[callcenterlogs].[outcome]": "[C2]",
                "[callcenterlogs].[priority]": "[C3]",
                "[callcenterlogs].[rand client]": "[C4]",
                "[callcenterlogs].[type]": "[C5]",
                "[client]": "[T2]",
                "[client].[client_id]": "[C6]",
                "[client].[day]": "[C7]",
                "[client].[email]": "[C8]",
                "[client].[month]": "[C9]",
                "[client].[sex]": "[C10]",
                "[district]": "[T3]",
                "[district].[district_id]": "[C11]",
                "[reviews]": "[T4]",
                "[reviews].[date]": "[C12]",
                "[reviews].[district_id]": "[C13]",
                "[reviews].[product]": "[C14]",
                "[reviews].[reviews]": "[C15]",
                "[reviews].[stars]": "[C16]",
                "[state]": "[T5]",
                "[state].[region]": "[C17]",
                "[state].[state]": "[C18]",
                "[state].[statecode]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': integer\n  '[C2]': text\n  '[C3]': integer\n  '[C4]':\n    foreign_key: '[T2].[C6]'\n    type: text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    primary_key: true\n    type: text\n  '[C7]': integer\n  '[C8]': text\n  '[C9]': integer\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C12]':\n    primary_key: true\n    type: date\n  '[C13]':\n    foreign_key: '[T3].[C11]'\n    type: integer\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n'[T5]':\n  '[C17]': text\n  '[C18]': text\n  '[C19]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[call_id]",
                "[C1]": "[callcenterlogs].[call_id]",
                "[T1].[C2]": "[callcenterlogs].[outcome]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[T1].[C3]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[priority]",
                "[T1].[C4]": "[callcenterlogs].[rand client]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[T1].[C5]": "[callcenterlogs].[type]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[client_id]",
                "[C6]": "[client].[client_id]",
                "[T2].[C7]": "[client].[day]",
                "[C7]": "[client].[day]",
                "[T2].[C8]": "[client].[email]",
                "[C8]": "[client].[email]",
                "[T2].[C9]": "[client].[month]",
                "[C9]": "[client].[month]",
                "[T2].[C10]": "[client].[sex]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[district_id]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[reviews]",
                "[T4].[C12]": "[reviews].[date]",
                "[C12]": "[reviews].[date]",
                "[T4].[C13]": "[reviews].[district_id]",
                "[C13]": "[reviews].[district_id]",
                "[T4].[C14]": "[reviews].[product]",
                "[C14]": "[reviews].[product]",
                "[T4].[C15]": "[reviews].[reviews]",
                "[C15]": "[reviews].[reviews]",
                "[T4].[C16]": "[reviews].[stars]",
                "[C16]": "[reviews].[stars]",
                "[T5]": "[state]",
                "[T5].[C17]": "[state].[region]",
                "[C17]": "[state].[region]",
                "[T5].[C18]": "[state].[state]",
                "[C18]": "[state].[state]",
                "[T5].[C19]": "[state].[statecode]",
                "[C19]": "[state].[statecode]"
            },
            "question": "What is the [V2] id of [V1] whose [C2]? [V2] id refers to [V2]; [C2] refers to outcome = '[V3]';; [V1] is a value of the column [T2]; [V2] is a value of the column [C8]; [V3] is a value of the column [C2]",
            "to_value": {
                "[V1]": "clients",
                "[V2]": "email",
                "[V3]": "Hang"
            },
            "masked": 7,
            "masked_terms": [
                "clients",
                "email",
                "Hang",
                "email id",
                "clients",
                "calls were hung",
                "Hang"
            ],
            "sql": "SELECT [T2].[C8] FROM [T2] JOIN [T1] ON [T2].[C6] = [T1].[C4] WHERE [T2].[T2] = '[V1]' AND [T1].[C2] = '[V3]'",
            "repaired_sql": "SELECT [T2].[C6] FROM [T1] JOIN [T2] ON [T1].[C4] = [T2].[C6] WHERE [T2].[C8] = '[V2]' AND [T2].[C10] = '[V1]' AND [T1].[C2] = '[V3]'"
        },
        "values": [
            "clients",
            "email",
            "Hang"
        ],
        "value_links": {
            "clients": "[client]",
            "email": "[client].[email]",
            "Hang": "[callcenterlogs].[outcome]"
        },
        "filtered_value_links": {
            "clients": "[client]",
            "email": "[client].[email]",
            "Hang": "[callcenterlogs].[outcome]"
        },
        "schema_links": {
            "email id": "COLUMN:[client].[email]",
            "clients": "TABLE:[client]",
            "calls were hung": "COLUMN:[callcenterlogs].[outcome]",
            "Hang": "COLUMN:[callcenterlogs].[outcome]"
        },
        "filtered_schema_links": {
            "email id": "COLUMN:[client].[email]",
            "clients": "TABLE:[client]",
            "calls were hung": "COLUMN:[callcenterlogs].[outcome]",
            "Hang": "COLUMN:[callcenterlogs].[outcome]"
        },
        "attack": "What is the model id of Camry whose outcome? model id refers to model id; outcome refers to outcome = 'Pass'; Camry is a value of the column model; model id is a value of the column model id; Pass is a value of the column outcome"
    },
    {
        "db_id": "retail_complains",
        "question": "How many male clients are from the state of Massachusetts? male refers to sex = 'Male';",
        "evidence": "male refers to sex = 'Male';",
        "SQL": "SELECT COUNT(T3.sex) FROM state AS T1 INNER JOIN district AS T2 ON T1.StateCode = T2.state_abbrev INNER JOIN client AS T3 ON T2.district_id = T3.district_id WHERE T1.state = 'Massachusetts' AND T3.sex = 'Male'",
        "query": "SELECT COUNT(T3.sex) FROM state AS T1 INNER JOIN district AS T2 ON T1.StateCode = T2.state_abbrev INNER JOIN client AS T3 ON T2.district_id = T3.district_id WHERE T1.state = 'Massachusetts' AND T3.sex = 'Male'",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "male",
            "clients",
            "are",
            "from",
            "the",
            "state",
            "of",
            "Massachusetts",
            "?",
            "male",
            "refers",
            "to",
            "sex",
            "=",
            "'Male'",
            ";"
        ],
        "tc_original": [
            "state.state",
            "state.statecode",
            "state.region",
            "state.*",
            "client.sex",
            "client.state",
            "client.client_id",
            "client.middle",
            "client.day",
            "client.*",
            "district.city",
            "district.division",
            "district.district_id",
            "district.state_abbrev",
            "district.*",
            "callcenterlogs.priority",
            "callcenterlogs.type",
            "callcenterlogs.outcome",
            "callcenterlogs.server",
            "callcenterlogs.date received",
            "callcenterlogs.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[state]",
            "COLUMN:[state].[state]",
            "COLUMN:[state].[statecode]",
            "COLUMN:[state].[region]",
            "COLUMN:[state].[*]",
            "TABLE:[client]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[state]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[middle]",
            "COLUMN:[client].[day]",
            "COLUMN:[client].[*]",
            "TABLE:[district]",
            "COLUMN:[district].[city]",
            "COLUMN:[district].[division]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[state_abbrev]",
            "COLUMN:[district].[*]",
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[type]",
            "COLUMN:[callcenterlogs].[outcome]",
            "COLUMN:[callcenterlogs].[server]",
            "COLUMN:[callcenterlogs].[date received]",
            "COLUMN:[callcenterlogs].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[date received]': date\n  '[outcome]': text\n  '[priority]': integer\n  '[server]': text\n  '[type]': text\n'[client]':\n  '[client_id]':\n    primary_key: true\n    type: text\n  '[day]': integer\n  '[middle]': text\n  '[sex]': text\n  '[state]': text\n'[district]':\n  '[city]': text\n  '[district_id]':\n    primary_key: true\n    type: integer\n  '[division]': text\n  '[state_abbrev]':\n    foreign_key: '[state].[statecode]'\n    type: text\n'[state]':\n  '[region]': text\n  '[state]': text\n  '[statecode]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "male": "VALUE:[client].[sex]",
            "clients": "TABLE:[client]",
            "state": "COLUMN:[state].[state]",
            "Massachusetts": "VALUE:[state].[state]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[date received]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[C3]": "[callcenterlogs].[priority]",
                "[C4]": "[callcenterlogs].[server]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[C6]": "[client].[client_id]",
                "[C7]": "[client].[day]",
                "[C8]": "[client].[middle]",
                "[C9]": "[client].[sex]",
                "[C10]": "[client].[state]",
                "[T3]": "[district]",
                "[C11]": "[district].[city]",
                "[C12]": "[district].[district_id]",
                "[C13]": "[district].[division]",
                "[C14]": "[district].[state_abbrev]",
                "[T4]": "[state]",
                "[C15]": "[state].[region]",
                "[C16]": "[state].[state]",
                "[C17]": "[state].[statecode]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[date received]": "[C1]",
                "[callcenterlogs].[outcome]": "[C2]",
                "[callcenterlogs].[priority]": "[C3]",
                "[callcenterlogs].[server]": "[C4]",
                "[callcenterlogs].[type]": "[C5]",
                "[client]": "[T2]",
                "[client].[client_id]": "[C6]",
                "[client].[day]": "[C7]",
                "[client].[middle]": "[C8]",
                "[client].[sex]": "[C9]",
                "[client].[state]": "[C10]",
                "[district]": "[T3]",
                "[district].[city]": "[C11]",
                "[district].[district_id]": "[C12]",
                "[district].[division]": "[C13]",
                "[district].[state_abbrev]": "[C14]",
                "[state]": "[T4]",
                "[state].[region]": "[C15]",
                "[state].[state]": "[C16]",
                "[state].[statecode]": "[C17]"
            },
            "schema": "'[T1]':\n  '[C1]': date\n  '[C2]': text\n  '[C3]': integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    primary_key: true\n    type: text\n  '[C7]': integer\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: integer\n  '[C13]': text\n  '[C14]':\n    foreign_key: '[T4].[C17]'\n    type: text\n'[T4]':\n  '[C15]': text\n  '[C16]': text\n  '[C17]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[date received]",
                "[C1]": "[callcenterlogs].[date received]",
                "[T1].[C2]": "[callcenterlogs].[outcome]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[T1].[C3]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[priority]",
                "[T1].[C4]": "[callcenterlogs].[server]",
                "[C4]": "[callcenterlogs].[server]",
                "[T1].[C5]": "[callcenterlogs].[type]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[client_id]",
                "[C6]": "[client].[client_id]",
                "[T2].[C7]": "[client].[day]",
                "[C7]": "[client].[day]",
                "[T2].[C8]": "[client].[middle]",
                "[C8]": "[client].[middle]",
                "[T2].[C9]": "[client].[sex]",
                "[C9]": "[client].[sex]",
                "[T2].[C10]": "[client].[state]",
                "[C10]": "[client].[state]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[city]",
                "[C11]": "[district].[city]",
                "[T3].[C12]": "[district].[district_id]",
                "[C12]": "[district].[district_id]",
                "[T3].[C13]": "[district].[division]",
                "[C13]": "[district].[division]",
                "[T3].[C14]": "[district].[state_abbrev]",
                "[C14]": "[district].[state_abbrev]",
                "[T4]": "[state]",
                "[T4].[C15]": "[state].[region]",
                "[C15]": "[state].[region]",
                "[T4].[C16]": "[state].[state]",
                "[C16]": "[state].[state]",
                "[T4].[C17]": "[state].[statecode]",
                "[C17]": "[state].[statecode]"
            },
            "question": "How many [C9] [T2] are from the [C10] of [V1]? [C9] refers to sex = '[C9]';; [V1] is a value of the column [C10]",
            "to_value": {
                "[V1]": "Massachusetts"
            },
            "masked": 5,
            "masked_terms": [
                "Massachusetts",
                "male",
                "clients",
                "state",
                "Massachusetts"
            ],
            "sql": "SELECT COUNT(*) FROM [T2] WHERE [T2].[C9] = '[C9]' AND [T2].[C10] = '[V1]'",
            "repaired_sql": "SELECT COUNT(*) FROM [T2] WHERE [C9] = '[C9]' AND [C10] = '[V1]'"
        },
        "values": [
            "Massachusetts"
        ],
        "value_links": {
            "Massachusetts": "[client].[state]"
        },
        "filtered_value_links": {
            "Massachusetts": "[client].[state]"
        },
        "schema_links": {
            "male": "COLUMN:[client].[sex]",
            "clients": "TABLE:[client]",
            "state": "COLUMN:[client].[state]",
            "Massachusetts": "COLUMN:[client].[state]"
        },
        "filtered_schema_links": {
            "male": "COLUMN:[client].[sex]",
            "clients": "TABLE:[client]",
            "state": "COLUMN:[client].[state]",
            "Massachusetts": "COLUMN:[client].[state]"
        },
        "attack": "How many female students are from the city of Paris?"
    },
    {
        "db_id": "retail_complains",
        "question": "What is the average age of Norwalk clients? average age = AVG(age); Norwalk refers to city = 'Norwalk';",
        "evidence": "average age = AVG(age); Norwalk refers to city = 'Norwalk';",
        "SQL": "SELECT CAST(SUM(T1.age) AS REAL) / COUNT(T1.age) AS average FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Norwalk'",
        "query": "SELECT CAST(SUM(T1.age) AS REAL) / COUNT(T1.age) AS average FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Norwalk'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "age",
            "of",
            "Norwalk",
            "clients",
            "?",
            "average",
            "age",
            "=",
            "AVG(age)",
            ";",
            "Norwalk",
            "refers",
            "to",
            "city",
            "=",
            "'Norwalk'",
            ";"
        ],
        "tc_original": [
            "client.city",
            "client.age",
            "client.district_id",
            "client.client_id",
            "client.sex",
            "client.*",
            "district.city",
            "district.district_id",
            "district.state_abbrev",
            "district.division",
            "district.*",
            "callcenterlogs.priority",
            "callcenterlogs.type",
            "callcenterlogs.outcome",
            "callcenterlogs.server",
            "callcenterlogs.date received",
            "callcenterlogs.*",
            "reviews.date",
            "reviews.stars",
            "reviews.reviews",
            "reviews.product",
            "reviews.district_id",
            "reviews.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[client]",
            "COLUMN:[client].[city]",
            "COLUMN:[client].[age]",
            "COLUMN:[client].[district_id]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[*]",
            "TABLE:[district]",
            "COLUMN:[district].[city]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[state_abbrev]",
            "COLUMN:[district].[division]",
            "COLUMN:[district].[*]",
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[type]",
            "COLUMN:[callcenterlogs].[outcome]",
            "COLUMN:[callcenterlogs].[server]",
            "COLUMN:[callcenterlogs].[date received]",
            "COLUMN:[callcenterlogs].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[date received]': date\n  '[outcome]': text\n  '[priority]': integer\n  '[server]': text\n  '[type]': text\n'[client]':\n  '[age]': integer\n  '[city]': text\n  '[client_id]':\n    primary_key: true\n    type: text\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[sex]': text\n'[district]':\n  '[city]': text\n  '[district_id]':\n    primary_key: true\n    type: integer\n  '[division]': text\n  '[state_abbrev]':\n    foreign_key: '[state].[statecode]'\n    type: text\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n'[state]':\n  '[statecode]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "average age": "COLUMN:[client].[age]",
            "age": "COLUMN:[client].[age]",
            "Norwalk": "VALUE:[district].[city]",
            "clients": "TABLE:[client]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[date received]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[C3]": "[callcenterlogs].[priority]",
                "[C4]": "[callcenterlogs].[server]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[C6]": "[client].[age]",
                "[C7]": "[client].[city]",
                "[C8]": "[client].[client_id]",
                "[C9]": "[client].[district_id]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[C11]": "[district].[city]",
                "[C12]": "[district].[district_id]",
                "[C13]": "[district].[division]",
                "[C14]": "[district].[state_abbrev]",
                "[T4]": "[reviews]",
                "[C15]": "[reviews].[date]",
                "[C16]": "[reviews].[district_id]",
                "[C17]": "[reviews].[product]",
                "[C18]": "[reviews].[reviews]",
                "[C19]": "[reviews].[stars]",
                "[T5]": "[state]",
                "[C20]": "[state].[statecode]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[date received]": "[C1]",
                "[callcenterlogs].[outcome]": "[C2]",
                "[callcenterlogs].[priority]": "[C3]",
                "[callcenterlogs].[server]": "[C4]",
                "[callcenterlogs].[type]": "[C5]",
                "[client]": "[T2]",
                "[client].[age]": "[C6]",
                "[client].[city]": "[C7]",
                "[client].[client_id]": "[C8]",
                "[client].[district_id]": "[C9]",
                "[client].[sex]": "[C10]",
                "[district]": "[T3]",
                "[district].[city]": "[C11]",
                "[district].[district_id]": "[C12]",
                "[district].[division]": "[C13]",
                "[district].[state_abbrev]": "[C14]",
                "[reviews]": "[T4]",
                "[reviews].[date]": "[C15]",
                "[reviews].[district_id]": "[C16]",
                "[reviews].[product]": "[C17]",
                "[reviews].[reviews]": "[C18]",
                "[reviews].[stars]": "[C19]",
                "[state]": "[T5]",
                "[state].[statecode]": "[C20]"
            },
            "schema": "'[T1]':\n  '[C1]': date\n  '[C2]': text\n  '[C3]': integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]': text\n  '[C8]':\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T3].[C12]'\n    type: integer\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: integer\n  '[C13]': text\n  '[C14]':\n    foreign_key: '[T5].[C20]'\n    type: text\n'[T4]':\n  '[C15]':\n    primary_key: true\n    type: date\n  '[C16]':\n    foreign_key: '[T3].[C12]'\n    type: integer\n  '[C17]': text\n  '[C18]': text\n  '[C19]': integer\n'[T5]':\n  '[C20]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[date received]",
                "[C1]": "[callcenterlogs].[date received]",
                "[T1].[C2]": "[callcenterlogs].[outcome]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[T1].[C3]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[priority]",
                "[T1].[C4]": "[callcenterlogs].[server]",
                "[C4]": "[callcenterlogs].[server]",
                "[T1].[C5]": "[callcenterlogs].[type]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[age]",
                "[C6]": "[client].[age]",
                "[T2].[C7]": "[client].[city]",
                "[C7]": "[client].[city]",
                "[T2].[C8]": "[client].[client_id]",
                "[C8]": "[client].[client_id]",
                "[T2].[C9]": "[client].[district_id]",
                "[C9]": "[client].[district_id]",
                "[T2].[C10]": "[client].[sex]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[city]",
                "[C11]": "[district].[city]",
                "[T3].[C12]": "[district].[district_id]",
                "[C12]": "[district].[district_id]",
                "[T3].[C13]": "[district].[division]",
                "[C13]": "[district].[division]",
                "[T3].[C14]": "[district].[state_abbrev]",
                "[C14]": "[district].[state_abbrev]",
                "[T4]": "[reviews]",
                "[T4].[C15]": "[reviews].[date]",
                "[C15]": "[reviews].[date]",
                "[T4].[C16]": "[reviews].[district_id]",
                "[C16]": "[reviews].[district_id]",
                "[T4].[C17]": "[reviews].[product]",
                "[C17]": "[reviews].[product]",
                "[T4].[C18]": "[reviews].[reviews]",
                "[C18]": "[reviews].[reviews]",
                "[T4].[C19]": "[reviews].[stars]",
                "[C19]": "[reviews].[stars]",
                "[T5]": "[state]",
                "[T5].[C20]": "[state].[statecode]",
                "[C20]": "[state].[statecode]"
            },
            "question": "What is the [C6] of [V1] clients? [C6] = AVG(age); [V1] refers to city = '[V1]';; [V1] is a value of the column [C7]",
            "to_value": {
                "[V1]": "Norwalk"
            },
            "masked": 3,
            "masked_terms": [
                "Norwalk",
                "average age",
                "Norwalk"
            ],
            "sql": "SELECT AVG([T2].[C6]) FROM [T2] WHERE [T2].[C7] = '[V1]'",
            "repaired_sql": "SELECT AVG([T2].[C6]) FROM [T2] WHERE [T2].[C7] = '[V1]'"
        },
        "values": [
            "Norwalk"
        ],
        "value_links": {
            "Norwalk": "[client].[city]"
        },
        "filtered_value_links": {
            "Norwalk": "[client].[city]"
        },
        "schema_links": {
            "average age": "COLUMN:[client].[age]",
            "Norwalk": "COLUMN:[client].[city]"
        },
        "filtered_schema_links": {
            "average age": "COLUMN:[client].[age]",
            "Norwalk": "COLUMN:[client].[city]"
        },
        "attack": "What is the average age of Paris clients?"
    },
    {
        "db_id": "retail_complains",
        "question": "What are the products that people who were born after 2005 complain about? year > 2005;",
        "evidence": "year > 2005;",
        "SQL": "SELECT DISTINCT T2.Product FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.year > 2005",
        "query": "SELECT DISTINCT T2.Product FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T1.year > 2005",
        "evidence_added": true,
        "question_toks": [
            "What",
            "are",
            "the",
            "products",
            "that",
            "people",
            "who",
            "were",
            "born",
            "after",
            "2005",
            "complain",
            "about",
            "?",
            "year",
            ">",
            "2005",
            ";"
        ],
        "tc_original": [
            "client.year",
            "client.client_id",
            "client.age",
            "client.phone",
            "client.sex",
            "client.*",
            "events.product",
            "events.client_id",
            "events.sub-product",
            "events.complaint id",
            "events.issue",
            "events.*",
            "reviews.product",
            "reviews.date",
            "reviews.stars",
            "reviews.reviews",
            "reviews.district_id",
            "reviews.*",
            "callcenterlogs.complaint id",
            "callcenterlogs.rand client",
            "callcenterlogs.priority",
            "callcenterlogs.type",
            "callcenterlogs.outcome",
            "callcenterlogs.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[client]",
            "COLUMN:[client].[year]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[age]",
            "COLUMN:[client].[phone]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[*]",
            "TABLE:[events]",
            "COLUMN:[events].[product]",
            "COLUMN:[events].[client_id]",
            "COLUMN:[events].[sub-product]",
            "COLUMN:[events].[complaint id]",
            "COLUMN:[events].[issue]",
            "COLUMN:[events].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]",
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[complaint id]",
            "COLUMN:[callcenterlogs].[rand client]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[type]",
            "COLUMN:[callcenterlogs].[outcome]",
            "COLUMN:[callcenterlogs].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[complaint id]':\n    primary_key: true\n    type: text\n  '[outcome]': text\n  '[priority]': integer\n  '[rand client]':\n    foreign_key: '[client].[client_id]'\n    type: text\n  '[type]': text\n'[client]':\n  '[age]': integer\n  '[client_id]':\n    primary_key: true\n    type: text\n  '[phone]': text\n  '[sex]': text\n  '[year]': integer\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[events]':\n  '[client_id]':\n    foreign_key: '[client].[client_id]'\n    primary_key: true\n    type: text\n  '[complaint id]':\n    foreign_key: '[callcenterlogs].[complaint id]'\n    primary_key: true\n    type: text\n  '[issue]': text\n  '[product]': text\n  '[sub-product]': text\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n",
        "gold_links": {
            "products": "COLUMN:[events].[product]",
            "people": "TABLE:[client]",
            "born": "COLUMN:[client].[year]",
            "after 2005": "COLUMN:[client].[year]",
            "complain": "TABLE:[events]",
            "2005": "VALUE:[client].[year]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[complaint id]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[C3]": "[callcenterlogs].[priority]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[C6]": "[client].[age]",
                "[C7]": "[client].[client_id]",
                "[C8]": "[client].[phone]",
                "[C9]": "[client].[sex]",
                "[C10]": "[client].[year]",
                "[T3]": "[district]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[events]",
                "[C12]": "[events].[client_id]",
                "[C13]": "[events].[complaint id]",
                "[C14]": "[events].[issue]",
                "[C15]": "[events].[product]",
                "[C16]": "[events].[sub-product]",
                "[T5]": "[reviews]",
                "[C17]": "[reviews].[date]",
                "[C18]": "[reviews].[district_id]",
                "[C19]": "[reviews].[product]",
                "[C20]": "[reviews].[reviews]",
                "[C21]": "[reviews].[stars]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[complaint id]": "[C1]",
                "[callcenterlogs].[outcome]": "[C2]",
                "[callcenterlogs].[priority]": "[C3]",
                "[callcenterlogs].[rand client]": "[C4]",
                "[callcenterlogs].[type]": "[C5]",
                "[client]": "[T2]",
                "[client].[age]": "[C6]",
                "[client].[client_id]": "[C7]",
                "[client].[phone]": "[C8]",
                "[client].[sex]": "[C9]",
                "[client].[year]": "[C10]",
                "[district]": "[T3]",
                "[district].[district_id]": "[C11]",
                "[events]": "[T4]",
                "[events].[client_id]": "[C12]",
                "[events].[complaint id]": "[C13]",
                "[events].[issue]": "[C14]",
                "[events].[product]": "[C15]",
                "[events].[sub-product]": "[C16]",
                "[reviews]": "[T5]",
                "[reviews].[date]": "[C17]",
                "[reviews].[district_id]": "[C18]",
                "[reviews].[product]": "[C19]",
                "[reviews].[reviews]": "[C20]",
                "[reviews].[stars]": "[C21]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]': integer\n  '[C4]':\n    foreign_key: '[T2].[C7]'\n    type: text\n  '[C5]': text\n'[T2]':\n  '[C10]': integer\n  '[C6]': integer\n  '[C7]':\n    primary_key: true\n    type: text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C12]':\n    foreign_key: '[T2].[C7]'\n    primary_key: true\n    type: text\n  '[C13]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C14]': text\n  '[C15]': text\n  '[C16]': text\n'[T5]':\n  '[C17]':\n    primary_key: true\n    type: date\n  '[C18]':\n    foreign_key: '[T3].[C11]'\n    type: integer\n  '[C19]': text\n  '[C20]': text\n  '[C21]': integer\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[complaint id]",
                "[C1]": "[callcenterlogs].[complaint id]",
                "[T1].[C2]": "[callcenterlogs].[outcome]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[T1].[C3]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[priority]",
                "[T1].[C4]": "[callcenterlogs].[rand client]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[T1].[C5]": "[callcenterlogs].[type]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[age]",
                "[C6]": "[client].[age]",
                "[T2].[C7]": "[client].[client_id]",
                "[C7]": "[client].[client_id]",
                "[T2].[C8]": "[client].[phone]",
                "[C8]": "[client].[phone]",
                "[T2].[C9]": "[client].[sex]",
                "[C9]": "[client].[sex]",
                "[T2].[C10]": "[client].[year]",
                "[C10]": "[client].[year]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[district_id]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[events]",
                "[T4].[C12]": "[events].[client_id]",
                "[C12]": "[events].[client_id]",
                "[T4].[C13]": "[events].[complaint id]",
                "[C13]": "[events].[complaint id]",
                "[T4].[C14]": "[events].[issue]",
                "[C14]": "[events].[issue]",
                "[T4].[C15]": "[events].[product]",
                "[C15]": "[events].[product]",
                "[T4].[C16]": "[events].[sub-product]",
                "[C16]": "[events].[sub-product]",
                "[T5]": "[reviews]",
                "[T5].[C17]": "[reviews].[date]",
                "[C17]": "[reviews].[date]",
                "[T5].[C18]": "[reviews].[district_id]",
                "[C18]": "[reviews].[district_id]",
                "[T5].[C19]": "[reviews].[product]",
                "[C19]": "[reviews].[product]",
                "[T5].[C20]": "[reviews].[reviews]",
                "[C20]": "[reviews].[reviews]",
                "[T5].[C21]": "[reviews].[stars]",
                "[C21]": "[reviews].[stars]"
            },
            "question": "What are the [T5] that people who were [T2] [V1] [T4]? [C10] > [V1];; [V1] is a value of the column [C10]",
            "to_value": {
                "[V1]": "2005"
            },
            "masked": 5,
            "masked_terms": [
                "2005",
                "products",
                "complain about",
                "born after",
                "year"
            ],
            "sql": "SELECT [T5].* FROM [T5] JOIN [T3] ON [T5].[C18] = [T3].[C11] JOIN [T4] ON [T4].[C13] = [T1].[C1] JOIN [T1] ON [T4].[C13] = [T1].[C1] JOIN [T2] ON [T1].[C4] = [T2].[C7] WHERE [T2].[C10] > [V1]",
            "repaired_sql": "SELECT [T5].* FROM [T5] JOIN [T3] ON [T5].[C18] = [T3].[C11] JOIN [T4] ON [T4].[C13] = [T3].[C11] JOIN [T2] ON [T4].[C12] = [T2].[C7] WHERE [T2].[C10] > [V1]"
        },
        "values": [
            "2005"
        ],
        "value_links": {
            "2005": "[client].[year]"
        },
        "filtered_value_links": {
            "2005": "[client].[year]"
        },
        "schema_links": {
            "products": "TABLE:[reviews]",
            "complain about": "TABLE:[events]",
            "born after": "TABLE:[client]",
            "year": "COLUMN:[client].[year]"
        },
        "filtered_schema_links": {
            "products": "TABLE:[reviews]",
            "complain about": "TABLE:[events]",
            "born after": "TABLE:[client]",
            "year": "COLUMN:[client].[year]"
        },
        "attack": "What are the events that people who were born after a certain age attended? age > a certain age; a certain age is a value of the column age"
    },
    {
        "db_id": "retail_complains",
        "question": "What was the issue that the client with the longest server time faced? longest server time refers to MAX(ser_time);",
        "evidence": "longest server time refers to MAX(ser_time);",
        "SQL": "SELECT T2.Issue FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T1.ser_time = ( SELECT MAX(ser_time) FROM callcenterlogs )",
        "query": "SELECT T2.Issue FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T1.ser_time = ( SELECT MAX(ser_time) FROM callcenterlogs )",
        "evidence_added": true,
        "question_toks": [
            "What",
            "was",
            "the",
            "issue",
            "that",
            "the",
            "client",
            "with",
            "the",
            "longest",
            "server",
            "time",
            "faced",
            "?",
            "longest",
            "server",
            "time",
            "refers",
            "to",
            "MAX(ser_time)",
            ";"
        ],
        "tc_original": [
            "callcenterlogs.ser_time",
            "callcenterlogs.rand client",
            "callcenterlogs.complaint id",
            "callcenterlogs.priority",
            "callcenterlogs.type",
            "callcenterlogs.*",
            "client.client_id",
            "client.first",
            "client.sex",
            "client.day",
            "client.month",
            "client.*",
            "events.client_id",
            "events.complaint id",
            "events.issue",
            "events.product",
            "events.sub-issue",
            "events.*",
            "reviews.date",
            "reviews.stars",
            "reviews.reviews",
            "reviews.product",
            "reviews.district_id",
            "reviews.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[ser_time]",
            "COLUMN:[callcenterlogs].[rand client]",
            "COLUMN:[callcenterlogs].[complaint id]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[type]",
            "COLUMN:[callcenterlogs].[*]",
            "TABLE:[client]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[first]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[day]",
            "COLUMN:[client].[month]",
            "COLUMN:[client].[*]",
            "TABLE:[events]",
            "COLUMN:[events].[client_id]",
            "COLUMN:[events].[complaint id]",
            "COLUMN:[events].[issue]",
            "COLUMN:[events].[product]",
            "COLUMN:[events].[sub-issue]",
            "COLUMN:[events].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[complaint id]':\n    primary_key: true\n    type: text\n  '[priority]': integer\n  '[rand client]':\n    foreign_key: '[client].[client_id]'\n    type: text\n  '[ser_time]': text\n  '[type]': text\n'[client]':\n  '[client_id]':\n    primary_key: true\n    type: text\n  '[day]': integer\n  '[first]': text\n  '[month]': integer\n  '[sex]': text\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[events]':\n  '[client_id]':\n    foreign_key: '[client].[client_id]'\n    primary_key: true\n    type: text\n  '[complaint id]':\n    foreign_key: '[callcenterlogs].[complaint id]'\n    primary_key: true\n    type: text\n  '[issue]': text\n  '[product]': text\n  '[sub-issue]': text\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n",
        "gold_links": {
            "issue": "COLUMN:[events].[issue]",
            "client": "TABLE:[client]",
            "server time": "COLUMN:[callcenterlogs].[ser_time]",
            "longest server time": "COLUMN:[callcenterlogs].[ser_time]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[complaint id]",
                "[C2]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[rand client]",
                "[C4]": "[callcenterlogs].[ser_time]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[C6]": "[client].[client_id]",
                "[C7]": "[client].[day]",
                "[C8]": "[client].[first]",
                "[C9]": "[client].[month]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[events]",
                "[C12]": "[events].[client_id]",
                "[C13]": "[events].[complaint id]",
                "[C14]": "[events].[issue]",
                "[C15]": "[events].[product]",
                "[C16]": "[events].[sub-issue]",
                "[T5]": "[reviews]",
                "[C17]": "[reviews].[date]",
                "[C18]": "[reviews].[district_id]",
                "[C19]": "[reviews].[product]",
                "[C20]": "[reviews].[reviews]",
                "[C21]": "[reviews].[stars]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[complaint id]": "[C1]",
                "[callcenterlogs].[priority]": "[C2]",
                "[callcenterlogs].[rand client]": "[C3]",
                "[callcenterlogs].[ser_time]": "[C4]",
                "[callcenterlogs].[type]": "[C5]",
                "[client]": "[T2]",
                "[client].[client_id]": "[C6]",
                "[client].[day]": "[C7]",
                "[client].[first]": "[C8]",
                "[client].[month]": "[C9]",
                "[client].[sex]": "[C10]",
                "[district]": "[T3]",
                "[district].[district_id]": "[C11]",
                "[events]": "[T4]",
                "[events].[client_id]": "[C12]",
                "[events].[complaint id]": "[C13]",
                "[events].[issue]": "[C14]",
                "[events].[product]": "[C15]",
                "[events].[sub-issue]": "[C16]",
                "[reviews]": "[T5]",
                "[reviews].[date]": "[C17]",
                "[reviews].[district_id]": "[C18]",
                "[reviews].[product]": "[C19]",
                "[reviews].[reviews]": "[C20]",
                "[reviews].[stars]": "[C21]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': integer\n  '[C3]':\n    foreign_key: '[T2].[C6]'\n    type: text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    primary_key: true\n    type: text\n  '[C7]': integer\n  '[C8]': text\n  '[C9]': integer\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C12]':\n    foreign_key: '[T2].[C6]'\n    primary_key: true\n    type: text\n  '[C13]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C14]': text\n  '[C15]': text\n  '[C16]': text\n'[T5]':\n  '[C17]':\n    primary_key: true\n    type: date\n  '[C18]':\n    foreign_key: '[T3].[C11]'\n    type: integer\n  '[C19]': text\n  '[C20]': text\n  '[C21]': integer\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[complaint id]",
                "[C1]": "[callcenterlogs].[complaint id]",
                "[T1].[C2]": "[callcenterlogs].[priority]",
                "[C2]": "[callcenterlogs].[priority]",
                "[T1].[C3]": "[callcenterlogs].[rand client]",
                "[C3]": "[callcenterlogs].[rand client]",
                "[T1].[C4]": "[callcenterlogs].[ser_time]",
                "[C4]": "[callcenterlogs].[ser_time]",
                "[T1].[C5]": "[callcenterlogs].[type]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[client_id]",
                "[C6]": "[client].[client_id]",
                "[T2].[C7]": "[client].[day]",
                "[C7]": "[client].[day]",
                "[T2].[C8]": "[client].[first]",
                "[C8]": "[client].[first]",
                "[T2].[C9]": "[client].[month]",
                "[C9]": "[client].[month]",
                "[T2].[C10]": "[client].[sex]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[district_id]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[events]",
                "[T4].[C12]": "[events].[client_id]",
                "[C12]": "[events].[client_id]",
                "[T4].[C13]": "[events].[complaint id]",
                "[C13]": "[events].[complaint id]",
                "[T4].[C14]": "[events].[issue]",
                "[C14]": "[events].[issue]",
                "[T4].[C15]": "[events].[product]",
                "[C15]": "[events].[product]",
                "[T4].[C16]": "[events].[sub-issue]",
                "[C16]": "[events].[sub-issue]",
                "[T5]": "[reviews]",
                "[T5].[C17]": "[reviews].[date]",
                "[C17]": "[reviews].[date]",
                "[T5].[C18]": "[reviews].[district_id]",
                "[C18]": "[reviews].[district_id]",
                "[T5].[C19]": "[reviews].[product]",
                "[C19]": "[reviews].[product]",
                "[T5].[C20]": "[reviews].[reviews]",
                "[C20]": "[reviews].[reviews]",
                "[T5].[C21]": "[reviews].[stars]",
                "[C21]": "[reviews].[stars]"
            },
            "question": "What was the [C14] that the [T1] with the [V1] faced? [V1] refers to MAX([C4]);; [V1] is a value of the column [C14]",
            "to_value": {
                "[V1]": "longest server time"
            },
            "masked": 4,
            "masked_terms": [
                "longest server time",
                "client",
                "ser_time",
                "issue"
            ],
            "sql": "SELECT [T4].[C14] FROM [T4] WHERE [T4].[C13] = (SELECT [T1].[C1] FROM [T1] WHERE [T1].[C4] = (SELECT MAX([C4]) FROM [T1])) AND [T4].[C14] = (SELECT MAX([T4].[C14]) FROM [T4] WHERE [T4].[C13] = (SELECT [T1].[C1] FROM [T1] WHERE [T1].[C4] = (SELECT MAX([C4]) FROM [T1])))",
            "repaired_sql": "SELECT [T4].[C14] FROM [T4] JOIN [T1] ON [T4].[C13] = [T1].[C1] WHERE [T1].[C4] = (SELECT MAX([C4]) FROM [T1])"
        },
        "values": [
            "longest server time"
        ],
        "value_links": {
            "longest server time": "[events].[issue]"
        },
        "filtered_value_links": {
            "longest server time": "[events].[issue]"
        },
        "schema_links": {
            "client": "TABLE:[callcenterlogs]",
            "ser_time": "COLUMN:[callcenterlogs].[ser_time]",
            "issue": "COLUMN:[events].[issue]"
        },
        "filtered_schema_links": {
            "client": "TABLE:[callcenterlogs]",
            "ser_time": "COLUMN:[callcenterlogs].[ser_time]",
            "issue": "COLUMN:[events].[issue]"
        },
        "attack": "What was the challenge that the team with the highest position faced? Highest position refers to MAX(position); highest position is a value of the column challenge."
    },
    {
        "db_id": "retail_complains",
        "question": "Please list any two clients with their full names who have been tagged as \"Older American\" by the company without seeking their permission. full names = first, middle, last; without seeking their permission refers to \"Consumer consent provided?\" in (null, 'N/A' or 'empty');",
        "evidence": "full names = first, middle, last; without seeking their permission refers to \"Consumer consent provided?\" in (null, 'N/A' or 'empty');",
        "SQL": "SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.Tags = 'Older American' AND T2.`Consumer consent provided?` IN (NULL, 'N/A', '') LIMIT 2",
        "query": "SELECT T1.first, T1.middle, T1.last FROM client AS T1 INNER JOIN events AS T2 ON T1.client_id = T2.Client_ID WHERE T2.Tags = 'Older American' AND T2.`Consumer consent provided?` IN (NULL, 'N/A', '') LIMIT 2",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "list",
            "any",
            "two",
            "clients",
            "with",
            "their",
            "full",
            "names",
            "who",
            "have",
            "been",
            "tagged",
            "as",
            "\"Older",
            "American\"",
            "by",
            "the",
            "company",
            "without",
            "seeking",
            "their",
            "permission",
            ".",
            "full",
            "names",
            "=",
            "first",
            ",",
            "middle",
            ",",
            "last",
            ";",
            "without",
            "seeking",
            "their",
            "permission",
            "refers",
            "to",
            "\"Consumer",
            "consent",
            "provided?\"",
            "in",
            "(null",
            ",",
            "'N/A'",
            "or",
            "'empty')",
            ";"
        ],
        "tc_original": [
            "client.client_id",
            "client.age",
            "client.first",
            "client.middle",
            "client.last",
            "client.*",
            "events.tags",
            "events.client_id",
            "events.consumer consent provided?",
            "events.product",
            "events.sub-product",
            "events.*",
            "callcenterlogs.priority",
            "callcenterlogs.type",
            "callcenterlogs.outcome",
            "callcenterlogs.server",
            "callcenterlogs.date received",
            "callcenterlogs.*",
            "reviews.date",
            "reviews.stars",
            "reviews.reviews",
            "reviews.product",
            "reviews.district_id",
            "reviews.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[client]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[age]",
            "COLUMN:[client].[first]",
            "COLUMN:[client].[middle]",
            "COLUMN:[client].[last]",
            "COLUMN:[client].[*]",
            "TABLE:[events]",
            "COLUMN:[events].[tags]",
            "COLUMN:[events].[client_id]",
            "COLUMN:[events].[consumer consent provided?]",
            "COLUMN:[events].[product]",
            "COLUMN:[events].[sub-product]",
            "COLUMN:[events].[*]",
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[type]",
            "COLUMN:[callcenterlogs].[outcome]",
            "COLUMN:[callcenterlogs].[server]",
            "COLUMN:[callcenterlogs].[date received]",
            "COLUMN:[callcenterlogs].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[date received]': date\n  '[outcome]': text\n  '[priority]': integer\n  '[server]': text\n  '[type]': text\n'[client]':\n  '[age]': integer\n  '[client_id]':\n    primary_key: true\n    type: text\n  '[first]': text\n  '[last]': text\n  '[middle]': text\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[events]':\n  '[client_id]':\n    foreign_key: '[client].[client_id]'\n    primary_key: true\n    type: text\n  '[consumer consent provided?]': text\n  '[product]': text\n  '[sub-product]': text\n  '[tags]': text\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n",
        "gold_links": {
            "clients": "TABLE:[client]",
            "full names": "COLUMN:[client].[first]",
            "first": "COLUMN:[client].[first]",
            "middle": "COLUMN:[client].[middle]",
            "last": "COLUMN:[client].[last]",
            "older american": "VALUE:[events].[tags]",
            "tagged": "COLUMN:[events].[tags]",
            "consumer consent provided": "COLUMN:[events].[consumer consent provided?]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[date received]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[C3]": "[callcenterlogs].[priority]",
                "[C4]": "[callcenterlogs].[server]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[C6]": "[client].[age]",
                "[C7]": "[client].[client_id]",
                "[C8]": "[client].[first]",
                "[C9]": "[client].[last]",
                "[C10]": "[client].[middle]",
                "[T3]": "[district]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[events]",
                "[C12]": "[events].[client_id]",
                "[C13]": "[events].[consumer consent provided?]",
                "[C14]": "[events].[product]",
                "[C15]": "[events].[sub-product]",
                "[C16]": "[events].[tags]",
                "[T5]": "[reviews]",
                "[C17]": "[reviews].[date]",
                "[C18]": "[reviews].[district_id]",
                "[C19]": "[reviews].[product]",
                "[C20]": "[reviews].[reviews]",
                "[C21]": "[reviews].[stars]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[date received]": "[C1]",
                "[callcenterlogs].[outcome]": "[C2]",
                "[callcenterlogs].[priority]": "[C3]",
                "[callcenterlogs].[server]": "[C4]",
                "[callcenterlogs].[type]": "[C5]",
                "[client]": "[T2]",
                "[client].[age]": "[C6]",
                "[client].[client_id]": "[C7]",
                "[client].[first]": "[C8]",
                "[client].[last]": "[C9]",
                "[client].[middle]": "[C10]",
                "[district]": "[T3]",
                "[district].[district_id]": "[C11]",
                "[events]": "[T4]",
                "[events].[client_id]": "[C12]",
                "[events].[consumer consent provided?]": "[C13]",
                "[events].[product]": "[C14]",
                "[events].[sub-product]": "[C15]",
                "[events].[tags]": "[C16]",
                "[reviews]": "[T5]",
                "[reviews].[date]": "[C17]",
                "[reviews].[district_id]": "[C18]",
                "[reviews].[product]": "[C19]",
                "[reviews].[reviews]": "[C20]",
                "[reviews].[stars]": "[C21]"
            },
            "schema": "'[T1]':\n  '[C1]': date\n  '[C2]': text\n  '[C3]': integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]':\n    primary_key: true\n    type: text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C12]':\n    foreign_key: '[T2].[C7]'\n    primary_key: true\n    type: text\n  '[C13]': text\n  '[C14]': text\n  '[C15]': text\n  '[C16]': text\n'[T5]':\n  '[C17]':\n    primary_key: true\n    type: date\n  '[C18]':\n    foreign_key: '[T3].[C11]'\n    type: integer\n  '[C19]': text\n  '[C20]': text\n  '[C21]': integer\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[date received]",
                "[C1]": "[callcenterlogs].[date received]",
                "[T1].[C2]": "[callcenterlogs].[outcome]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[T1].[C3]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[priority]",
                "[T1].[C4]": "[callcenterlogs].[server]",
                "[C4]": "[callcenterlogs].[server]",
                "[T1].[C5]": "[callcenterlogs].[type]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[age]",
                "[C6]": "[client].[age]",
                "[T2].[C7]": "[client].[client_id]",
                "[C7]": "[client].[client_id]",
                "[T2].[C8]": "[client].[first]",
                "[C8]": "[client].[first]",
                "[T2].[C9]": "[client].[last]",
                "[C9]": "[client].[last]",
                "[T2].[C10]": "[client].[middle]",
                "[C10]": "[client].[middle]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[district_id]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[events]",
                "[T4].[C12]": "[events].[client_id]",
                "[C12]": "[events].[client_id]",
                "[T4].[C13]": "[events].[consumer consent provided?]",
                "[C13]": "[events].[consumer consent provided?]",
                "[T4].[C14]": "[events].[product]",
                "[C14]": "[events].[product]",
                "[T4].[C15]": "[events].[sub-product]",
                "[C15]": "[events].[sub-product]",
                "[T4].[C16]": "[events].[tags]",
                "[C16]": "[events].[tags]",
                "[T5]": "[reviews]",
                "[T5].[C17]": "[reviews].[date]",
                "[C17]": "[reviews].[date]",
                "[T5].[C18]": "[reviews].[district_id]",
                "[C18]": "[reviews].[district_id]",
                "[T5].[C19]": "[reviews].[product]",
                "[C19]": "[reviews].[product]",
                "[T5].[C20]": "[reviews].[reviews]",
                "[C20]": "[reviews].[reviews]",
                "[T5].[C21]": "[reviews].[stars]",
                "[C21]": "[reviews].[stars]"
            },
            "question": "Please list any [T2] with their full names who have been tagged as \"[V1]\" by the company without seeking their permission. full names = first, middle, last; without seeking their permission refers to \"Consumer consent provided?\" in ([V2], '[V3]' or '[V4]');; [V1] is a value of the column [C16]; [V2] is a value of the column [C13]; [V3] is a value of the column [C13]; [V4] is a value of the column [C13]",
            "to_value": {
                "[V1]": "Older American",
                "[V2]": "null",
                "[V3]": "N/A",
                "[V4]": "empty"
            },
            "masked": 6,
            "masked_terms": [
                "Older American",
                "null",
                "N/A",
                "empty",
                "two clients",
                "Older American"
            ],
            "sql": "SELECT [T2].[C8] AS [first], [T2].[C9] AS [middle], [T2].[C10] AS [last] FROM [T2] INNER JOIN [T4] ON [T2].[C7] = [T4].[C12] WHERE [T4].[C16] = '[V1]' AND [T4].[C13] IN ('[V2]', '[V3]', '[V4]')",
            "repaired_sql": "SELECT [T2].[C10], [T2].[C8], [T2].[C9] FROM [T2] JOIN [T4] ON [T2].[C7] = [T4].[C12] WHERE [T4].[C16] = '[V1]' AND [T4].[C13] IN ('[V2]', '[V3]', '[V4]')"
        },
        "values": [
            "Older American",
            "null",
            "N/A",
            "empty"
        ],
        "value_links": {
            "Older American": "[events].[tags]",
            "null": "[events].[consumer consent provided?]",
            "N/A": "[events].[consumer consent provided?]",
            "empty": "[events].[consumer consent provided?]"
        },
        "filtered_value_links": {
            "Older American": "[events].[tags]",
            "null": "[events].[consumer consent provided?]",
            "N/A": "[events].[consumer consent provided?]",
            "empty": "[events].[consumer consent provided?]"
        },
        "schema_links": {
            "two clients": "TABLE:[client]",
            "Older American": "COLUMN:[events].[tags]"
        },
        "filtered_schema_links": {
            "two clients": "TABLE:[client]",
            "Older American": "COLUMN:[events].[tags]"
        },
        "attack": "Please list any individuals with their full names who have been tagged as \"Do Not Contact\" by the company without seeking their permission. Full names = first, middle, last; without seeking their permission refers to \"Consumer consent provided?\" in (No, 'N' or 'False')."
    },
    {
        "db_id": "retail_complains",
        "question": "List down the email of client whose complaint is type \"PS\".",
        "evidence": "",
        "SQL": "SELECT T1.email FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.type = 'PS'",
        "query": "SELECT T1.email FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.type = 'PS'",
        "question_toks": [
            "List",
            "down",
            "the",
            "email",
            "of",
            "client",
            "whose",
            "complaint",
            "is",
            "type",
            "\"PS\"",
            "."
        ],
        "tc_original": [
            "client.client_id",
            "client.email",
            "client.middle",
            "client.sex",
            "client.day",
            "client.*",
            "callcenterlogs.type",
            "callcenterlogs.rand client",
            "callcenterlogs.complaint id",
            "callcenterlogs.priority",
            "callcenterlogs.outcome",
            "callcenterlogs.*",
            "reviews.date",
            "reviews.stars",
            "reviews.reviews",
            "reviews.product",
            "reviews.district_id",
            "reviews.*",
            "state.state",
            "state.region",
            "state.statecode",
            "state.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[client]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[email]",
            "COLUMN:[client].[middle]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[day]",
            "COLUMN:[client].[*]",
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[type]",
            "COLUMN:[callcenterlogs].[rand client]",
            "COLUMN:[callcenterlogs].[complaint id]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[outcome]",
            "COLUMN:[callcenterlogs].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]",
            "TABLE:[state]",
            "COLUMN:[state].[state]",
            "COLUMN:[state].[region]",
            "COLUMN:[state].[statecode]",
            "COLUMN:[state].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[complaint id]':\n    primary_key: true\n    type: text\n  '[outcome]': text\n  '[priority]': integer\n  '[rand client]':\n    foreign_key: '[client].[client_id]'\n    type: text\n  '[type]': text\n'[client]':\n  '[client_id]':\n    primary_key: true\n    type: text\n  '[day]': integer\n  '[email]': text\n  '[middle]': text\n  '[sex]': text\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n'[state]':\n  '[region]': text\n  '[state]': text\n  '[statecode]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "email": "COLUMN:[client].[email]",
            "client": "TABLE:[client]",
            "complaint": "TABLE:[callcenterlogs]",
            "type": "COLUMN:[callcenterlogs].[type]",
            "PS": "VALUE:[callcenterlogs].[type]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[complaint id]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[C3]": "[callcenterlogs].[priority]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[C6]": "[client].[client_id]",
                "[C7]": "[client].[day]",
                "[C8]": "[client].[email]",
                "[C9]": "[client].[middle]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[reviews]",
                "[C12]": "[reviews].[date]",
                "[C13]": "[reviews].[district_id]",
                "[C14]": "[reviews].[product]",
                "[C15]": "[reviews].[reviews]",
                "[C16]": "[reviews].[stars]",
                "[T5]": "[state]",
                "[C17]": "[state].[region]",
                "[C18]": "[state].[state]",
                "[C19]": "[state].[statecode]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[complaint id]": "[C1]",
                "[callcenterlogs].[outcome]": "[C2]",
                "[callcenterlogs].[priority]": "[C3]",
                "[callcenterlogs].[rand client]": "[C4]",
                "[callcenterlogs].[type]": "[C5]",
                "[client]": "[T2]",
                "[client].[client_id]": "[C6]",
                "[client].[day]": "[C7]",
                "[client].[email]": "[C8]",
                "[client].[middle]": "[C9]",
                "[client].[sex]": "[C10]",
                "[district]": "[T3]",
                "[district].[district_id]": "[C11]",
                "[reviews]": "[T4]",
                "[reviews].[date]": "[C12]",
                "[reviews].[district_id]": "[C13]",
                "[reviews].[product]": "[C14]",
                "[reviews].[reviews]": "[C15]",
                "[reviews].[stars]": "[C16]",
                "[state]": "[T5]",
                "[state].[region]": "[C17]",
                "[state].[state]": "[C18]",
                "[state].[statecode]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]': integer\n  '[C4]':\n    foreign_key: '[T2].[C6]'\n    type: text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    primary_key: true\n    type: text\n  '[C7]': integer\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C12]':\n    primary_key: true\n    type: date\n  '[C13]':\n    foreign_key: '[T3].[C11]'\n    type: integer\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n'[T5]':\n  '[C17]': text\n  '[C18]': text\n  '[C19]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[complaint id]",
                "[C1]": "[callcenterlogs].[complaint id]",
                "[T1].[C2]": "[callcenterlogs].[outcome]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[T1].[C3]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[priority]",
                "[T1].[C4]": "[callcenterlogs].[rand client]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[T1].[C5]": "[callcenterlogs].[type]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[client_id]",
                "[C6]": "[client].[client_id]",
                "[T2].[C7]": "[client].[day]",
                "[C7]": "[client].[day]",
                "[T2].[C8]": "[client].[email]",
                "[C8]": "[client].[email]",
                "[T2].[C9]": "[client].[middle]",
                "[C9]": "[client].[middle]",
                "[T2].[C10]": "[client].[sex]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[district_id]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[reviews]",
                "[T4].[C12]": "[reviews].[date]",
                "[C12]": "[reviews].[date]",
                "[T4].[C13]": "[reviews].[district_id]",
                "[C13]": "[reviews].[district_id]",
                "[T4].[C14]": "[reviews].[product]",
                "[C14]": "[reviews].[product]",
                "[T4].[C15]": "[reviews].[reviews]",
                "[C15]": "[reviews].[reviews]",
                "[T4].[C16]": "[reviews].[stars]",
                "[C16]": "[reviews].[stars]",
                "[T5]": "[state]",
                "[T5].[C17]": "[state].[region]",
                "[C17]": "[state].[region]",
                "[T5].[C18]": "[state].[state]",
                "[C18]": "[state].[state]",
                "[T5].[C19]": "[state].[statecode]",
                "[C19]": "[state].[statecode]"
            },
            "question": "List down the [C8] of client whose [C1] is [C5] \"[V1]\".; [V1] is a value of the column [C5]",
            "to_value": {
                "[V1]": "PS"
            },
            "masked": 4,
            "masked_terms": [
                "PS",
                "email",
                "complaint",
                "type"
            ],
            "sql": "SELECT [T2].[C8] FROM [T1] JOIN [T2] ON [T1].[C4] = [T2].[C6] WHERE [T1].[C5] = '[V1]'",
            "repaired_sql": "SELECT [T2].[C8] FROM [T1] JOIN [T2] ON [T1].[C4] = [T2].[C6] WHERE [T1].[C1] = '[C5]' AND [T1].[C5] = '[V1]'"
        },
        "values": [
            "PS"
        ],
        "value_links": {
            "PS": "[callcenterlogs].[type]"
        },
        "filtered_value_links": {
            "PS": "[callcenterlogs].[type]"
        },
        "schema_links": {
            "email": "COLUMN:[client].[email]",
            "complaint": "COLUMN:[callcenterlogs].[complaint id]",
            "type": "COLUMN:[callcenterlogs].[type]"
        },
        "filtered_schema_links": {
            "email": "COLUMN:[client].[email]",
            "complaint": "COLUMN:[callcenterlogs].[complaint id]",
            "type": "COLUMN:[callcenterlogs].[type]"
        },
        "attack": "List down the address of client whose id is customer_id \"V1\"."
    },
    {
        "db_id": "retail_complains",
        "question": "What are the complaint id of client who were born in 1931? in 1931 refers to year = 1931",
        "evidence": "in 1931 refers to year = 1931",
        "SQL": "SELECT T2.`Complaint ID` FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.year = 1931",
        "query": "SELECT T2.`Complaint ID` FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.year = 1931",
        "evidence_added": true,
        "question_toks": [
            "What",
            "are",
            "the",
            "complaint",
            "id",
            "of",
            "client",
            "who",
            "were",
            "born",
            "in",
            "1931",
            "?",
            "in",
            "1931",
            "refers",
            "to",
            "year",
            "=",
            "1931"
        ],
        "tc_original": [
            "client.year",
            "client.client_id",
            "client.age",
            "client.sex",
            "client.day",
            "client.*",
            "events.client_id",
            "events.complaint id",
            "events.product",
            "events.issue",
            "events.tags",
            "events.*",
            "callcenterlogs.complaint id",
            "callcenterlogs.rand client",
            "callcenterlogs.call_id",
            "callcenterlogs.priority",
            "callcenterlogs.type",
            "callcenterlogs.*",
            "reviews.date",
            "reviews.stars",
            "reviews.reviews",
            "reviews.product",
            "reviews.district_id",
            "reviews.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[client]",
            "COLUMN:[client].[year]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[age]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[day]",
            "COLUMN:[client].[*]",
            "TABLE:[events]",
            "COLUMN:[events].[client_id]",
            "COLUMN:[events].[complaint id]",
            "COLUMN:[events].[product]",
            "COLUMN:[events].[issue]",
            "COLUMN:[events].[tags]",
            "COLUMN:[events].[*]",
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[complaint id]",
            "COLUMN:[callcenterlogs].[rand client]",
            "COLUMN:[callcenterlogs].[call_id]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[type]",
            "COLUMN:[callcenterlogs].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[call_id]': integer\n  '[complaint id]':\n    primary_key: true\n    type: text\n  '[priority]': integer\n  '[rand client]':\n    foreign_key: '[client].[client_id]'\n    type: text\n  '[type]': text\n'[client]':\n  '[age]': integer\n  '[client_id]':\n    primary_key: true\n    type: text\n  '[day]': integer\n  '[sex]': text\n  '[year]': integer\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[events]':\n  '[client_id]':\n    foreign_key: '[client].[client_id]'\n    primary_key: true\n    type: text\n  '[complaint id]':\n    foreign_key: '[callcenterlogs].[complaint id]'\n    primary_key: true\n    type: text\n  '[issue]': text\n  '[product]': text\n  '[tags]': text\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n",
        "gold_links": {
            "complaint id": "COLUMN:[callcenterlogs].[complaint id]",
            "client": "TABLE:[client]",
            "1931": "VALUE:[client].[year]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[call_id]",
                "[C2]": "[callcenterlogs].[complaint id]",
                "[C3]": "[callcenterlogs].[priority]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[C6]": "[client].[age]",
                "[C7]": "[client].[client_id]",
                "[C8]": "[client].[day]",
                "[C9]": "[client].[sex]",
                "[C10]": "[client].[year]",
                "[T3]": "[district]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[events]",
                "[C12]": "[events].[client_id]",
                "[C13]": "[events].[complaint id]",
                "[C14]": "[events].[issue]",
                "[C15]": "[events].[product]",
                "[C16]": "[events].[tags]",
                "[T5]": "[reviews]",
                "[C17]": "[reviews].[date]",
                "[C18]": "[reviews].[district_id]",
                "[C19]": "[reviews].[product]",
                "[C20]": "[reviews].[reviews]",
                "[C21]": "[reviews].[stars]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[call_id]": "[C1]",
                "[callcenterlogs].[complaint id]": "[C2]",
                "[callcenterlogs].[priority]": "[C3]",
                "[callcenterlogs].[rand client]": "[C4]",
                "[callcenterlogs].[type]": "[C5]",
                "[client]": "[T2]",
                "[client].[age]": "[C6]",
                "[client].[client_id]": "[C7]",
                "[client].[day]": "[C8]",
                "[client].[sex]": "[C9]",
                "[client].[year]": "[C10]",
                "[district]": "[T3]",
                "[district].[district_id]": "[C11]",
                "[events]": "[T4]",
                "[events].[client_id]": "[C12]",
                "[events].[complaint id]": "[C13]",
                "[events].[issue]": "[C14]",
                "[events].[product]": "[C15]",
                "[events].[tags]": "[C16]",
                "[reviews]": "[T5]",
                "[reviews].[date]": "[C17]",
                "[reviews].[district_id]": "[C18]",
                "[reviews].[product]": "[C19]",
                "[reviews].[reviews]": "[C20]",
                "[reviews].[stars]": "[C21]"
            },
            "schema": "'[T1]':\n  '[C1]': integer\n  '[C2]':\n    primary_key: true\n    type: text\n  '[C3]': integer\n  '[C4]':\n    foreign_key: '[T2].[C7]'\n    type: text\n  '[C5]': text\n'[T2]':\n  '[C10]': integer\n  '[C6]': integer\n  '[C7]':\n    primary_key: true\n    type: text\n  '[C8]': integer\n  '[C9]': text\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C12]':\n    foreign_key: '[T2].[C7]'\n    primary_key: true\n    type: text\n  '[C13]':\n    foreign_key: '[T1].[C2]'\n    primary_key: true\n    type: text\n  '[C14]': text\n  '[C15]': text\n  '[C16]': text\n'[T5]':\n  '[C17]':\n    primary_key: true\n    type: date\n  '[C18]':\n    foreign_key: '[T3].[C11]'\n    type: integer\n  '[C19]': text\n  '[C20]': text\n  '[C21]': integer\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[call_id]",
                "[C1]": "[callcenterlogs].[call_id]",
                "[T1].[C2]": "[callcenterlogs].[complaint id]",
                "[C2]": "[callcenterlogs].[complaint id]",
                "[T1].[C3]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[priority]",
                "[T1].[C4]": "[callcenterlogs].[rand client]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[T1].[C5]": "[callcenterlogs].[type]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[age]",
                "[C6]": "[client].[age]",
                "[T2].[C7]": "[client].[client_id]",
                "[C7]": "[client].[client_id]",
                "[T2].[C8]": "[client].[day]",
                "[C8]": "[client].[day]",
                "[T2].[C9]": "[client].[sex]",
                "[C9]": "[client].[sex]",
                "[T2].[C10]": "[client].[year]",
                "[C10]": "[client].[year]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[district_id]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[events]",
                "[T4].[C12]": "[events].[client_id]",
                "[C12]": "[events].[client_id]",
                "[T4].[C13]": "[events].[complaint id]",
                "[C13]": "[events].[complaint id]",
                "[T4].[C14]": "[events].[issue]",
                "[C14]": "[events].[issue]",
                "[T4].[C15]": "[events].[product]",
                "[C15]": "[events].[product]",
                "[T4].[C16]": "[events].[tags]",
                "[C16]": "[events].[tags]",
                "[T5]": "[reviews]",
                "[T5].[C17]": "[reviews].[date]",
                "[C17]": "[reviews].[date]",
                "[T5].[C18]": "[reviews].[district_id]",
                "[C18]": "[reviews].[district_id]",
                "[T5].[C19]": "[reviews].[product]",
                "[C19]": "[reviews].[product]",
                "[T5].[C20]": "[reviews].[reviews]",
                "[C20]": "[reviews].[reviews]",
                "[T5].[C21]": "[reviews].[stars]",
                "[C21]": "[reviews].[stars]"
            },
            "question": "What are the [C2] of [T2] who were [C10] in [V1]? in [V1] refers to year = [V1]; [V1] is a value of the column [C10]",
            "to_value": {
                "[V1]": "1931"
            },
            "masked": 6,
            "masked_terms": [
                "1931",
                "complaint id",
                "client",
                "id",
                "born",
                "1931"
            ],
            "sql": "SELECT [T2].[C2] FROM [T2] WHERE [T2].[C10] = [V1]",
            "repaired_sql": "SELECT [T1].[C2] FROM [T1] JOIN [T2] ON [T1].[C4] = [T2].[C7] WHERE [T2].[C10] = [V1]"
        },
        "values": [
            "1931"
        ],
        "value_links": {
            "1931": "[client].[year]"
        },
        "filtered_value_links": {
            "1931": "[client].[year]"
        },
        "schema_links": {
            "complaint id": "COLUMN:[callcenterlogs].[complaint id]",
            "client": "TABLE:[client]",
            "id": "COLUMN:[client].[client_id]",
            "born": "COLUMN:[client].[year]",
            "1931": "COLUMN:[client].[year]"
        },
        "filtered_schema_links": {
            "complaint id": "COLUMN:[callcenterlogs].[complaint id]",
            "client": "TABLE:[client]",
            "id": "COLUMN:[client].[client_id]",
            "born": "COLUMN:[client].[year]",
            "1931": "COLUMN:[client].[year]"
        },
        "attack": "What are the names of events who were held in 2020?"
    },
    {
        "db_id": "retail_complains",
        "question": "Write down the call id of clients whose first name start with alphabet \"B\". first name start with alphabet \"B\" refers to first like 'B%'",
        "evidence": "first name start with alphabet \"B\" refers to first like 'B%'",
        "SQL": "SELECT T2.call_id FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.first LIKE 'B%'",
        "query": "SELECT T2.call_id FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T1.first LIKE 'B%'",
        "evidence_added": true,
        "question_toks": [
            "Write",
            "down",
            "the",
            "call",
            "id",
            "of",
            "clients",
            "whose",
            "first",
            "name",
            "start",
            "with",
            "alphabet",
            "\"B\"",
            ".",
            "first",
            "name",
            "start",
            "with",
            "alphabet",
            "\"B\"",
            "refers",
            "to",
            "first",
            "like",
            "'B%'"
        ],
        "tc_original": [
            "client.client_id",
            "client.first",
            "client.sex",
            "client.day",
            "client.month",
            "client.*",
            "callcenterlogs.call_id",
            "callcenterlogs.rand client",
            "callcenterlogs.priority",
            "callcenterlogs.type",
            "callcenterlogs.outcome",
            "callcenterlogs.*",
            "state.state",
            "state.region",
            "state.statecode",
            "state.*",
            "reviews.date",
            "reviews.stars",
            "reviews.reviews",
            "reviews.product",
            "reviews.district_id",
            "reviews.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[client]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[first]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[day]",
            "COLUMN:[client].[month]",
            "COLUMN:[client].[*]",
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[call_id]",
            "COLUMN:[callcenterlogs].[rand client]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[type]",
            "COLUMN:[callcenterlogs].[outcome]",
            "COLUMN:[callcenterlogs].[*]",
            "TABLE:[state]",
            "COLUMN:[state].[state]",
            "COLUMN:[state].[region]",
            "COLUMN:[state].[statecode]",
            "COLUMN:[state].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[call_id]': integer\n  '[outcome]': text\n  '[priority]': integer\n  '[rand client]':\n    foreign_key: '[client].[client_id]'\n    type: text\n  '[type]': text\n'[client]':\n  '[client_id]':\n    primary_key: true\n    type: text\n  '[day]': integer\n  '[first]': text\n  '[month]': integer\n  '[sex]': text\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n'[state]':\n  '[region]': text\n  '[state]': text\n  '[statecode]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "call id": "COLUMN:[callcenterlogs].[call_id]",
            "clients": "TABLE:[client]",
            "first name": "COLUMN:[client].[first]",
            "alphabet": "COLUMN:[client].[first]",
            "B": "VALUE:[client].[first]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[call_id]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[C3]": "[callcenterlogs].[priority]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[C6]": "[client].[client_id]",
                "[C7]": "[client].[day]",
                "[C8]": "[client].[first]",
                "[C9]": "[client].[month]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[reviews]",
                "[C12]": "[reviews].[date]",
                "[C13]": "[reviews].[district_id]",
                "[C14]": "[reviews].[product]",
                "[C15]": "[reviews].[reviews]",
                "[C16]": "[reviews].[stars]",
                "[T5]": "[state]",
                "[C17]": "[state].[region]",
                "[C18]": "[state].[state]",
                "[C19]": "[state].[statecode]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[call_id]": "[C1]",
                "[callcenterlogs].[outcome]": "[C2]",
                "[callcenterlogs].[priority]": "[C3]",
                "[callcenterlogs].[rand client]": "[C4]",
                "[callcenterlogs].[type]": "[C5]",
                "[client]": "[T2]",
                "[client].[client_id]": "[C6]",
                "[client].[day]": "[C7]",
                "[client].[first]": "[C8]",
                "[client].[month]": "[C9]",
                "[client].[sex]": "[C10]",
                "[district]": "[T3]",
                "[district].[district_id]": "[C11]",
                "[reviews]": "[T4]",
                "[reviews].[date]": "[C12]",
                "[reviews].[district_id]": "[C13]",
                "[reviews].[product]": "[C14]",
                "[reviews].[reviews]": "[C15]",
                "[reviews].[stars]": "[C16]",
                "[state]": "[T5]",
                "[state].[region]": "[C17]",
                "[state].[state]": "[C18]",
                "[state].[statecode]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': integer\n  '[C2]': text\n  '[C3]': integer\n  '[C4]':\n    foreign_key: '[T2].[C6]'\n    type: text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    primary_key: true\n    type: text\n  '[C7]': integer\n  '[C8]': text\n  '[C9]': integer\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C12]':\n    primary_key: true\n    type: date\n  '[C13]':\n    foreign_key: '[T3].[C11]'\n    type: integer\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n'[T5]':\n  '[C17]': text\n  '[C18]': text\n  '[C19]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[call_id]",
                "[C1]": "[callcenterlogs].[call_id]",
                "[T1].[C2]": "[callcenterlogs].[outcome]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[T1].[C3]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[priority]",
                "[T1].[C4]": "[callcenterlogs].[rand client]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[T1].[C5]": "[callcenterlogs].[type]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[client_id]",
                "[C6]": "[client].[client_id]",
                "[T2].[C7]": "[client].[day]",
                "[C7]": "[client].[day]",
                "[T2].[C8]": "[client].[first]",
                "[C8]": "[client].[first]",
                "[T2].[C9]": "[client].[month]",
                "[C9]": "[client].[month]",
                "[T2].[C10]": "[client].[sex]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[district_id]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[reviews]",
                "[T4].[C12]": "[reviews].[date]",
                "[C12]": "[reviews].[date]",
                "[T4].[C13]": "[reviews].[district_id]",
                "[C13]": "[reviews].[district_id]",
                "[T4].[C14]": "[reviews].[product]",
                "[C14]": "[reviews].[product]",
                "[T4].[C15]": "[reviews].[reviews]",
                "[C15]": "[reviews].[reviews]",
                "[T4].[C16]": "[reviews].[stars]",
                "[C16]": "[reviews].[stars]",
                "[T5]": "[state]",
                "[T5].[C17]": "[state].[region]",
                "[C17]": "[state].[region]",
                "[T5].[C18]": "[state].[state]",
                "[C18]": "[state].[state]",
                "[T5].[C19]": "[state].[statecode]",
                "[C19]": "[state].[statecode]"
            },
            "question": "Write down the [C1] of clients whose [C8] start with alphabet \"B\". [C8] start with alphabet \"B\" refers to first like 'B%'; [V1] is a value of the column [C8]",
            "to_value": {
                "[V1]": "B%"
            },
            "masked": 5,
            "masked_terms": [
                "B%",
                "call id",
                "client",
                "first name",
                "B%"
            ],
            "sql": "SELECT [T1].[C1] FROM [T1] JOIN [T2] ON [T1].[C4] = [T2].[C6] WHERE [T2].[C8] LIKE 'B%'",
            "repaired_sql": "SELECT [T1].[C1] FROM [T1] JOIN [T2] ON [T1].[C4] = [T2].[C6] WHERE [T2].[C8] LIKE 'B%'"
        },
        "values": [
            "B%"
        ],
        "value_links": {
            "B%": "[client].[first]"
        },
        "filtered_value_links": {
            "B%": "[client].[first]"
        },
        "schema_links": {
            "call id": "COLUMN:[callcenterlogs].[call_id]",
            "client": "TABLE:[client]",
            "first name": "COLUMN:[client].[first]",
            "B%": "COLUMN:[client].[first]"
        },
        "filtered_schema_links": {
            "call id": "COLUMN:[callcenterlogs].[call_id]",
            "client": "TABLE:[client]",
            "first name": "COLUMN:[client].[first]",
            "B%": "COLUMN:[client].[first]"
        },
        "attack": "Write down the id of clients whose address start with alphabet \"B\". address start with alphabet \"B\" refers to first like 'B%'; \"B%\" is a value of the column address"
    },
    {
        "db_id": "retail_complains",
        "question": "What is the average age of clients whose complaint type is \"TT\"? average age = avg(age where type = 'TT')",
        "evidence": "average age = avg(age where type = 'TT')",
        "SQL": "SELECT AVG(T1.age) FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.type = 'TT'",
        "query": "SELECT AVG(T1.age) FROM client AS T1 INNER JOIN callcenterlogs AS T2 ON T1.client_id = T2.`rand client` WHERE T2.type = 'TT'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "age",
            "of",
            "clients",
            "whose",
            "complaint",
            "type",
            "is",
            "\"TT\"",
            "?",
            "average",
            "age",
            "=",
            "avg(age",
            "where",
            "type",
            "=",
            "'TT')"
        ],
        "tc_original": [
            "callcenterlogs.type",
            "callcenterlogs.rand client",
            "callcenterlogs.complaint id",
            "callcenterlogs.priority",
            "callcenterlogs.outcome",
            "callcenterlogs.*",
            "client.client_id",
            "client.age",
            "client.middle",
            "client.sex",
            "client.day",
            "client.*",
            "reviews.date",
            "reviews.stars",
            "reviews.reviews",
            "reviews.product",
            "reviews.district_id",
            "reviews.*",
            "state.state",
            "state.region",
            "state.statecode",
            "state.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[type]",
            "COLUMN:[callcenterlogs].[rand client]",
            "COLUMN:[callcenterlogs].[complaint id]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[outcome]",
            "COLUMN:[callcenterlogs].[*]",
            "TABLE:[client]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[age]",
            "COLUMN:[client].[middle]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[day]",
            "COLUMN:[client].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]",
            "TABLE:[state]",
            "COLUMN:[state].[state]",
            "COLUMN:[state].[region]",
            "COLUMN:[state].[statecode]",
            "COLUMN:[state].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[complaint id]':\n    primary_key: true\n    type: text\n  '[outcome]': text\n  '[priority]': integer\n  '[rand client]':\n    foreign_key: '[client].[client_id]'\n    type: text\n  '[type]': text\n'[client]':\n  '[age]': integer\n  '[client_id]':\n    primary_key: true\n    type: text\n  '[day]': integer\n  '[middle]': text\n  '[sex]': text\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n'[state]':\n  '[region]': text\n  '[state]': text\n  '[statecode]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "average age": "COLUMN:[client].[age]",
            "clients": "TABLE:[client]",
            "complaint type": "COLUMN:[callcenterlogs].[type]",
            "TT": "VALUE:[callcenterlogs].[type]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[complaint id]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[C3]": "[callcenterlogs].[priority]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[C6]": "[client].[age]",
                "[C7]": "[client].[client_id]",
                "[C8]": "[client].[day]",
                "[C9]": "[client].[middle]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[reviews]",
                "[C12]": "[reviews].[date]",
                "[C13]": "[reviews].[district_id]",
                "[C14]": "[reviews].[product]",
                "[C15]": "[reviews].[reviews]",
                "[C16]": "[reviews].[stars]",
                "[T5]": "[state]",
                "[C17]": "[state].[region]",
                "[C18]": "[state].[state]",
                "[C19]": "[state].[statecode]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[complaint id]": "[C1]",
                "[callcenterlogs].[outcome]": "[C2]",
                "[callcenterlogs].[priority]": "[C3]",
                "[callcenterlogs].[rand client]": "[C4]",
                "[callcenterlogs].[type]": "[C5]",
                "[client]": "[T2]",
                "[client].[age]": "[C6]",
                "[client].[client_id]": "[C7]",
                "[client].[day]": "[C8]",
                "[client].[middle]": "[C9]",
                "[client].[sex]": "[C10]",
                "[district]": "[T3]",
                "[district].[district_id]": "[C11]",
                "[reviews]": "[T4]",
                "[reviews].[date]": "[C12]",
                "[reviews].[district_id]": "[C13]",
                "[reviews].[product]": "[C14]",
                "[reviews].[reviews]": "[C15]",
                "[reviews].[stars]": "[C16]",
                "[state]": "[T5]",
                "[state].[region]": "[C17]",
                "[state].[state]": "[C18]",
                "[state].[statecode]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': text\n  '[C3]': integer\n  '[C4]':\n    foreign_key: '[T2].[C7]'\n    type: text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]':\n    primary_key: true\n    type: text\n  '[C8]': integer\n  '[C9]': text\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C12]':\n    primary_key: true\n    type: date\n  '[C13]':\n    foreign_key: '[T3].[C11]'\n    type: integer\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n'[T5]':\n  '[C17]': text\n  '[C18]': text\n  '[C19]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[complaint id]",
                "[C1]": "[callcenterlogs].[complaint id]",
                "[T1].[C2]": "[callcenterlogs].[outcome]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[T1].[C3]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[priority]",
                "[T1].[C4]": "[callcenterlogs].[rand client]",
                "[C4]": "[callcenterlogs].[rand client]",
                "[T1].[C5]": "[callcenterlogs].[type]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[age]",
                "[C6]": "[client].[age]",
                "[T2].[C7]": "[client].[client_id]",
                "[C7]": "[client].[client_id]",
                "[T2].[C8]": "[client].[day]",
                "[C8]": "[client].[day]",
                "[T2].[C9]": "[client].[middle]",
                "[C9]": "[client].[middle]",
                "[T2].[C10]": "[client].[sex]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[district_id]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[reviews]",
                "[T4].[C12]": "[reviews].[date]",
                "[C12]": "[reviews].[date]",
                "[T4].[C13]": "[reviews].[district_id]",
                "[C13]": "[reviews].[district_id]",
                "[T4].[C14]": "[reviews].[product]",
                "[C14]": "[reviews].[product]",
                "[T4].[C15]": "[reviews].[reviews]",
                "[C15]": "[reviews].[reviews]",
                "[T4].[C16]": "[reviews].[stars]",
                "[C16]": "[reviews].[stars]",
                "[T5]": "[state]",
                "[T5].[C17]": "[state].[region]",
                "[C17]": "[state].[region]",
                "[T5].[C18]": "[state].[state]",
                "[C18]": "[state].[state]",
                "[T5].[C19]": "[state].[statecode]",
                "[C19]": "[state].[statecode]"
            },
            "question": "What is the [C6] of [T2] whose [C5] is \"[V1]\"? [C6] = avg(age where type = '[V1]'); [V1] is a value of the column [C5]",
            "to_value": {
                "[V1]": "TT"
            },
            "masked": 4,
            "masked_terms": [
                "TT",
                "average age",
                "clients",
                "complaint type"
            ],
            "sql": "SELECT AVG([T2].[C6]) FROM [T2] WHERE [T2].[C5] = '[V1]'",
            "repaired_sql": "SELECT AVG([T1].[C3]) FROM [T1] WHERE [T1].[C5] = '[V1]'"
        },
        "values": [
            "TT"
        ],
        "value_links": {
            "TT": "[callcenterlogs].[type]"
        },
        "filtered_value_links": {
            "TT": "[callcenterlogs].[type]"
        },
        "schema_links": {
            "average age": "COLUMN:[client].[age]",
            "clients": "TABLE:[client]",
            "complaint type": "COLUMN:[callcenterlogs].[type]"
        },
        "filtered_schema_links": {
            "average age": "COLUMN:[client].[age]",
            "clients": "TABLE:[client]",
            "complaint type": "COLUMN:[callcenterlogs].[type]"
        },
        "attack": "What is the average age of teams whose type is \"junior\"?"
    },
    {
        "db_id": "retail_complains",
        "question": "Write the complaint ID, call ID, and final phone number of complaints through AVIDAN server from 1/1/2014 to 12/30/2014. final phone number refers to phonefinal; from 1/1/2014 to 12/30/2014 refers to Date received between '2014-01-01' and '2014-12-30'",
        "evidence": "final phone number refers to phonefinal; from 1/1/2014 to 12/30/2014 refers to Date received between '2014-01-01' and '2014-12-30'",
        "SQL": "SELECT `Complaint ID`, call_id, phonefinal FROM callcenterlogs WHERE strftime('%Y', `Date received`) = '2014' AND server = 'AVIDAN'",
        "query": "SELECT `Complaint ID`, call_id, phonefinal FROM callcenterlogs WHERE strftime('%Y', `Date received`) = '2014' AND server = 'AVIDAN'",
        "evidence_added": true,
        "question_toks": [
            "Write",
            "the",
            "complaint",
            "ID",
            ",",
            "call",
            "ID",
            ",",
            "and",
            "final",
            "phone",
            "number",
            "of",
            "complaints",
            "through",
            "AVIDAN",
            "server",
            "from",
            "1/1/2014",
            "to",
            "12/30/2014",
            ".",
            "final",
            "phone",
            "number",
            "refers",
            "to",
            "phonefinal",
            ";",
            "from",
            "1/1/2014",
            "to",
            "12/30/2014",
            "refers",
            "to",
            "Date",
            "received",
            "between",
            "'2014-01-01'",
            "and",
            "'2014-12-30'"
        ],
        "tc_original": [
            "callcenterlogs.phonefinal",
            "callcenterlogs.complaint id",
            "callcenterlogs.server",
            "callcenterlogs.date received",
            "callcenterlogs.call_id",
            "callcenterlogs.*",
            "state.state",
            "state.region",
            "state.statecode",
            "state.*",
            "client.sex",
            "client.day",
            "client.month",
            "client.year",
            "client.age",
            "client.*",
            "reviews.stars",
            "reviews.reviews",
            "reviews.product",
            "reviews.date",
            "reviews.district_id",
            "reviews.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[phonefinal]",
            "COLUMN:[callcenterlogs].[complaint id]",
            "COLUMN:[callcenterlogs].[server]",
            "COLUMN:[callcenterlogs].[date received]",
            "COLUMN:[callcenterlogs].[call_id]",
            "COLUMN:[callcenterlogs].[*]",
            "TABLE:[state]",
            "COLUMN:[state].[state]",
            "COLUMN:[state].[region]",
            "COLUMN:[state].[statecode]",
            "COLUMN:[state].[*]",
            "TABLE:[client]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[day]",
            "COLUMN:[client].[month]",
            "COLUMN:[client].[year]",
            "COLUMN:[client].[age]",
            "COLUMN:[client].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[call_id]': integer\n  '[complaint id]':\n    primary_key: true\n    type: text\n  '[date received]': date\n  '[phonefinal]': text\n  '[server]': text\n'[client]':\n  '[age]': integer\n  '[day]': integer\n  '[month]': integer\n  '[sex]': text\n  '[year]': integer\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n'[state]':\n  '[region]': text\n  '[state]': text\n  '[statecode]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "complaint id": "COLUMN:[callcenterlogs].[complaint id]",
            "call id": "COLUMN:[callcenterlogs].[call_id]",
            "final phone number": "COLUMN:[callcenterlogs].[phonefinal]",
            "AVIDAN": "VALUE:[callcenterlogs].[server]",
            "server": "COLUMN:[callcenterlogs].[server]",
            "1/1/2014": "VALUE:[callcenterlogs].[date received]",
            "12/30/2014": "VALUE:[callcenterlogs].[date received]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[call_id]",
                "[C2]": "[callcenterlogs].[complaint id]",
                "[C3]": "[callcenterlogs].[date received]",
                "[C4]": "[callcenterlogs].[phonefinal]",
                "[C5]": "[callcenterlogs].[server]",
                "[T2]": "[client]",
                "[C6]": "[client].[age]",
                "[C7]": "[client].[day]",
                "[C8]": "[client].[month]",
                "[C9]": "[client].[sex]",
                "[C10]": "[client].[year]",
                "[T3]": "[district]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[reviews]",
                "[C12]": "[reviews].[date]",
                "[C13]": "[reviews].[district_id]",
                "[C14]": "[reviews].[product]",
                "[C15]": "[reviews].[reviews]",
                "[C16]": "[reviews].[stars]",
                "[T5]": "[state]",
                "[C17]": "[state].[region]",
                "[C18]": "[state].[state]",
                "[C19]": "[state].[statecode]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[call_id]": "[C1]",
                "[callcenterlogs].[complaint id]": "[C2]",
                "[callcenterlogs].[date received]": "[C3]",
                "[callcenterlogs].[phonefinal]": "[C4]",
                "[callcenterlogs].[server]": "[C5]",
                "[client]": "[T2]",
                "[client].[age]": "[C6]",
                "[client].[day]": "[C7]",
                "[client].[month]": "[C8]",
                "[client].[sex]": "[C9]",
                "[client].[year]": "[C10]",
                "[district]": "[T3]",
                "[district].[district_id]": "[C11]",
                "[reviews]": "[T4]",
                "[reviews].[date]": "[C12]",
                "[reviews].[district_id]": "[C13]",
                "[reviews].[product]": "[C14]",
                "[reviews].[reviews]": "[C15]",
                "[reviews].[stars]": "[C16]",
                "[state]": "[T5]",
                "[state].[region]": "[C17]",
                "[state].[state]": "[C18]",
                "[state].[statecode]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': integer\n  '[C2]':\n    primary_key: true\n    type: text\n  '[C3]': date\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': integer\n  '[C6]': integer\n  '[C7]': integer\n  '[C8]': integer\n  '[C9]': text\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C12]':\n    primary_key: true\n    type: date\n  '[C13]':\n    foreign_key: '[T3].[C11]'\n    type: integer\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n'[T5]':\n  '[C17]': text\n  '[C18]': text\n  '[C19]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[call_id]",
                "[C1]": "[callcenterlogs].[call_id]",
                "[T1].[C2]": "[callcenterlogs].[complaint id]",
                "[C2]": "[callcenterlogs].[complaint id]",
                "[T1].[C3]": "[callcenterlogs].[date received]",
                "[C3]": "[callcenterlogs].[date received]",
                "[T1].[C4]": "[callcenterlogs].[phonefinal]",
                "[C4]": "[callcenterlogs].[phonefinal]",
                "[T1].[C5]": "[callcenterlogs].[server]",
                "[C5]": "[callcenterlogs].[server]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[age]",
                "[C6]": "[client].[age]",
                "[T2].[C7]": "[client].[day]",
                "[C7]": "[client].[day]",
                "[T2].[C8]": "[client].[month]",
                "[C8]": "[client].[month]",
                "[T2].[C9]": "[client].[sex]",
                "[C9]": "[client].[sex]",
                "[T2].[C10]": "[client].[year]",
                "[C10]": "[client].[year]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[district_id]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[reviews]",
                "[T4].[C12]": "[reviews].[date]",
                "[C12]": "[reviews].[date]",
                "[T4].[C13]": "[reviews].[district_id]",
                "[C13]": "[reviews].[district_id]",
                "[T4].[C14]": "[reviews].[product]",
                "[C14]": "[reviews].[product]",
                "[T4].[C15]": "[reviews].[reviews]",
                "[C15]": "[reviews].[reviews]",
                "[T4].[C16]": "[reviews].[stars]",
                "[C16]": "[reviews].[stars]",
                "[T5]": "[state]",
                "[T5].[C17]": "[state].[region]",
                "[C17]": "[state].[region]",
                "[T5].[C18]": "[state].[state]",
                "[C18]": "[state].[state]",
                "[T5].[C19]": "[state].[statecode]",
                "[C19]": "[state].[statecode]"
            },
            "question": "Write the [V1], [V2], and final phone number of complaints through [C5] server from 1/1/2014 to 12/30/2014. final phone number refers to [V3]; from 1/1/2014 to 12/30/2014 refers to Date received between '[V4]' and '[V5]'; [V1] is a value of the column [C2]; [V2] is a value of the column [C1]; [V3] is a value of the column [C4]; [V4] is a value of the column [C3]; [V5] is a value of the column [C3]",
            "to_value": {
                "[V1]": "complaint ID",
                "[V2]": "call ID",
                "[V3]": "phonefinal",
                "[V4]": "2014-01-01",
                "[V5]": "2014-12-30"
            },
            "masked": 11,
            "masked_terms": [
                "complaint ID",
                "call ID",
                "phonefinal",
                "2014-01-01",
                "2014-12-30",
                "complaint id",
                "call id",
                "phonefinal",
                "AVIDAN",
                "2014-01-01",
                "2014-12-30"
            ],
            "sql": "SELECT [T1].[C2] AS [V1], [T1].[C1] AS [V2], [T1].[C4] AS [V3] FROM [T1] WHERE [T1].[C5] = 'server' AND [T1].[C3] >= '2014-01-01' AND [T1].[C3] <= '2014-12-30'",
            "repaired_sql": "SELECT [C2], [C1], [C4] FROM [T1] WHERE [C5] = 'server' AND [C3] >= '2014-01-01' AND [C3] <= '2014-12-30'"
        },
        "values": [
            "AVIDAN",
            "complaint ID",
            "call ID",
            "phonefinal",
            "2014-01-01",
            "2014-12-30"
        ],
        "value_links": {
            "complaint ID": "[callcenterlogs].[complaint id]",
            "call ID": "[callcenterlogs].[call_id]",
            "phonefinal": "[callcenterlogs].[phonefinal]",
            "2014-01-01": "[callcenterlogs].[date received]",
            "2014-12-30": "[callcenterlogs].[date received]"
        },
        "filtered_value_links": {
            "complaint ID": "[callcenterlogs].[complaint id]",
            "call ID": "[callcenterlogs].[call_id]",
            "phonefinal": "[callcenterlogs].[phonefinal]",
            "2014-01-01": "[callcenterlogs].[date received]",
            "2014-12-30": "[callcenterlogs].[date received]"
        },
        "schema_links": {
            "complaint id": "COLUMN:[callcenterlogs].[complaint id]",
            "call id": "COLUMN:[callcenterlogs].[call_id]",
            "phonefinal": "COLUMN:[callcenterlogs].[phonefinal]",
            "AVIDAN": "COLUMN:[callcenterlogs].[server]",
            "2014-01-01": "COLUMN:[callcenterlogs].[date received]",
            "2014-12-30": "COLUMN:[callcenterlogs].[date received]"
        },
        "filtered_schema_links": {
            "complaint id": "COLUMN:[callcenterlogs].[complaint id]",
            "call id": "COLUMN:[callcenterlogs].[call_id]",
            "phonefinal": "COLUMN:[callcenterlogs].[phonefinal]",
            "AVIDAN": "COLUMN:[callcenterlogs].[server]",
            "2014-01-01": "COLUMN:[callcenterlogs].[date received]",
            "2014-12-30": "COLUMN:[callcenterlogs].[date received]"
        },
        "attack": "Write the Case Number, Complaint ID, and final phone number of complaints through server from 1/1/2014 to 12/30/2014. Final phone number refers to Phone Number; from 1/1/2014 to 12/30/2014 refers to Date received between '1/1/2014' and '12/30/2014'; Case Number is a value of the column Case Number; Complaint ID is a value of the column Complaint ID; Phone Number is a value of the column Phone Number; '1/1/2014' is a value of the column Date received; '12/30/2014' is a value of the column Date received."
    },
    {
        "db_id": "retail_complains",
        "question": "Give me the full birthdate, email and phone number of the youngest client in Indianapolis . full birthdate = year, month, day; youngest refers to max(year, month, day); in Indianapolis refers to city = 'Indianapolis'",
        "evidence": "full birthdate = year, month, day; youngest refers to max(year, month, day); in Indianapolis refers to city = 'Indianapolis'",
        "SQL": "SELECT T1.year, T1.month, T1.day, T1.email, T1.phone FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Indianapolis' ORDER BY T1.year DESC, T1.month DESC, T1.day DESC LIMIT 1",
        "query": "SELECT T1.year, T1.month, T1.day, T1.email, T1.phone FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.city = 'Indianapolis' ORDER BY T1.year DESC, T1.month DESC, T1.day DESC LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "Give",
            "me",
            "the",
            "full",
            "birthdate",
            ",",
            "email",
            "and",
            "phone",
            "number",
            "of",
            "the",
            "youngest",
            "client",
            "in",
            "Indianapolis",
            ".",
            "full",
            "birthdate",
            "=",
            "year",
            ",",
            "month",
            ",",
            "day",
            ";",
            "youngest",
            "refers",
            "to",
            "max(year",
            ",",
            "month",
            ",",
            "day)",
            ";",
            "in",
            "Indianapolis",
            "refers",
            "to",
            "city",
            "=",
            "'Indianapolis'"
        ],
        "tc_original": [
            "client.age",
            "client.city",
            "client.email",
            "client.year",
            "client.phone",
            "client.*",
            "district.city",
            "district.district_id",
            "district.state_abbrev",
            "district.division",
            "district.*",
            "callcenterlogs.priority",
            "callcenterlogs.type",
            "callcenterlogs.outcome",
            "callcenterlogs.server",
            "callcenterlogs.date received",
            "callcenterlogs.*",
            "state.state",
            "state.region",
            "state.statecode",
            "state.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[client]",
            "COLUMN:[client].[age]",
            "COLUMN:[client].[city]",
            "COLUMN:[client].[email]",
            "COLUMN:[client].[year]",
            "COLUMN:[client].[phone]",
            "COLUMN:[client].[*]",
            "TABLE:[district]",
            "COLUMN:[district].[city]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[state_abbrev]",
            "COLUMN:[district].[division]",
            "COLUMN:[district].[*]",
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[type]",
            "COLUMN:[callcenterlogs].[outcome]",
            "COLUMN:[callcenterlogs].[server]",
            "COLUMN:[callcenterlogs].[date received]",
            "COLUMN:[callcenterlogs].[*]",
            "TABLE:[state]",
            "COLUMN:[state].[state]",
            "COLUMN:[state].[region]",
            "COLUMN:[state].[statecode]",
            "COLUMN:[state].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[date received]': date\n  '[outcome]': text\n  '[priority]': integer\n  '[server]': text\n  '[type]': text\n'[client]':\n  '[age]': integer\n  '[city]': text\n  '[email]': text\n  '[phone]': text\n  '[year]': integer\n'[district]':\n  '[city]': text\n  '[district_id]':\n    primary_key: true\n    type: integer\n  '[division]': text\n  '[state_abbrev]':\n    foreign_key: '[state].[statecode]'\n    type: text\n'[state]':\n  '[region]': text\n  '[state]': text\n  '[statecode]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "full birthdate": "COLUMN:[client].[year]",
            "birthdate": "COLUMN:[client].[year]",
            "year": "COLUMN:[client].[year]",
            "email": "COLUMN:[client].[email]",
            "phone number": "COLUMN:[client].[phone]",
            "phone": "COLUMN:[client].[phone]",
            "youngest": "COLUMN:[client].[year]",
            "client": "TABLE:[client]",
            "Indianapolis": "VALUE:[district].[city]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[date received]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[C3]": "[callcenterlogs].[priority]",
                "[C4]": "[callcenterlogs].[server]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[C6]": "[client].[age]",
                "[C7]": "[client].[city]",
                "[C8]": "[client].[email]",
                "[C9]": "[client].[phone]",
                "[C10]": "[client].[year]",
                "[T3]": "[district]",
                "[C11]": "[district].[city]",
                "[C12]": "[district].[district_id]",
                "[C13]": "[district].[division]",
                "[C14]": "[district].[state_abbrev]",
                "[T4]": "[state]",
                "[C15]": "[state].[region]",
                "[C16]": "[state].[state]",
                "[C17]": "[state].[statecode]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[date received]": "[C1]",
                "[callcenterlogs].[outcome]": "[C2]",
                "[callcenterlogs].[priority]": "[C3]",
                "[callcenterlogs].[server]": "[C4]",
                "[callcenterlogs].[type]": "[C5]",
                "[client]": "[T2]",
                "[client].[age]": "[C6]",
                "[client].[city]": "[C7]",
                "[client].[email]": "[C8]",
                "[client].[phone]": "[C9]",
                "[client].[year]": "[C10]",
                "[district]": "[T3]",
                "[district].[city]": "[C11]",
                "[district].[district_id]": "[C12]",
                "[district].[division]": "[C13]",
                "[district].[state_abbrev]": "[C14]",
                "[state]": "[T4]",
                "[state].[region]": "[C15]",
                "[state].[state]": "[C16]",
                "[state].[statecode]": "[C17]"
            },
            "schema": "'[T1]':\n  '[C1]': date\n  '[C2]': text\n  '[C3]': integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': integer\n  '[C6]': integer\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: integer\n  '[C13]': text\n  '[C14]':\n    foreign_key: '[T4].[C17]'\n    type: text\n'[T4]':\n  '[C15]': text\n  '[C16]': text\n  '[C17]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[date received]",
                "[C1]": "[callcenterlogs].[date received]",
                "[T1].[C2]": "[callcenterlogs].[outcome]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[T1].[C3]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[priority]",
                "[T1].[C4]": "[callcenterlogs].[server]",
                "[C4]": "[callcenterlogs].[server]",
                "[T1].[C5]": "[callcenterlogs].[type]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[age]",
                "[C6]": "[client].[age]",
                "[T2].[C7]": "[client].[city]",
                "[C7]": "[client].[city]",
                "[T2].[C8]": "[client].[email]",
                "[C8]": "[client].[email]",
                "[T2].[C9]": "[client].[phone]",
                "[C9]": "[client].[phone]",
                "[T2].[C10]": "[client].[year]",
                "[C10]": "[client].[year]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[city]",
                "[C11]": "[district].[city]",
                "[T3].[C12]": "[district].[district_id]",
                "[C12]": "[district].[district_id]",
                "[T3].[C13]": "[district].[division]",
                "[C13]": "[district].[division]",
                "[T3].[C14]": "[district].[state_abbrev]",
                "[C14]": "[district].[state_abbrev]",
                "[T4]": "[state]",
                "[T4].[C15]": "[state].[region]",
                "[C15]": "[state].[region]",
                "[T4].[C16]": "[state].[state]",
                "[C16]": "[state].[state]",
                "[T4].[C17]": "[state].[statecode]",
                "[C17]": "[state].[statecode]"
            },
            "question": "Give me the full [C10], [C8] and [C9] number of the youngest client in [V1] . full [C10] = year, month, day; youngest refers to max(year, month, day); in [V1] refers to city = '[V1]'; [V1] is a value of the column [C7]",
            "to_value": {
                "[V1]": "Indianapolis"
            },
            "masked": 5,
            "masked_terms": [
                "Indianapolis",
                "birthdate",
                "email",
                "phone",
                "Indianapolis"
            ],
            "sql": "SELECT [T2].[C10], [T2].[C8], [T2].[C9] FROM [T2] WHERE [T2].[C7] = '[V1]' AND ([T2].[C10], [T2].[C8], [T2].[C9]) = (SELECT MAX([T2].[C10]), MAX([T2].[C8]), MAX([T2].[C9]) FROM [T2] WHERE [T2].[C7] = '[V1]')",
            "repaired_sql": "SELECT [C10], [C8], [C9] FROM [T2] WHERE [C7] = '[V1]' ORDER BY [C10] DESC, [C8] DESC, [C9] DESC LIMIT 1;"
        },
        "values": [
            "Indianapolis"
        ],
        "value_links": {
            "Indianapolis": "[client].[city]"
        },
        "filtered_value_links": {
            "Indianapolis": "[client].[city]"
        },
        "schema_links": {
            "birthdate": "COLUMN:[client].[year]",
            "email": "COLUMN:[client].[email]",
            "phone": "COLUMN:[client].[phone]",
            "Indianapolis": "COLUMN:[client].[city]"
        },
        "filtered_schema_links": {
            "birthdate": "COLUMN:[client].[year]",
            "email": "COLUMN:[client].[email]",
            "phone": "COLUMN:[client].[phone]",
            "Indianapolis": "COLUMN:[client].[city]"
        },
        "attack": "Give me the full birth date, first name and last name of the youngest client in Paris. Full birth date = year, month, day; youngest refers to max(year, month, day); in Paris refers to city = 'Paris'. Paris is a value of the column city."
    },
    {
        "db_id": "retail_complains",
        "question": "What is the oldest age of male clients? oldest age refers to max(age); male refers to sex = 'Male'",
        "evidence": "oldest age refers to max(age); male refers to sex = 'Male'",
        "SQL": "SELECT MAX(age) FROM client WHERE sex = 'Male'",
        "query": "SELECT MAX(age) FROM client WHERE sex = 'Male'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "oldest",
            "age",
            "of",
            "male",
            "clients",
            "?",
            "oldest",
            "age",
            "refers",
            "to",
            "max(age)",
            ";",
            "male",
            "refers",
            "to",
            "sex",
            "=",
            "'Male'"
        ],
        "tc_original": [
            "client.sex",
            "client.age",
            "client.middle",
            "client.day",
            "client.month",
            "client.*",
            "callcenterlogs.priority",
            "callcenterlogs.type",
            "callcenterlogs.outcome",
            "callcenterlogs.server",
            "callcenterlogs.date received",
            "callcenterlogs.*",
            "reviews.date",
            "reviews.stars",
            "reviews.reviews",
            "reviews.product",
            "reviews.district_id",
            "reviews.*",
            "state.state",
            "state.region",
            "state.statecode",
            "state.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[client]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[age]",
            "COLUMN:[client].[middle]",
            "COLUMN:[client].[day]",
            "COLUMN:[client].[month]",
            "COLUMN:[client].[*]",
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[type]",
            "COLUMN:[callcenterlogs].[outcome]",
            "COLUMN:[callcenterlogs].[server]",
            "COLUMN:[callcenterlogs].[date received]",
            "COLUMN:[callcenterlogs].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]",
            "TABLE:[state]",
            "COLUMN:[state].[state]",
            "COLUMN:[state].[region]",
            "COLUMN:[state].[statecode]",
            "COLUMN:[state].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[date received]': date\n  '[outcome]': text\n  '[priority]': integer\n  '[server]': text\n  '[type]': text\n'[client]':\n  '[age]': integer\n  '[day]': integer\n  '[middle]': text\n  '[month]': integer\n  '[sex]': text\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n'[state]':\n  '[region]': text\n  '[state]': text\n  '[statecode]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "oldest age": "COLUMN:[client].[age]",
            "male": "VALUE:[client].[sex]",
            "clients": "TABLE:[client]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[date received]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[C3]": "[callcenterlogs].[priority]",
                "[C4]": "[callcenterlogs].[server]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[C6]": "[client].[age]",
                "[C7]": "[client].[day]",
                "[C8]": "[client].[middle]",
                "[C9]": "[client].[month]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[reviews]",
                "[C12]": "[reviews].[date]",
                "[C13]": "[reviews].[district_id]",
                "[C14]": "[reviews].[product]",
                "[C15]": "[reviews].[reviews]",
                "[C16]": "[reviews].[stars]",
                "[T5]": "[state]",
                "[C17]": "[state].[region]",
                "[C18]": "[state].[state]",
                "[C19]": "[state].[statecode]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[date received]": "[C1]",
                "[callcenterlogs].[outcome]": "[C2]",
                "[callcenterlogs].[priority]": "[C3]",
                "[callcenterlogs].[server]": "[C4]",
                "[callcenterlogs].[type]": "[C5]",
                "[client]": "[T2]",
                "[client].[age]": "[C6]",
                "[client].[day]": "[C7]",
                "[client].[middle]": "[C8]",
                "[client].[month]": "[C9]",
                "[client].[sex]": "[C10]",
                "[district]": "[T3]",
                "[district].[district_id]": "[C11]",
                "[reviews]": "[T4]",
                "[reviews].[date]": "[C12]",
                "[reviews].[district_id]": "[C13]",
                "[reviews].[product]": "[C14]",
                "[reviews].[reviews]": "[C15]",
                "[reviews].[stars]": "[C16]",
                "[state]": "[T5]",
                "[state].[region]": "[C17]",
                "[state].[state]": "[C18]",
                "[state].[statecode]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': date\n  '[C2]': text\n  '[C3]': integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]': integer\n  '[C8]': text\n  '[C9]': integer\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C12]':\n    primary_key: true\n    type: date\n  '[C13]':\n    foreign_key: '[T3].[C11]'\n    type: integer\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n'[T5]':\n  '[C17]': text\n  '[C18]': text\n  '[C19]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[date received]",
                "[C1]": "[callcenterlogs].[date received]",
                "[T1].[C2]": "[callcenterlogs].[outcome]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[T1].[C3]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[priority]",
                "[T1].[C4]": "[callcenterlogs].[server]",
                "[C4]": "[callcenterlogs].[server]",
                "[T1].[C5]": "[callcenterlogs].[type]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[age]",
                "[C6]": "[client].[age]",
                "[T2].[C7]": "[client].[day]",
                "[C7]": "[client].[day]",
                "[T2].[C8]": "[client].[middle]",
                "[C8]": "[client].[middle]",
                "[T2].[C9]": "[client].[month]",
                "[C9]": "[client].[month]",
                "[T2].[C10]": "[client].[sex]",
                "[C10]": "[client].[sex]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[district_id]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[reviews]",
                "[T4].[C12]": "[reviews].[date]",
                "[C12]": "[reviews].[date]",
                "[T4].[C13]": "[reviews].[district_id]",
                "[C13]": "[reviews].[district_id]",
                "[T4].[C14]": "[reviews].[product]",
                "[C14]": "[reviews].[product]",
                "[T4].[C15]": "[reviews].[reviews]",
                "[C15]": "[reviews].[reviews]",
                "[T4].[C16]": "[reviews].[stars]",
                "[C16]": "[reviews].[stars]",
                "[T5]": "[state]",
                "[T5].[C17]": "[state].[region]",
                "[C17]": "[state].[region]",
                "[T5].[C18]": "[state].[state]",
                "[C18]": "[state].[state]",
                "[T5].[C19]": "[state].[statecode]",
                "[C19]": "[state].[statecode]"
            },
            "question": "What is the [C6] of [V1] clients? [C6] refers to max(age); [V1] refers to sex = '[V1]'; [V1] is a value of the column [C10]",
            "to_value": {
                "[V1]": "male"
            },
            "masked": 3,
            "masked_terms": [
                "male",
                "oldest age",
                "male"
            ],
            "sql": "SELECT MAX([T2].[C6]) FROM [T2] WHERE [T2].[C10] = '[V1]'",
            "repaired_sql": "SELECT MAX([C6]) FROM [T2] WHERE [C10] = '[V1]'"
        },
        "values": [
            "male"
        ],
        "value_links": {
            "male": "[client].[sex]"
        },
        "filtered_value_links": {
            "male": "[client].[sex]"
        },
        "schema_links": {
            "oldest age": "COLUMN:[client].[age]",
            "male": "COLUMN:[client].[sex]"
        },
        "filtered_schema_links": {
            "oldest age": "COLUMN:[client].[age]",
            "male": "COLUMN:[client].[sex]"
        },
        "attack": "What is the maximum age of male clients?"
    },
    {
        "db_id": "retail_complains",
        "question": "What is the average age of clients in South Atlantic? in South Atlantic refers to division = 'South Atlantic'; average age refers to avg(age)",
        "evidence": "in South Atlantic refers to division = 'South Atlantic'; average age refers to avg(age)",
        "SQL": "SELECT AVG(T1.age) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.division = 'South Atlantic'",
        "query": "SELECT AVG(T1.age) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.division = 'South Atlantic'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "age",
            "of",
            "clients",
            "in",
            "South",
            "Atlantic",
            "?",
            "in",
            "South",
            "Atlantic",
            "refers",
            "to",
            "division",
            "=",
            "'South",
            "Atlantic'",
            ";",
            "average",
            "age",
            "refers",
            "to",
            "avg(age)"
        ],
        "tc_original": [
            "district.division",
            "district.district_id",
            "district.state_abbrev",
            "district.city",
            "district.*",
            "client.district_id",
            "client.age",
            "client.state",
            "client.client_id",
            "client.sex",
            "client.*",
            "state.state",
            "state.region",
            "state.statecode",
            "state.*",
            "callcenterlogs.priority",
            "callcenterlogs.type",
            "callcenterlogs.outcome",
            "callcenterlogs.server",
            "callcenterlogs.date received",
            "callcenterlogs.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[district]",
            "COLUMN:[district].[division]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[state_abbrev]",
            "COLUMN:[district].[city]",
            "COLUMN:[district].[*]",
            "TABLE:[client]",
            "COLUMN:[client].[district_id]",
            "COLUMN:[client].[age]",
            "COLUMN:[client].[state]",
            "COLUMN:[client].[client_id]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[*]",
            "TABLE:[state]",
            "COLUMN:[state].[state]",
            "COLUMN:[state].[region]",
            "COLUMN:[state].[statecode]",
            "COLUMN:[state].[*]",
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[type]",
            "COLUMN:[callcenterlogs].[outcome]",
            "COLUMN:[callcenterlogs].[server]",
            "COLUMN:[callcenterlogs].[date received]",
            "COLUMN:[callcenterlogs].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[date received]': date\n  '[outcome]': text\n  '[priority]': integer\n  '[server]': text\n  '[type]': text\n'[client]':\n  '[age]': integer\n  '[client_id]':\n    primary_key: true\n    type: text\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[sex]': text\n  '[state]': text\n'[district]':\n  '[city]': text\n  '[district_id]':\n    primary_key: true\n    type: integer\n  '[division]': text\n  '[state_abbrev]':\n    foreign_key: '[state].[statecode]'\n    type: text\n'[state]':\n  '[region]': text\n  '[state]': text\n  '[statecode]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "average age": "COLUMN:[client].[age]",
            "clients": "TABLE:[client]",
            "South Atlantic": "VALUE:[district].[division]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[date received]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[C3]": "[callcenterlogs].[priority]",
                "[C4]": "[callcenterlogs].[server]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[C6]": "[client].[age]",
                "[C7]": "[client].[client_id]",
                "[C8]": "[client].[district_id]",
                "[C9]": "[client].[sex]",
                "[C10]": "[client].[state]",
                "[T3]": "[district]",
                "[C11]": "[district].[city]",
                "[C12]": "[district].[district_id]",
                "[C13]": "[district].[division]",
                "[C14]": "[district].[state_abbrev]",
                "[T4]": "[state]",
                "[C15]": "[state].[region]",
                "[C16]": "[state].[state]",
                "[C17]": "[state].[statecode]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[date received]": "[C1]",
                "[callcenterlogs].[outcome]": "[C2]",
                "[callcenterlogs].[priority]": "[C3]",
                "[callcenterlogs].[server]": "[C4]",
                "[callcenterlogs].[type]": "[C5]",
                "[client]": "[T2]",
                "[client].[age]": "[C6]",
                "[client].[client_id]": "[C7]",
                "[client].[district_id]": "[C8]",
                "[client].[sex]": "[C9]",
                "[client].[state]": "[C10]",
                "[district]": "[T3]",
                "[district].[city]": "[C11]",
                "[district].[district_id]": "[C12]",
                "[district].[division]": "[C13]",
                "[district].[state_abbrev]": "[C14]",
                "[state]": "[T4]",
                "[state].[region]": "[C15]",
                "[state].[state]": "[C16]",
                "[state].[statecode]": "[C17]"
            },
            "schema": "'[T1]':\n  '[C1]': date\n  '[C2]': text\n  '[C3]': integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]':\n    primary_key: true\n    type: text\n  '[C8]':\n    foreign_key: '[T3].[C12]'\n    type: integer\n  '[C9]': text\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: integer\n  '[C13]': text\n  '[C14]':\n    foreign_key: '[T4].[C17]'\n    type: text\n'[T4]':\n  '[C15]': text\n  '[C16]': text\n  '[C17]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[date received]",
                "[C1]": "[callcenterlogs].[date received]",
                "[T1].[C2]": "[callcenterlogs].[outcome]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[T1].[C3]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[priority]",
                "[T1].[C4]": "[callcenterlogs].[server]",
                "[C4]": "[callcenterlogs].[server]",
                "[T1].[C5]": "[callcenterlogs].[type]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[age]",
                "[C6]": "[client].[age]",
                "[T2].[C7]": "[client].[client_id]",
                "[C7]": "[client].[client_id]",
                "[T2].[C8]": "[client].[district_id]",
                "[C8]": "[client].[district_id]",
                "[T2].[C9]": "[client].[sex]",
                "[C9]": "[client].[sex]",
                "[T2].[C10]": "[client].[state]",
                "[C10]": "[client].[state]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[city]",
                "[C11]": "[district].[city]",
                "[T3].[C12]": "[district].[district_id]",
                "[C12]": "[district].[district_id]",
                "[T3].[C13]": "[district].[division]",
                "[C13]": "[district].[division]",
                "[T3].[C14]": "[district].[state_abbrev]",
                "[C14]": "[district].[state_abbrev]",
                "[T4]": "[state]",
                "[T4].[C15]": "[state].[region]",
                "[C15]": "[state].[region]",
                "[T4].[C16]": "[state].[state]",
                "[C16]": "[state].[state]",
                "[T4].[C17]": "[state].[statecode]",
                "[C17]": "[state].[statecode]"
            },
            "question": "What is the [C6] of [T2] in [V1]? in [V1] refers to division = '[V1]'; [C6] refers to avg(age); [V1] is a value of the column [C13]",
            "to_value": {
                "[V1]": "South Atlantic"
            },
            "masked": 4,
            "masked_terms": [
                "South Atlantic",
                "average age",
                "clients",
                "South Atlantic"
            ],
            "sql": "SELECT AVG([T2].[C6]) FROM [T2] JOIN [T3] ON [T2].[C8] = [T3].[C12] WHERE [T3].[C13] = '[V1]'",
            "repaired_sql": "SELECT AVG([T2].[C6]) FROM [T2] JOIN [T3] ON [T2].[C8] = [T3].[C12] WHERE [T3].[C13] = '[V1]'"
        },
        "values": [
            "South Atlantic"
        ],
        "value_links": {
            "South Atlantic": "[district].[division]"
        },
        "filtered_value_links": {
            "South Atlantic": "[district].[division]"
        },
        "schema_links": {
            "average age": "COLUMN:[client].[age]",
            "clients": "TABLE:[client]",
            "South Atlantic": "COLUMN:[district].[division]"
        },
        "filtered_schema_links": {
            "average age": "COLUMN:[client].[age]",
            "clients": "TABLE:[client]",
            "South Atlantic": "COLUMN:[district].[division]"
        },
        "attack": "What is the average age of employees in sales?"
    },
    {
        "db_id": "retail_complains",
        "question": "Which state has the most cities? state refers to state_abbrev; most cities refers to max(count(city))",
        "evidence": "state refers to state_abbrev; most cities refers to max(count(city))",
        "SQL": "SELECT state_abbrev FROM district GROUP BY state_abbrev ORDER BY COUNT(city) DESC LIMIT 1",
        "query": "SELECT state_abbrev FROM district GROUP BY state_abbrev ORDER BY COUNT(city) DESC LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "Which",
            "state",
            "has",
            "the",
            "most",
            "cities",
            "?",
            "state",
            "refers",
            "to",
            "state_abbrev",
            ";",
            "most",
            "cities",
            "refers",
            "to",
            "max(count(city))"
        ],
        "tc_original": [
            "state.state",
            "state.statecode",
            "state.region",
            "state.*",
            "district.state_abbrev",
            "district.city",
            "district.district_id",
            "district.division",
            "district.*",
            "reviews.date",
            "reviews.stars",
            "reviews.reviews",
            "reviews.product",
            "reviews.district_id",
            "reviews.*",
            "callcenterlogs.priority",
            "callcenterlogs.type",
            "callcenterlogs.outcome",
            "callcenterlogs.server",
            "callcenterlogs.date received",
            "callcenterlogs.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[state]",
            "COLUMN:[state].[state]",
            "COLUMN:[state].[statecode]",
            "COLUMN:[state].[region]",
            "COLUMN:[state].[*]",
            "TABLE:[district]",
            "COLUMN:[district].[state_abbrev]",
            "COLUMN:[district].[city]",
            "COLUMN:[district].[district_id]",
            "COLUMN:[district].[division]",
            "COLUMN:[district].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]",
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[type]",
            "COLUMN:[callcenterlogs].[outcome]",
            "COLUMN:[callcenterlogs].[server]",
            "COLUMN:[callcenterlogs].[date received]",
            "COLUMN:[callcenterlogs].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[date received]': date\n  '[outcome]': text\n  '[priority]': integer\n  '[server]': text\n  '[type]': text\n'[district]':\n  '[city]': text\n  '[district_id]':\n    primary_key: true\n    type: integer\n  '[division]': text\n  '[state_abbrev]':\n    foreign_key: '[state].[statecode]'\n    type: text\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n'[state]':\n  '[region]': text\n  '[state]': text\n  '[statecode]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "state": "COLUMN:[district].[state_abbrev]",
            "cities": "COLUMN:[district].[city]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[date received]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[C3]": "[callcenterlogs].[priority]",
                "[C4]": "[callcenterlogs].[server]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[district]",
                "[C6]": "[district].[city]",
                "[C7]": "[district].[district_id]",
                "[C8]": "[district].[division]",
                "[C9]": "[district].[state_abbrev]",
                "[T3]": "[reviews]",
                "[C10]": "[reviews].[date]",
                "[C11]": "[reviews].[district_id]",
                "[C12]": "[reviews].[product]",
                "[C13]": "[reviews].[reviews]",
                "[C14]": "[reviews].[stars]",
                "[T4]": "[state]",
                "[C15]": "[state].[region]",
                "[C16]": "[state].[state]",
                "[C17]": "[state].[statecode]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[date received]": "[C1]",
                "[callcenterlogs].[outcome]": "[C2]",
                "[callcenterlogs].[priority]": "[C3]",
                "[callcenterlogs].[server]": "[C4]",
                "[callcenterlogs].[type]": "[C5]",
                "[district]": "[T2]",
                "[district].[city]": "[C6]",
                "[district].[district_id]": "[C7]",
                "[district].[division]": "[C8]",
                "[district].[state_abbrev]": "[C9]",
                "[reviews]": "[T3]",
                "[reviews].[date]": "[C10]",
                "[reviews].[district_id]": "[C11]",
                "[reviews].[product]": "[C12]",
                "[reviews].[reviews]": "[C13]",
                "[reviews].[stars]": "[C14]",
                "[state]": "[T4]",
                "[state].[region]": "[C15]",
                "[state].[state]": "[C16]",
                "[state].[statecode]": "[C17]"
            },
            "schema": "'[T1]':\n  '[C1]': date\n  '[C2]': text\n  '[C3]': integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C6]': text\n  '[C7]':\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]':\n    foreign_key: '[T4].[C17]'\n    type: text\n'[T3]':\n  '[C10]':\n    primary_key: true\n    type: date\n  '[C11]':\n    foreign_key: '[T2].[C7]'\n    type: integer\n  '[C12]': text\n  '[C13]': text\n  '[C14]': integer\n'[T4]':\n  '[C15]': text\n  '[C16]': text\n  '[C17]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[date received]",
                "[C1]": "[callcenterlogs].[date received]",
                "[T1].[C2]": "[callcenterlogs].[outcome]",
                "[C2]": "[callcenterlogs].[outcome]",
                "[T1].[C3]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[priority]",
                "[T1].[C4]": "[callcenterlogs].[server]",
                "[C4]": "[callcenterlogs].[server]",
                "[T1].[C5]": "[callcenterlogs].[type]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[district]",
                "[T2].[C6]": "[district].[city]",
                "[C6]": "[district].[city]",
                "[T2].[C7]": "[district].[district_id]",
                "[C7]": "[district].[district_id]",
                "[T2].[C8]": "[district].[division]",
                "[C8]": "[district].[division]",
                "[T2].[C9]": "[district].[state_abbrev]",
                "[C9]": "[district].[state_abbrev]",
                "[T3]": "[reviews]",
                "[T3].[C10]": "[reviews].[date]",
                "[C10]": "[reviews].[date]",
                "[T3].[C11]": "[reviews].[district_id]",
                "[C11]": "[reviews].[district_id]",
                "[T3].[C12]": "[reviews].[product]",
                "[C12]": "[reviews].[product]",
                "[T3].[C13]": "[reviews].[reviews]",
                "[C13]": "[reviews].[reviews]",
                "[T3].[C14]": "[reviews].[stars]",
                "[C14]": "[reviews].[stars]",
                "[T4]": "[state]",
                "[T4].[C15]": "[state].[region]",
                "[C15]": "[state].[region]",
                "[T4].[C16]": "[state].[state]",
                "[C16]": "[state].[state]",
                "[T4].[C17]": "[state].[statecode]",
                "[C17]": "[state].[statecode]"
            },
            "question": "Which [T4] has the most [C6]? [T4] refers to [V1]; most [C6] refers to max(count(city)); [V1] is a value of the column [C17]",
            "to_value": {
                "[V1]": "state_abbrev"
            },
            "masked": 4,
            "masked_terms": [
                "state_abbrev",
                "state",
                "cities",
                "state_abbrev"
            ],
            "sql": "SELECT [T4].[C17] FROM [T2] INNER JOIN [T4] ON [T2].[C9] = [T4].[C17] GROUP BY [T4].[C17] ORDER BY COUNT([T2].[C6]) DESC LIMIT 1",
            "repaired_sql": "SELECT [T4].[C15], COUNT([T2].[C6]) AS city_count FROM [T4] JOIN [T2] ON [T4].[C17] = [T2].[C9] WHERE [T4].[C17] = '[V1]' GROUP BY [T4].[C15] ORDER BY city_count DESC LIMIT 1;"
        },
        "values": [
            "state_abbrev"
        ],
        "value_links": {
            "state_abbrev": "[state].[statecode]"
        },
        "filtered_value_links": {
            "state_abbrev": "[state].[statecode]"
        },
        "schema_links": {
            "state": "TABLE:[state]",
            "cities": "COLUMN:[district].[city]",
            "state_abbrev": "COLUMN:[district].[state_abbrev]"
        },
        "filtered_schema_links": {
            "state": "TABLE:[state]",
            "cities": "COLUMN:[district].[city]",
            "state_abbrev": "COLUMN:[district].[state_abbrev]"
        },
        "attack": "Which country has the most city? Country refers to USA; most city refers to max(count(city)); USA is a value of the column country_id"
    },
    {
        "db_id": "retail_complains",
        "question": "List the products involved in the complaints received on March 2017 via TOVA server. on March 2017 refers to Date received LIKE '%03%' AND Date received LIKE '2017%'",
        "evidence": "on March 2017 refers to Date received LIKE '%03%' AND Date received LIKE '2017%'",
        "SQL": "SELECT DISTINCT T2.Product FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T1.server = 'TOVA' AND T2.`Date received` LIKE '2017-03%'",
        "query": "SELECT DISTINCT T2.Product FROM callcenterlogs AS T1 INNER JOIN events AS T2 ON T1.`Complaint ID` = T2.`Complaint ID` WHERE T1.server = 'TOVA' AND T2.`Date received` LIKE '2017-03%'",
        "evidence_added": true,
        "question_toks": [
            "List",
            "the",
            "products",
            "involved",
            "in",
            "the",
            "complaints",
            "received",
            "on",
            "March",
            "2017",
            "via",
            "TOVA",
            "server",
            ".",
            "on",
            "March",
            "2017",
            "refers",
            "to",
            "Date",
            "received",
            "LIKE",
            "'%03%'",
            "AND",
            "Date",
            "received",
            "LIKE",
            "'2017%'"
        ],
        "tc_original": [
            "events.date received",
            "events.product",
            "events.complaint id",
            "events.sub-product",
            "events.consumer complaint narrative",
            "events.*",
            "callcenterlogs.server",
            "callcenterlogs.date received",
            "callcenterlogs.complaint id",
            "callcenterlogs.priority",
            "callcenterlogs.type",
            "callcenterlogs.*",
            "reviews.date",
            "reviews.stars",
            "reviews.reviews",
            "reviews.product",
            "reviews.district_id",
            "reviews.*",
            "client.sex",
            "client.day",
            "client.month",
            "client.year",
            "client.age",
            "client.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[events]",
            "COLUMN:[events].[date received]",
            "COLUMN:[events].[product]",
            "COLUMN:[events].[complaint id]",
            "COLUMN:[events].[sub-product]",
            "COLUMN:[events].[consumer complaint narrative]",
            "COLUMN:[events].[*]",
            "TABLE:[callcenterlogs]",
            "COLUMN:[callcenterlogs].[server]",
            "COLUMN:[callcenterlogs].[date received]",
            "COLUMN:[callcenterlogs].[complaint id]",
            "COLUMN:[callcenterlogs].[priority]",
            "COLUMN:[callcenterlogs].[type]",
            "COLUMN:[callcenterlogs].[*]",
            "TABLE:[reviews]",
            "COLUMN:[reviews].[date]",
            "COLUMN:[reviews].[stars]",
            "COLUMN:[reviews].[reviews]",
            "COLUMN:[reviews].[product]",
            "COLUMN:[reviews].[district_id]",
            "COLUMN:[reviews].[*]",
            "TABLE:[client]",
            "COLUMN:[client].[sex]",
            "COLUMN:[client].[day]",
            "COLUMN:[client].[month]",
            "COLUMN:[client].[year]",
            "COLUMN:[client].[age]",
            "COLUMN:[client].[*]"
        ],
        "schema": "'[callcenterlogs]':\n  '[complaint id]':\n    primary_key: true\n    type: text\n  '[date received]': date\n  '[priority]': integer\n  '[server]': text\n  '[type]': text\n'[client]':\n  '[age]': integer\n  '[day]': integer\n  '[month]': integer\n  '[sex]': text\n  '[year]': integer\n'[district]':\n  '[district_id]':\n    primary_key: true\n    type: integer\n'[events]':\n  '[complaint id]':\n    foreign_key: '[callcenterlogs].[complaint id]'\n    primary_key: true\n    type: text\n  '[consumer complaint narrative]': text\n  '[date received]': date\n  '[product]': text\n  '[sub-product]': text\n'[reviews]':\n  '[date]':\n    primary_key: true\n    type: date\n  '[district_id]':\n    foreign_key: '[district].[district_id]'\n    type: integer\n  '[product]': text\n  '[reviews]': text\n  '[stars]': integer\n",
        "gold_links": {
            "products": "COLUMN:[events].[product]",
            "complaints": "TABLE:[callcenterlogs]",
            "received": "COLUMN:[callcenterlogs].[date received]",
            "March 2017": "VALUE:[events].[date received]",
            "TOVA": "VALUE:[callcenterlogs].[server]",
            "server": "COLUMN:[callcenterlogs].[server]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[callcenterlogs]",
                "[C1]": "[callcenterlogs].[complaint id]",
                "[C2]": "[callcenterlogs].[date received]",
                "[C3]": "[callcenterlogs].[priority]",
                "[C4]": "[callcenterlogs].[server]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[C6]": "[client].[age]",
                "[C7]": "[client].[day]",
                "[C8]": "[client].[month]",
                "[C9]": "[client].[sex]",
                "[C10]": "[client].[year]",
                "[T3]": "[district]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[events]",
                "[C12]": "[events].[complaint id]",
                "[C13]": "[events].[consumer complaint narrative]",
                "[C14]": "[events].[date received]",
                "[C15]": "[events].[product]",
                "[C16]": "[events].[sub-product]",
                "[T5]": "[reviews]",
                "[C17]": "[reviews].[date]",
                "[C18]": "[reviews].[district_id]",
                "[C19]": "[reviews].[product]",
                "[C20]": "[reviews].[reviews]",
                "[C21]": "[reviews].[stars]"
            },
            "to_symbol": {
                "[callcenterlogs]": "[T1]",
                "[callcenterlogs].[complaint id]": "[C1]",
                "[callcenterlogs].[date received]": "[C2]",
                "[callcenterlogs].[priority]": "[C3]",
                "[callcenterlogs].[server]": "[C4]",
                "[callcenterlogs].[type]": "[C5]",
                "[client]": "[T2]",
                "[client].[age]": "[C6]",
                "[client].[day]": "[C7]",
                "[client].[month]": "[C8]",
                "[client].[sex]": "[C9]",
                "[client].[year]": "[C10]",
                "[district]": "[T3]",
                "[district].[district_id]": "[C11]",
                "[events]": "[T4]",
                "[events].[complaint id]": "[C12]",
                "[events].[consumer complaint narrative]": "[C13]",
                "[events].[date received]": "[C14]",
                "[events].[product]": "[C15]",
                "[events].[sub-product]": "[C16]",
                "[reviews]": "[T5]",
                "[reviews].[date]": "[C17]",
                "[reviews].[district_id]": "[C18]",
                "[reviews].[product]": "[C19]",
                "[reviews].[reviews]": "[C20]",
                "[reviews].[stars]": "[C21]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: text\n  '[C2]': date\n  '[C3]': integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': integer\n  '[C6]': integer\n  '[C7]': integer\n  '[C8]': integer\n  '[C9]': text\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C12]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: text\n  '[C13]': text\n  '[C14]': date\n  '[C15]': text\n  '[C16]': text\n'[T5]':\n  '[C17]':\n    primary_key: true\n    type: date\n  '[C18]':\n    foreign_key: '[T3].[C11]'\n    type: integer\n  '[C19]': text\n  '[C20]': text\n  '[C21]': integer\n",
            "reverse_dict": {
                "[T1]": "[callcenterlogs]",
                "[T1].[C1]": "[callcenterlogs].[complaint id]",
                "[C1]": "[callcenterlogs].[complaint id]",
                "[T1].[C2]": "[callcenterlogs].[date received]",
                "[C2]": "[callcenterlogs].[date received]",
                "[T1].[C3]": "[callcenterlogs].[priority]",
                "[C3]": "[callcenterlogs].[priority]",
                "[T1].[C4]": "[callcenterlogs].[server]",
                "[C4]": "[callcenterlogs].[server]",
                "[T1].[C5]": "[callcenterlogs].[type]",
                "[C5]": "[callcenterlogs].[type]",
                "[T2]": "[client]",
                "[T2].[C6]": "[client].[age]",
                "[C6]": "[client].[age]",
                "[T2].[C7]": "[client].[day]",
                "[C7]": "[client].[day]",
                "[T2].[C8]": "[client].[month]",
                "[C8]": "[client].[month]",
                "[T2].[C9]": "[client].[sex]",
                "[C9]": "[client].[sex]",
                "[T2].[C10]": "[client].[year]",
                "[C10]": "[client].[year]",
                "[T3]": "[district]",
                "[T3].[C11]": "[district].[district_id]",
                "[C11]": "[district].[district_id]",
                "[T4]": "[events]",
                "[T4].[C12]": "[events].[complaint id]",
                "[C12]": "[events].[complaint id]",
                "[T4].[C13]": "[events].[consumer complaint narrative]",
                "[C13]": "[events].[consumer complaint narrative]",
                "[T4].[C14]": "[events].[date received]",
                "[C14]": "[events].[date received]",
                "[T4].[C15]": "[events].[product]",
                "[C15]": "[events].[product]",
                "[T4].[C16]": "[events].[sub-product]",
                "[C16]": "[events].[sub-product]",
                "[T5]": "[reviews]",
                "[T5].[C17]": "[reviews].[date]",
                "[C17]": "[reviews].[date]",
                "[T5].[C18]": "[reviews].[district_id]",
                "[C18]": "[reviews].[district_id]",
                "[T5].[C19]": "[reviews].[product]",
                "[C19]": "[reviews].[product]",
                "[T5].[C20]": "[reviews].[reviews]",
                "[C20]": "[reviews].[reviews]",
                "[T5].[C21]": "[reviews].[stars]",
                "[C21]": "[reviews].[stars]"
            },
            "question": "List the [C15] involved in the [T4] [C14] on [C14] [C14] via [V1] server. on [C14] [C14] refers to Date [C14] LIKE '%03%' AND Date [C14] LIKE '[C14]%'; [V1] is a value of the column [C4]; [V2] is a value of the column [C14]; [V3] is a value of the column [C14]",
            "to_value": {
                "[V1]": "TOVA",
                "[V2]": "03%",
                "[V3]": "2017%"
            },
            "masked": 9,
            "masked_terms": [
                "TOVA",
                "03%",
                "2017%",
                "products",
                "complaints",
                "received",
                "TOVA",
                "March",
                "2017"
            ],
            "sql": "SELECT [T4].[C15] FROM [T4] WHERE [T4].[C14] LIKE '%03%' AND [T4].[C14] LIKE '[C14]%' AND [T4].[C16] = 'server'",
            "repaired_sql": "SELECT [T4].[C15] FROM [T4] JOIN [T1] ON [T4].[C12] = [T1].[C1] WHERE [T1].[C4] = '[V1]' AND [T4].[C14] LIKE '%03%' AND [T4].[C14] LIKE '[V2]%';"
        },
        "values": [
            "TOVA",
            "03%",
            "2017%"
        ],
        "value_links": {
            "TOVA": "[callcenterlogs].[server]",
            "03%": "[events].[date received]",
            "2017%": "[events].[date received]"
        },
        "filtered_value_links": {
            "TOVA": "[callcenterlogs].[server]",
            "03%": "[events].[date received]",
            "2017%": "[events].[date received]"
        },
        "schema_links": {
            "products": "COLUMN:[events].[product]",
            "complaints": "TABLE:[events]",
            "received": "COLUMN:[events].[date received]",
            "TOVA": "COLUMN:[callcenterlogs].[server]",
            "March": "COLUMN:[events].[date received]",
            "2017": "COLUMN:[events].[date received]"
        },
        "filtered_schema_links": {
            "products": "COLUMN:[events].[product]",
            "complaints": "TABLE:[events]",
            "received": "COLUMN:[events].[date received]",
            "TOVA": "COLUMN:[callcenterlogs].[server]",
            "March": "COLUMN:[events].[date received]",
            "2017": "COLUMN:[events].[date received]"
        },
        "attack": "List the participant involved in the events date on date date via alpha server. on date date refers to Date date LIKE '%03%' AND Date date LIKE 'date%'; alpha is a value of the column server; date is a value of the column date; date is a value of the column date"
    },
    {
        "db_id": "movies_4",
        "question": "Please list the names of the production company of the movie \"Four Rooms\". names of the production company refers to movie_company; movie \"Four Rooms\" refers to title = 'Four Rooms'",
        "evidence": "names of the production company refers to movie_company; movie \"Four Rooms\" refers to title = 'Four Rooms'",
        "SQL": "SELECT T1.company_name FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T3.title = 'Four Rooms'",
        "query": "SELECT T1.company_name FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T3.title = 'Four Rooms'",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "list",
            "the",
            "names",
            "of",
            "the",
            "production",
            "company",
            "of",
            "the",
            "movie",
            "\"Four",
            "Rooms\"",
            ".",
            "names",
            "of",
            "the",
            "production",
            "company",
            "refers",
            "to",
            "movie_company",
            ";",
            "movie",
            "\"Four",
            "Rooms\"",
            "refers",
            "to",
            "title",
            "=",
            "'Four",
            "Rooms'"
        ],
        "tc_original": [
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "production_company.company_name",
            "production_company.company_id",
            "production_company.*",
            "movie_company.company_id",
            "movie_company.movie_id",
            "movie_company.*",
            "movie_crew.job",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[production_company]",
            "COLUMN:[production_company].[company_name]",
            "COLUMN:[production_company].[company_id]",
            "COLUMN:[production_company].[*]",
            "TABLE:[movie_company]",
            "COLUMN:[movie_company].[company_id]",
            "COLUMN:[movie_company].[movie_id]",
            "COLUMN:[movie_company].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_company]':\n  '[company_id]': integer\n  '[movie_id]': integer\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n'[production_company]':\n  '[company_id]':\n    primary_key: true\n    type: integer\n  '[company_name]': text\n",
        "gold_links": {
            "names": "COLUMN:[production_company].[company_name]",
            "production company": "TABLE:[production_company]",
            "movie": "TABLE:[movie]",
            "Four Rooms": "VALUE:[movie].[title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[movie]",
                "[C2]": "[movie].[budget]",
                "[C3]": "[movie].[homepage]",
                "[C4]": "[movie].[movie_id]",
                "[C5]": "[movie].[overview]",
                "[C6]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[C7]": "[movie_company].[company_id]",
                "[C8]": "[movie_company].[movie_id]",
                "[T4]": "[movie_crew]",
                "[C9]": "[movie_crew].[department_id]",
                "[C10]": "[movie_crew].[job]",
                "[C11]": "[movie_crew].[movie_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[C13]": "[person].[person_id]",
                "[T6]": "[production_company]",
                "[C14]": "[production_company].[company_id]",
                "[C15]": "[production_company].[company_name]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[movie]": "[T2]",
                "[movie].[budget]": "[C2]",
                "[movie].[homepage]": "[C3]",
                "[movie].[movie_id]": "[C4]",
                "[movie].[overview]": "[C5]",
                "[movie].[title]": "[C6]",
                "[movie_company]": "[T3]",
                "[movie_company].[company_id]": "[C7]",
                "[movie_company].[movie_id]": "[C8]",
                "[movie_crew]": "[T4]",
                "[movie_crew].[department_id]": "[C9]",
                "[movie_crew].[job]": "[C10]",
                "[movie_crew].[movie_id]": "[C11]",
                "[movie_crew].[person_id]": "[C12]",
                "[person]": "[T5]",
                "[person].[person_id]": "[C13]",
                "[production_company]": "[T6]",
                "[production_company].[company_id]": "[C14]",
                "[production_company].[company_name]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]': integer\n  '[C3]': text\n  '[C4]':\n    primary_key: true\n    type: integer\n  '[C5]': text\n  '[C6]': text\n'[T3]':\n  '[C7]': integer\n  '[C8]': integer\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    foreign_key: '[T2].[C4]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T5].[C13]'\n    type: integer\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T5]':\n  '[C13]':\n    primary_key: true\n    type: integer\n'[T6]':\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[movie]",
                "[T2].[C2]": "[movie].[budget]",
                "[C2]": "[movie].[budget]",
                "[T2].[C3]": "[movie].[homepage]",
                "[C3]": "[movie].[homepage]",
                "[T2].[C4]": "[movie].[movie_id]",
                "[C4]": "[movie].[movie_id]",
                "[T2].[C5]": "[movie].[overview]",
                "[C5]": "[movie].[overview]",
                "[T2].[C6]": "[movie].[title]",
                "[C6]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[T3].[C7]": "[movie_company].[company_id]",
                "[C7]": "[movie_company].[company_id]",
                "[T3].[C8]": "[movie_company].[movie_id]",
                "[C8]": "[movie_company].[movie_id]",
                "[T4]": "[movie_crew]",
                "[T4].[C9]": "[movie_crew].[department_id]",
                "[C9]": "[movie_crew].[department_id]",
                "[T4].[C10]": "[movie_crew].[job]",
                "[C10]": "[movie_crew].[job]",
                "[T4].[C11]": "[movie_crew].[movie_id]",
                "[C11]": "[movie_crew].[movie_id]",
                "[T4].[C12]": "[movie_crew].[person_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[T5].[C13]": "[person].[person_id]",
                "[C13]": "[person].[person_id]",
                "[T6]": "[production_company]",
                "[T6].[C14]": "[production_company].[company_id]",
                "[C14]": "[production_company].[company_id]",
                "[T6].[C15]": "[production_company].[company_name]",
                "[C15]": "[production_company].[company_name]"
            },
            "question": "Please list the names of the [T6] of the [T2] \"[V1]\". names of the [T6] refers to movie_company; [T2] \"[V1]\" refers to [C6] = '[V1]'; [V1] is a value of the column [C7]",
            "to_value": {
                "[V1]": "Four Rooms"
            },
            "masked": 5,
            "masked_terms": [
                "Four Rooms",
                "production company",
                "movie",
                "title",
                "Four Rooms"
            ],
            "sql": "SELECT [T6].[C15] FROM [T6] JOIN [T4] ON [T6].[C14] = [T4].[C9] JOIN [T2] ON [T4].[C11] = [T2].[C4] WHERE [T2].[C6] = '[V1]'",
            "repaired_sql": "SELECT DISTINCT [T6].[C15] FROM [T6] JOIN [T4] ON [T6].[C14] = [T4].[C12] JOIN [T2] ON [T4].[C11] = [T2].[C4] WHERE [T2].[C6] = '[V1]';"
        },
        "values": [
            "Four Rooms"
        ],
        "value_links": {
            "Four Rooms": "[movie_company].[company_id]"
        },
        "filtered_value_links": {
            "Four Rooms": "[movie_company].[company_id]"
        },
        "schema_links": {
            "production company": "TABLE:[production_company]",
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "Four Rooms": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "production company": "TABLE:[production_company]",
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "Four Rooms": "COLUMN:[movie].[title]"
        },
        "attack": "Please list the names of the movie_company of the movies \"123\"."
    },
    {
        "db_id": "movies_4",
        "question": "Please list the names of all the crew members of the movie \"Pirates of the Caribbean: At World's End\". names refers to person_name; \"Pirates of the Caribbean: At World's End\" refers to title = 'Pirates of the Caribbean: At World''s End'",
        "evidence": "names refers to person_name; \"Pirates of the Caribbean: At World's End\" refers to title = 'Pirates of the Caribbean: At World''s End'",
        "SQL": "SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title LIKE 'Pirates of the Caribbean: At World%s End'",
        "query": "SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title LIKE 'Pirates of the Caribbean: At World%s End'",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "list",
            "the",
            "names",
            "of",
            "all",
            "the",
            "crew",
            "members",
            "of",
            "the",
            "movie",
            "\"Pirates",
            "of",
            "the",
            "Caribbean",
            ":",
            "At",
            "World's",
            "End\"",
            ".",
            "names",
            "refers",
            "to",
            "person_name",
            ";",
            "\"Pirates",
            "of",
            "the",
            "Caribbean",
            ":",
            "At",
            "World's",
            "End\"",
            "refers",
            "to",
            "title",
            "=",
            "'Pirates",
            "of",
            "the",
            "Caribbean",
            ":",
            "At",
            "World''s",
            "End'"
        ],
        "tc_original": [
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.job",
            "movie_crew.*",
            "person.person_name",
            "person.person_id",
            "person.*",
            "department.department_name",
            "department.department_id",
            "department.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[*]",
            "TABLE:[person]",
            "COLUMN:[person].[person_name]",
            "COLUMN:[person].[person_id]",
            "COLUMN:[person].[*]",
            "TABLE:[department]",
            "COLUMN:[department].[department_name]",
            "COLUMN:[department].[department_id]",
            "COLUMN:[department].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n  '[department_name]': text\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n  '[person_name]': text\n",
        "gold_links": {
            "names": "COLUMN:[person].[person_name]",
            "crew members": "TABLE:[movie_crew]",
            "movie": "TABLE:[movie]",
            "Pirates of the Caribbean: At World's End": "VALUE:[movie].[title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[C2]": "[department].[department_name]",
                "[T2]": "[movie]",
                "[C3]": "[movie].[budget]",
                "[C4]": "[movie].[homepage]",
                "[C5]": "[movie].[movie_id]",
                "[C6]": "[movie].[overview]",
                "[C7]": "[movie].[title]",
                "[T3]": "[movie_crew]",
                "[C8]": "[movie_crew].[department_id]",
                "[C9]": "[movie_crew].[job]",
                "[C10]": "[movie_crew].[movie_id]",
                "[C11]": "[movie_crew].[person_id]",
                "[T4]": "[person]",
                "[C12]": "[person].[person_id]",
                "[C13]": "[person].[person_name]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[department].[department_name]": "[C2]",
                "[movie]": "[T2]",
                "[movie].[budget]": "[C3]",
                "[movie].[homepage]": "[C4]",
                "[movie].[movie_id]": "[C5]",
                "[movie].[overview]": "[C6]",
                "[movie].[title]": "[C7]",
                "[movie_crew]": "[T3]",
                "[movie_crew].[department_id]": "[C8]",
                "[movie_crew].[job]": "[C9]",
                "[movie_crew].[movie_id]": "[C10]",
                "[movie_crew].[person_id]": "[C11]",
                "[person]": "[T4]",
                "[person].[person_id]": "[C12]",
                "[person].[person_name]": "[C13]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n'[T2]':\n  '[C3]': integer\n  '[C4]': text\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]': text\n  '[C7]': text\n'[T3]':\n  '[C10]':\n    foreign_key: '[T2].[C5]'\n    type: integer\n  '[C11]':\n    foreign_key: '[T4].[C12]'\n    type: integer\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C9]': text\n'[T4]':\n  '[C12]':\n    primary_key: true\n    type: integer\n  '[C13]': text\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T1].[C2]": "[department].[department_name]",
                "[C2]": "[department].[department_name]",
                "[T2]": "[movie]",
                "[T2].[C3]": "[movie].[budget]",
                "[C3]": "[movie].[budget]",
                "[T2].[C4]": "[movie].[homepage]",
                "[C4]": "[movie].[homepage]",
                "[T2].[C5]": "[movie].[movie_id]",
                "[C5]": "[movie].[movie_id]",
                "[T2].[C6]": "[movie].[overview]",
                "[C6]": "[movie].[overview]",
                "[T2].[C7]": "[movie].[title]",
                "[C7]": "[movie].[title]",
                "[T3]": "[movie_crew]",
                "[T3].[C8]": "[movie_crew].[department_id]",
                "[C8]": "[movie_crew].[department_id]",
                "[T3].[C9]": "[movie_crew].[job]",
                "[C9]": "[movie_crew].[job]",
                "[T3].[C10]": "[movie_crew].[movie_id]",
                "[C10]": "[movie_crew].[movie_id]",
                "[T3].[C11]": "[movie_crew].[person_id]",
                "[C11]": "[movie_crew].[person_id]",
                "[T4]": "[person]",
                "[T4].[C12]": "[person].[person_id]",
                "[C12]": "[person].[person_id]",
                "[T4].[C13]": "[person].[person_name]",
                "[C13]": "[person].[person_name]"
            },
            "question": "Please list the [C13] of all the [T3] of the [T2] \"[V1]\". [C13] refers to person_name; \"[V1]\" refers to [C7] = 'Pirates of the Caribbean: At World''s End'; [V1] is a value of the column [C7]",
            "to_value": {
                "[V1]": "Pirates of the Caribbean: At World's End"
            },
            "masked": 6,
            "masked_terms": [
                "Pirates of the Caribbean: At World's End",
                "crew members",
                "names",
                "movie",
                "title",
                "Pirates of the Caribbean: At World's End"
            ],
            "sql": "SELECT [T4].[C13] FROM [T3] INNER JOIN [T4] ON [T3].[C11] = [T4].[C12] INNER JOIN [T2] ON [T3].[C10] = [T2].[C5] WHERE [T2].[C7] = 'Pirates of the Caribbean: At World''s End'",
            "repaired_sql": "SELECT [T4].[C13] FROM [T3] JOIN [T2] ON [T3].[C10] = [T2].[C5] JOIN [T4] ON [T3].[C11] = [T4].[C12] WHERE [T2].[C7] = 'Pirates of the Caribbean: At World''s End'"
        },
        "values": [
            "Pirates of the Caribbean: At World's End"
        ],
        "value_links": {
            "Pirates of the Caribbean: At World's End": "[movie].[title]"
        },
        "filtered_value_links": {
            "Pirates of the Caribbean: At World's End": "[movie].[title]"
        },
        "schema_links": {
            "crew members": "TABLE:[movie_crew]",
            "names": "COLUMN:[person].[person_name]",
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "Pirates of the Caribbean: At World's End": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "crew members": "TABLE:[movie_crew]",
            "names": "COLUMN:[person].[person_name]",
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "Pirates of the Caribbean: At World's End": "COLUMN:[movie].[title]"
        },
        "attack": "Please list the person_name of all the cast of the movie \"Pirates of the Caribbean: At World's End\"."
    },
    {
        "db_id": "movies_4",
        "question": "Among the movie in which Dariusz Wolski works as the director of photography, what is the percentage of those movie whose vote average is over 5.0? director of photography refers to job = 'Director of Photography'; vote average is over 8.0 refers to vote_average > 5; percentage = divide(sum(movie_id) when vote_average > 5, count(movie_id)) as percentage",
        "evidence": "director of photography refers to job = 'Director of Photography'; vote average is over 8.0 refers to vote_average > 5; percentage = divide(sum(movie_id) when vote_average > 5, count(movie_id)) as percentage",
        "SQL": "SELECT CAST(COUNT(CASE WHEN T1.vote_average > 5 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.vote_average) FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Dariusz Wolski' AND T2.job = 'Director of Photography'",
        "query": "SELECT CAST(COUNT(CASE WHEN T1.vote_average > 5 THEN 1 ELSE NULL END) AS REAL) * 100 / COUNT(T1.vote_average) FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Dariusz Wolski' AND T2.job = 'Director of Photography'",
        "evidence_added": true,
        "question_toks": [
            "Among",
            "the",
            "movie",
            "in",
            "which",
            "Dariusz",
            "Wolski",
            "works",
            "as",
            "the",
            "director",
            "of",
            "photography",
            ",",
            "what",
            "is",
            "the",
            "percentage",
            "of",
            "those",
            "movie",
            "whose",
            "vote",
            "average",
            "is",
            "over",
            "5.0",
            "?",
            "director",
            "of",
            "photography",
            "refers",
            "to",
            "job",
            "=",
            "'Director",
            "of",
            "Photography'",
            ";",
            "vote",
            "average",
            "is",
            "over",
            "8.0",
            "refers",
            "to",
            "vote_average",
            ">",
            "5",
            ";",
            "percentage",
            "=",
            "divide(sum(movie_id)",
            "when",
            "vote_average",
            ">",
            "5",
            ",",
            "count(movie_id))",
            "as",
            "percentage"
        ],
        "tc_original": [
            "movie.vote_average",
            "movie.movie_id",
            "movie.vote_count",
            "movie.title",
            "movie.budget",
            "movie.*",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.job",
            "movie_crew.department_id",
            "movie_crew.*",
            "person.person_id",
            "person.person_name",
            "person.*",
            "language_role.role_id",
            "language_role.language_role",
            "language_role.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[vote_average]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[vote_count]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[*]",
            "TABLE:[person]",
            "COLUMN:[person].[person_id]",
            "COLUMN:[person].[person_name]",
            "COLUMN:[person].[*]",
            "TABLE:[language_role]",
            "COLUMN:[language_role].[role_id]",
            "COLUMN:[language_role].[language_role]",
            "COLUMN:[language_role].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[language_role]':\n  '[language_role]': text\n  '[role_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[title]': text\n  '[vote_average]': real\n  '[vote_count]': integer\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n  '[person_name]': text\n",
        "gold_links": {
            "movie": "TABLE:[movie]",
            "Dariusz Wolski": "COLUMN:[person].[person_name]",
            "director of photography": "COLUMN:[movie_crew].[job]",
            "vote average": "COLUMN:[movie].[vote_average]",
            "5.0": "VALUE:[movie].[vote_average]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[language_role]",
                "[C2]": "[language_role].[language_role]",
                "[C3]": "[language_role].[role_id]",
                "[T3]": "[movie]",
                "[C4]": "[movie].[budget]",
                "[C5]": "[movie].[movie_id]",
                "[C6]": "[movie].[title]",
                "[C7]": "[movie].[vote_average]",
                "[C8]": "[movie].[vote_count]",
                "[T4]": "[movie_crew]",
                "[C9]": "[movie_crew].[department_id]",
                "[C10]": "[movie_crew].[job]",
                "[C11]": "[movie_crew].[movie_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[C13]": "[person].[person_id]",
                "[C14]": "[person].[person_name]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[language_role]": "[T2]",
                "[language_role].[language_role]": "[C2]",
                "[language_role].[role_id]": "[C3]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C4]",
                "[movie].[movie_id]": "[C5]",
                "[movie].[title]": "[C6]",
                "[movie].[vote_average]": "[C7]",
                "[movie].[vote_count]": "[C8]",
                "[movie_crew]": "[T4]",
                "[movie_crew].[department_id]": "[C9]",
                "[movie_crew].[job]": "[C10]",
                "[movie_crew].[movie_id]": "[C11]",
                "[movie_crew].[person_id]": "[C12]",
                "[person]": "[T5]",
                "[person].[person_id]": "[C13]",
                "[person].[person_name]": "[C14]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C4]': integer\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]': text\n  '[C7]': real\n  '[C8]': integer\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    foreign_key: '[T3].[C5]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T5].[C13]'\n    type: integer\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T5]':\n  '[C13]':\n    primary_key: true\n    type: integer\n  '[C14]': text\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[language_role]",
                "[T2].[C2]": "[language_role].[language_role]",
                "[C2]": "[language_role].[language_role]",
                "[T2].[C3]": "[language_role].[role_id]",
                "[C3]": "[language_role].[role_id]",
                "[T3]": "[movie]",
                "[T3].[C4]": "[movie].[budget]",
                "[C4]": "[movie].[budget]",
                "[T3].[C5]": "[movie].[movie_id]",
                "[C5]": "[movie].[movie_id]",
                "[T3].[C6]": "[movie].[title]",
                "[C6]": "[movie].[title]",
                "[T3].[C7]": "[movie].[vote_average]",
                "[C7]": "[movie].[vote_average]",
                "[T3].[C8]": "[movie].[vote_count]",
                "[C8]": "[movie].[vote_count]",
                "[T4]": "[movie_crew]",
                "[T4].[C9]": "[movie_crew].[department_id]",
                "[C9]": "[movie_crew].[department_id]",
                "[T4].[C10]": "[movie_crew].[job]",
                "[C10]": "[movie_crew].[job]",
                "[T4].[C11]": "[movie_crew].[movie_id]",
                "[C11]": "[movie_crew].[movie_id]",
                "[T4].[C12]": "[movie_crew].[person_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[T5].[C13]": "[person].[person_id]",
                "[C13]": "[person].[person_id]",
                "[T5].[C14]": "[person].[person_name]",
                "[C14]": "[person].[person_name]"
            },
            "question": "Among the [T3] in which [V1] works as the director of photography, what is the [T3] of those [T3] whose vote average is over 5.0? director of photography refers to job = 'Director of Photography'; vote average is over 8.0 refers to [C7] > 5; [T3] = divide(sum(movie_id) when [C7] > 5, count(movie_id)) as [T3]; [V1] is a value of the column [C12]",
            "to_value": {
                "[V1]": "Dariusz Wolski"
            },
            "masked": 6,
            "masked_terms": [
                "Dariusz Wolski",
                "Dariusz Wolski",
                "movie",
                "vote_average",
                "percentage",
                "vote_average > 5"
            ],
            "sql": "SELECT SUM([T3].[C5]) * 1.0 / COUNT([T3].[C5]) AS [T3] FROM [T4] JOIN [T3] ON [T4].[C11] = [T3].[C5] WHERE [T4].[C10] = 'Director of Photography' AND [T3].[C7] > 5 AND [T4].[C12] = [V1]",
            "repaired_sql": "SELECT SUM([T3].[C5]) * 1.0 / COUNT([T3].[C5]) FROM [T3] JOIN [T4] ON [T3].[C5] = [T4].[C11] WHERE [T4].[C10] = 'Director of Photography' AND [T4].[C12] = [V1] AND [T3].[C7] > 5"
        },
        "values": [
            "Dariusz Wolski"
        ],
        "value_links": {
            "Dariusz Wolski": "[movie_crew].[person_id]"
        },
        "filtered_value_links": {
            "Dariusz Wolski": "[movie_crew].[person_id]"
        },
        "schema_links": {
            "Dariusz Wolski": "COLUMN:[movie_crew].[person_id]",
            "movie": "TABLE:[movie]",
            "vote_average": "COLUMN:[movie].[vote_average]",
            "percentage": "TABLE:[movie]",
            "vote_average > 5": "COLUMN:[movie].[vote_average]"
        },
        "filtered_schema_links": {
            "Dariusz Wolski": "COLUMN:[movie_crew].[person_id]",
            "movie": "TABLE:[movie]",
            "vote_average": "COLUMN:[movie].[vote_average]",
            "percentage": "TABLE:[movie]",
            "vote_average > 5": "COLUMN:[movie].[vote_average]"
        },
        "attack": "Among the movies in which John Doe works as the director of photography, what is the average of those movies whose vote average is over 5.0?"
    },
    {
        "db_id": "movies_4",
        "question": "For the movie \"Land of the Dead\", who is its director? \"Land of the Dead\" refers to title = 'Land of the Dead'; director refers to person_name where job = 'Director'",
        "evidence": "\"Land of the Dead\" refers to title = 'Land of the Dead'; director refers to person_name where job = 'Director'",
        "SQL": "SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title = 'Land of the Dead' AND T2.job = 'Director'",
        "query": "SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title = 'Land of the Dead' AND T2.job = 'Director'",
        "evidence_added": true,
        "question_toks": [
            "For",
            "the",
            "movie",
            "\"Land",
            "of",
            "the",
            "Dead\"",
            ",",
            "who",
            "is",
            "its",
            "director",
            "?",
            "\"Land",
            "of",
            "the",
            "Dead\"",
            "refers",
            "to",
            "title",
            "=",
            "'Land",
            "of",
            "the",
            "Dead'",
            ";",
            "director",
            "refers",
            "to",
            "person_name",
            "where",
            "job",
            "=",
            "'Director'"
        ],
        "tc_original": [
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "movie_crew.movie_id",
            "movie_crew.job",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.*",
            "person.person_name",
            "person.person_id",
            "person.*",
            "gender.gender",
            "gender.gender_id",
            "gender.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[*]",
            "TABLE:[person]",
            "COLUMN:[person].[person_name]",
            "COLUMN:[person].[person_id]",
            "COLUMN:[person].[*]",
            "TABLE:[gender]",
            "COLUMN:[gender].[gender]",
            "COLUMN:[gender].[gender_id]",
            "COLUMN:[gender].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[gender]':\n  '[gender]': text\n  '[gender_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n  '[person_name]': text\n",
        "gold_links": {
            "movie": "TABLE:[movie]",
            "Land of the Dead": "VALUE:[movie].[title]",
            "director": "COLUMN:[person].[person_name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[gender]",
                "[C2]": "[gender].[gender]",
                "[C3]": "[gender].[gender_id]",
                "[T3]": "[movie]",
                "[C4]": "[movie].[budget]",
                "[C5]": "[movie].[homepage]",
                "[C6]": "[movie].[movie_id]",
                "[C7]": "[movie].[overview]",
                "[C8]": "[movie].[title]",
                "[T4]": "[movie_crew]",
                "[C9]": "[movie_crew].[department_id]",
                "[C10]": "[movie_crew].[job]",
                "[C11]": "[movie_crew].[movie_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[C13]": "[person].[person_id]",
                "[C14]": "[person].[person_name]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[gender]": "[T2]",
                "[gender].[gender]": "[C2]",
                "[gender].[gender_id]": "[C3]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C4]",
                "[movie].[homepage]": "[C5]",
                "[movie].[movie_id]": "[C6]",
                "[movie].[overview]": "[C7]",
                "[movie].[title]": "[C8]",
                "[movie_crew]": "[T4]",
                "[movie_crew].[department_id]": "[C9]",
                "[movie_crew].[job]": "[C10]",
                "[movie_crew].[movie_id]": "[C11]",
                "[movie_crew].[person_id]": "[C12]",
                "[person]": "[T5]",
                "[person].[person_id]": "[C13]",
                "[person].[person_name]": "[C14]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C4]': integer\n  '[C5]': text\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    foreign_key: '[T3].[C6]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T5].[C13]'\n    type: integer\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T5]':\n  '[C13]':\n    primary_key: true\n    type: integer\n  '[C14]': text\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[gender]",
                "[T2].[C2]": "[gender].[gender]",
                "[C2]": "[gender].[gender]",
                "[T2].[C3]": "[gender].[gender_id]",
                "[C3]": "[gender].[gender_id]",
                "[T3]": "[movie]",
                "[T3].[C4]": "[movie].[budget]",
                "[C4]": "[movie].[budget]",
                "[T3].[C5]": "[movie].[homepage]",
                "[C5]": "[movie].[homepage]",
                "[T3].[C6]": "[movie].[movie_id]",
                "[C6]": "[movie].[movie_id]",
                "[T3].[C7]": "[movie].[overview]",
                "[C7]": "[movie].[overview]",
                "[T3].[C8]": "[movie].[title]",
                "[C8]": "[movie].[title]",
                "[T4]": "[movie_crew]",
                "[T4].[C9]": "[movie_crew].[department_id]",
                "[C9]": "[movie_crew].[department_id]",
                "[T4].[C10]": "[movie_crew].[job]",
                "[C10]": "[movie_crew].[job]",
                "[T4].[C11]": "[movie_crew].[movie_id]",
                "[C11]": "[movie_crew].[movie_id]",
                "[T4].[C12]": "[movie_crew].[person_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[T5].[C13]": "[person].[person_id]",
                "[C13]": "[person].[person_id]",
                "[T5].[C14]": "[person].[person_name]",
                "[C14]": "[person].[person_name]"
            },
            "question": "For the [T3] \"[V1]\", who is its director? \"[V1]\" refers to [C8] = '[V1]'; director refers to person_name where job = 'Director'; [V1] is a value of the column [C8]",
            "to_value": {
                "[V1]": "Land of the Dead"
            },
            "masked": 4,
            "masked_terms": [
                "Land of the Dead",
                "movie",
                "title",
                "Land of the Dead"
            ],
            "sql": "SELECT [T5].[C14] AS person_name FROM [T4] INNER JOIN [T3] ON [T4].[C11] = [T3].[C6] INNER JOIN [T5] ON [T4].[C12] = [T5].[C13] WHERE [T3].[C8] = '[V1]' AND [T4].[C10] = 'Director'",
            "repaired_sql": "SELECT [T5].[C14] FROM [T5] JOIN [T4] ON [T4].[C12] = [T5].[C13] JOIN [T3] ON [T4].[C11] = [T3].[C6] WHERE [T5].[C10] = 'Director' AND [T3].[C8] = '[V1]'"
        },
        "values": [
            "Land of the Dead"
        ],
        "value_links": {
            "Land of the Dead": "[movie].[title]"
        },
        "filtered_value_links": {
            "Land of the Dead": "[movie].[title]"
        },
        "schema_links": {
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "Land of the Dead": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "Land of the Dead": "COLUMN:[movie].[title]"
        },
        "attack": "For the movie \"Inception\", who is its director?"
    },
    {
        "db_id": "movies_4",
        "question": "Provide the most used keyword in the movies. most used keyword refers to keyword_name where max(count(keyword_name))",
        "evidence": "most used keyword refers to keyword_name where max(count(keyword_name))",
        "SQL": "SELECT T1.keyword_name FROM keyword AS T1 INNER JOIN movie_keywords AS T2 ON T1.keyword_id = T2.keyword_id GROUP BY T1.keyword_name ORDER BY COUNT(T1.keyword_name) DESC LIMIT 1",
        "query": "SELECT T1.keyword_name FROM keyword AS T1 INNER JOIN movie_keywords AS T2 ON T1.keyword_id = T2.keyword_id GROUP BY T1.keyword_name ORDER BY COUNT(T1.keyword_name) DESC LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "Provide",
            "the",
            "most",
            "used",
            "keyword",
            "in",
            "the",
            "movies",
            ".",
            "most",
            "used",
            "keyword",
            "refers",
            "to",
            "keyword_name",
            "where",
            "max(count(keyword_name))"
        ],
        "tc_original": [
            "keyword.keyword_name",
            "keyword.keyword_id",
            "keyword.*",
            "movie_keywords.keyword_id",
            "movie_keywords.movie_id",
            "movie_keywords.*",
            "movie.movie_id",
            "movie.title",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "movie_crew.job",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[keyword]",
            "COLUMN:[keyword].[keyword_name]",
            "COLUMN:[keyword].[keyword_id]",
            "COLUMN:[keyword].[*]",
            "TABLE:[movie_keywords]",
            "COLUMN:[movie_keywords].[keyword_id]",
            "COLUMN:[movie_keywords].[movie_id]",
            "COLUMN:[movie_keywords].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[keyword]':\n  '[keyword_id]':\n    primary_key: true\n    type: integer\n  '[keyword_name]': text\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[movie_keywords]':\n  '[keyword_id]': integer\n  '[movie_id]': integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "most used keyword": "COLUMN:[keyword].[keyword_name]",
            "keyword": "COLUMN:[keyword].[keyword_name]",
            "movies": "TABLE:[movie]",
            "keyword_name": "COLUMN:[keyword].[keyword_name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[keyword]",
                "[C2]": "[keyword].[keyword_id]",
                "[C3]": "[keyword].[keyword_name]",
                "[T3]": "[movie]",
                "[C4]": "[movie].[budget]",
                "[C5]": "[movie].[homepage]",
                "[C6]": "[movie].[movie_id]",
                "[C7]": "[movie].[overview]",
                "[C8]": "[movie].[title]",
                "[T4]": "[movie_crew]",
                "[C9]": "[movie_crew].[department_id]",
                "[C10]": "[movie_crew].[job]",
                "[C11]": "[movie_crew].[movie_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[movie_keywords]",
                "[C13]": "[movie_keywords].[keyword_id]",
                "[C14]": "[movie_keywords].[movie_id]",
                "[T6]": "[person]",
                "[C15]": "[person].[person_id]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[keyword]": "[T2]",
                "[keyword].[keyword_id]": "[C2]",
                "[keyword].[keyword_name]": "[C3]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C4]",
                "[movie].[homepage]": "[C5]",
                "[movie].[movie_id]": "[C6]",
                "[movie].[overview]": "[C7]",
                "[movie].[title]": "[C8]",
                "[movie_crew]": "[T4]",
                "[movie_crew].[department_id]": "[C9]",
                "[movie_crew].[job]": "[C10]",
                "[movie_crew].[movie_id]": "[C11]",
                "[movie_crew].[person_id]": "[C12]",
                "[movie_keywords]": "[T5]",
                "[movie_keywords].[keyword_id]": "[C13]",
                "[movie_keywords].[movie_id]": "[C14]",
                "[person]": "[T6]",
                "[person].[person_id]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n'[T3]':\n  '[C4]': integer\n  '[C5]': text\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    foreign_key: '[T3].[C6]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T6].[C15]'\n    type: integer\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T5]':\n  '[C13]': integer\n  '[C14]': integer\n'[T6]':\n  '[C15]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[keyword]",
                "[T2].[C2]": "[keyword].[keyword_id]",
                "[C2]": "[keyword].[keyword_id]",
                "[T2].[C3]": "[keyword].[keyword_name]",
                "[C3]": "[keyword].[keyword_name]",
                "[T3]": "[movie]",
                "[T3].[C4]": "[movie].[budget]",
                "[C4]": "[movie].[budget]",
                "[T3].[C5]": "[movie].[homepage]",
                "[C5]": "[movie].[homepage]",
                "[T3].[C6]": "[movie].[movie_id]",
                "[C6]": "[movie].[movie_id]",
                "[T3].[C7]": "[movie].[overview]",
                "[C7]": "[movie].[overview]",
                "[T3].[C8]": "[movie].[title]",
                "[C8]": "[movie].[title]",
                "[T4]": "[movie_crew]",
                "[T4].[C9]": "[movie_crew].[department_id]",
                "[C9]": "[movie_crew].[department_id]",
                "[T4].[C10]": "[movie_crew].[job]",
                "[C10]": "[movie_crew].[job]",
                "[T4].[C11]": "[movie_crew].[movie_id]",
                "[C11]": "[movie_crew].[movie_id]",
                "[T4].[C12]": "[movie_crew].[person_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[movie_keywords]",
                "[T5].[C13]": "[movie_keywords].[keyword_id]",
                "[C13]": "[movie_keywords].[keyword_id]",
                "[T5].[C14]": "[movie_keywords].[movie_id]",
                "[C14]": "[movie_keywords].[movie_id]",
                "[T6]": "[person]",
                "[T6].[C15]": "[person].[person_id]",
                "[C15]": "[person].[person_id]"
            },
            "question": "Provide the [C3] in the movies. [C3] refers to [V1] where max(count([V1])); [V1] is a value of the column [C3]",
            "to_value": {
                "[V1]": "keyword_name"
            },
            "masked": 3,
            "masked_terms": [
                "keyword_name",
                "most used keyword",
                "keyword"
            ],
            "sql": "SELECT [T2].[C3] FROM [T2] GROUP BY [T2].[C3] ORDER BY COUNT([T2].[C3]) DESC LIMIT 1",
            "repaired_sql": "SELECT [T2].[C3] FROM [T2] GROUP BY [T2].[C3] ORDER BY COUNT([T2].[C3]) DESC LIMIT 1;"
        },
        "values": [
            "keyword_name"
        ],
        "value_links": {
            "keyword_name": "[keyword].[keyword_name]"
        },
        "filtered_value_links": {
            "keyword_name": "[keyword].[keyword_name]"
        },
        "schema_links": {
            "most used keyword": "COLUMN:[keyword].[keyword_name]",
            "keyword": "TABLE:[keyword]"
        },
        "filtered_schema_links": {
            "most used keyword": "COLUMN:[keyword].[keyword_name]",
            "keyword": "TABLE:[keyword]"
        },
        "attack": "Provide the genre in the movies. Genre refers to Action where max(count(Action)); Action is a value of the column genre."
    },
    {
        "db_id": "movies_4",
        "question": "What is the production company of the movie \"Crazy Heart\"? movie \"Crazy Heart\" refers to title = 'Crazy Heart'; production company refers to company_name",
        "evidence": "movie \"Crazy Heart\" refers to title = 'Crazy Heart'; production company refers to company_name",
        "SQL": "SELECT T1.company_name FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T3.title = 'Crazy Heart'",
        "query": "SELECT T1.company_name FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T3.title = 'Crazy Heart'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "production",
            "company",
            "of",
            "the",
            "movie",
            "\"Crazy",
            "Heart\"",
            "?",
            "movie",
            "\"Crazy",
            "Heart\"",
            "refers",
            "to",
            "title",
            "=",
            "'Crazy",
            "Heart'",
            ";",
            "production",
            "company",
            "refers",
            "to",
            "company_name"
        ],
        "tc_original": [
            "production_company.company_name",
            "production_company.company_id",
            "production_company.*",
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "movie_company.company_id",
            "movie_company.movie_id",
            "movie_company.*",
            "movie_crew.job",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[production_company]",
            "COLUMN:[production_company].[company_name]",
            "COLUMN:[production_company].[company_id]",
            "COLUMN:[production_company].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_company]",
            "COLUMN:[movie_company].[company_id]",
            "COLUMN:[movie_company].[movie_id]",
            "COLUMN:[movie_company].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_company]':\n  '[company_id]': integer\n  '[movie_id]': integer\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n'[production_company]':\n  '[company_id]':\n    primary_key: true\n    type: integer\n  '[company_name]': text\n",
        "gold_links": {
            "production company": "COLUMN:[production_company].[company_name]",
            "company": "COLUMN:[production_company].[company_name]",
            "movie": "TABLE:[movie]",
            "Crazy Heart": "VALUE:[movie].[title]",
            "title": "COLUMN:[movie].[title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[movie]",
                "[C2]": "[movie].[budget]",
                "[C3]": "[movie].[homepage]",
                "[C4]": "[movie].[movie_id]",
                "[C5]": "[movie].[overview]",
                "[C6]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[C7]": "[movie_company].[company_id]",
                "[C8]": "[movie_company].[movie_id]",
                "[T4]": "[movie_crew]",
                "[C9]": "[movie_crew].[department_id]",
                "[C10]": "[movie_crew].[job]",
                "[C11]": "[movie_crew].[movie_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[C13]": "[person].[person_id]",
                "[T6]": "[production_company]",
                "[C14]": "[production_company].[company_id]",
                "[C15]": "[production_company].[company_name]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[movie]": "[T2]",
                "[movie].[budget]": "[C2]",
                "[movie].[homepage]": "[C3]",
                "[movie].[movie_id]": "[C4]",
                "[movie].[overview]": "[C5]",
                "[movie].[title]": "[C6]",
                "[movie_company]": "[T3]",
                "[movie_company].[company_id]": "[C7]",
                "[movie_company].[movie_id]": "[C8]",
                "[movie_crew]": "[T4]",
                "[movie_crew].[department_id]": "[C9]",
                "[movie_crew].[job]": "[C10]",
                "[movie_crew].[movie_id]": "[C11]",
                "[movie_crew].[person_id]": "[C12]",
                "[person]": "[T5]",
                "[person].[person_id]": "[C13]",
                "[production_company]": "[T6]",
                "[production_company].[company_id]": "[C14]",
                "[production_company].[company_name]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]': integer\n  '[C3]': text\n  '[C4]':\n    primary_key: true\n    type: integer\n  '[C5]': text\n  '[C6]': text\n'[T3]':\n  '[C7]': integer\n  '[C8]': integer\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    foreign_key: '[T2].[C4]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T5].[C13]'\n    type: integer\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T5]':\n  '[C13]':\n    primary_key: true\n    type: integer\n'[T6]':\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[movie]",
                "[T2].[C2]": "[movie].[budget]",
                "[C2]": "[movie].[budget]",
                "[T2].[C3]": "[movie].[homepage]",
                "[C3]": "[movie].[homepage]",
                "[T2].[C4]": "[movie].[movie_id]",
                "[C4]": "[movie].[movie_id]",
                "[T2].[C5]": "[movie].[overview]",
                "[C5]": "[movie].[overview]",
                "[T2].[C6]": "[movie].[title]",
                "[C6]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[T3].[C7]": "[movie_company].[company_id]",
                "[C7]": "[movie_company].[company_id]",
                "[T3].[C8]": "[movie_company].[movie_id]",
                "[C8]": "[movie_company].[movie_id]",
                "[T4]": "[movie_crew]",
                "[T4].[C9]": "[movie_crew].[department_id]",
                "[C9]": "[movie_crew].[department_id]",
                "[T4].[C10]": "[movie_crew].[job]",
                "[C10]": "[movie_crew].[job]",
                "[T4].[C11]": "[movie_crew].[movie_id]",
                "[C11]": "[movie_crew].[movie_id]",
                "[T4].[C12]": "[movie_crew].[person_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[T5].[C13]": "[person].[person_id]",
                "[C13]": "[person].[person_id]",
                "[T6]": "[production_company]",
                "[T6].[C14]": "[production_company].[company_id]",
                "[C14]": "[production_company].[company_id]",
                "[T6].[C15]": "[production_company].[company_name]",
                "[C15]": "[production_company].[company_name]"
            },
            "question": "What is the [T6] of the [T2] \"[C6]\"? [T2] \"[C6]\" refers to title = '[C6]'; [T6] refers to [V2]; [V1] is a value of the column [C6]; [V2] is a value of the column [C15]",
            "to_value": {
                "[V1]": "'Crazy Heart'",
                "[V2]": "company_name"
            },
            "masked": 6,
            "masked_terms": [
                "'Crazy Heart'",
                "company_name",
                "production company",
                "movie",
                "Crazy Heart",
                "company_name"
            ],
            "sql": "SELECT [T6].[C15] FROM [T2] JOIN [T6] ON [T2].[C6] = [T6].[C15] WHERE [T2].[C6] = '[C6]'",
            "repaired_sql": "SELECT [T6].[C15] FROM [T6] JOIN [T4] ON [T4].[C12] = [T6].[C14] JOIN [T2] ON [T4].[C11] = [T2].[C4] WHERE [T2].[C6] = '[V1]' AND [T6].[C15] = '[V2]'"
        },
        "values": [
            "'Crazy Heart'",
            "company_name"
        ],
        "value_links": {
            "'Crazy Heart'": "[movie].[title]",
            "company_name": "[production_company].[company_name]"
        },
        "filtered_value_links": {
            "'Crazy Heart'": "[movie].[title]",
            "company_name": "[production_company].[company_name]"
        },
        "schema_links": {
            "production company": "TABLE:[production_company]",
            "movie": "TABLE:[movie]",
            "Crazy Heart": "COLUMN:[movie].[title]",
            "company_name": "COLUMN:[production_company].[company_name]"
        },
        "filtered_schema_links": {
            "production company": "TABLE:[production_company]",
            "movie": "TABLE:[movie]",
            "Crazy Heart": "COLUMN:[movie].[title]",
            "company_name": "COLUMN:[production_company].[company_name]"
        },
        "attack": "What is the genre of the movie \"title\"? \"movie\" \"title\" refers to title = 'title'; \"genre\" refers to action; \"title\" is a value of the column title; \"action\" is a value of the column genre"
    },
    {
        "db_id": "movies_4",
        "question": "What is the title of the first crime movie ever released? first crime movie ever released refers to min(release_date) and genre_name = 'Crime'",
        "evidence": "first crime movie ever released refers to min(release_date) and genre_name = 'Crime'",
        "SQL": "SELECT T1.title FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Crime' ORDER BY T1.release_date LIMIT 1",
        "query": "SELECT T1.title FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Crime' ORDER BY T1.release_date LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "title",
            "of",
            "the",
            "first",
            "crime",
            "movie",
            "ever",
            "released",
            "?",
            "first",
            "crime",
            "movie",
            "ever",
            "released",
            "refers",
            "to",
            "min(release_date)",
            "and",
            "genre_name",
            "=",
            "'Crime'"
        ],
        "tc_original": [
            "genre.genre_name",
            "genre.genre_id",
            "genre.*",
            "movie.release_date",
            "movie.title",
            "movie.movie_id",
            "movie.movie_status",
            "movie.budget",
            "movie.*",
            "movie_genres.genre_id",
            "movie_genres.movie_id",
            "movie_genres.*",
            "movie_crew.job",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[genre]",
            "COLUMN:[genre].[genre_name]",
            "COLUMN:[genre].[genre_id]",
            "COLUMN:[genre].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[release_date]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[movie_status]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_genres]",
            "COLUMN:[movie_genres].[genre_id]",
            "COLUMN:[movie_genres].[movie_id]",
            "COLUMN:[movie_genres].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[genre]':\n  '[genre_id]':\n    primary_key: true\n    type: integer\n  '[genre_name]': text\n'[movie]':\n  '[budget]': integer\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_status]': text\n  '[release_date]': date\n  '[title]': text\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[movie_genres]':\n  '[genre_id]':\n    foreign_key: '[genre].[genre_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "title": "COLUMN:[movie].[title]",
            "crime": "VALUE:[genre].[genre_name]",
            "movie": "TABLE:[movie]",
            "release": "COLUMN:[movie].[release_date]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[genre]",
                "[C2]": "[genre].[genre_id]",
                "[C3]": "[genre].[genre_name]",
                "[T3]": "[movie]",
                "[C4]": "[movie].[budget]",
                "[C5]": "[movie].[movie_id]",
                "[C6]": "[movie].[movie_status]",
                "[C7]": "[movie].[release_date]",
                "[C8]": "[movie].[title]",
                "[T4]": "[movie_crew]",
                "[C9]": "[movie_crew].[department_id]",
                "[C10]": "[movie_crew].[job]",
                "[C11]": "[movie_crew].[movie_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[movie_genres]",
                "[C13]": "[movie_genres].[genre_id]",
                "[C14]": "[movie_genres].[movie_id]",
                "[T6]": "[person]",
                "[C15]": "[person].[person_id]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[genre]": "[T2]",
                "[genre].[genre_id]": "[C2]",
                "[genre].[genre_name]": "[C3]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C4]",
                "[movie].[movie_id]": "[C5]",
                "[movie].[movie_status]": "[C6]",
                "[movie].[release_date]": "[C7]",
                "[movie].[title]": "[C8]",
                "[movie_crew]": "[T4]",
                "[movie_crew].[department_id]": "[C9]",
                "[movie_crew].[job]": "[C10]",
                "[movie_crew].[movie_id]": "[C11]",
                "[movie_crew].[person_id]": "[C12]",
                "[movie_genres]": "[T5]",
                "[movie_genres].[genre_id]": "[C13]",
                "[movie_genres].[movie_id]": "[C14]",
                "[person]": "[T6]",
                "[person].[person_id]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n'[T3]':\n  '[C4]': integer\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]': text\n  '[C7]': date\n  '[C8]': text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    foreign_key: '[T3].[C5]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T6].[C15]'\n    type: integer\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T5]':\n  '[C13]':\n    foreign_key: '[T2].[C2]'\n    type: integer\n  '[C14]':\n    foreign_key: '[T3].[C5]'\n    type: integer\n'[T6]':\n  '[C15]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[genre]",
                "[T2].[C2]": "[genre].[genre_id]",
                "[C2]": "[genre].[genre_id]",
                "[T2].[C3]": "[genre].[genre_name]",
                "[C3]": "[genre].[genre_name]",
                "[T3]": "[movie]",
                "[T3].[C4]": "[movie].[budget]",
                "[C4]": "[movie].[budget]",
                "[T3].[C5]": "[movie].[movie_id]",
                "[C5]": "[movie].[movie_id]",
                "[T3].[C6]": "[movie].[movie_status]",
                "[C6]": "[movie].[movie_status]",
                "[T3].[C7]": "[movie].[release_date]",
                "[C7]": "[movie].[release_date]",
                "[T3].[C8]": "[movie].[title]",
                "[C8]": "[movie].[title]",
                "[T4]": "[movie_crew]",
                "[T4].[C9]": "[movie_crew].[department_id]",
                "[C9]": "[movie_crew].[department_id]",
                "[T4].[C10]": "[movie_crew].[job]",
                "[C10]": "[movie_crew].[job]",
                "[T4].[C11]": "[movie_crew].[movie_id]",
                "[C11]": "[movie_crew].[movie_id]",
                "[T4].[C12]": "[movie_crew].[person_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[movie_genres]",
                "[T5].[C13]": "[movie_genres].[genre_id]",
                "[C13]": "[movie_genres].[genre_id]",
                "[T5].[C14]": "[movie_genres].[movie_id]",
                "[C14]": "[movie_genres].[movie_id]",
                "[T6]": "[person]",
                "[T6].[C15]": "[person].[person_id]",
                "[C15]": "[person].[person_id]"
            },
            "question": "What is the [C8] of the first [V1] [T3] ever released? first [V1] [T3] ever released refers to min([C7]) and genre_name = '[V1]'; [V1] is a value of the column [C3]",
            "to_value": {
                "[V1]": "Crime"
            },
            "masked": 5,
            "masked_terms": [
                "Crime",
                "title",
                "movie",
                "release_date",
                "Crime"
            ],
            "sql": "SELECT [T3].[C8] FROM [T3] JOIN [T5] ON [T3].[C5] = [T5].[C14] JOIN [T2] ON [T5].[C13] = [T2].[C2] WHERE [T2].[C3] = '[V1]' AND [T3].[C7] = (SELECT MIN([T3].[C7]) FROM [T3] JOIN [T5] ON [T3].[C5] = [T5].[C14] JOIN [T2] ON [T5].[C13] = [T2].[C2] WHERE [T2].[C3] = '[V1]')",
            "repaired_sql": "SELECT [T3].[C8] FROM [T3] JOIN [T5] ON [T3].[C5] = [T5].[C14] JOIN [T2] ON [T5].[C13] = [T2].[C2] WHERE [T2].[C3] = '[V1]' AND [T3].[C7] = (SELECT MIN([T3b].[C7]) FROM [T3] AS [T3b] JOIN [T5] AS [T5b] ON [T3b].[C5] = [T5b].[C14] JOIN [T2] AS [T2b] ON [T5b].[C13] = [T2b].[C2] WHERE [T2b].[C3] = '[V1]')"
        },
        "values": [
            "Crime"
        ],
        "value_links": {
            "Crime": "[genre].[genre_name]"
        },
        "filtered_value_links": {
            "Crime": "[genre].[genre_name]"
        },
        "schema_links": {
            "title": "COLUMN:[movie].[title]",
            "movie": "TABLE:[movie]",
            "release_date": "COLUMN:[movie].[release_date]",
            "Crime": "COLUMN:[genre].[genre_name]"
        },
        "filtered_schema_links": {
            "title": "COLUMN:[movie].[title]",
            "movie": "TABLE:[movie]",
            "release_date": "COLUMN:[movie].[release_date]",
            "Crime": "COLUMN:[genre].[genre_name]"
        },
        "attack": "What is the title of the first comedy movie ever released?"
    },
    {
        "db_id": "movies_4",
        "question": "List the person IDs of the second film editors in Movie No. 12. second film editors refers to job = 'Second Film Editor'; Movie No. 12 refers to movie_id = 12",
        "evidence": "second film editors refers to job = 'Second Film Editor'; Movie No. 12 refers to movie_id = 12",
        "SQL": "SELECT person_id FROM movie_crew WHERE movie_id = 12 AND job = 'Second Film Editor'",
        "query": "SELECT person_id FROM movie_crew WHERE movie_id = 12 AND job = 'Second Film Editor'",
        "evidence_added": true,
        "question_toks": [
            "List",
            "the",
            "person",
            "IDs",
            "of",
            "the",
            "second",
            "film",
            "editors",
            "in",
            "Movie",
            "No",
            ".",
            "12",
            ".",
            "second",
            "film",
            "editors",
            "refers",
            "to",
            "job",
            "=",
            "'Second",
            "Film",
            "Editor'",
            ";",
            "Movie",
            "No",
            ".",
            "12",
            "refers",
            "to",
            "movie_id",
            "=",
            "12"
        ],
        "tc_original": [
            "movie_crew.person_id",
            "movie_crew.job",
            "movie_crew.movie_id",
            "movie_crew.department_id",
            "movie_crew.*",
            "person.person_id",
            "person.person_name",
            "person.*",
            "gender.gender",
            "gender.gender_id",
            "gender.*",
            "movie.title",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.popularity",
            "movie.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[*]",
            "TABLE:[person]",
            "COLUMN:[person].[person_id]",
            "COLUMN:[person].[person_name]",
            "COLUMN:[person].[*]",
            "TABLE:[gender]",
            "COLUMN:[gender].[gender]",
            "COLUMN:[gender].[gender_id]",
            "COLUMN:[gender].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[popularity]",
            "COLUMN:[movie].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[gender]':\n  '[gender]': text\n  '[gender_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[popularity]': real\n  '[title]': text\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n  '[person_name]': text\n",
        "gold_links": {
            "person IDs": "COLUMN:[movie_crew].[person_id]",
            "second film editors": "VALUE:[movie_crew].[job]",
            "Movie No. 12": "VALUE:[movie_crew].[movie_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[gender]",
                "[C2]": "[gender].[gender]",
                "[C3]": "[gender].[gender_id]",
                "[T3]": "[movie]",
                "[C4]": "[movie].[budget]",
                "[C5]": "[movie].[homepage]",
                "[C6]": "[movie].[movie_id]",
                "[C7]": "[movie].[overview]",
                "[C8]": "[movie].[popularity]",
                "[C9]": "[movie].[title]",
                "[T4]": "[movie_crew]",
                "[C10]": "[movie_crew].[department_id]",
                "[C11]": "[movie_crew].[job]",
                "[C12]": "[movie_crew].[movie_id]",
                "[C13]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[C14]": "[person].[person_id]",
                "[C15]": "[person].[person_name]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[gender]": "[T2]",
                "[gender].[gender]": "[C2]",
                "[gender].[gender_id]": "[C3]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C4]",
                "[movie].[homepage]": "[C5]",
                "[movie].[movie_id]": "[C6]",
                "[movie].[overview]": "[C7]",
                "[movie].[popularity]": "[C8]",
                "[movie].[title]": "[C9]",
                "[movie_crew]": "[T4]",
                "[movie_crew].[department_id]": "[C10]",
                "[movie_crew].[job]": "[C11]",
                "[movie_crew].[movie_id]": "[C12]",
                "[movie_crew].[person_id]": "[C13]",
                "[person]": "[T5]",
                "[person].[person_id]": "[C14]",
                "[person].[person_name]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C4]': integer\n  '[C5]': text\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': real\n  '[C9]': text\n'[T4]':\n  '[C10]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C11]': text\n  '[C12]':\n    foreign_key: '[T3].[C6]'\n    type: integer\n  '[C13]':\n    foreign_key: '[T5].[C14]'\n    type: integer\n'[T5]':\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[gender]",
                "[T2].[C2]": "[gender].[gender]",
                "[C2]": "[gender].[gender]",
                "[T2].[C3]": "[gender].[gender_id]",
                "[C3]": "[gender].[gender_id]",
                "[T3]": "[movie]",
                "[T3].[C4]": "[movie].[budget]",
                "[C4]": "[movie].[budget]",
                "[T3].[C5]": "[movie].[homepage]",
                "[C5]": "[movie].[homepage]",
                "[T3].[C6]": "[movie].[movie_id]",
                "[C6]": "[movie].[movie_id]",
                "[T3].[C7]": "[movie].[overview]",
                "[C7]": "[movie].[overview]",
                "[T3].[C8]": "[movie].[popularity]",
                "[C8]": "[movie].[popularity]",
                "[T3].[C9]": "[movie].[title]",
                "[C9]": "[movie].[title]",
                "[T4]": "[movie_crew]",
                "[T4].[C10]": "[movie_crew].[department_id]",
                "[C10]": "[movie_crew].[department_id]",
                "[T4].[C11]": "[movie_crew].[job]",
                "[C11]": "[movie_crew].[job]",
                "[T4].[C12]": "[movie_crew].[movie_id]",
                "[C12]": "[movie_crew].[movie_id]",
                "[T4].[C13]": "[movie_crew].[person_id]",
                "[C13]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[T5].[C14]": "[person].[person_id]",
                "[C14]": "[person].[person_id]",
                "[T5].[C15]": "[person].[person_name]",
                "[C15]": "[person].[person_name]"
            },
            "question": "List the [C13] of the [C11] in [C12]. [V2]. [C11] refers to job = '[V1]'; [C12]. [V2] refers to movie_id = [V2]; [V1] is a value of the column [C11]; [V2] is a value of the column [C12]",
            "to_value": {
                "[V1]": "Second Film Editor",
                "[V2]": "12"
            },
            "masked": 7,
            "masked_terms": [
                "Second Film Editor",
                "12",
                "second film editors",
                "film editors",
                "person IDs",
                "Movie No",
                "12"
            ],
            "sql": "SELECT [T4].[C13] FROM [T4] WHERE [T4].[C11] = '[V1]' AND [T4].[C12] = [V2]",
            "repaired_sql": "SELECT [T4].[C13] FROM [T4] WHERE [T4].[C11] = '[V1]' AND [T4].[C12] = [V2]"
        },
        "values": [
            "Second Film Editor",
            "12"
        ],
        "value_links": {
            "Second Film Editor": "[movie_crew].[job]",
            "12": "[movie_crew].[movie_id]"
        },
        "filtered_value_links": {
            "Second Film Editor": "[movie_crew].[job]",
            "12": "[movie_crew].[movie_id]"
        },
        "schema_links": {
            "second film editors": "COLUMN:[movie_crew].[job]",
            "film editors": "COLUMN:[movie_crew].[job]",
            "person IDs": "COLUMN:[movie_crew].[person_id]",
            "Movie No": "COLUMN:[movie_crew].[movie_id]",
            "12": "COLUMN:[movie_crew].[movie_id]"
        },
        "filtered_schema_links": {
            "second film editors": "COLUMN:[movie_crew].[job]",
            "film editors": "COLUMN:[movie_crew].[job]",
            "person IDs": "COLUMN:[movie_crew].[person_id]",
            "Movie No": "COLUMN:[movie_crew].[movie_id]",
            "12": "COLUMN:[movie_crew].[movie_id]"
        },
        "attack": "List the character_id of the job in movie_id. [V2]. job refers to job = '[V1]'; movie_id. [V2] refers to movie_id = [V2]; [V1] is a value of the column job; [V2] is a value of the column movie_id"
    },
    {
        "db_id": "movies_4",
        "question": "Tally the movie ID and character name in the movie starring Jim Carrey.",
        "evidence": "",
        "SQL": "SELECT T2.movie_id, T2.character_name FROM person AS T1 INNER JOIN movie_cast AS T2 ON T1.person_id = T2.person_id WHERE T1.person_name = 'Jim Carrey'",
        "query": "SELECT T2.movie_id, T2.character_name FROM person AS T1 INNER JOIN movie_cast AS T2 ON T1.person_id = T2.person_id WHERE T1.person_name = 'Jim Carrey'",
        "question_toks": [
            "Tally",
            "the",
            "movie",
            "ID",
            "and",
            "character",
            "name",
            "in",
            "the",
            "movie",
            "starring",
            "Jim",
            "Carrey",
            "."
        ],
        "tc_original": [
            "movie_cast.character_name",
            "movie_cast.movie_id",
            "movie_cast.person_id",
            "movie_cast.gender_id",
            "movie_cast.cast_order",
            "movie_cast.*",
            "person.person_id",
            "person.person_name",
            "person.*",
            "movie.movie_id",
            "movie.title",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.job",
            "movie_crew.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie_cast]",
            "COLUMN:[movie_cast].[character_name]",
            "COLUMN:[movie_cast].[movie_id]",
            "COLUMN:[movie_cast].[person_id]",
            "COLUMN:[movie_cast].[gender_id]",
            "COLUMN:[movie_cast].[cast_order]",
            "COLUMN:[movie_cast].[*]",
            "TABLE:[person]",
            "COLUMN:[person].[person_id]",
            "COLUMN:[person].[person_name]",
            "COLUMN:[person].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[gender]':\n  '[gender_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_cast]':\n  '[cast_order]': integer\n  '[character_name]': text\n  '[gender_id]':\n    foreign_key: '[gender].[gender_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n  '[person_name]': text\n",
        "gold_links": {
            "movie ID": "COLUMN:[movie_cast].[movie_id]",
            "character name": "COLUMN:[movie_cast].[character_name]",
            "Jim Carrey": "VALUE:[person].[person_name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[gender]",
                "[C2]": "[gender].[gender_id]",
                "[T3]": "[movie]",
                "[C3]": "[movie].[budget]",
                "[C4]": "[movie].[homepage]",
                "[C5]": "[movie].[movie_id]",
                "[C6]": "[movie].[overview]",
                "[C7]": "[movie].[title]",
                "[T4]": "[movie_cast]",
                "[C8]": "[movie_cast].[cast_order]",
                "[C9]": "[movie_cast].[character_name]",
                "[C10]": "[movie_cast].[gender_id]",
                "[C11]": "[movie_cast].[movie_id]",
                "[C12]": "[movie_cast].[person_id]",
                "[T5]": "[movie_crew]",
                "[C13]": "[movie_crew].[department_id]",
                "[C14]": "[movie_crew].[job]",
                "[C15]": "[movie_crew].[movie_id]",
                "[C16]": "[movie_crew].[person_id]",
                "[T6]": "[person]",
                "[C17]": "[person].[person_id]",
                "[C18]": "[person].[person_name]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[gender]": "[T2]",
                "[gender].[gender_id]": "[C2]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C3]",
                "[movie].[homepage]": "[C4]",
                "[movie].[movie_id]": "[C5]",
                "[movie].[overview]": "[C6]",
                "[movie].[title]": "[C7]",
                "[movie_cast]": "[T4]",
                "[movie_cast].[cast_order]": "[C8]",
                "[movie_cast].[character_name]": "[C9]",
                "[movie_cast].[gender_id]": "[C10]",
                "[movie_cast].[movie_id]": "[C11]",
                "[movie_cast].[person_id]": "[C12]",
                "[movie_crew]": "[T5]",
                "[movie_crew].[department_id]": "[C13]",
                "[movie_crew].[job]": "[C14]",
                "[movie_crew].[movie_id]": "[C15]",
                "[movie_crew].[person_id]": "[C16]",
                "[person]": "[T6]",
                "[person].[person_id]": "[C17]",
                "[person].[person_name]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C3]': integer\n  '[C4]': text\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]': text\n  '[C7]': text\n'[T4]':\n  '[C10]':\n    foreign_key: '[T2].[C2]'\n    type: integer\n  '[C11]':\n    foreign_key: '[T3].[C5]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T6].[C17]'\n    type: integer\n  '[C8]': integer\n  '[C9]': text\n'[T5]':\n  '[C13]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C14]': text\n  '[C15]':\n    foreign_key: '[T3].[C5]'\n    type: integer\n  '[C16]':\n    foreign_key: '[T6].[C17]'\n    type: integer\n'[T6]':\n  '[C17]':\n    primary_key: true\n    type: integer\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[gender]",
                "[T2].[C2]": "[gender].[gender_id]",
                "[C2]": "[gender].[gender_id]",
                "[T3]": "[movie]",
                "[T3].[C3]": "[movie].[budget]",
                "[C3]": "[movie].[budget]",
                "[T3].[C4]": "[movie].[homepage]",
                "[C4]": "[movie].[homepage]",
                "[T3].[C5]": "[movie].[movie_id]",
                "[C5]": "[movie].[movie_id]",
                "[T3].[C6]": "[movie].[overview]",
                "[C6]": "[movie].[overview]",
                "[T3].[C7]": "[movie].[title]",
                "[C7]": "[movie].[title]",
                "[T4]": "[movie_cast]",
                "[T4].[C8]": "[movie_cast].[cast_order]",
                "[C8]": "[movie_cast].[cast_order]",
                "[T4].[C9]": "[movie_cast].[character_name]",
                "[C9]": "[movie_cast].[character_name]",
                "[T4].[C10]": "[movie_cast].[gender_id]",
                "[C10]": "[movie_cast].[gender_id]",
                "[T4].[C11]": "[movie_cast].[movie_id]",
                "[C11]": "[movie_cast].[movie_id]",
                "[T4].[C12]": "[movie_cast].[person_id]",
                "[C12]": "[movie_cast].[person_id]",
                "[T5]": "[movie_crew]",
                "[T5].[C13]": "[movie_crew].[department_id]",
                "[C13]": "[movie_crew].[department_id]",
                "[T5].[C14]": "[movie_crew].[job]",
                "[C14]": "[movie_crew].[job]",
                "[T5].[C15]": "[movie_crew].[movie_id]",
                "[C15]": "[movie_crew].[movie_id]",
                "[T5].[C16]": "[movie_crew].[person_id]",
                "[C16]": "[movie_crew].[person_id]",
                "[T6]": "[person]",
                "[T6].[C17]": "[person].[person_id]",
                "[C17]": "[person].[person_id]",
                "[T6].[C18]": "[person].[person_name]",
                "[C18]": "[person].[person_name]"
            },
            "question": "Tally the [T3] [C5] and [C9] [C9] in the [T3] starring [V1].; [V1] is a value of the column [C12]",
            "to_value": {
                "[V1]": "Jim Carrey"
            },
            "masked": 6,
            "masked_terms": [
                "Jim Carrey",
                "Jim",
                "movie",
                "ID",
                "character",
                "name"
            ],
            "sql": "SELECT [T3].[C5], [T4].[C9], COUNT([T4].[C9]) AS [C9_count] FROM [T3] JOIN [T4] ON [T3].[C5] = [T4].[C11] WHERE [T4].[C12] = [V1] GROUP BY [T3].[C5], [T4].[C9]",
            "repaired_sql": "SELECT [T3].[C5], [T4].[C9] FROM [T3] JOIN [T4] ON [T3].[C5] = [T4].[C11] WHERE [T4].[C12] = [V1];"
        },
        "values": [
            "Jim Carrey"
        ],
        "value_links": {
            "Jim Carrey": "[movie_cast].[person_id]"
        },
        "filtered_value_links": {
            "Jim Carrey": "[movie_cast].[person_id]"
        },
        "schema_links": {
            "Jim": "COLUMN:[person].[person_name]",
            "movie": "TABLE:[movie]",
            "ID": "COLUMN:[movie].[movie_id]",
            "character": "COLUMN:[movie_cast].[character_name]",
            "name": "COLUMN:[movie_cast].[character_name]"
        },
        "filtered_schema_links": {
            "Jim": "COLUMN:[person].[person_name]",
            "movie": "TABLE:[movie]",
            "ID": "COLUMN:[movie].[movie_id]",
            "character": "COLUMN:[movie_cast].[character_name]",
            "name": "COLUMN:[movie_cast].[character_name]"
        },
        "attack": "Tally the film id and title title in the film starring 1."
    },
    {
        "db_id": "movies_4",
        "question": "Write me the titles of the movies starring Jim Carrey. Jim Carrey is the person_name;",
        "evidence": "Jim Carrey is the person_name;",
        "SQL": "SELECT T1.title FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Jim Carrey'",
        "query": "SELECT T1.title FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T3.person_name = 'Jim Carrey'",
        "evidence_added": true,
        "question_toks": [
            "Write",
            "me",
            "the",
            "titles",
            "of",
            "the",
            "movies",
            "starring",
            "Jim",
            "Carrey",
            ".",
            "Jim",
            "Carrey",
            "is",
            "the",
            "person_name",
            ";"
        ],
        "tc_original": [
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "person.person_name",
            "person.person_id",
            "person.*",
            "movie_cast.person_id",
            "movie_cast.movie_id",
            "movie_cast.gender_id",
            "movie_cast.character_name",
            "movie_cast.cast_order",
            "movie_cast.*",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.job",
            "movie_crew.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[person]",
            "COLUMN:[person].[person_name]",
            "COLUMN:[person].[person_id]",
            "COLUMN:[person].[*]",
            "TABLE:[movie_cast]",
            "COLUMN:[movie_cast].[person_id]",
            "COLUMN:[movie_cast].[movie_id]",
            "COLUMN:[movie_cast].[gender_id]",
            "COLUMN:[movie_cast].[character_name]",
            "COLUMN:[movie_cast].[cast_order]",
            "COLUMN:[movie_cast].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[gender]':\n  '[gender_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_cast]':\n  '[cast_order]': integer\n  '[character_name]': text\n  '[gender_id]':\n    foreign_key: '[gender].[gender_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n  '[person_name]': text\n",
        "gold_links": {
            "titles": "COLUMN:[movie].[title]",
            "movies": "TABLE:[movie]",
            "starring": "TABLE:[movie_cast]",
            "Jim Carrey": "VALUE:[person].[person_name]",
            "person_name": "COLUMN:[person].[person_name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[gender]",
                "[C2]": "[gender].[gender_id]",
                "[T3]": "[movie]",
                "[C3]": "[movie].[budget]",
                "[C4]": "[movie].[homepage]",
                "[C5]": "[movie].[movie_id]",
                "[C6]": "[movie].[overview]",
                "[C7]": "[movie].[title]",
                "[T4]": "[movie_cast]",
                "[C8]": "[movie_cast].[cast_order]",
                "[C9]": "[movie_cast].[character_name]",
                "[C10]": "[movie_cast].[gender_id]",
                "[C11]": "[movie_cast].[movie_id]",
                "[C12]": "[movie_cast].[person_id]",
                "[T5]": "[movie_crew]",
                "[C13]": "[movie_crew].[department_id]",
                "[C14]": "[movie_crew].[job]",
                "[C15]": "[movie_crew].[movie_id]",
                "[C16]": "[movie_crew].[person_id]",
                "[T6]": "[person]",
                "[C17]": "[person].[person_id]",
                "[C18]": "[person].[person_name]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[gender]": "[T2]",
                "[gender].[gender_id]": "[C2]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C3]",
                "[movie].[homepage]": "[C4]",
                "[movie].[movie_id]": "[C5]",
                "[movie].[overview]": "[C6]",
                "[movie].[title]": "[C7]",
                "[movie_cast]": "[T4]",
                "[movie_cast].[cast_order]": "[C8]",
                "[movie_cast].[character_name]": "[C9]",
                "[movie_cast].[gender_id]": "[C10]",
                "[movie_cast].[movie_id]": "[C11]",
                "[movie_cast].[person_id]": "[C12]",
                "[movie_crew]": "[T5]",
                "[movie_crew].[department_id]": "[C13]",
                "[movie_crew].[job]": "[C14]",
                "[movie_crew].[movie_id]": "[C15]",
                "[movie_crew].[person_id]": "[C16]",
                "[person]": "[T6]",
                "[person].[person_id]": "[C17]",
                "[person].[person_name]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C3]': integer\n  '[C4]': text\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]': text\n  '[C7]': text\n'[T4]':\n  '[C10]':\n    foreign_key: '[T2].[C2]'\n    type: integer\n  '[C11]':\n    foreign_key: '[T3].[C5]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T6].[C17]'\n    type: integer\n  '[C8]': integer\n  '[C9]': text\n'[T5]':\n  '[C13]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C14]': text\n  '[C15]':\n    foreign_key: '[T3].[C5]'\n    type: integer\n  '[C16]':\n    foreign_key: '[T6].[C17]'\n    type: integer\n'[T6]':\n  '[C17]':\n    primary_key: true\n    type: integer\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[gender]",
                "[T2].[C2]": "[gender].[gender_id]",
                "[C2]": "[gender].[gender_id]",
                "[T3]": "[movie]",
                "[T3].[C3]": "[movie].[budget]",
                "[C3]": "[movie].[budget]",
                "[T3].[C4]": "[movie].[homepage]",
                "[C4]": "[movie].[homepage]",
                "[T3].[C5]": "[movie].[movie_id]",
                "[C5]": "[movie].[movie_id]",
                "[T3].[C6]": "[movie].[overview]",
                "[C6]": "[movie].[overview]",
                "[T3].[C7]": "[movie].[title]",
                "[C7]": "[movie].[title]",
                "[T4]": "[movie_cast]",
                "[T4].[C8]": "[movie_cast].[cast_order]",
                "[C8]": "[movie_cast].[cast_order]",
                "[T4].[C9]": "[movie_cast].[character_name]",
                "[C9]": "[movie_cast].[character_name]",
                "[T4].[C10]": "[movie_cast].[gender_id]",
                "[C10]": "[movie_cast].[gender_id]",
                "[T4].[C11]": "[movie_cast].[movie_id]",
                "[C11]": "[movie_cast].[movie_id]",
                "[T4].[C12]": "[movie_cast].[person_id]",
                "[C12]": "[movie_cast].[person_id]",
                "[T5]": "[movie_crew]",
                "[T5].[C13]": "[movie_crew].[department_id]",
                "[C13]": "[movie_crew].[department_id]",
                "[T5].[C14]": "[movie_crew].[job]",
                "[C14]": "[movie_crew].[job]",
                "[T5].[C15]": "[movie_crew].[movie_id]",
                "[C15]": "[movie_crew].[movie_id]",
                "[T5].[C16]": "[movie_crew].[person_id]",
                "[C16]": "[movie_crew].[person_id]",
                "[T6]": "[person]",
                "[T6].[C17]": "[person].[person_id]",
                "[C17]": "[person].[person_id]",
                "[T6].[C18]": "[person].[person_name]",
                "[C18]": "[person].[person_name]"
            },
            "question": "Write me the [C7] of the [T3] starring [V1]. [V1] is the person_name;; [V1] is a value of the column [C18]",
            "to_value": {
                "[V1]": "Jim Carrey"
            },
            "masked": 4,
            "masked_terms": [
                "Jim Carrey",
                "titles",
                "movies",
                "Jim Carrey"
            ],
            "sql": "SELECT [T3].[C7] FROM [T3] JOIN [T4] ON [T3].[C5] = [T4].[C11] JOIN [T6] ON [T4].[C12] = [T6].[C17] WHERE [T6].[C18] = '[V1]'",
            "repaired_sql": "SELECT [T3].[C7] FROM [T3] JOIN [T4] ON [T3].[C5] = [T4].[C11] JOIN [T6] ON [T4].[C12] = [T6].[C17] WHERE [T6].[C18] = '[V1]'"
        },
        "values": [
            "Jim Carrey"
        ],
        "value_links": {
            "Jim Carrey": "[person].[person_name]"
        },
        "filtered_value_links": {
            "Jim Carrey": "[person].[person_name]"
        },
        "schema_links": {
            "titles": "COLUMN:[movie].[title]",
            "movies": "TABLE:[movie]",
            "Jim Carrey": "COLUMN:[person].[person_name]"
        },
        "filtered_schema_links": {
            "titles": "COLUMN:[movie].[title]",
            "movies": "TABLE:[movie]",
            "Jim Carrey": "COLUMN:[person].[person_name]"
        },
        "attack": "Write me the title of the movies starring John Doe."
    },
    {
        "db_id": "movies_4",
        "question": "Write the titles of horror films with a vote average of more than 7. horror films refers to genre_name = 'Horror'; vote average of more than 7 refers to vote_average > 7",
        "evidence": "horror films refers to genre_name = 'Horror'; vote average of more than 7 refers to vote_average > 7",
        "SQL": "SELECT T1.title FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Horror' AND vote_average > 7",
        "query": "SELECT T1.title FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Horror' AND vote_average > 7",
        "evidence_added": true,
        "question_toks": [
            "Write",
            "the",
            "titles",
            "of",
            "horror",
            "films",
            "with",
            "a",
            "vote",
            "average",
            "of",
            "more",
            "than",
            "7",
            ".",
            "horror",
            "films",
            "refers",
            "to",
            "genre_name",
            "=",
            "'Horror'",
            ";",
            "vote",
            "average",
            "of",
            "more",
            "than",
            "7",
            "refers",
            "to",
            "vote_average",
            ">",
            "7"
        ],
        "tc_original": [
            "movie.vote_average",
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.*",
            "genre.genre_name",
            "genre.genre_id",
            "genre.*",
            "movie_genres.genre_id",
            "movie_genres.movie_id",
            "movie_genres.*",
            "gender.gender",
            "gender.gender_id",
            "gender.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[vote_average]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[*]",
            "TABLE:[genre]",
            "COLUMN:[genre].[genre_name]",
            "COLUMN:[genre].[genre_id]",
            "COLUMN:[genre].[*]",
            "TABLE:[movie_genres]",
            "COLUMN:[movie_genres].[genre_id]",
            "COLUMN:[movie_genres].[movie_id]",
            "COLUMN:[movie_genres].[*]",
            "TABLE:[gender]",
            "COLUMN:[gender].[gender]",
            "COLUMN:[gender].[gender_id]",
            "COLUMN:[gender].[*]"
        ],
        "schema": "'[gender]':\n  '[gender]': text\n  '[gender_id]':\n    primary_key: true\n    type: integer\n'[genre]':\n  '[genre_id]':\n    primary_key: true\n    type: integer\n  '[genre_name]': text\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[title]': text\n  '[vote_average]': real\n'[movie_genres]':\n  '[genre_id]':\n    foreign_key: '[genre].[genre_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n",
        "gold_links": {
            "titles": "COLUMN:[movie].[title]",
            "horror films": "VALUE:[genre].[genre_name]",
            "genre": "COLUMN:[genre].[genre_name]",
            "vote average": "COLUMN:[movie].[vote_average]",
            "7": "VALUE:[movie].[vote_average]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[gender]",
                "[C1]": "[gender].[gender]",
                "[C2]": "[gender].[gender_id]",
                "[T2]": "[genre]",
                "[C3]": "[genre].[genre_id]",
                "[C4]": "[genre].[genre_name]",
                "[T3]": "[movie]",
                "[C5]": "[movie].[budget]",
                "[C6]": "[movie].[homepage]",
                "[C7]": "[movie].[movie_id]",
                "[C8]": "[movie].[title]",
                "[C9]": "[movie].[vote_average]",
                "[T4]": "[movie_genres]",
                "[C10]": "[movie_genres].[genre_id]",
                "[C11]": "[movie_genres].[movie_id]"
            },
            "to_symbol": {
                "[gender]": "[T1]",
                "[gender].[gender]": "[C1]",
                "[gender].[gender_id]": "[C2]",
                "[genre]": "[T2]",
                "[genre].[genre_id]": "[C3]",
                "[genre].[genre_name]": "[C4]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C5]",
                "[movie].[homepage]": "[C6]",
                "[movie].[movie_id]": "[C7]",
                "[movie].[title]": "[C8]",
                "[movie].[vote_average]": "[C9]",
                "[movie_genres]": "[T4]",
                "[movie_genres].[genre_id]": "[C10]",
                "[movie_genres].[movie_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n'[T3]':\n  '[C5]': integer\n  '[C6]': text\n  '[C7]':\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]': real\n'[T4]':\n  '[C10]':\n    foreign_key: '[T2].[C3]'\n    type: integer\n  '[C11]':\n    foreign_key: '[T3].[C7]'\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[gender]",
                "[T1].[C1]": "[gender].[gender]",
                "[C1]": "[gender].[gender]",
                "[T1].[C2]": "[gender].[gender_id]",
                "[C2]": "[gender].[gender_id]",
                "[T2]": "[genre]",
                "[T2].[C3]": "[genre].[genre_id]",
                "[C3]": "[genre].[genre_id]",
                "[T2].[C4]": "[genre].[genre_name]",
                "[C4]": "[genre].[genre_name]",
                "[T3]": "[movie]",
                "[T3].[C5]": "[movie].[budget]",
                "[C5]": "[movie].[budget]",
                "[T3].[C6]": "[movie].[homepage]",
                "[C6]": "[movie].[homepage]",
                "[T3].[C7]": "[movie].[movie_id]",
                "[C7]": "[movie].[movie_id]",
                "[T3].[C8]": "[movie].[title]",
                "[C8]": "[movie].[title]",
                "[T3].[C9]": "[movie].[vote_average]",
                "[C9]": "[movie].[vote_average]",
                "[T4]": "[movie_genres]",
                "[T4].[C10]": "[movie_genres].[genre_id]",
                "[C10]": "[movie_genres].[genre_id]",
                "[T4].[C11]": "[movie_genres].[movie_id]",
                "[C11]": "[movie_genres].[movie_id]"
            },
            "question": "Write the [C8] of [V1] films with a [C9] of more than 7. [V1] films refers to genre_name = '[V1]'; [C9] of more than 7 refers to vote_average > 7; [V1] is a value of the column [C8]",
            "to_value": {
                "[V1]": "Horror"
            },
            "masked": 3,
            "masked_terms": [
                "Horror",
                "titles",
                "vote average"
            ],
            "sql": "SELECT [T3].[C8] FROM [T3] WHERE [T3].[C6] = '[V1]' AND [T3].[C9] > 7",
            "repaired_sql": "SELECT [T3].[C8] FROM [T3] WHERE [T3].[C6] = '[V1]' AND [T3].[C9] > 7"
        },
        "values": [
            "Horror"
        ],
        "value_links": {
            "Horror": "[movie].[title]"
        },
        "filtered_value_links": {
            "Horror": "[movie].[title]"
        },
        "schema_links": {
            "titles": "COLUMN:[movie].[title]",
            "vote average": "COLUMN:[movie].[vote_average]"
        },
        "filtered_schema_links": {
            "titles": "COLUMN:[movie].[title]",
            "vote average": "COLUMN:[movie].[vote_average]"
        },
        "attack": "Write the genre_name of Action films with a vote_average of more than 7."
    },
    {
        "db_id": "movies_4",
        "question": "List the title of movies in Latin released between 1/01/1990 and 12/31/1995. movies in Latin refers to language_name = 'Latin'; released between 1/01/1990 and 12/31/1995 refers to release_date BETWEEN '1990-01-01' AND '1995-12-31'",
        "evidence": "movies in Latin refers to language_name = 'Latin'; released between 1/01/1990 and 12/31/1995 refers to release_date BETWEEN '1990-01-01' AND '1995-12-31'",
        "SQL": "SELECT T1.title FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T3.language_name = 'Latin' AND T1.release_date BETWEEN '1990-01-01' AND '1995-12-31'",
        "query": "SELECT T1.title FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T3.language_name = 'Latin' AND T1.release_date BETWEEN '1990-01-01' AND '1995-12-31'",
        "evidence_added": true,
        "question_toks": [
            "List",
            "the",
            "title",
            "of",
            "movies",
            "in",
            "Latin",
            "released",
            "between",
            "1/01/1990",
            "and",
            "12/31/1995",
            ".",
            "movies",
            "in",
            "Latin",
            "refers",
            "to",
            "language_name",
            "=",
            "'Latin'",
            ";",
            "released",
            "between",
            "1/01/1990",
            "and",
            "12/31/1995",
            "refers",
            "to",
            "release_date",
            "BETWEEN",
            "'1990-01-01'",
            "AND",
            "'1995-12-31'"
        ],
        "tc_original": [
            "movie.movie_id",
            "movie.title",
            "movie.release_date",
            "movie.budget",
            "movie.homepage",
            "movie.*",
            "movie_languages.movie_id",
            "movie_languages.language_id",
            "movie_languages.language_role_id",
            "movie_languages.*",
            "language.language_id",
            "language.language_name",
            "language.language_code",
            "language.*",
            "movie_keywords.movie_id",
            "movie_keywords.keyword_id",
            "movie_keywords.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[release_date]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_languages]",
            "COLUMN:[movie_languages].[movie_id]",
            "COLUMN:[movie_languages].[language_id]",
            "COLUMN:[movie_languages].[language_role_id]",
            "COLUMN:[movie_languages].[*]",
            "TABLE:[language]",
            "COLUMN:[language].[language_id]",
            "COLUMN:[language].[language_name]",
            "COLUMN:[language].[language_code]",
            "COLUMN:[language].[*]",
            "TABLE:[movie_keywords]",
            "COLUMN:[movie_keywords].[movie_id]",
            "COLUMN:[movie_keywords].[keyword_id]",
            "COLUMN:[movie_keywords].[*]"
        ],
        "schema": "'[language]':\n  '[language_code]': text\n  '[language_id]':\n    primary_key: true\n    type: integer\n  '[language_name]': text\n'[language_role]':\n  '[role_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[release_date]': date\n  '[title]': text\n'[movie_keywords]':\n  '[keyword_id]': integer\n  '[movie_id]': integer\n'[movie_languages]':\n  '[language_id]':\n    foreign_key: '[language].[language_id]'\n    type: integer\n  '[language_role_id]':\n    foreign_key: '[language_role].[role_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n",
        "gold_links": {
            "title": "COLUMN:[movie].[title]",
            "movies": "TABLE:[movie]",
            "Latin": "VALUE:[language].[language_name]",
            "language_name": "COLUMN:[language].[language_name]",
            "released": "COLUMN:[movie].[release_date]",
            "release_date": "COLUMN:[movie].[release_date]",
            "1990": "VALUE:[movie].[release_date]",
            "1995": "VALUE:[movie].[release_date]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[language]",
                "[C1]": "[language].[language_code]",
                "[C2]": "[language].[language_id]",
                "[C3]": "[language].[language_name]",
                "[T2]": "[language_role]",
                "[C4]": "[language_role].[role_id]",
                "[T3]": "[movie]",
                "[C5]": "[movie].[budget]",
                "[C6]": "[movie].[homepage]",
                "[C7]": "[movie].[movie_id]",
                "[C8]": "[movie].[release_date]",
                "[C9]": "[movie].[title]",
                "[T4]": "[movie_keywords]",
                "[C10]": "[movie_keywords].[keyword_id]",
                "[C11]": "[movie_keywords].[movie_id]",
                "[T5]": "[movie_languages]",
                "[C12]": "[movie_languages].[language_id]",
                "[C13]": "[movie_languages].[language_role_id]",
                "[C14]": "[movie_languages].[movie_id]"
            },
            "to_symbol": {
                "[language]": "[T1]",
                "[language].[language_code]": "[C1]",
                "[language].[language_id]": "[C2]",
                "[language].[language_name]": "[C3]",
                "[language_role]": "[T2]",
                "[language_role].[role_id]": "[C4]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C5]",
                "[movie].[homepage]": "[C6]",
                "[movie].[movie_id]": "[C7]",
                "[movie].[release_date]": "[C8]",
                "[movie].[title]": "[C9]",
                "[movie_keywords]": "[T4]",
                "[movie_keywords].[keyword_id]": "[C10]",
                "[movie_keywords].[movie_id]": "[C11]",
                "[movie_languages]": "[T5]",
                "[movie_languages].[language_id]": "[C12]",
                "[movie_languages].[language_role_id]": "[C13]",
                "[movie_languages].[movie_id]": "[C14]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C5]': integer\n  '[C6]': text\n  '[C7]':\n    primary_key: true\n    type: integer\n  '[C8]': date\n  '[C9]': text\n'[T4]':\n  '[C10]': integer\n  '[C11]': integer\n'[T5]':\n  '[C12]':\n    foreign_key: '[T1].[C2]'\n    type: integer\n  '[C13]':\n    foreign_key: '[T2].[C4]'\n    type: integer\n  '[C14]':\n    foreign_key: '[T3].[C7]'\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[language]",
                "[T1].[C1]": "[language].[language_code]",
                "[C1]": "[language].[language_code]",
                "[T1].[C2]": "[language].[language_id]",
                "[C2]": "[language].[language_id]",
                "[T1].[C3]": "[language].[language_name]",
                "[C3]": "[language].[language_name]",
                "[T2]": "[language_role]",
                "[T2].[C4]": "[language_role].[role_id]",
                "[C4]": "[language_role].[role_id]",
                "[T3]": "[movie]",
                "[T3].[C5]": "[movie].[budget]",
                "[C5]": "[movie].[budget]",
                "[T3].[C6]": "[movie].[homepage]",
                "[C6]": "[movie].[homepage]",
                "[T3].[C7]": "[movie].[movie_id]",
                "[C7]": "[movie].[movie_id]",
                "[T3].[C8]": "[movie].[release_date]",
                "[C8]": "[movie].[release_date]",
                "[T3].[C9]": "[movie].[title]",
                "[C9]": "[movie].[title]",
                "[T4]": "[movie_keywords]",
                "[T4].[C10]": "[movie_keywords].[keyword_id]",
                "[C10]": "[movie_keywords].[keyword_id]",
                "[T4].[C11]": "[movie_keywords].[movie_id]",
                "[C11]": "[movie_keywords].[movie_id]",
                "[T5]": "[movie_languages]",
                "[T5].[C12]": "[movie_languages].[language_id]",
                "[C12]": "[movie_languages].[language_id]",
                "[T5].[C13]": "[movie_languages].[language_role_id]",
                "[C13]": "[movie_languages].[language_role_id]",
                "[T5].[C14]": "[movie_languages].[movie_id]",
                "[C14]": "[movie_languages].[movie_id]"
            },
            "question": "List the [C9] of movies in [C3] released between 1/01/1990 and 12/31/1995. movies in [C3] refers to language_name = '[C3]'; released between 1/01/1990 and 12/31/1995 refers to release_date BETWEEN '[C8]' AND '[C8]'; [V1] is a value of the column [C8]; [V2] is a value of the column [C8]",
            "to_value": {
                "[V1]": "'1990-01-01'",
                "[V2]": "'1995-12-31'"
            },
            "masked": 7,
            "masked_terms": [
                "'1990-01-01'",
                "'1995-12-31'",
                "title",
                "movie",
                "Latin",
                "1990-01-01",
                "1995-12-31"
            ],
            "sql": "SELECT [T3].[C9] FROM [T3] INNER JOIN [T5] ON [T3].[C7] = [T5].[C14] INNER JOIN [T1] ON [T5].[C12] = [T1].[C2] WHERE [T1].[C3] = '[C3]' AND [T3].[C8] BETWEEN '1990-01-01' AND '1995-12-31'",
            "repaired_sql": "SELECT [T3].[C9] FROM [T3] JOIN [T5] ON [T3].[C7] = [T5].[C14] JOIN [T1] ON [T5].[C12] = [T1].[C2] WHERE [T1].[C3] = '[C3]' AND [T3].[C8] BETWEEN '1990-01-01' AND '1995-12-31'"
        },
        "values": [
            "'Latin'",
            "'1990-01-01'",
            "'1995-12-31'"
        ],
        "value_links": {
            "'Latin'": "[movie_languages].[language_name]",
            "'1990-01-01'": "[movie].[release_date]",
            "'1995-12-31'": "[movie].[release_date]"
        },
        "filtered_value_links": {
            "'Latin'": "[movie_languages].[language_name]",
            "'1990-01-01'": "[movie].[release_date]",
            "'1995-12-31'": "[movie].[release_date]"
        },
        "schema_links": {
            "title": "COLUMN:[movie].[title]",
            "movie": "TABLE:[movie]",
            "Latin": "COLUMN:[language].[language_name]",
            "1990-01-01": "COLUMN:[movie].[release_date]",
            "1995-12-31": "COLUMN:[movie].[release_date]"
        },
        "filtered_schema_links": {
            "title": "COLUMN:[movie].[title]",
            "movie": "TABLE:[movie]",
            "Latin": "COLUMN:[language].[language_name]",
            "1990-01-01": "COLUMN:[movie].[release_date]",
            "1995-12-31": "COLUMN:[movie].[release_date]"
        },
        "attack": "List the title of movies in English released between 1/01/1990 and 12/31/1995."
    },
    {
        "db_id": "movies_4",
        "question": "What is the average revenue of American movies in 2006? American movies refers to country_name = 'United States of America'; in 2006 refers to release_date LIKE '2006%'; average revenue = AVG(revenue)",
        "evidence": "American movies refers to country_name = 'United States of America'; in 2006 refers to release_date LIKE '2006%'; average revenue = AVG(revenue)",
        "SQL": "SELECT AVG(T1.revenue) FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id WHERE T3.COUNTry_name = 'United States of America' AND CAST(STRFTIME('%Y', T1.release_date) AS INT) = 2006",
        "query": "SELECT AVG(T1.revenue) FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id WHERE T3.COUNTry_name = 'United States of America' AND CAST(STRFTIME('%Y', T1.release_date) AS INT) = 2006",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "revenue",
            "of",
            "American",
            "movies",
            "in",
            "2006",
            "?",
            "American",
            "movies",
            "refers",
            "to",
            "country_name",
            "=",
            "'United",
            "States",
            "of",
            "America'",
            ";",
            "in",
            "2006",
            "refers",
            "to",
            "release_date",
            "LIKE",
            "'2006%'",
            ";",
            "average",
            "revenue",
            "=",
            "AVG(revenue)"
        ],
        "tc_original": [
            "movie.revenue",
            "movie.release_date",
            "movie.title",
            "movie.budget",
            "movie.homepage",
            "movie.*",
            "country.country_name",
            "country.country_id",
            "country.country_iso_code",
            "country.*",
            "movie_crew.job",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.*",
            "gender.gender",
            "gender.gender_id",
            "gender.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[revenue]",
            "COLUMN:[movie].[release_date]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[*]",
            "TABLE:[country]",
            "COLUMN:[country].[country_name]",
            "COLUMN:[country].[country_id]",
            "COLUMN:[country].[country_iso_code]",
            "COLUMN:[country].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[*]",
            "TABLE:[gender]",
            "COLUMN:[gender].[gender]",
            "COLUMN:[gender].[gender_id]",
            "COLUMN:[gender].[*]"
        ],
        "schema": "'[country]':\n  '[country_id]':\n    primary_key: true\n    type: integer\n  '[country_iso_code]': text\n  '[country_name]': text\n'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[gender]':\n  '[gender]': text\n  '[gender_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[release_date]': date\n  '[revenue]': integer\n  '[title]': text\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "average revenue": "COLUMN:[movie].[revenue]",
            "revenue": "COLUMN:[movie].[revenue]",
            "American movies": "COLUMN:[country].[country_name]",
            "United States of America": "VALUE:[country].[country_name]",
            "2006": "VALUE:[movie].[release_date]",
            "release date": "COLUMN:[movie].[release_date]",
            "movie": "TABLE:[movie]",
            "country": "TABLE:[country]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[country]",
                "[C1]": "[country].[country_id]",
                "[C2]": "[country].[country_iso_code]",
                "[C3]": "[country].[country_name]",
                "[T2]": "[department]",
                "[C4]": "[department].[department_id]",
                "[T3]": "[gender]",
                "[C5]": "[gender].[gender]",
                "[C6]": "[gender].[gender_id]",
                "[T4]": "[movie]",
                "[C7]": "[movie].[budget]",
                "[C8]": "[movie].[homepage]",
                "[C9]": "[movie].[movie_id]",
                "[C10]": "[movie].[release_date]",
                "[C11]": "[movie].[revenue]",
                "[C12]": "[movie].[title]",
                "[T5]": "[movie_crew]",
                "[C13]": "[movie_crew].[department_id]",
                "[C14]": "[movie_crew].[job]",
                "[C15]": "[movie_crew].[movie_id]",
                "[C16]": "[movie_crew].[person_id]",
                "[T6]": "[person]",
                "[C17]": "[person].[person_id]"
            },
            "to_symbol": {
                "[country]": "[T1]",
                "[country].[country_id]": "[C1]",
                "[country].[country_iso_code]": "[C2]",
                "[country].[country_name]": "[C3]",
                "[department]": "[T2]",
                "[department].[department_id]": "[C4]",
                "[gender]": "[T3]",
                "[gender].[gender]": "[C5]",
                "[gender].[gender_id]": "[C6]",
                "[movie]": "[T4]",
                "[movie].[budget]": "[C7]",
                "[movie].[homepage]": "[C8]",
                "[movie].[movie_id]": "[C9]",
                "[movie].[release_date]": "[C10]",
                "[movie].[revenue]": "[C11]",
                "[movie].[title]": "[C12]",
                "[movie_crew]": "[T5]",
                "[movie_crew].[department_id]": "[C13]",
                "[movie_crew].[job]": "[C14]",
                "[movie_crew].[movie_id]": "[C15]",
                "[movie_crew].[person_id]": "[C16]",
                "[person]": "[T6]",
                "[person].[person_id]": "[C17]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C5]': text\n  '[C6]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]': date\n  '[C11]': integer\n  '[C12]': text\n  '[C7]': integer\n  '[C8]': text\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C13]':\n    foreign_key: '[T2].[C4]'\n    type: integer\n  '[C14]': text\n  '[C15]':\n    foreign_key: '[T4].[C9]'\n    type: integer\n  '[C16]':\n    foreign_key: '[T6].[C17]'\n    type: integer\n'[T6]':\n  '[C17]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[country]",
                "[T1].[C1]": "[country].[country_id]",
                "[C1]": "[country].[country_id]",
                "[T1].[C2]": "[country].[country_iso_code]",
                "[C2]": "[country].[country_iso_code]",
                "[T1].[C3]": "[country].[country_name]",
                "[C3]": "[country].[country_name]",
                "[T2]": "[department]",
                "[T2].[C4]": "[department].[department_id]",
                "[C4]": "[department].[department_id]",
                "[T3]": "[gender]",
                "[T3].[C5]": "[gender].[gender]",
                "[C5]": "[gender].[gender]",
                "[T3].[C6]": "[gender].[gender_id]",
                "[C6]": "[gender].[gender_id]",
                "[T4]": "[movie]",
                "[T4].[C7]": "[movie].[budget]",
                "[C7]": "[movie].[budget]",
                "[T4].[C8]": "[movie].[homepage]",
                "[C8]": "[movie].[homepage]",
                "[T4].[C9]": "[movie].[movie_id]",
                "[C9]": "[movie].[movie_id]",
                "[T4].[C10]": "[movie].[release_date]",
                "[C10]": "[movie].[release_date]",
                "[T4].[C11]": "[movie].[revenue]",
                "[C11]": "[movie].[revenue]",
                "[T4].[C12]": "[movie].[title]",
                "[C12]": "[movie].[title]",
                "[T5]": "[movie_crew]",
                "[T5].[C13]": "[movie_crew].[department_id]",
                "[C13]": "[movie_crew].[department_id]",
                "[T5].[C14]": "[movie_crew].[job]",
                "[C14]": "[movie_crew].[job]",
                "[T5].[C15]": "[movie_crew].[movie_id]",
                "[C15]": "[movie_crew].[movie_id]",
                "[T5].[C16]": "[movie_crew].[person_id]",
                "[C16]": "[movie_crew].[person_id]",
                "[T6]": "[person]",
                "[T6].[C17]": "[person].[person_id]",
                "[C17]": "[person].[person_id]"
            },
            "question": "What is the [C11] of American movies in [V2]? American movies refers to country_name = '[V1]'; in [V2] refers to release_date LIKE '[V2]%'; [C11] = AVG(revenue); [V1] is a value of the column [C3]; [V2] is a value of the column [C10]",
            "to_value": {
                "[V1]": "United States of America",
                "[V2]": "2006"
            },
            "masked": 4,
            "masked_terms": [
                "United States of America",
                "2006",
                "average revenue",
                "2006"
            ],
            "sql": "SELECT AVG([T4].[C11]) FROM [T5] JOIN [T1] ON [T5].[C13] = [T1].[C1] JOIN [T4] ON [T5].[C15] = [T4].[C9] WHERE [T1].[C3] = '[V1]' AND [T4].[C10] LIKE '[V2]%'",
            "repaired_sql": "SELECT AVG([T4].[C11]) FROM [T4] JOIN [T5] ON [T4].[C9] = [T5].[C15] JOIN [T1] ON [T1].[C1] = [T4].[C7] WHERE [T1].[C3] = '[V1]' AND [T4].[C10] LIKE '[V2]%';"
        },
        "values": [
            "United States of America",
            "2006"
        ],
        "value_links": {
            "United States of America": "[country].[country_name]",
            "2006": "[movie].[release_date]"
        },
        "filtered_value_links": {
            "United States of America": "[country].[country_name]",
            "2006": "[movie].[release_date]"
        },
        "schema_links": {
            "average revenue": "COLUMN:[movie].[revenue]",
            "2006": "COLUMN:[movie].[release_date]"
        },
        "filtered_schema_links": {
            "average revenue": "COLUMN:[movie].[revenue]",
            "2006": "COLUMN:[movie].[release_date]"
        },
        "attack": "What is the average revenue of American movies in 2020? American movies refers to country_name = 'USA'; in 2020 refers to release_date LIKE '2020%'; average revenue = AVG(revenue); 'USA' is a value of the column country_name; '2020' is a value of the column release_date"
    },
    {
        "db_id": "movies_4",
        "question": "What is the percentage of romance films among films produced in India in 2015? romance films refers to genre_name = 'Romance'; in India refers to country_name = 'India'; 2015 refers to release_date BETWEEN '2015-01-01' AND '2015-01-31'; percentage = divide(sum(movie_id) when genre_name = 'Romance', count(movie_id)) as percentage",
        "evidence": "romance films refers to genre_name = 'Romance'; in India refers to country_name = 'India'; 2015 refers to release_date BETWEEN '2015-01-01' AND '2015-01-31'; percentage = divide(sum(movie_id) when genre_name = 'Romance', count(movie_id)) as percentage",
        "SQL": "SELECT CAST(COUNT(CASE WHEN T4.genre_name = 'Romance' THEN T1.movie_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN production_COUNTry AS T3 ON T1.movie_id = T3.movie_id INNER JOIN genre AS T4 ON T2.genre_id = T4.genre_id INNER JOIN COUNTry AS T5 ON T3.COUNTry_id = T5.COUNTry_id WHERE T5.COUNTry_name = 'India' AND T1.release_date BETWEEN '2015-01-01' AND '2015-12-31'",
        "query": "SELECT CAST(COUNT(CASE WHEN T4.genre_name = 'Romance' THEN T1.movie_id ELSE NULL END) AS REAL) * 100 / COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN production_COUNTry AS T3 ON T1.movie_id = T3.movie_id INNER JOIN genre AS T4 ON T2.genre_id = T4.genre_id INNER JOIN COUNTry AS T5 ON T3.COUNTry_id = T5.COUNTry_id WHERE T5.COUNTry_name = 'India' AND T1.release_date BETWEEN '2015-01-01' AND '2015-12-31'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "percentage",
            "of",
            "romance",
            "films",
            "among",
            "films",
            "produced",
            "in",
            "India",
            "in",
            "2015",
            "?",
            "romance",
            "films",
            "refers",
            "to",
            "genre_name",
            "=",
            "'Romance'",
            ";",
            "in",
            "India",
            "refers",
            "to",
            "country_name",
            "=",
            "'India'",
            ";",
            "2015",
            "refers",
            "to",
            "release_date",
            "BETWEEN",
            "'2015-01-01'",
            "AND",
            "'2015-01-31'",
            ";",
            "percentage",
            "=",
            "divide(sum(movie_id)",
            "when",
            "genre_name",
            "=",
            "'Romance'",
            ",",
            "count(movie_id))",
            "as",
            "percentage"
        ],
        "tc_original": [
            "country.country_id",
            "country.country_name",
            "country.country_iso_code",
            "country.*",
            "production_country.country_id",
            "production_country.movie_id",
            "production_country.*",
            "genre.genre_name",
            "genre.genre_id",
            "genre.*",
            "movie_genres.genre_id",
            "movie_genres.movie_id",
            "movie_genres.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[country]",
            "COLUMN:[country].[country_id]",
            "COLUMN:[country].[country_name]",
            "COLUMN:[country].[country_iso_code]",
            "COLUMN:[country].[*]",
            "TABLE:[production_country]",
            "COLUMN:[production_country].[country_id]",
            "COLUMN:[production_country].[movie_id]",
            "COLUMN:[production_country].[*]",
            "TABLE:[genre]",
            "COLUMN:[genre].[genre_name]",
            "COLUMN:[genre].[genre_id]",
            "COLUMN:[genre].[*]",
            "TABLE:[movie_genres]",
            "COLUMN:[movie_genres].[genre_id]",
            "COLUMN:[movie_genres].[movie_id]",
            "COLUMN:[movie_genres].[*]"
        ],
        "schema": "'[country]':\n  '[country_id]':\n    primary_key: true\n    type: integer\n  '[country_iso_code]': text\n  '[country_name]': text\n'[genre]':\n  '[genre_id]':\n    primary_key: true\n    type: integer\n  '[genre_name]': text\n'[movie]':\n  '[movie_id]':\n    primary_key: true\n    type: integer\n'[movie_genres]':\n  '[genre_id]':\n    foreign_key: '[genre].[genre_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n'[production_country]':\n  '[country_id]':\n    foreign_key: '[country].[country_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n",
        "gold_links": {
            "percentage": "COLUMN:[movie].[movie_id]",
            "romance films": "VALUE:[genre].[genre_name]",
            "romance": "VALUE:[genre].[genre_name]",
            "films": "TABLE:[movie]",
            "produced": "TABLE:[production_country]",
            "india": "VALUE:[country].[country_name]",
            "2015": "COLUMN:[movie].[release_date]",
            "genre": "TABLE:[genre]",
            "country": "TABLE:[country]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[country]",
                "[C1]": "[country].[country_id]",
                "[C2]": "[country].[country_iso_code]",
                "[C3]": "[country].[country_name]",
                "[T2]": "[genre]",
                "[C4]": "[genre].[genre_id]",
                "[C5]": "[genre].[genre_name]",
                "[T3]": "[movie]",
                "[C6]": "[movie].[movie_id]",
                "[T4]": "[movie_genres]",
                "[C7]": "[movie_genres].[genre_id]",
                "[C8]": "[movie_genres].[movie_id]",
                "[T5]": "[production_country]",
                "[C9]": "[production_country].[country_id]",
                "[C10]": "[production_country].[movie_id]"
            },
            "to_symbol": {
                "[country]": "[T1]",
                "[country].[country_id]": "[C1]",
                "[country].[country_iso_code]": "[C2]",
                "[country].[country_name]": "[C3]",
                "[genre]": "[T2]",
                "[genre].[genre_id]": "[C4]",
                "[genre].[genre_name]": "[C5]",
                "[movie]": "[T3]",
                "[movie].[movie_id]": "[C6]",
                "[movie_genres]": "[T4]",
                "[movie_genres].[genre_id]": "[C7]",
                "[movie_genres].[movie_id]": "[C8]",
                "[production_country]": "[T5]",
                "[production_country].[country_id]": "[C9]",
                "[production_country].[movie_id]": "[C10]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: integer\n  '[C5]': text\n'[T3]':\n  '[C6]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C7]':\n    foreign_key: '[T2].[C4]'\n    type: integer\n  '[C8]':\n    foreign_key: '[T3].[C6]'\n    type: integer\n'[T5]':\n  '[C10]':\n    foreign_key: '[T3].[C6]'\n    type: integer\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[country]",
                "[T1].[C1]": "[country].[country_id]",
                "[C1]": "[country].[country_id]",
                "[T1].[C2]": "[country].[country_iso_code]",
                "[C2]": "[country].[country_iso_code]",
                "[T1].[C3]": "[country].[country_name]",
                "[C3]": "[country].[country_name]",
                "[T2]": "[genre]",
                "[T2].[C4]": "[genre].[genre_id]",
                "[C4]": "[genre].[genre_id]",
                "[T2].[C5]": "[genre].[genre_name]",
                "[C5]": "[genre].[genre_name]",
                "[T3]": "[movie]",
                "[T3].[C6]": "[movie].[movie_id]",
                "[C6]": "[movie].[movie_id]",
                "[T4]": "[movie_genres]",
                "[T4].[C7]": "[movie_genres].[genre_id]",
                "[C7]": "[movie_genres].[genre_id]",
                "[T4].[C8]": "[movie_genres].[movie_id]",
                "[C8]": "[movie_genres].[movie_id]",
                "[T5]": "[production_country]",
                "[T5].[C9]": "[production_country].[country_id]",
                "[C9]": "[production_country].[country_id]",
                "[T5].[C10]": "[production_country].[movie_id]",
                "[C10]": "[production_country].[movie_id]"
            },
            "question": "What is the percentage of [C7] among [C7] [C9] in 2015? [C7] refers to genre_name = 'Romance'; in [C3] refers to country_name = '[C3]'; 2015 refers to release_date BETWEEN '2015-01-01' AND '2015-01-31'; percentage = divide(sum(movie_id) when genre_name = 'Romance', count(movie_id)) as percentage",
            "to_value": {},
            "masked": 4,
            "masked_terms": [
                "romance films",
                "films",
                "produced in India",
                "India"
            ],
            "sql": "SELECT 100.0 * COUNT(CASE WHEN [T2].[C5] = 'Romance' THEN 1 END) / COUNT(*) AS [percentage] FROM [T5] JOIN [T1] ON [T5].[C9] = [T1].[C1] JOIN [T3] ON [T5].[C10] = [T3].[C6] JOIN [T4] ON [T3].[C6] = [T4].[C8] JOIN [T2] ON [T4].[C7] = [T2].[C4] WHERE [T1].[C3] = '[C3]' AND [T1].[C2] BETWEEN '2015-01-01' AND '2015-01-31'",
            "repaired_sql": "SELECT 100.0 * SUM(CASE WHEN [T2].[C5] = 'Romance' THEN 1 ELSE 0 END) / COUNT([T1].[C1]) AS percentage FROM [T1] JOIN [T5] ON [T1].[C1] = [T5].[C9] JOIN [T3] ON [T5].[C10] = [T3].[C6] JOIN [T4] ON [T4].[C8] = [T3].[C6] JOIN [T2] ON [T4].[C7] = [T2].[C4] WHERE [T1].[C3] = '[C3]' AND [T3].[C2] BETWEEN '2015-01-01' AND '2015-01-31'"
        },
        "values": [
            "India",
            "2015-01-01",
            "2015-01-31"
        ],
        "value_links": {
            "India": "[production_country].[country_name]",
            "2015-01-01": "[production_country].[ movie_id]",
            "2015-01-31": "[production_country].[ movie_id]"
        },
        "filtered_value_links": {
            "India": "[production_country].[country_name]",
            "2015-01-01": "[production_country].[ movie_id]",
            "2015-01-31": "[production_country].[ movie_id]"
        },
        "schema_links": {
            "romance films": "COLUMN:[movie_genres].[genre_id]",
            "films": "COLUMN:[movie_genres].[genre_id]",
            "produced in India": "COLUMN:[production_country].[country_id]",
            "India": "COLUMN:[country].[country_name]"
        },
        "filtered_schema_links": {
            "romance films": "COLUMN:[movie_genres].[genre_id]",
            "films": "COLUMN:[movie_genres].[genre_id]",
            "produced in India": "COLUMN:[production_country].[country_id]",
            "India": "COLUMN:[country].[country_name]"
        },
        "attack": "What is the percentage of movies among movies produced in the United States in 2015 that belong to the Romance genre?"
    },
    {
        "db_id": "movies_4",
        "question": "List all companies who worked in the movie 'Ultramarines: A Warhammer 40,000 Movie.' all companies refers to company_name; movie 'Ultramarines: A Warhammer 40,000 Movie' refers to title = 'Ultramarines: A Warhammer 40,000 Movie'",
        "evidence": "all companies refers to company_name; movie 'Ultramarines: A Warhammer 40,000 Movie' refers to title = 'Ultramarines: A Warhammer 40,000 Movie'",
        "SQL": "SELECT T1.company_name FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T3.title = 'Ultramarines: A Warhammer 40,000 Movie'",
        "query": "SELECT T1.company_name FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T3.title = 'Ultramarines: A Warhammer 40,000 Movie'",
        "evidence_added": true,
        "question_toks": [
            "List",
            "all",
            "companies",
            "who",
            "worked",
            "in",
            "the",
            "movie",
            "'Ultramarines",
            ":",
            "A",
            "Warhammer",
            "40,000",
            "Movie.'",
            "all",
            "companies",
            "refers",
            "to",
            "company_name",
            ";",
            "movie",
            "'Ultramarines",
            ":",
            "A",
            "Warhammer",
            "40,000",
            "Movie'",
            "refers",
            "to",
            "title",
            "=",
            "'Ultramarines",
            ":",
            "A",
            "Warhammer",
            "40,000",
            "Movie'"
        ],
        "tc_original": [
            "movie_company.company_id",
            "movie_company.movie_id",
            "movie_company.*",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.job",
            "movie_crew.department_id",
            "movie_crew.*",
            "movie.movie_id",
            "movie.title",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "production_company.company_name",
            "production_company.company_id",
            "production_company.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie_company]",
            "COLUMN:[movie_company].[company_id]",
            "COLUMN:[movie_company].[movie_id]",
            "COLUMN:[movie_company].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[production_company]",
            "COLUMN:[production_company].[company_name]",
            "COLUMN:[production_company].[company_id]",
            "COLUMN:[production_company].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_company]':\n  '[company_id]': integer\n  '[movie_id]': integer\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n'[production_company]':\n  '[company_id]':\n    primary_key: true\n    type: integer\n  '[company_name]': text\n",
        "gold_links": {
            "companies": "COLUMN:[production_company].[company_name]",
            "company_name": "COLUMN:[production_company].[company_name]",
            "movie": "TABLE:[movie]",
            "Ultramarines: A Warhammer 40,000 Movie": "VALUE:[movie].[title]",
            "title": "COLUMN:[movie].[title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[movie]",
                "[C2]": "[movie].[budget]",
                "[C3]": "[movie].[homepage]",
                "[C4]": "[movie].[movie_id]",
                "[C5]": "[movie].[overview]",
                "[C6]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[C7]": "[movie_company].[company_id]",
                "[C8]": "[movie_company].[movie_id]",
                "[T4]": "[movie_crew]",
                "[C9]": "[movie_crew].[department_id]",
                "[C10]": "[movie_crew].[job]",
                "[C11]": "[movie_crew].[movie_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[C13]": "[person].[person_id]",
                "[T6]": "[production_company]",
                "[C14]": "[production_company].[company_id]",
                "[C15]": "[production_company].[company_name]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[movie]": "[T2]",
                "[movie].[budget]": "[C2]",
                "[movie].[homepage]": "[C3]",
                "[movie].[movie_id]": "[C4]",
                "[movie].[overview]": "[C5]",
                "[movie].[title]": "[C6]",
                "[movie_company]": "[T3]",
                "[movie_company].[company_id]": "[C7]",
                "[movie_company].[movie_id]": "[C8]",
                "[movie_crew]": "[T4]",
                "[movie_crew].[department_id]": "[C9]",
                "[movie_crew].[job]": "[C10]",
                "[movie_crew].[movie_id]": "[C11]",
                "[movie_crew].[person_id]": "[C12]",
                "[person]": "[T5]",
                "[person].[person_id]": "[C13]",
                "[production_company]": "[T6]",
                "[production_company].[company_id]": "[C14]",
                "[production_company].[company_name]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]': integer\n  '[C3]': text\n  '[C4]':\n    primary_key: true\n    type: integer\n  '[C5]': text\n  '[C6]': text\n'[T3]':\n  '[C7]': integer\n  '[C8]': integer\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    foreign_key: '[T2].[C4]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T5].[C13]'\n    type: integer\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T5]':\n  '[C13]':\n    primary_key: true\n    type: integer\n'[T6]':\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[movie]",
                "[T2].[C2]": "[movie].[budget]",
                "[C2]": "[movie].[budget]",
                "[T2].[C3]": "[movie].[homepage]",
                "[C3]": "[movie].[homepage]",
                "[T2].[C4]": "[movie].[movie_id]",
                "[C4]": "[movie].[movie_id]",
                "[T2].[C5]": "[movie].[overview]",
                "[C5]": "[movie].[overview]",
                "[T2].[C6]": "[movie].[title]",
                "[C6]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[T3].[C7]": "[movie_company].[company_id]",
                "[C7]": "[movie_company].[company_id]",
                "[T3].[C8]": "[movie_company].[movie_id]",
                "[C8]": "[movie_company].[movie_id]",
                "[T4]": "[movie_crew]",
                "[T4].[C9]": "[movie_crew].[department_id]",
                "[C9]": "[movie_crew].[department_id]",
                "[T4].[C10]": "[movie_crew].[job]",
                "[C10]": "[movie_crew].[job]",
                "[T4].[C11]": "[movie_crew].[movie_id]",
                "[C11]": "[movie_crew].[movie_id]",
                "[T4].[C12]": "[movie_crew].[person_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[T5].[C13]": "[person].[person_id]",
                "[C13]": "[person].[person_id]",
                "[T6]": "[production_company]",
                "[T6].[C14]": "[production_company].[company_id]",
                "[C14]": "[production_company].[company_id]",
                "[T6].[C15]": "[production_company].[company_name]",
                "[C15]": "[production_company].[company_name]"
            },
            "question": "List all [T3] who worked in the [T2] 'Ultramarines: A Warhammer 40,000 [T2].' all [T3] refers to company_name; [T2] 'Ultramarines: A Warhammer 40,000 [T2]' refers to [C6] = 'Ultramarines: A Warhammer 40,000 [T2]'; [V1] is a value of the column [C6]",
            "to_value": {
                "[V1]": "'Ultramarines: A Warhammer 40,000 Movie'"
            },
            "masked": 5,
            "masked_terms": [
                "'Ultramarines: A Warhammer 40,000 Movie'",
                "companies",
                "movie",
                "title",
                "Ultramarines: A Warhammer 40,000 Movie"
            ],
            "sql": "SELECT [T3].[C8] FROM [T3] JOIN [T4] ON [T3].[C7] = [T4].[C9] JOIN [T2] ON [T4].[C11] = [T2].[C4] WHERE [T2].[C6] = 'Ultramarines: A Warhammer 40,000 [T2]'",
            "repaired_sql": "SELECT DISTINCT [T3].[C8] FROM [T3] JOIN [T4] ON [T3].[C7] = [T4].[C12] JOIN [T2] ON [T4].[C11] = [T2].[C4] WHERE [T2].[C6] = 'Ultramarines: A Warhammer 40,000 [T2]'"
        },
        "values": [
            "'Ultramarines: A Warhammer 40,000 Movie'"
        ],
        "value_links": {
            "'Ultramarines: A Warhammer 40,000 Movie'": "[movie].[title]"
        },
        "filtered_value_links": {
            "'Ultramarines: A Warhammer 40,000 Movie'": "[movie].[title]"
        },
        "schema_links": {
            "companies": "TABLE:[movie_company]",
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "Ultramarines: A Warhammer 40,000 Movie": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "companies": "TABLE:[movie_company]",
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "Ultramarines: A Warhammer 40,000 Movie": "COLUMN:[movie].[title]"
        },
        "attack": "List all company_name who worked in the film 'Ultramarines: A Warhammer 40,000 Movie.'"
    },
    {
        "db_id": "movies_4",
        "question": "List 10 movie titles that were produced in France. France refers to country_name = 'France'",
        "evidence": "France refers to country_name = 'France'",
        "SQL": "SELECT T1.title FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id WHERE T3.COUNTry_name = 'France' LIMIT 10",
        "query": "SELECT T1.title FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id WHERE T3.COUNTry_name = 'France' LIMIT 10",
        "evidence_added": true,
        "question_toks": [
            "List",
            "10",
            "movie",
            "titles",
            "that",
            "were",
            "produced",
            "in",
            "France",
            ".",
            "France",
            "refers",
            "to",
            "country_name",
            "=",
            "'France'"
        ],
        "tc_original": [
            "country.country_id",
            "country.country_name",
            "country.country_iso_code",
            "country.*",
            "production_country.country_id",
            "production_country.movie_id",
            "production_country.*",
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "movie_company.company_id",
            "movie_company.movie_id",
            "movie_company.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[country]",
            "COLUMN:[country].[country_id]",
            "COLUMN:[country].[country_name]",
            "COLUMN:[country].[country_iso_code]",
            "COLUMN:[country].[*]",
            "TABLE:[production_country]",
            "COLUMN:[production_country].[country_id]",
            "COLUMN:[production_country].[movie_id]",
            "COLUMN:[production_country].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_company]",
            "COLUMN:[movie_company].[company_id]",
            "COLUMN:[movie_company].[movie_id]",
            "COLUMN:[movie_company].[*]"
        ],
        "schema": "'[country]':\n  '[country_id]':\n    primary_key: true\n    type: integer\n  '[country_iso_code]': text\n  '[country_name]': text\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_company]':\n  '[company_id]': integer\n  '[movie_id]': integer\n'[production_country]':\n  '[country_id]':\n    foreign_key: '[country].[country_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n",
        "gold_links": {
            "movie titles": "COLUMN:[movie].[title]",
            "title": "COLUMN:[movie].[title]",
            "France": "VALUE:[country].[country_name]",
            "produced": "TABLE:[production_country]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[country]",
                "[C1]": "[country].[country_id]",
                "[C2]": "[country].[country_iso_code]",
                "[C3]": "[country].[country_name]",
                "[T2]": "[movie]",
                "[C4]": "[movie].[budget]",
                "[C5]": "[movie].[homepage]",
                "[C6]": "[movie].[movie_id]",
                "[C7]": "[movie].[overview]",
                "[C8]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[C9]": "[movie_company].[company_id]",
                "[C10]": "[movie_company].[movie_id]",
                "[T4]": "[production_country]",
                "[C11]": "[production_country].[country_id]",
                "[C12]": "[production_country].[movie_id]"
            },
            "to_symbol": {
                "[country]": "[T1]",
                "[country].[country_id]": "[C1]",
                "[country].[country_iso_code]": "[C2]",
                "[country].[country_name]": "[C3]",
                "[movie]": "[T2]",
                "[movie].[budget]": "[C4]",
                "[movie].[homepage]": "[C5]",
                "[movie].[movie_id]": "[C6]",
                "[movie].[overview]": "[C7]",
                "[movie].[title]": "[C8]",
                "[movie_company]": "[T3]",
                "[movie_company].[company_id]": "[C9]",
                "[movie_company].[movie_id]": "[C10]",
                "[production_country]": "[T4]",
                "[production_country].[country_id]": "[C11]",
                "[production_country].[movie_id]": "[C12]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n'[T2]':\n  '[C4]': integer\n  '[C5]': text\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n'[T3]':\n  '[C10]': integer\n  '[C9]': integer\n'[T4]':\n  '[C11]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[country]",
                "[T1].[C1]": "[country].[country_id]",
                "[C1]": "[country].[country_id]",
                "[T1].[C2]": "[country].[country_iso_code]",
                "[C2]": "[country].[country_iso_code]",
                "[T1].[C3]": "[country].[country_name]",
                "[C3]": "[country].[country_name]",
                "[T2]": "[movie]",
                "[T2].[C4]": "[movie].[budget]",
                "[C4]": "[movie].[budget]",
                "[T2].[C5]": "[movie].[homepage]",
                "[C5]": "[movie].[homepage]",
                "[T2].[C6]": "[movie].[movie_id]",
                "[C6]": "[movie].[movie_id]",
                "[T2].[C7]": "[movie].[overview]",
                "[C7]": "[movie].[overview]",
                "[T2].[C8]": "[movie].[title]",
                "[C8]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[T3].[C9]": "[movie_company].[company_id]",
                "[C9]": "[movie_company].[company_id]",
                "[T3].[C10]": "[movie_company].[movie_id]",
                "[C10]": "[movie_company].[movie_id]",
                "[T4]": "[production_country]",
                "[T4].[C11]": "[production_country].[country_id]",
                "[C11]": "[production_country].[country_id]",
                "[T4].[C12]": "[production_country].[movie_id]",
                "[C12]": "[production_country].[movie_id]"
            },
            "question": "List 10 movie [C8] that were [T4] in [V1]. [V1] refers to country_name = '[V1]'; [V1] is a value of the column [C3]",
            "to_value": {
                "[V1]": "France"
            },
            "masked": 4,
            "masked_terms": [
                "France",
                "titles",
                "produced",
                "France"
            ],
            "sql": "SELECT [T2].[C8] FROM [T4] JOIN [T1] ON [T4].[C11] = [T1].[C1] JOIN [T2] ON [T4].[C12] = [T2].[C6] WHERE [T1].[C3] = '[V1]' LIMIT 10",
            "repaired_sql": "SELECT [T2].[C8] FROM [T4] JOIN [T1] ON [T4].[C11] = [T1].[C1] JOIN [T2] ON [T4].[C12] = [T2].[C6] WHERE [T1].[C3] = '[V1]' LIMIT 10"
        },
        "values": [
            "France"
        ],
        "value_links": {
            "France": "[country].[country_name]"
        },
        "filtered_value_links": {
            "France": "[country].[country_name]"
        },
        "schema_links": {
            "titles": "COLUMN:[movie].[title]",
            "produced": "TABLE:[production_country]",
            "France": "COLUMN:[country].[country_name]"
        },
        "filtered_schema_links": {
            "titles": "COLUMN:[movie].[title]",
            "produced": "TABLE:[production_country]",
            "France": "COLUMN:[country].[country_name]"
        },
        "attack": "List 10 movie titles that were produced in France."
    },
    {
        "db_id": "movies_4",
        "question": "Who is the director for the movie 'Transformers?' the director refers to person_name where job = 'Director'; movie 'Transformers' refers to title = 'Transformers'",
        "evidence": "the director refers to person_name where job = 'Director'; movie 'Transformers' refers to title = 'Transformers'",
        "SQL": "SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title = 'Transformers' AND T2.job = 'Director'",
        "query": "SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title = 'Transformers' AND T2.job = 'Director'",
        "evidence_added": true,
        "question_toks": [
            "Who",
            "is",
            "the",
            "director",
            "for",
            "the",
            "movie",
            "'Transformers?'",
            "the",
            "director",
            "refers",
            "to",
            "person_name",
            "where",
            "job",
            "=",
            "'Director'",
            ";",
            "movie",
            "'Transformers'",
            "refers",
            "to",
            "title",
            "=",
            "'Transformers'"
        ],
        "tc_original": [
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "movie_crew.movie_id",
            "movie_crew.job",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.*",
            "person.person_id",
            "person.person_name",
            "person.*",
            "gender.gender",
            "gender.gender_id",
            "gender.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[*]",
            "TABLE:[person]",
            "COLUMN:[person].[person_id]",
            "COLUMN:[person].[person_name]",
            "COLUMN:[person].[*]",
            "TABLE:[gender]",
            "COLUMN:[gender].[gender]",
            "COLUMN:[gender].[gender_id]",
            "COLUMN:[gender].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[gender]':\n  '[gender]': text\n  '[gender_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n  '[person_name]': text\n",
        "gold_links": {
            "director": "COLUMN:[movie_crew].[job]",
            "person_name": "COLUMN:[person].[person_name]",
            "movie": "TABLE:[movie]",
            "Transformers": "VALUE:[movie].[title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[gender]",
                "[C2]": "[gender].[gender]",
                "[C3]": "[gender].[gender_id]",
                "[T3]": "[movie]",
                "[C4]": "[movie].[budget]",
                "[C5]": "[movie].[homepage]",
                "[C6]": "[movie].[movie_id]",
                "[C7]": "[movie].[overview]",
                "[C8]": "[movie].[title]",
                "[T4]": "[movie_crew]",
                "[C9]": "[movie_crew].[department_id]",
                "[C10]": "[movie_crew].[job]",
                "[C11]": "[movie_crew].[movie_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[C13]": "[person].[person_id]",
                "[C14]": "[person].[person_name]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[gender]": "[T2]",
                "[gender].[gender]": "[C2]",
                "[gender].[gender_id]": "[C3]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C4]",
                "[movie].[homepage]": "[C5]",
                "[movie].[movie_id]": "[C6]",
                "[movie].[overview]": "[C7]",
                "[movie].[title]": "[C8]",
                "[movie_crew]": "[T4]",
                "[movie_crew].[department_id]": "[C9]",
                "[movie_crew].[job]": "[C10]",
                "[movie_crew].[movie_id]": "[C11]",
                "[movie_crew].[person_id]": "[C12]",
                "[person]": "[T5]",
                "[person].[person_id]": "[C13]",
                "[person].[person_name]": "[C14]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C4]': integer\n  '[C5]': text\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    foreign_key: '[T3].[C6]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T5].[C13]'\n    type: integer\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T5]':\n  '[C13]':\n    primary_key: true\n    type: integer\n  '[C14]': text\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[gender]",
                "[T2].[C2]": "[gender].[gender]",
                "[C2]": "[gender].[gender]",
                "[T2].[C3]": "[gender].[gender_id]",
                "[C3]": "[gender].[gender_id]",
                "[T3]": "[movie]",
                "[T3].[C4]": "[movie].[budget]",
                "[C4]": "[movie].[budget]",
                "[T3].[C5]": "[movie].[homepage]",
                "[C5]": "[movie].[homepage]",
                "[T3].[C6]": "[movie].[movie_id]",
                "[C6]": "[movie].[movie_id]",
                "[T3].[C7]": "[movie].[overview]",
                "[C7]": "[movie].[overview]",
                "[T3].[C8]": "[movie].[title]",
                "[C8]": "[movie].[title]",
                "[T4]": "[movie_crew]",
                "[T4].[C9]": "[movie_crew].[department_id]",
                "[C9]": "[movie_crew].[department_id]",
                "[T4].[C10]": "[movie_crew].[job]",
                "[C10]": "[movie_crew].[job]",
                "[T4].[C11]": "[movie_crew].[movie_id]",
                "[C11]": "[movie_crew].[movie_id]",
                "[T4].[C12]": "[movie_crew].[person_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[T5].[C13]": "[person].[person_id]",
                "[C13]": "[person].[person_id]",
                "[T5].[C14]": "[person].[person_name]",
                "[C14]": "[person].[person_name]"
            },
            "question": "Who is the [V2] for the movie '[V1]?' the [V2] refers to person_name where job = '[V2]'; movie '[V1]' refers to title = '[V1]'; [V1] is a value of the column [C8]; [V2] is a value of the column [C10]",
            "to_value": {
                "[V1]": "Transformers",
                "[V2]": "Director"
            },
            "masked": 4,
            "masked_terms": [
                "Transformers",
                "Director",
                "director",
                "transformers"
            ],
            "sql": "SELECT [T4].[C10] FROM [T4] INNER JOIN [T3] ON [T4].[C11] = [T3].[C6] WHERE [T3].[C8] = '[V1]' AND [T4].[C10] = '[V2]'",
            "repaired_sql": "SELECT [T5].[C14] FROM [T4] JOIN [T3] ON [T4].[C11]=[T3].[C6] JOIN [T5] ON [T4].[C12]=[T5].[C13] WHERE [T3].[C8]='[V1]' AND [T4].[C10]='[V2]'"
        },
        "values": [
            "Transformers",
            "Director"
        ],
        "value_links": {
            "Transformers": "[movie].[title]",
            "Director": "[movie_crew].[job]"
        },
        "filtered_value_links": {
            "Transformers": "[movie].[title]",
            "Director": "[movie_crew].[job]"
        },
        "schema_links": {
            "director": "COLUMN:[movie_crew].[person_id]",
            "transformers": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "director": "COLUMN:[movie_crew].[person_id]",
            "transformers": "COLUMN:[movie].[title]"
        },
        "attack": "Who is the director for the movie 'Inception?' the director refers to person_name where job = 'director'; movie 'Inception' refers to title = 'Inception'; Inception is a value of the column title; director is a value of the column job"
    },
    {
        "db_id": "movies_4",
        "question": "State the genre of the movie title with a runtime of only 14 minutes. genre refers to genre_name; runtime of only 14 minutes refers to runtime = 14",
        "evidence": "genre refers to genre_name; runtime of only 14 minutes refers to runtime = 14",
        "SQL": "SELECT T3.genre_name FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T1.runtime = 14",
        "query": "SELECT T3.genre_name FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T1.runtime = 14",
        "evidence_added": true,
        "question_toks": [
            "State",
            "the",
            "genre",
            "of",
            "the",
            "movie",
            "title",
            "with",
            "a",
            "runtime",
            "of",
            "only",
            "14",
            "minutes",
            ".",
            "genre",
            "refers",
            "to",
            "genre_name",
            ";",
            "runtime",
            "of",
            "only",
            "14",
            "minutes",
            "refers",
            "to",
            "runtime",
            "=",
            "14"
        ],
        "tc_original": [
            "movie_genres.movie_id",
            "movie_genres.genre_id",
            "movie_genres.*",
            "movie.runtime",
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.*",
            "genre.genre_name",
            "genre.genre_id",
            "genre.*",
            "gender.gender",
            "gender.gender_id",
            "gender.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie_genres]",
            "COLUMN:[movie_genres].[movie_id]",
            "COLUMN:[movie_genres].[genre_id]",
            "COLUMN:[movie_genres].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[runtime]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[*]",
            "TABLE:[genre]",
            "COLUMN:[genre].[genre_name]",
            "COLUMN:[genre].[genre_id]",
            "COLUMN:[genre].[*]",
            "TABLE:[gender]",
            "COLUMN:[gender].[gender]",
            "COLUMN:[gender].[gender_id]",
            "COLUMN:[gender].[*]"
        ],
        "schema": "'[gender]':\n  '[gender]': text\n  '[gender_id]':\n    primary_key: true\n    type: integer\n'[genre]':\n  '[genre_id]':\n    primary_key: true\n    type: integer\n  '[genre_name]': text\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[runtime]': integer\n  '[title]': text\n'[movie_genres]':\n  '[genre_id]':\n    foreign_key: '[genre].[genre_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n",
        "gold_links": {
            "genre": "COLUMN:[genre].[genre_name]",
            "movie title": "COLUMN:[movie].[title]",
            "runtime": "COLUMN:[movie].[runtime]",
            "14": "VALUE:[movie].[runtime]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[gender]",
                "[C1]": "[gender].[gender]",
                "[C2]": "[gender].[gender_id]",
                "[T2]": "[genre]",
                "[C3]": "[genre].[genre_id]",
                "[C4]": "[genre].[genre_name]",
                "[T3]": "[movie]",
                "[C5]": "[movie].[budget]",
                "[C6]": "[movie].[homepage]",
                "[C7]": "[movie].[movie_id]",
                "[C8]": "[movie].[runtime]",
                "[C9]": "[movie].[title]",
                "[T4]": "[movie_genres]",
                "[C10]": "[movie_genres].[genre_id]",
                "[C11]": "[movie_genres].[movie_id]"
            },
            "to_symbol": {
                "[gender]": "[T1]",
                "[gender].[gender]": "[C1]",
                "[gender].[gender_id]": "[C2]",
                "[genre]": "[T2]",
                "[genre].[genre_id]": "[C3]",
                "[genre].[genre_name]": "[C4]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C5]",
                "[movie].[homepage]": "[C6]",
                "[movie].[movie_id]": "[C7]",
                "[movie].[runtime]": "[C8]",
                "[movie].[title]": "[C9]",
                "[movie_genres]": "[T4]",
                "[movie_genres].[genre_id]": "[C10]",
                "[movie_genres].[movie_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n'[T3]':\n  '[C5]': integer\n  '[C6]': text\n  '[C7]':\n    primary_key: true\n    type: integer\n  '[C8]': integer\n  '[C9]': text\n'[T4]':\n  '[C10]':\n    foreign_key: '[T2].[C3]'\n    type: integer\n  '[C11]':\n    foreign_key: '[T3].[C7]'\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[gender]",
                "[T1].[C1]": "[gender].[gender]",
                "[C1]": "[gender].[gender]",
                "[T1].[C2]": "[gender].[gender_id]",
                "[C2]": "[gender].[gender_id]",
                "[T2]": "[genre]",
                "[T2].[C3]": "[genre].[genre_id]",
                "[C3]": "[genre].[genre_id]",
                "[T2].[C4]": "[genre].[genre_name]",
                "[C4]": "[genre].[genre_name]",
                "[T3]": "[movie]",
                "[T3].[C5]": "[movie].[budget]",
                "[C5]": "[movie].[budget]",
                "[T3].[C6]": "[movie].[homepage]",
                "[C6]": "[movie].[homepage]",
                "[T3].[C7]": "[movie].[movie_id]",
                "[C7]": "[movie].[movie_id]",
                "[T3].[C8]": "[movie].[runtime]",
                "[C8]": "[movie].[runtime]",
                "[T3].[C9]": "[movie].[title]",
                "[C9]": "[movie].[title]",
                "[T4]": "[movie_genres]",
                "[T4].[C10]": "[movie_genres].[genre_id]",
                "[C10]": "[movie_genres].[genre_id]",
                "[T4].[C11]": "[movie_genres].[movie_id]",
                "[C11]": "[movie_genres].[movie_id]"
            },
            "question": "State the genre of the movie [C9] with a [C8] of only 14 minutes. genre refers to genre_name; [C8] of only 14 minutes refers to [C8] = 14",
            "to_value": {},
            "masked": 2,
            "masked_terms": [
                "runtime",
                "title"
            ],
            "sql": "SELECT [T1].[C1] FROM [T3] JOIN [T4] ON [T3].[C7] = [T4].[C11] JOIN [T2] ON [T4].[C10] = [T2].[C3] JOIN [T1] ON [T2].[C4] = [T1].[C2] WHERE [T3].[C9] = '[C9]' AND [T3].[C8] = 14",
            "repaired_sql": "SELECT [T2].[C4] FROM [T3] JOIN [T4] ON [T3].[C7] = [T4].[C11] JOIN [T2] ON [T4].[C10] = [T2].[C3] WHERE [T3].[C9] = '[C9]' AND [T3].[C8] = 14"
        },
        "values": [
            "genre_name"
        ],
        "value_links": {
            "genre_name": "[movie_genres].[genre_name]"
        },
        "filtered_value_links": {
            "genre_name": "[movie_genres].[genre_name]"
        },
        "schema_links": {
            "runtime": "COLUMN:[movie].[runtime]",
            "title": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "runtime": "COLUMN:[movie].[runtime]",
            "title": "COLUMN:[movie].[title]"
        },
        "attack": "State the genre of the movie title with a duration of only 14 minutes. Genre refers to genre_name; duration of only 14 minutes refers to duration = 14."
    },
    {
        "db_id": "movies_4",
        "question": "List down the movie titles that were produced in Canada. produced in Canada refers to country_name = 'Canada'",
        "evidence": "produced in Canada refers to country_name = 'Canada'",
        "SQL": "SELECT T1.title FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id WHERE T3.COUNTry_name = 'Canada'",
        "query": "SELECT T1.title FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id WHERE T3.COUNTry_name = 'Canada'",
        "evidence_added": true,
        "question_toks": [
            "List",
            "down",
            "the",
            "movie",
            "titles",
            "that",
            "were",
            "produced",
            "in",
            "Canada",
            ".",
            "produced",
            "in",
            "Canada",
            "refers",
            "to",
            "country_name",
            "=",
            "'Canada'"
        ],
        "tc_original": [
            "country.country_name",
            "country.country_id",
            "country.country_iso_code",
            "country.*",
            "production_country.country_id",
            "production_country.movie_id",
            "production_country.*",
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "production_company.company_id",
            "production_company.company_name",
            "production_company.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[country]",
            "COLUMN:[country].[country_name]",
            "COLUMN:[country].[country_id]",
            "COLUMN:[country].[country_iso_code]",
            "COLUMN:[country].[*]",
            "TABLE:[production_country]",
            "COLUMN:[production_country].[country_id]",
            "COLUMN:[production_country].[movie_id]",
            "COLUMN:[production_country].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[production_company]",
            "COLUMN:[production_company].[company_id]",
            "COLUMN:[production_company].[company_name]",
            "COLUMN:[production_company].[*]"
        ],
        "schema": "'[country]':\n  '[country_id]':\n    primary_key: true\n    type: integer\n  '[country_iso_code]': text\n  '[country_name]': text\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[production_company]':\n  '[company_id]':\n    primary_key: true\n    type: integer\n  '[company_name]': text\n'[production_country]':\n  '[country_id]':\n    foreign_key: '[country].[country_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n",
        "gold_links": {
            "movie titles": "COLUMN:[movie].[title]",
            "produced": "TABLE:[production_country]",
            "Canada": "VALUE:[country].[country_name]",
            "country_name": "COLUMN:[country].[country_name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[country]",
                "[C1]": "[country].[country_id]",
                "[C2]": "[country].[country_iso_code]",
                "[C3]": "[country].[country_name]",
                "[T2]": "[movie]",
                "[C4]": "[movie].[budget]",
                "[C5]": "[movie].[homepage]",
                "[C6]": "[movie].[movie_id]",
                "[C7]": "[movie].[overview]",
                "[C8]": "[movie].[title]",
                "[T3]": "[production_company]",
                "[C9]": "[production_company].[company_id]",
                "[C10]": "[production_company].[company_name]",
                "[T4]": "[production_country]",
                "[C11]": "[production_country].[country_id]",
                "[C12]": "[production_country].[movie_id]"
            },
            "to_symbol": {
                "[country]": "[T1]",
                "[country].[country_id]": "[C1]",
                "[country].[country_iso_code]": "[C2]",
                "[country].[country_name]": "[C3]",
                "[movie]": "[T2]",
                "[movie].[budget]": "[C4]",
                "[movie].[homepage]": "[C5]",
                "[movie].[movie_id]": "[C6]",
                "[movie].[overview]": "[C7]",
                "[movie].[title]": "[C8]",
                "[production_company]": "[T3]",
                "[production_company].[company_id]": "[C9]",
                "[production_company].[company_name]": "[C10]",
                "[production_country]": "[T4]",
                "[production_country].[country_id]": "[C11]",
                "[production_country].[movie_id]": "[C12]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n'[T2]':\n  '[C4]': integer\n  '[C5]': text\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n'[T3]':\n  '[C10]': text\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C11]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T2].[C6]'\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[country]",
                "[T1].[C1]": "[country].[country_id]",
                "[C1]": "[country].[country_id]",
                "[T1].[C2]": "[country].[country_iso_code]",
                "[C2]": "[country].[country_iso_code]",
                "[T1].[C3]": "[country].[country_name]",
                "[C3]": "[country].[country_name]",
                "[T2]": "[movie]",
                "[T2].[C4]": "[movie].[budget]",
                "[C4]": "[movie].[budget]",
                "[T2].[C5]": "[movie].[homepage]",
                "[C5]": "[movie].[homepage]",
                "[T2].[C6]": "[movie].[movie_id]",
                "[C6]": "[movie].[movie_id]",
                "[T2].[C7]": "[movie].[overview]",
                "[C7]": "[movie].[overview]",
                "[T2].[C8]": "[movie].[title]",
                "[C8]": "[movie].[title]",
                "[T3]": "[production_company]",
                "[T3].[C9]": "[production_company].[company_id]",
                "[C9]": "[production_company].[company_id]",
                "[T3].[C10]": "[production_company].[company_name]",
                "[C10]": "[production_company].[company_name]",
                "[T4]": "[production_country]",
                "[T4].[C11]": "[production_country].[country_id]",
                "[C11]": "[production_country].[country_id]",
                "[T4].[C12]": "[production_country].[movie_id]",
                "[C12]": "[production_country].[movie_id]"
            },
            "question": "List down the [T2] [C8] that were produced in [C3]. produced in [C3] refers to country_name = '[C3]'",
            "to_value": {},
            "masked": 3,
            "masked_terms": [
                "titles",
                "movie",
                "Canada"
            ],
            "sql": "SELECT [T2].[C8] FROM [T2] JOIN [T4] ON [T2].[C6] = [T4].[C12] JOIN [T1] ON [T4].[C11] = [T1].[C1] WHERE [T1].[C3] = '[C3]'",
            "repaired_sql": "SELECT [T2].[C8] FROM [T2] JOIN [T4] ON [T2].[C6] = [T4].[C12] JOIN [T1] ON [T4].[C11] = [T1].[C1] WHERE [T1].[C3] = '[C3]'"
        },
        "values": [
            "Canada"
        ],
        "value_links": {
            "Canada": "[production_country].[country_name]"
        },
        "filtered_value_links": {
            "Canada": "[production_country].[country_name]"
        },
        "schema_links": {
            "titles": "COLUMN:[movie].[title]",
            "movie": "TABLE:[movie]",
            "Canada": "COLUMN:[country].[country_name]"
        },
        "filtered_schema_links": {
            "titles": "COLUMN:[movie].[title]",
            "movie": "TABLE:[movie]",
            "Canada": "COLUMN:[country].[country_name]"
        },
        "attack": "List down the car models that were produced in France. produced in country_name refers to country_name = 'France'"
    },
    {
        "db_id": "movies_4",
        "question": "Accumulate the budget of the movie titles with the keyword of \"video game\". keyword of \"video game\" refers to keyword_name = 'video game'",
        "evidence": "keyword of \"video game\" refers to keyword_name = 'video game'",
        "SQL": "SELECT SUM(T1.budget) FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T3.keyword_name = 'video game'",
        "query": "SELECT SUM(T1.budget) FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T3.keyword_name = 'video game'",
        "evidence_added": true,
        "question_toks": [
            "Accumulate",
            "the",
            "budget",
            "of",
            "the",
            "movie",
            "titles",
            "with",
            "the",
            "keyword",
            "of",
            "\"video",
            "game\"",
            ".",
            "keyword",
            "of",
            "\"video",
            "game\"",
            "refers",
            "to",
            "keyword_name",
            "=",
            "'video",
            "game'"
        ],
        "tc_original": [
            "keyword.keyword_name",
            "keyword.keyword_id",
            "keyword.*",
            "movie.budget",
            "movie.title",
            "movie.movie_id",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "movie_keywords.movie_id",
            "movie_keywords.keyword_id",
            "movie_keywords.*",
            "gender.gender",
            "gender.gender_id",
            "gender.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[keyword]",
            "COLUMN:[keyword].[keyword_name]",
            "COLUMN:[keyword].[keyword_id]",
            "COLUMN:[keyword].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_keywords]",
            "COLUMN:[movie_keywords].[movie_id]",
            "COLUMN:[movie_keywords].[keyword_id]",
            "COLUMN:[movie_keywords].[*]",
            "TABLE:[gender]",
            "COLUMN:[gender].[gender]",
            "COLUMN:[gender].[gender_id]",
            "COLUMN:[gender].[*]"
        ],
        "schema": "'[gender]':\n  '[gender]': text\n  '[gender_id]':\n    primary_key: true\n    type: integer\n'[keyword]':\n  '[keyword_id]':\n    primary_key: true\n    type: integer\n  '[keyword_name]': text\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_keywords]':\n  '[keyword_id]': integer\n  '[movie_id]': integer\n",
        "gold_links": {
            "budget": "COLUMN:[movie].[budget]",
            "movie": "TABLE:[movie]",
            "titles": "COLUMN:[movie].[title]",
            "keyword": "TABLE:[keyword]",
            "video game": "VALUE:[keyword].[keyword_name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[gender]",
                "[C1]": "[gender].[gender]",
                "[C2]": "[gender].[gender_id]",
                "[T2]": "[keyword]",
                "[C3]": "[keyword].[keyword_id]",
                "[C4]": "[keyword].[keyword_name]",
                "[T3]": "[movie]",
                "[C5]": "[movie].[budget]",
                "[C6]": "[movie].[homepage]",
                "[C7]": "[movie].[movie_id]",
                "[C8]": "[movie].[overview]",
                "[C9]": "[movie].[title]",
                "[T4]": "[movie_keywords]",
                "[C10]": "[movie_keywords].[keyword_id]",
                "[C11]": "[movie_keywords].[movie_id]"
            },
            "to_symbol": {
                "[gender]": "[T1]",
                "[gender].[gender]": "[C1]",
                "[gender].[gender_id]": "[C2]",
                "[keyword]": "[T2]",
                "[keyword].[keyword_id]": "[C3]",
                "[keyword].[keyword_name]": "[C4]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C5]",
                "[movie].[homepage]": "[C6]",
                "[movie].[movie_id]": "[C7]",
                "[movie].[overview]": "[C8]",
                "[movie].[title]": "[C9]",
                "[movie_keywords]": "[T4]",
                "[movie_keywords].[keyword_id]": "[C10]",
                "[movie_keywords].[movie_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n'[T3]':\n  '[C5]': integer\n  '[C6]': text\n  '[C7]':\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]': text\n'[T4]':\n  '[C10]': integer\n  '[C11]': integer\n",
            "reverse_dict": {
                "[T1]": "[gender]",
                "[T1].[C1]": "[gender].[gender]",
                "[C1]": "[gender].[gender]",
                "[T1].[C2]": "[gender].[gender_id]",
                "[C2]": "[gender].[gender_id]",
                "[T2]": "[keyword]",
                "[T2].[C3]": "[keyword].[keyword_id]",
                "[C3]": "[keyword].[keyword_id]",
                "[T2].[C4]": "[keyword].[keyword_name]",
                "[C4]": "[keyword].[keyword_name]",
                "[T3]": "[movie]",
                "[T3].[C5]": "[movie].[budget]",
                "[C5]": "[movie].[budget]",
                "[T3].[C6]": "[movie].[homepage]",
                "[C6]": "[movie].[homepage]",
                "[T3].[C7]": "[movie].[movie_id]",
                "[C7]": "[movie].[movie_id]",
                "[T3].[C8]": "[movie].[overview]",
                "[C8]": "[movie].[overview]",
                "[T3].[C9]": "[movie].[title]",
                "[C9]": "[movie].[title]",
                "[T4]": "[movie_keywords]",
                "[T4].[C10]": "[movie_keywords].[keyword_id]",
                "[C10]": "[movie_keywords].[keyword_id]",
                "[T4].[C11]": "[movie_keywords].[movie_id]",
                "[C11]": "[movie_keywords].[movie_id]"
            },
            "question": "Accumulate the [C5] of the [T3] titles with the keyword of \"[V1]\". keyword of \"[V1]\" refers to [C4] = '[V1]'; [V1] is a value of the column [C4]",
            "to_value": {
                "[V1]": "video game"
            },
            "masked": 6,
            "masked_terms": [
                "video game",
                "budget",
                "title",
                "keyword_name",
                "video game",
                "movie"
            ],
            "sql": "SELECT SUM([T3].[C5]) FROM [T3] WHERE [T3].[C8] = '[V1]'",
            "repaired_sql": "SELECT SUM([T3].[C5]) FROM [T3] JOIN [T2] ON [T3].[C8] = [T2].[C3] WHERE [T2].[C4] = '[V1]';"
        },
        "values": [
            "video game"
        ],
        "value_links": {
            "video game": "[keyword].[keyword_name]"
        },
        "filtered_value_links": {
            "video game": "[keyword].[keyword_name]"
        },
        "schema_links": {
            "budget": "COLUMN:[movie].[budget]",
            "title": "COLUMN:[movie].[title]",
            "keyword_name": "COLUMN:[keyword].[keyword_name]",
            "video game": "COLUMN:[keyword].[keyword_name]",
            "movie": "TABLE:[movie]"
        },
        "filtered_schema_links": {
            "budget": "COLUMN:[movie].[budget]",
            "title": "COLUMN:[movie].[title]",
            "keyword_name": "COLUMN:[keyword].[keyword_name]",
            "video game": "COLUMN:[keyword].[keyword_name]",
            "movie": "TABLE:[movie]"
        },
        "attack": "Accumulate the rating of the movies titles with the keyword of \"Action\". keyword of \"Action\" refers to genre = 'Action'; \"Action\" is a value of the column genre."
    },
    {
        "db_id": "movies_4",
        "question": "What is the ID of the production company which produced the movie \"Gladiator\"? ID of the production company refers to company_id; movie \"Gladiator\" refers to title = 'Gladiator'",
        "evidence": "ID of the production company refers to company_id; movie \"Gladiator\" refers to title = 'Gladiator'",
        "SQL": "SELECT T2.company_id FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id WHERE T1.title = 'Gladiator'",
        "query": "SELECT T2.company_id FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id WHERE T1.title = 'Gladiator'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "ID",
            "of",
            "the",
            "production",
            "company",
            "which",
            "produced",
            "the",
            "movie",
            "\"Gladiator\"",
            "?",
            "ID",
            "of",
            "the",
            "production",
            "company",
            "refers",
            "to",
            "company_id",
            ";",
            "movie",
            "\"Gladiator\"",
            "refers",
            "to",
            "title",
            "=",
            "'Gladiator'"
        ],
        "tc_original": [
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "movie_company.company_id",
            "movie_company.movie_id",
            "movie_company.*",
            "production_company.company_id",
            "production_company.company_name",
            "production_company.*",
            "keyword.keyword_name",
            "keyword.keyword_id",
            "keyword.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_company]",
            "COLUMN:[movie_company].[company_id]",
            "COLUMN:[movie_company].[movie_id]",
            "COLUMN:[movie_company].[*]",
            "TABLE:[production_company]",
            "COLUMN:[production_company].[company_id]",
            "COLUMN:[production_company].[company_name]",
            "COLUMN:[production_company].[*]",
            "TABLE:[keyword]",
            "COLUMN:[keyword].[keyword_name]",
            "COLUMN:[keyword].[keyword_id]",
            "COLUMN:[keyword].[*]"
        ],
        "schema": "'[keyword]':\n  '[keyword_id]':\n    primary_key: true\n    type: integer\n  '[keyword_name]': text\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_company]':\n  '[company_id]': integer\n  '[movie_id]': integer\n'[production_company]':\n  '[company_id]':\n    primary_key: true\n    type: integer\n  '[company_name]': text\n",
        "gold_links": {
            "ID": "COLUMN:[production_company].[company_id]",
            "production company": "TABLE:[production_company]",
            "company id": "COLUMN:[production_company].[company_id]",
            "movie": "TABLE:[movie]",
            "Gladiator": "VALUE:[movie].[title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[keyword]",
                "[C1]": "[keyword].[keyword_id]",
                "[C2]": "[keyword].[keyword_name]",
                "[T2]": "[movie]",
                "[C3]": "[movie].[budget]",
                "[C4]": "[movie].[homepage]",
                "[C5]": "[movie].[movie_id]",
                "[C6]": "[movie].[overview]",
                "[C7]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[C8]": "[movie_company].[company_id]",
                "[C9]": "[movie_company].[movie_id]",
                "[T4]": "[production_company]",
                "[C10]": "[production_company].[company_id]",
                "[C11]": "[production_company].[company_name]"
            },
            "to_symbol": {
                "[keyword]": "[T1]",
                "[keyword].[keyword_id]": "[C1]",
                "[keyword].[keyword_name]": "[C2]",
                "[movie]": "[T2]",
                "[movie].[budget]": "[C3]",
                "[movie].[homepage]": "[C4]",
                "[movie].[movie_id]": "[C5]",
                "[movie].[overview]": "[C6]",
                "[movie].[title]": "[C7]",
                "[movie_company]": "[T3]",
                "[movie_company].[company_id]": "[C8]",
                "[movie_company].[movie_id]": "[C9]",
                "[production_company]": "[T4]",
                "[production_company].[company_id]": "[C10]",
                "[production_company].[company_name]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n'[T2]':\n  '[C3]': integer\n  '[C4]': text\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]': text\n  '[C7]': text\n'[T3]':\n  '[C8]': integer\n  '[C9]': integer\n'[T4]':\n  '[C10]':\n    primary_key: true\n    type: integer\n  '[C11]': text\n",
            "reverse_dict": {
                "[T1]": "[keyword]",
                "[T1].[C1]": "[keyword].[keyword_id]",
                "[C1]": "[keyword].[keyword_id]",
                "[T1].[C2]": "[keyword].[keyword_name]",
                "[C2]": "[keyword].[keyword_name]",
                "[T2]": "[movie]",
                "[T2].[C3]": "[movie].[budget]",
                "[C3]": "[movie].[budget]",
                "[T2].[C4]": "[movie].[homepage]",
                "[C4]": "[movie].[homepage]",
                "[T2].[C5]": "[movie].[movie_id]",
                "[C5]": "[movie].[movie_id]",
                "[T2].[C6]": "[movie].[overview]",
                "[C6]": "[movie].[overview]",
                "[T2].[C7]": "[movie].[title]",
                "[C7]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[T3].[C8]": "[movie_company].[company_id]",
                "[C8]": "[movie_company].[company_id]",
                "[T3].[C9]": "[movie_company].[movie_id]",
                "[C9]": "[movie_company].[movie_id]",
                "[T4]": "[production_company]",
                "[T4].[C10]": "[production_company].[company_id]",
                "[C10]": "[production_company].[company_id]",
                "[T4].[C11]": "[production_company].[company_name]",
                "[C11]": "[production_company].[company_name]"
            },
            "question": "What is the [C10] of the [T4] which produced the [T2] \"[V1]\"? [C10] of the [T4] refers to [V2]; [T2] \"[V1]\" refers to title = '[V1]'; [V1] is a value of the column [C7]; [V2] is a value of the column [C10]",
            "to_value": {
                "[V1]": "Gladiator",
                "[V2]": "company_id"
            },
            "masked": 6,
            "masked_terms": [
                "Gladiator",
                "company_id",
                "ID",
                "production company",
                "movie",
                "Gladiator"
            ],
            "sql": "SELECT [T4].[C10] FROM [T4] WHERE [T4].[C10] = (SELECT [T4].[C10] FROM [T2], [T4] WHERE [T2].[C7] = '[V1]')",
            "repaired_sql": "SELECT [T4].[C10] FROM [T4] JOIN [T3] ON [T4].[C10] = [T3].[C8] JOIN [T2] ON [T3].[C9] = [T2].[C5] WHERE [T2].[C7] = '[V1]'"
        },
        "values": [
            "Gladiator",
            "company_id"
        ],
        "value_links": {
            "Gladiator": "[movie].[title]",
            "company_id": "[production_company].[company_id]"
        },
        "filtered_value_links": {
            "Gladiator": "[movie].[title]",
            "company_id": "[production_company].[company_id]"
        },
        "schema_links": {
            "ID": "COLUMN:[production_company].[company_id]",
            "production company": "TABLE:[production_company]",
            "movie": "TABLE:[movie]",
            "Gladiator": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "ID": "COLUMN:[production_company].[company_id]",
            "production company": "TABLE:[production_company]",
            "movie": "TABLE:[movie]",
            "Gladiator": "COLUMN:[movie].[title]"
        },
        "attack": "What is the id of the studio which produced the movie \"Inception\"?"
    },
    {
        "db_id": "movies_4",
        "question": "List down the movies produced by Lucasfilm. movies refers to title; produced by Lucasfil refers to company_name = 'Lucasfilm'",
        "evidence": "movies refers to title; produced by Lucasfil refers to company_name = 'Lucasfilm'",
        "SQL": "SELECT T3.title FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name = 'Lucasfilm'",
        "query": "SELECT T3.title FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name = 'Lucasfilm'",
        "evidence_added": true,
        "question_toks": [
            "List",
            "down",
            "the",
            "movies",
            "produced",
            "by",
            "Lucasfilm",
            ".",
            "movies",
            "refers",
            "to",
            "title",
            ";",
            "produced",
            "by",
            "Lucasfil",
            "refers",
            "to",
            "company_name",
            "=",
            "'Lucasfilm'"
        ],
        "tc_original": [
            "production_company.company_name",
            "production_company.company_id",
            "production_company.*",
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "movie_company.company_id",
            "movie_company.movie_id",
            "movie_company.*",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.job",
            "movie_crew.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[production_company]",
            "COLUMN:[production_company].[company_name]",
            "COLUMN:[production_company].[company_id]",
            "COLUMN:[production_company].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_company]",
            "COLUMN:[movie_company].[company_id]",
            "COLUMN:[movie_company].[movie_id]",
            "COLUMN:[movie_company].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_company]':\n  '[company_id]': integer\n  '[movie_id]': integer\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n'[production_company]':\n  '[company_id]':\n    primary_key: true\n    type: integer\n  '[company_name]': text\n",
        "gold_links": {
            "movies": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "produced": "TABLE:[production_company]",
            "Lucasfilm": "VALUE:[production_company].[company_name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[movie]",
                "[C2]": "[movie].[budget]",
                "[C3]": "[movie].[homepage]",
                "[C4]": "[movie].[movie_id]",
                "[C5]": "[movie].[overview]",
                "[C6]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[C7]": "[movie_company].[company_id]",
                "[C8]": "[movie_company].[movie_id]",
                "[T4]": "[movie_crew]",
                "[C9]": "[movie_crew].[department_id]",
                "[C10]": "[movie_crew].[job]",
                "[C11]": "[movie_crew].[movie_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[C13]": "[person].[person_id]",
                "[T6]": "[production_company]",
                "[C14]": "[production_company].[company_id]",
                "[C15]": "[production_company].[company_name]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[movie]": "[T2]",
                "[movie].[budget]": "[C2]",
                "[movie].[homepage]": "[C3]",
                "[movie].[movie_id]": "[C4]",
                "[movie].[overview]": "[C5]",
                "[movie].[title]": "[C6]",
                "[movie_company]": "[T3]",
                "[movie_company].[company_id]": "[C7]",
                "[movie_company].[movie_id]": "[C8]",
                "[movie_crew]": "[T4]",
                "[movie_crew].[department_id]": "[C9]",
                "[movie_crew].[job]": "[C10]",
                "[movie_crew].[movie_id]": "[C11]",
                "[movie_crew].[person_id]": "[C12]",
                "[person]": "[T5]",
                "[person].[person_id]": "[C13]",
                "[production_company]": "[T6]",
                "[production_company].[company_id]": "[C14]",
                "[production_company].[company_name]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]': integer\n  '[C3]': text\n  '[C4]':\n    primary_key: true\n    type: integer\n  '[C5]': text\n  '[C6]': text\n'[T3]':\n  '[C7]': integer\n  '[C8]': integer\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    foreign_key: '[T2].[C4]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T5].[C13]'\n    type: integer\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T5]':\n  '[C13]':\n    primary_key: true\n    type: integer\n'[T6]':\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[movie]",
                "[T2].[C2]": "[movie].[budget]",
                "[C2]": "[movie].[budget]",
                "[T2].[C3]": "[movie].[homepage]",
                "[C3]": "[movie].[homepage]",
                "[T2].[C4]": "[movie].[movie_id]",
                "[C4]": "[movie].[movie_id]",
                "[T2].[C5]": "[movie].[overview]",
                "[C5]": "[movie].[overview]",
                "[T2].[C6]": "[movie].[title]",
                "[C6]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[T3].[C7]": "[movie_company].[company_id]",
                "[C7]": "[movie_company].[company_id]",
                "[T3].[C8]": "[movie_company].[movie_id]",
                "[C8]": "[movie_company].[movie_id]",
                "[T4]": "[movie_crew]",
                "[T4].[C9]": "[movie_crew].[department_id]",
                "[C9]": "[movie_crew].[department_id]",
                "[T4].[C10]": "[movie_crew].[job]",
                "[C10]": "[movie_crew].[job]",
                "[T4].[C11]": "[movie_crew].[movie_id]",
                "[C11]": "[movie_crew].[movie_id]",
                "[T4].[C12]": "[movie_crew].[person_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[T5].[C13]": "[person].[person_id]",
                "[C13]": "[person].[person_id]",
                "[T6]": "[production_company]",
                "[T6].[C14]": "[production_company].[company_id]",
                "[C14]": "[production_company].[company_id]",
                "[T6].[C15]": "[production_company].[company_name]",
                "[C15]": "[production_company].[company_name]"
            },
            "question": "List down the movies [C7] [V1]. movies refers to [C6]; [C7] Lucasfil refers to company_name = '[V1]'; [V1] is a value of the column [C15]",
            "to_value": {
                "[V1]": "Lucasfilm"
            },
            "masked": 4,
            "masked_terms": [
                "Lucasfilm",
                "produced by",
                "Lucasfilm",
                "title"
            ],
            "sql": "SELECT [T2].[C6] FROM [T2] JOIN [T3] ON [T2].[C4] = [T3].[C7] JOIN [T6] ON [T3].[C8] = [T6].[C14] WHERE [T6].[C15] = 'Lucasfil'",
            "repaired_sql": "SELECT [T2].[C6] FROM [T2] JOIN [T4] ON [T2].[C4] = [T4].[C11] JOIN [T6] ON [T4].[C12] = [T6].[C14] WHERE [T6].[C15] = '[V1]'"
        },
        "values": [
            "Lucasfilm"
        ],
        "value_links": {
            "Lucasfilm": "[production_company].[company_name]"
        },
        "filtered_value_links": {
            "Lucasfilm": "[production_company].[company_name]"
        },
        "schema_links": {
            "produced by": "COLUMN:[movie_company].[company_id]",
            "Lucasfilm": "COLUMN:[production_company].[company_name]",
            "title": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "produced by": "COLUMN:[movie_company].[company_id]",
            "Lucasfilm": "COLUMN:[production_company].[company_name]",
            "title": "COLUMN:[movie].[title]"
        },
        "attack": "List down the movies produced by Lucasfilm. movies refers to company_name; produced by Lucasfilm refers to company_name = 'Lucasfilm'; 'Lucasfilm' is a value of the column company_name."
    },
    {
        "db_id": "movies_4",
        "question": "Among Warner Bros. Pictures' movies, which title made the highest revenue? Warner Bros. Pictures' movies refers to company_name = 'Warner Bros. Pictures'; highest revenue refers to max(revenue)",
        "evidence": "Warner Bros. Pictures' movies refers to company_name = 'Warner Bros. Pictures'; highest revenue refers to max(revenue)",
        "SQL": "SELECT T3.title FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name = 'Warner Bros. Pictures' ORDER BY T3.revenue DESC LIMIT 1",
        "query": "SELECT T3.title FROM production_company AS T1 INNER JOIN movie_company AS T2 ON T1.company_id = T2.company_id INNER JOIN movie AS T3 ON T2.movie_id = T3.movie_id WHERE T1.company_name = 'Warner Bros. Pictures' ORDER BY T3.revenue DESC LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "Among",
            "Warner",
            "Bros",
            ".",
            "Pictures'",
            "movies",
            ",",
            "which",
            "title",
            "made",
            "the",
            "highest",
            "revenue",
            "?",
            "Warner",
            "Bros",
            ".",
            "Pictures'",
            "movies",
            "refers",
            "to",
            "company_name",
            "=",
            "'Warner",
            "Bros",
            ".",
            "Pictures'",
            ";",
            "highest",
            "revenue",
            "refers",
            "to",
            "max(revenue)"
        ],
        "tc_original": [
            "movie.title",
            "movie.revenue",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.*",
            "production_company.company_name",
            "production_company.company_id",
            "production_company.*",
            "movie_company.company_id",
            "movie_company.movie_id",
            "movie_company.*",
            "movie_crew.job",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[revenue]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[*]",
            "TABLE:[production_company]",
            "COLUMN:[production_company].[company_name]",
            "COLUMN:[production_company].[company_id]",
            "COLUMN:[production_company].[*]",
            "TABLE:[movie_company]",
            "COLUMN:[movie_company].[company_id]",
            "COLUMN:[movie_company].[movie_id]",
            "COLUMN:[movie_company].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[revenue]': integer\n  '[title]': text\n'[movie_company]':\n  '[company_id]': integer\n  '[movie_id]': integer\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n'[production_company]':\n  '[company_id]':\n    primary_key: true\n    type: integer\n  '[company_name]': text\n",
        "gold_links": {
            "Warner Bros. Pictures": "VALUE:[production_company].[company_name]",
            "movies": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "revenue": "COLUMN:[movie].[revenue]",
            "company_name": "COLUMN:[production_company].[company_name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[movie]",
                "[C2]": "[movie].[budget]",
                "[C3]": "[movie].[homepage]",
                "[C4]": "[movie].[movie_id]",
                "[C5]": "[movie].[revenue]",
                "[C6]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[C7]": "[movie_company].[company_id]",
                "[C8]": "[movie_company].[movie_id]",
                "[T4]": "[movie_crew]",
                "[C9]": "[movie_crew].[department_id]",
                "[C10]": "[movie_crew].[job]",
                "[C11]": "[movie_crew].[movie_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[C13]": "[person].[person_id]",
                "[T6]": "[production_company]",
                "[C14]": "[production_company].[company_id]",
                "[C15]": "[production_company].[company_name]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[movie]": "[T2]",
                "[movie].[budget]": "[C2]",
                "[movie].[homepage]": "[C3]",
                "[movie].[movie_id]": "[C4]",
                "[movie].[revenue]": "[C5]",
                "[movie].[title]": "[C6]",
                "[movie_company]": "[T3]",
                "[movie_company].[company_id]": "[C7]",
                "[movie_company].[movie_id]": "[C8]",
                "[movie_crew]": "[T4]",
                "[movie_crew].[department_id]": "[C9]",
                "[movie_crew].[job]": "[C10]",
                "[movie_crew].[movie_id]": "[C11]",
                "[movie_crew].[person_id]": "[C12]",
                "[person]": "[T5]",
                "[person].[person_id]": "[C13]",
                "[production_company]": "[T6]",
                "[production_company].[company_id]": "[C14]",
                "[production_company].[company_name]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]': integer\n  '[C3]': text\n  '[C4]':\n    primary_key: true\n    type: integer\n  '[C5]': integer\n  '[C6]': text\n'[T3]':\n  '[C7]': integer\n  '[C8]': integer\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    foreign_key: '[T2].[C4]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T5].[C13]'\n    type: integer\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T5]':\n  '[C13]':\n    primary_key: true\n    type: integer\n'[T6]':\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[movie]",
                "[T2].[C2]": "[movie].[budget]",
                "[C2]": "[movie].[budget]",
                "[T2].[C3]": "[movie].[homepage]",
                "[C3]": "[movie].[homepage]",
                "[T2].[C4]": "[movie].[movie_id]",
                "[C4]": "[movie].[movie_id]",
                "[T2].[C5]": "[movie].[revenue]",
                "[C5]": "[movie].[revenue]",
                "[T2].[C6]": "[movie].[title]",
                "[C6]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[T3].[C7]": "[movie_company].[company_id]",
                "[C7]": "[movie_company].[company_id]",
                "[T3].[C8]": "[movie_company].[movie_id]",
                "[C8]": "[movie_company].[movie_id]",
                "[T4]": "[movie_crew]",
                "[T4].[C9]": "[movie_crew].[department_id]",
                "[C9]": "[movie_crew].[department_id]",
                "[T4].[C10]": "[movie_crew].[job]",
                "[C10]": "[movie_crew].[job]",
                "[T4].[C11]": "[movie_crew].[movie_id]",
                "[C11]": "[movie_crew].[movie_id]",
                "[T4].[C12]": "[movie_crew].[person_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[person]",
                "[T5].[C13]": "[person].[person_id]",
                "[C13]": "[person].[person_id]",
                "[T6]": "[production_company]",
                "[T6].[C14]": "[production_company].[company_id]",
                "[C14]": "[production_company].[company_id]",
                "[T6].[C15]": "[production_company].[company_name]",
                "[C15]": "[production_company].[company_name]"
            },
            "question": "Among [V1]' movies, which [C6] made the highest [C5]? [V1]' movies refers to company_name = '[V1]'; highest [C5] refers to max([C5]); [V1] is a value of the column [C15]",
            "to_value": {
                "[V1]": "Warner Bros. Pictures"
            },
            "masked": 5,
            "masked_terms": [
                "Warner Bros. Pictures",
                "Warner Bros. Pictures",
                "title",
                "revenue",
                "movie"
            ],
            "sql": "SELECT [T2].[C6] FROM [T2] JOIN [T4] ON [T2].[C4] = [T4].[C11] JOIN [T6] ON [T6].[C14] = [T4].[C9] WHERE [T6].[C15] = '[V1]' ORDER BY [T2].[C5] DESC LIMIT 1",
            "repaired_sql": "SELECT [T2].[C6] FROM [T2] JOIN [T4] ON [T2].[C4] = [T4].[C11] JOIN [T5] ON [T4].[C12] = [T5].[C13] JOIN [T6] ON [T6].[C14] = [T5].[C13] WHERE [T6].[C15] = '[V1]' AND [T2].[C5] = (SELECT MAX([T2sub].[C5]) FROM [T2] AS [T2sub] JOIN [T4] AS [T4sub] ON [T2sub].[C4] = [T4sub].[C11] JOIN [T5] AS [T5sub] ON [T4sub].[C12] = [T5sub].[C13] JOIN [T6] AS [T6sub] ON [T6sub].[C14] = [T5sub].[C13] WHERE [T6sub].[C15] = '[V1]')"
        },
        "values": [
            "Warner Bros. Pictures"
        ],
        "value_links": {
            "Warner Bros. Pictures": "[production_company].[company_name]"
        },
        "filtered_value_links": {
            "Warner Bros. Pictures": "[production_company].[company_name]"
        },
        "schema_links": {
            "Warner Bros. Pictures": "COLUMN:[production_company].[company_name]",
            "title": "COLUMN:[movie].[title]",
            "revenue": "COLUMN:[movie].[revenue]",
            "movie": "TABLE:[movie]"
        },
        "filtered_schema_links": {
            "Warner Bros. Pictures": "COLUMN:[production_company].[company_name]",
            "title": "COLUMN:[movie].[title]",
            "revenue": "COLUMN:[movie].[revenue]",
            "movie": "TABLE:[movie]"
        },
        "attack": "Among Warner Bros.' movies, which title made the highest revenue?"
    },
    {
        "db_id": "movies_4",
        "question": "Tell the language of the movie \"C'era una volta il West\". language refers to language_name; movie \"C'era una volta il West\" refers to title = 'C''era una volta il West'",
        "evidence": "language refers to language_name; movie \"C'era una volta il West\" refers to title = 'C''era una volta il West'",
        "SQL": "SELECT T3.language_name FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T1.title LIKE 'C%era una volta il West'",
        "query": "SELECT T3.language_name FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T1.title LIKE 'C%era una volta il West'",
        "evidence_added": true,
        "question_toks": [
            "Tell",
            "the",
            "language",
            "of",
            "the",
            "movie",
            "\"C'era",
            "una",
            "volta",
            "il",
            "West\"",
            ".",
            "language",
            "refers",
            "to",
            "language_name",
            ";",
            "movie",
            "\"C'era",
            "una",
            "volta",
            "il",
            "West\"",
            "refers",
            "to",
            "title",
            "=",
            "'C''era",
            "una",
            "volta",
            "il",
            "West'"
        ],
        "tc_original": [
            "movie_languages.language_id",
            "movie_languages.movie_id",
            "movie_languages.language_role_id",
            "movie_languages.*",
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "language.language_name",
            "language.language_id",
            "language.language_code",
            "language.*",
            "gender.gender",
            "gender.gender_id",
            "gender.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie_languages]",
            "COLUMN:[movie_languages].[language_id]",
            "COLUMN:[movie_languages].[movie_id]",
            "COLUMN:[movie_languages].[language_role_id]",
            "COLUMN:[movie_languages].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[language]",
            "COLUMN:[language].[language_name]",
            "COLUMN:[language].[language_id]",
            "COLUMN:[language].[language_code]",
            "COLUMN:[language].[*]",
            "TABLE:[gender]",
            "COLUMN:[gender].[gender]",
            "COLUMN:[gender].[gender_id]",
            "COLUMN:[gender].[*]"
        ],
        "schema": "'[gender]':\n  '[gender]': text\n  '[gender_id]':\n    primary_key: true\n    type: integer\n'[language]':\n  '[language_code]': text\n  '[language_id]':\n    primary_key: true\n    type: integer\n  '[language_name]': text\n'[language_role]':\n  '[role_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_languages]':\n  '[language_id]':\n    foreign_key: '[language].[language_id]'\n    type: integer\n  '[language_role_id]':\n    foreign_key: '[language_role].[role_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n",
        "gold_links": {
            "language": "COLUMN:[language].[language_name]",
            "movie": "TABLE:[movie]",
            "C'era una volta il West": "VALUE:[movie].[title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[gender]",
                "[C1]": "[gender].[gender]",
                "[C2]": "[gender].[gender_id]",
                "[T2]": "[language]",
                "[C3]": "[language].[language_code]",
                "[C4]": "[language].[language_id]",
                "[C5]": "[language].[language_name]",
                "[T3]": "[language_role]",
                "[C6]": "[language_role].[role_id]",
                "[T4]": "[movie]",
                "[C7]": "[movie].[budget]",
                "[C8]": "[movie].[homepage]",
                "[C9]": "[movie].[movie_id]",
                "[C10]": "[movie].[overview]",
                "[C11]": "[movie].[title]",
                "[T5]": "[movie_languages]",
                "[C12]": "[movie_languages].[language_id]",
                "[C13]": "[movie_languages].[language_role_id]",
                "[C14]": "[movie_languages].[movie_id]"
            },
            "to_symbol": {
                "[gender]": "[T1]",
                "[gender].[gender]": "[C1]",
                "[gender].[gender_id]": "[C2]",
                "[language]": "[T2]",
                "[language].[language_code]": "[C3]",
                "[language].[language_id]": "[C4]",
                "[language].[language_name]": "[C5]",
                "[language_role]": "[T3]",
                "[language_role].[role_id]": "[C6]",
                "[movie]": "[T4]",
                "[movie].[budget]": "[C7]",
                "[movie].[homepage]": "[C8]",
                "[movie].[movie_id]": "[C9]",
                "[movie].[overview]": "[C10]",
                "[movie].[title]": "[C11]",
                "[movie_languages]": "[T5]",
                "[movie_languages].[language_id]": "[C12]",
                "[movie_languages].[language_role_id]": "[C13]",
                "[movie_languages].[movie_id]": "[C14]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C3]': text\n  '[C4]':\n    primary_key: true\n    type: integer\n  '[C5]': text\n'[T3]':\n  '[C6]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]': text\n  '[C11]': text\n  '[C7]': integer\n  '[C8]': text\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C12]':\n    foreign_key: '[T2].[C4]'\n    type: integer\n  '[C13]':\n    foreign_key: '[T3].[C6]'\n    type: integer\n  '[C14]':\n    foreign_key: '[T4].[C9]'\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[gender]",
                "[T1].[C1]": "[gender].[gender]",
                "[C1]": "[gender].[gender]",
                "[T1].[C2]": "[gender].[gender_id]",
                "[C2]": "[gender].[gender_id]",
                "[T2]": "[language]",
                "[T2].[C3]": "[language].[language_code]",
                "[C3]": "[language].[language_code]",
                "[T2].[C4]": "[language].[language_id]",
                "[C4]": "[language].[language_id]",
                "[T2].[C5]": "[language].[language_name]",
                "[C5]": "[language].[language_name]",
                "[T3]": "[language_role]",
                "[T3].[C6]": "[language_role].[role_id]",
                "[C6]": "[language_role].[role_id]",
                "[T4]": "[movie]",
                "[T4].[C7]": "[movie].[budget]",
                "[C7]": "[movie].[budget]",
                "[T4].[C8]": "[movie].[homepage]",
                "[C8]": "[movie].[homepage]",
                "[T4].[C9]": "[movie].[movie_id]",
                "[C9]": "[movie].[movie_id]",
                "[T4].[C10]": "[movie].[overview]",
                "[C10]": "[movie].[overview]",
                "[T4].[C11]": "[movie].[title]",
                "[C11]": "[movie].[title]",
                "[T5]": "[movie_languages]",
                "[T5].[C12]": "[movie_languages].[language_id]",
                "[C12]": "[movie_languages].[language_id]",
                "[T5].[C13]": "[movie_languages].[language_role_id]",
                "[C13]": "[movie_languages].[language_role_id]",
                "[T5].[C14]": "[movie_languages].[movie_id]",
                "[C14]": "[movie_languages].[movie_id]"
            },
            "question": "Tell the language of the [T4] \"[V1]\". language refers to [V2]; [T4] \"[V1]\" refers to [C11] = 'C''era una volta il West'; [V1] is a value of the column [C11]; [V2] is a value of the column [C5]",
            "to_value": {
                "[V1]": "C'era una volta il West",
                "[V2]": "language_name"
            },
            "masked": 5,
            "masked_terms": [
                "C'era una volta il West",
                "language_name",
                "movie",
                "title",
                "C'era una volta il West"
            ],
            "sql": "SELECT [T2].[C5] FROM [T5] JOIN [T2] ON [T5].[C12] = [T2].[C4] JOIN [T4] ON [T5].[C14] = [T4].[C9] WHERE [T4].[C11] = 'C''era una volta il West'",
            "repaired_sql": "SELECT [T2].[C5] FROM [T4] JOIN [T5] ON [T4].[C9] = [T5].[C14] JOIN [T2] ON [T5].[C12] = [T2].[C4] WHERE [T4].[C11] = 'C''era una volta il West'"
        },
        "values": [
            "C'era una volta il West",
            "language_name"
        ],
        "value_links": {
            "C'era una volta il West": "[movie].[title]",
            "language_name": "[language].[language_name]"
        },
        "filtered_value_links": {
            "C'era una volta il West": "[movie].[title]",
            "language_name": "[language].[language_name]"
        },
        "schema_links": {
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "C'era una volta il West": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "C'era una volta il West": "COLUMN:[movie].[title]"
        },
        "attack": "Tell the language of the film \"C'era una volta il West\"."
    },
    {
        "db_id": "movies_4",
        "question": "Work out the difference in revenues made between the English and Latin movies. English refers to language_name = 'English'; Latin refers to language_name = 'Latin'; difference in revenues = subtract(sum(movie_id) when language_name = 'English', sum(movie_id) when language_name = 'Latin')",
        "evidence": "English refers to language_name = 'English'; Latin refers to language_name = 'Latin'; difference in revenues = subtract(sum(movie_id) when language_name = 'English', sum(movie_id) when language_name = 'Latin')",
        "SQL": "SELECT SUM(CASE WHEN T3.language_name = 'English' THEN T1.revenue ELSE 0 END) - SUM(CASE WHEN T3.language_name = 'Latin' THEN T1.revenue ELSE 0 END) AS DIFFERENCE FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id",
        "query": "SELECT SUM(CASE WHEN T3.language_name = 'English' THEN T1.revenue ELSE 0 END) - SUM(CASE WHEN T3.language_name = 'Latin' THEN T1.revenue ELSE 0 END) AS DIFFERENCE FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id",
        "evidence_added": true,
        "question_toks": [
            "Work",
            "out",
            "the",
            "difference",
            "in",
            "revenues",
            "made",
            "between",
            "the",
            "English",
            "and",
            "Latin",
            "movies",
            ".",
            "English",
            "refers",
            "to",
            "language_name",
            "=",
            "'English'",
            ";",
            "Latin",
            "refers",
            "to",
            "language_name",
            "=",
            "'Latin'",
            ";",
            "difference",
            "in",
            "revenues",
            "=",
            "subtract(sum(movie_id)",
            "when",
            "language_name",
            "=",
            "'English'",
            ",",
            "sum(movie_id)",
            "when",
            "language_name",
            "=",
            "'Latin')"
        ],
        "tc_original": [
            "movie.revenue",
            "movie.movie_id",
            "movie.title",
            "movie.budget",
            "movie.homepage",
            "movie.*",
            "language.language_name",
            "language.language_id",
            "language.language_code",
            "language.*",
            "movie_languages.language_id",
            "movie_languages.movie_id",
            "movie_languages.language_role_id",
            "movie_languages.*",
            "gender.gender",
            "gender.gender_id",
            "gender.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[revenue]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[*]",
            "TABLE:[language]",
            "COLUMN:[language].[language_name]",
            "COLUMN:[language].[language_id]",
            "COLUMN:[language].[language_code]",
            "COLUMN:[language].[*]",
            "TABLE:[movie_languages]",
            "COLUMN:[movie_languages].[language_id]",
            "COLUMN:[movie_languages].[movie_id]",
            "COLUMN:[movie_languages].[language_role_id]",
            "COLUMN:[movie_languages].[*]",
            "TABLE:[gender]",
            "COLUMN:[gender].[gender]",
            "COLUMN:[gender].[gender_id]",
            "COLUMN:[gender].[*]"
        ],
        "schema": "'[gender]':\n  '[gender]': text\n  '[gender_id]':\n    primary_key: true\n    type: integer\n'[language]':\n  '[language_code]': text\n  '[language_id]':\n    primary_key: true\n    type: integer\n  '[language_name]': text\n'[language_role]':\n  '[role_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[revenue]': integer\n  '[title]': text\n'[movie_languages]':\n  '[language_id]':\n    foreign_key: '[language].[language_id]'\n    type: integer\n  '[language_role_id]':\n    foreign_key: '[language_role].[role_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n",
        "gold_links": {
            "difference in revenues": "COLUMN:[movie].[revenue]",
            "revenues": "COLUMN:[movie].[revenue]",
            "English": "VALUE:[language].[language_name]",
            "Latin": "VALUE:[language].[language_name]",
            "movies": "TABLE:[movie]",
            "language_name": "COLUMN:[language].[language_name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[gender]",
                "[C1]": "[gender].[gender]",
                "[C2]": "[gender].[gender_id]",
                "[T2]": "[language]",
                "[C3]": "[language].[language_code]",
                "[C4]": "[language].[language_id]",
                "[C5]": "[language].[language_name]",
                "[T3]": "[language_role]",
                "[C6]": "[language_role].[role_id]",
                "[T4]": "[movie]",
                "[C7]": "[movie].[budget]",
                "[C8]": "[movie].[homepage]",
                "[C9]": "[movie].[movie_id]",
                "[C10]": "[movie].[revenue]",
                "[C11]": "[movie].[title]",
                "[T5]": "[movie_languages]",
                "[C12]": "[movie_languages].[language_id]",
                "[C13]": "[movie_languages].[language_role_id]",
                "[C14]": "[movie_languages].[movie_id]"
            },
            "to_symbol": {
                "[gender]": "[T1]",
                "[gender].[gender]": "[C1]",
                "[gender].[gender_id]": "[C2]",
                "[language]": "[T2]",
                "[language].[language_code]": "[C3]",
                "[language].[language_id]": "[C4]",
                "[language].[language_name]": "[C5]",
                "[language_role]": "[T3]",
                "[language_role].[role_id]": "[C6]",
                "[movie]": "[T4]",
                "[movie].[budget]": "[C7]",
                "[movie].[homepage]": "[C8]",
                "[movie].[movie_id]": "[C9]",
                "[movie].[revenue]": "[C10]",
                "[movie].[title]": "[C11]",
                "[movie_languages]": "[T5]",
                "[movie_languages].[language_id]": "[C12]",
                "[movie_languages].[language_role_id]": "[C13]",
                "[movie_languages].[movie_id]": "[C14]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C3]': text\n  '[C4]':\n    primary_key: true\n    type: integer\n  '[C5]': text\n'[T3]':\n  '[C6]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]': integer\n  '[C11]': text\n  '[C7]': integer\n  '[C8]': text\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C12]':\n    foreign_key: '[T2].[C4]'\n    type: integer\n  '[C13]':\n    foreign_key: '[T3].[C6]'\n    type: integer\n  '[C14]':\n    foreign_key: '[T4].[C9]'\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[gender]",
                "[T1].[C1]": "[gender].[gender]",
                "[C1]": "[gender].[gender]",
                "[T1].[C2]": "[gender].[gender_id]",
                "[C2]": "[gender].[gender_id]",
                "[T2]": "[language]",
                "[T2].[C3]": "[language].[language_code]",
                "[C3]": "[language].[language_code]",
                "[T2].[C4]": "[language].[language_id]",
                "[C4]": "[language].[language_id]",
                "[T2].[C5]": "[language].[language_name]",
                "[C5]": "[language].[language_name]",
                "[T3]": "[language_role]",
                "[T3].[C6]": "[language_role].[role_id]",
                "[C6]": "[language_role].[role_id]",
                "[T4]": "[movie]",
                "[T4].[C7]": "[movie].[budget]",
                "[C7]": "[movie].[budget]",
                "[T4].[C8]": "[movie].[homepage]",
                "[C8]": "[movie].[homepage]",
                "[T4].[C9]": "[movie].[movie_id]",
                "[C9]": "[movie].[movie_id]",
                "[T4].[C10]": "[movie].[revenue]",
                "[C10]": "[movie].[revenue]",
                "[T4].[C11]": "[movie].[title]",
                "[C11]": "[movie].[title]",
                "[T5]": "[movie_languages]",
                "[T5].[C12]": "[movie_languages].[language_id]",
                "[C12]": "[movie_languages].[language_id]",
                "[T5].[C13]": "[movie_languages].[language_role_id]",
                "[C13]": "[movie_languages].[language_role_id]",
                "[T5].[C14]": "[movie_languages].[movie_id]",
                "[C14]": "[movie_languages].[movie_id]"
            },
            "question": "Work out the difference in [C10] made between the English and Latin movies. English refers to language_name = 'English'; Latin refers to language_name = 'Latin'; difference in [C10] = subtract([C10](movie_id) when language_name = 'English', [C10](movie_id) when language_name = 'Latin')",
            "to_value": {},
            "masked": 3,
            "masked_terms": [
                "revenues",
                "movie",
                "sum"
            ],
            "sql": "SELECT      (english.[C10] - latin.[C10]) AS [C10_Difference] FROM      [T5] JOIN [T2] ON [T5].[C12] = [T2].[C4] JOIN [T4] AS english ON [T5].[C14] = english.[C9] JOIN [T2] AS lang_eng ON [T2].[C5] = lang_eng.[C5] AND lang_eng.[C3] = 'English' JOIN [T4] AS latin ON [T5].[C14] = latin.[C9] JOIN [T2] AS lang_lat ON [T2].[C5] = lang_lat.[C5] AND lang_lat.[C3] = 'Latin' WHERE english.[C11] = 'English' AND latin.[C11] = 'Latin'",
            "repaired_sql": "SELECT COALESCE(SUM(CASE WHEN [T4].[C11] = 'English' THEN [T4].[C10] END), 0) - COALESCE(SUM(CASE WHEN [T4].[C11] = 'Latin' THEN [T4].[C10] END), 0) AS difference_in_C10 FROM [T4]"
        },
        "values": [
            "English",
            "Latin"
        ],
        "value_links": {
            "English": "[movie].[language_name]",
            "Latin": "[movie].[language_name]"
        },
        "filtered_value_links": {
            "English": "[movie].[language_name]",
            "Latin": "[movie].[language_name]"
        },
        "schema_links": {
            "revenues": "COLUMN:[movie].[revenue]",
            "movie": "TABLE:[movie]",
            "sum": "COLUMN:[movie].[revenue]"
        },
        "filtered_schema_links": {
            "revenues": "COLUMN:[movie].[revenue]",
            "movie": "TABLE:[movie]",
            "sum": "COLUMN:[movie].[revenue]"
        },
        "attack": "Work out the difference in rating made between the English and Latin movies. English refers to language_name = 'English'; Latin refers to language_name = 'Latin'; difference in rating = subtract(rating(movie_id) when language_name = 'English', rating(movie_id) when language_name = 'Latin')"
    },
    {
        "db_id": "movies_4",
        "question": "What is the average revenue made by Latin movies? Latin movies refers to language_name = 'Latin'; average revenue = AVG(revenue)",
        "evidence": "Latin movies refers to language_name = 'Latin'; average revenue = AVG(revenue)",
        "SQL": "SELECT AVG(T1.revenue) FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T3.language_name = 'Latin'",
        "query": "SELECT AVG(T1.revenue) FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id WHERE T3.language_name = 'Latin'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "revenue",
            "made",
            "by",
            "Latin",
            "movies",
            "?",
            "Latin",
            "movies",
            "refers",
            "to",
            "language_name",
            "=",
            "'Latin'",
            ";",
            "average",
            "revenue",
            "=",
            "AVG(revenue)"
        ],
        "tc_original": [
            "language.language_name",
            "language.language_id",
            "language.language_code",
            "language.*",
            "movie.revenue",
            "movie.movie_id",
            "movie.title",
            "movie.budget",
            "movie.homepage",
            "movie.*",
            "movie_languages.language_id",
            "movie_languages.movie_id",
            "movie_languages.language_role_id",
            "movie_languages.*",
            "movie_crew.job",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[language]",
            "COLUMN:[language].[language_name]",
            "COLUMN:[language].[language_id]",
            "COLUMN:[language].[language_code]",
            "COLUMN:[language].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[revenue]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_languages]",
            "COLUMN:[movie_languages].[language_id]",
            "COLUMN:[movie_languages].[movie_id]",
            "COLUMN:[movie_languages].[language_role_id]",
            "COLUMN:[movie_languages].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[language]':\n  '[language_code]': text\n  '[language_id]':\n    primary_key: true\n    type: integer\n  '[language_name]': text\n'[language_role]':\n  '[role_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[revenue]': integer\n  '[title]': text\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[movie_languages]':\n  '[language_id]':\n    foreign_key: '[language].[language_id]'\n    type: integer\n  '[language_role_id]':\n    foreign_key: '[language_role].[role_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "average revenue": "COLUMN:[movie].[revenue]",
            "revenue": "COLUMN:[movie].[revenue]",
            "Latin movies": "TABLE:[movie]",
            "Latin": "VALUE:[language].[language_name]",
            "language_name": "COLUMN:[language].[language_name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[language]",
                "[C2]": "[language].[language_code]",
                "[C3]": "[language].[language_id]",
                "[C4]": "[language].[language_name]",
                "[T3]": "[language_role]",
                "[C5]": "[language_role].[role_id]",
                "[T4]": "[movie]",
                "[C6]": "[movie].[budget]",
                "[C7]": "[movie].[homepage]",
                "[C8]": "[movie].[movie_id]",
                "[C9]": "[movie].[revenue]",
                "[C10]": "[movie].[title]",
                "[T5]": "[movie_crew]",
                "[C11]": "[movie_crew].[department_id]",
                "[C12]": "[movie_crew].[job]",
                "[C13]": "[movie_crew].[movie_id]",
                "[C14]": "[movie_crew].[person_id]",
                "[T6]": "[movie_languages]",
                "[C15]": "[movie_languages].[language_id]",
                "[C16]": "[movie_languages].[language_role_id]",
                "[C17]": "[movie_languages].[movie_id]",
                "[T7]": "[person]",
                "[C18]": "[person].[person_id]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[language]": "[T2]",
                "[language].[language_code]": "[C2]",
                "[language].[language_id]": "[C3]",
                "[language].[language_name]": "[C4]",
                "[language_role]": "[T3]",
                "[language_role].[role_id]": "[C5]",
                "[movie]": "[T4]",
                "[movie].[budget]": "[C6]",
                "[movie].[homepage]": "[C7]",
                "[movie].[movie_id]": "[C8]",
                "[movie].[revenue]": "[C9]",
                "[movie].[title]": "[C10]",
                "[movie_crew]": "[T5]",
                "[movie_crew].[department_id]": "[C11]",
                "[movie_crew].[job]": "[C12]",
                "[movie_crew].[movie_id]": "[C13]",
                "[movie_crew].[person_id]": "[C14]",
                "[movie_languages]": "[T6]",
                "[movie_languages].[language_id]": "[C15]",
                "[movie_languages].[language_role_id]": "[C16]",
                "[movie_languages].[movie_id]": "[C17]",
                "[person]": "[T7]",
                "[person].[person_id]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n'[T3]':\n  '[C5]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]': text\n  '[C8]':\n    primary_key: true\n    type: integer\n  '[C9]': integer\n'[T5]':\n  '[C11]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C12]': text\n  '[C13]':\n    foreign_key: '[T4].[C8]'\n    type: integer\n  '[C14]':\n    foreign_key: '[T7].[C18]'\n    type: integer\n'[T6]':\n  '[C15]':\n    foreign_key: '[T2].[C3]'\n    type: integer\n  '[C16]':\n    foreign_key: '[T3].[C5]'\n    type: integer\n  '[C17]':\n    foreign_key: '[T4].[C8]'\n    type: integer\n'[T7]':\n  '[C18]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[language]",
                "[T2].[C2]": "[language].[language_code]",
                "[C2]": "[language].[language_code]",
                "[T2].[C3]": "[language].[language_id]",
                "[C3]": "[language].[language_id]",
                "[T2].[C4]": "[language].[language_name]",
                "[C4]": "[language].[language_name]",
                "[T3]": "[language_role]",
                "[T3].[C5]": "[language_role].[role_id]",
                "[C5]": "[language_role].[role_id]",
                "[T4]": "[movie]",
                "[T4].[C6]": "[movie].[budget]",
                "[C6]": "[movie].[budget]",
                "[T4].[C7]": "[movie].[homepage]",
                "[C7]": "[movie].[homepage]",
                "[T4].[C8]": "[movie].[movie_id]",
                "[C8]": "[movie].[movie_id]",
                "[T4].[C9]": "[movie].[revenue]",
                "[C9]": "[movie].[revenue]",
                "[T4].[C10]": "[movie].[title]",
                "[C10]": "[movie].[title]",
                "[T5]": "[movie_crew]",
                "[T5].[C11]": "[movie_crew].[department_id]",
                "[C11]": "[movie_crew].[department_id]",
                "[T5].[C12]": "[movie_crew].[job]",
                "[C12]": "[movie_crew].[job]",
                "[T5].[C13]": "[movie_crew].[movie_id]",
                "[C13]": "[movie_crew].[movie_id]",
                "[T5].[C14]": "[movie_crew].[person_id]",
                "[C14]": "[movie_crew].[person_id]",
                "[T6]": "[movie_languages]",
                "[T6].[C15]": "[movie_languages].[language_id]",
                "[C15]": "[movie_languages].[language_id]",
                "[T6].[C16]": "[movie_languages].[language_role_id]",
                "[C16]": "[movie_languages].[language_role_id]",
                "[T6].[C17]": "[movie_languages].[movie_id]",
                "[C17]": "[movie_languages].[movie_id]",
                "[T7]": "[person]",
                "[T7].[C18]": "[person].[person_id]",
                "[C18]": "[person].[person_id]"
            },
            "question": "What is the [C9] made by [C4] movies? [C4] movies refers to language_name = '[C4]'; [C9] = AVG(revenue)",
            "to_value": {},
            "masked": 2,
            "masked_terms": [
                "average revenue",
                "Latin"
            ],
            "sql": "SELECT AVG([T4].[C9]) FROM [T5] JOIN [T4] ON [T5].[C13] = [T4].[C8] WHERE [T4].[C7] = '[C4]'",
            "repaired_sql": "SELECT AVG([T4].[C9]) FROM [T4] WHERE [T4].[C7] = '[C4]'"
        },
        "values": [
            "Latin"
        ],
        "value_links": {
            "Latin": "[movie_languages].[language_name]"
        },
        "filtered_value_links": {
            "Latin": "[movie_languages].[language_name]"
        },
        "schema_links": {
            "average revenue": "COLUMN:[movie].[revenue]",
            "Latin": "COLUMN:[language].[language_name]"
        },
        "filtered_schema_links": {
            "average revenue": "COLUMN:[movie].[revenue]",
            "Latin": "COLUMN:[language].[language_name]"
        },
        "attack": "What is the average revenue made by English movies?"
    },
    {
        "db_id": "movies_4",
        "question": "How many movies were produced by \"Eddie Murphy Productions\"? produced by \"Eddie Murphy Productions\" refers to company_name = 'Eddie Murphy Productions'",
        "evidence": "produced by \"Eddie Murphy Productions\" refers to company_name = 'Eddie Murphy Productions'",
        "SQL": "SELECT COUNT(T1.movie_id) FROM movie_company AS T1 INNER JOIN production_company AS T2 ON T1.company_id = T2.company_id WHERE T2.company_name = 'Eddie Murphy Productions'",
        "query": "SELECT COUNT(T1.movie_id) FROM movie_company AS T1 INNER JOIN production_company AS T2 ON T1.company_id = T2.company_id WHERE T2.company_name = 'Eddie Murphy Productions'",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "movies",
            "were",
            "produced",
            "by",
            "\"Eddie",
            "Murphy",
            "Productions\"",
            "?",
            "produced",
            "by",
            "\"Eddie",
            "Murphy",
            "Productions\"",
            "refers",
            "to",
            "company_name",
            "=",
            "'Eddie",
            "Murphy",
            "Productions'"
        ],
        "tc_original": [
            "production_company.company_name",
            "production_company.company_id",
            "production_company.*",
            "movie_company.company_id",
            "movie_company.movie_id",
            "movie_company.*",
            "person.person_name",
            "person.person_id",
            "person.*",
            "movie.movie_id",
            "movie.title",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[production_company]",
            "COLUMN:[production_company].[company_name]",
            "COLUMN:[production_company].[company_id]",
            "COLUMN:[production_company].[*]",
            "TABLE:[movie_company]",
            "COLUMN:[movie_company].[company_id]",
            "COLUMN:[movie_company].[movie_id]",
            "COLUMN:[movie_company].[*]",
            "TABLE:[person]",
            "COLUMN:[person].[person_name]",
            "COLUMN:[person].[person_id]",
            "COLUMN:[person].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]"
        ],
        "schema": "'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_company]':\n  '[company_id]': integer\n  '[movie_id]': integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n  '[person_name]': text\n'[production_company]':\n  '[company_id]':\n    primary_key: true\n    type: integer\n  '[company_name]': text\n",
        "gold_links": {
            "movies": "TABLE:[movie]",
            "produced": "TABLE:[production_company]",
            "Eddie Murphy Productions": "VALUE:[production_company].[company_name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[movie]",
                "[C1]": "[movie].[budget]",
                "[C2]": "[movie].[homepage]",
                "[C3]": "[movie].[movie_id]",
                "[C4]": "[movie].[overview]",
                "[C5]": "[movie].[title]",
                "[T2]": "[movie_company]",
                "[C6]": "[movie_company].[company_id]",
                "[C7]": "[movie_company].[movie_id]",
                "[T3]": "[person]",
                "[C8]": "[person].[person_id]",
                "[C9]": "[person].[person_name]",
                "[T4]": "[production_company]",
                "[C10]": "[production_company].[company_id]",
                "[C11]": "[production_company].[company_name]"
            },
            "to_symbol": {
                "[movie]": "[T1]",
                "[movie].[budget]": "[C1]",
                "[movie].[homepage]": "[C2]",
                "[movie].[movie_id]": "[C3]",
                "[movie].[overview]": "[C4]",
                "[movie].[title]": "[C5]",
                "[movie_company]": "[T2]",
                "[movie_company].[company_id]": "[C6]",
                "[movie_company].[movie_id]": "[C7]",
                "[person]": "[T3]",
                "[person].[person_id]": "[C8]",
                "[person].[person_name]": "[C9]",
                "[production_company]": "[T4]",
                "[production_company].[company_id]": "[C10]",
                "[production_company].[company_name]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]': integer\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C6]': integer\n  '[C7]': integer\n'[T3]':\n  '[C8]':\n    primary_key: true\n    type: integer\n  '[C9]': text\n'[T4]':\n  '[C10]':\n    primary_key: true\n    type: integer\n  '[C11]': text\n",
            "reverse_dict": {
                "[T1]": "[movie]",
                "[T1].[C1]": "[movie].[budget]",
                "[C1]": "[movie].[budget]",
                "[T1].[C2]": "[movie].[homepage]",
                "[C2]": "[movie].[homepage]",
                "[T1].[C3]": "[movie].[movie_id]",
                "[C3]": "[movie].[movie_id]",
                "[T1].[C4]": "[movie].[overview]",
                "[C4]": "[movie].[overview]",
                "[T1].[C5]": "[movie].[title]",
                "[C5]": "[movie].[title]",
                "[T2]": "[movie_company]",
                "[T2].[C6]": "[movie_company].[company_id]",
                "[C6]": "[movie_company].[company_id]",
                "[T2].[C7]": "[movie_company].[movie_id]",
                "[C7]": "[movie_company].[movie_id]",
                "[T3]": "[person]",
                "[T3].[C8]": "[person].[person_id]",
                "[C8]": "[person].[person_id]",
                "[T3].[C9]": "[person].[person_name]",
                "[C9]": "[person].[person_name]",
                "[T4]": "[production_company]",
                "[T4].[C10]": "[production_company].[company_id]",
                "[C10]": "[production_company].[company_id]",
                "[T4].[C11]": "[production_company].[company_name]",
                "[C11]": "[production_company].[company_name]"
            },
            "question": "How many movies were [T2] by \"[V1]\"? [T2] by \"[V1]\" refers to company_name = '[V1]'; [V1] is a value of the column [C11]",
            "to_value": {
                "[V1]": "Eddie Murphy Productions"
            },
            "masked": 4,
            "masked_terms": [
                "Eddie Murphy Productions",
                "Eddie Murphy Productions",
                "movie",
                "produced"
            ],
            "sql": "SELECT COUNT(*) FROM [T2] WHERE [C6] IN (SELECT [C10] FROM [T4] WHERE [C11] = '[V1]')",
            "repaired_sql": "SELECT COUNT(*) FROM [T1] JOIN [T2] ON [T1].[C3] = [T2].[C6] JOIN [T4] ON [T2].[C7] = [T4].[C10] WHERE [T4].[C11] = '[V1]'"
        },
        "values": [
            "Eddie Murphy Productions"
        ],
        "value_links": {
            "Eddie Murphy Productions": "[production_company].[company_name]"
        },
        "filtered_value_links": {
            "Eddie Murphy Productions": "[production_company].[company_name]"
        },
        "schema_links": {
            "Eddie Murphy Productions": "COLUMN:[production_company].[company_name]",
            "movie": "TABLE:[movie]",
            "produced": "TABLE:[movie_company]"
        },
        "filtered_schema_links": {
            "Eddie Murphy Productions": "COLUMN:[production_company].[company_name]",
            "movie": "TABLE:[movie]",
            "produced": "TABLE:[movie_company]"
        },
        "attack": "How many movies were produced by \"Warner Bros\"? Produced by \"Warner Bros\" refers to company_name = 'Warner Bros'; \"Warner Bros\" is a value of the column company_name."
    },
    {
        "db_id": "movies_4",
        "question": "List all the actors who have played characters with \"captain\" in their names. List all the actors refers to person_name; characters with \"captain\" in their names refers to character_name LIKE '%captain%';",
        "evidence": "List all the actors refers to person_name; characters with \"captain\" in their names refers to character_name LIKE '%captain%';",
        "SQL": "SELECT DISTINCT T1.person_name FROM person AS T1 INNER JOIN movie_cast AS T2 ON T1.person_id = T2.person_id WHERE T2.character_name LIKE '%captain%'",
        "query": "SELECT DISTINCT T1.person_name FROM person AS T1 INNER JOIN movie_cast AS T2 ON T1.person_id = T2.person_id WHERE T2.character_name LIKE '%captain%'",
        "evidence_added": true,
        "question_toks": [
            "List",
            "all",
            "the",
            "actors",
            "who",
            "have",
            "played",
            "characters",
            "with",
            "\"captain\"",
            "in",
            "their",
            "names",
            ".",
            "List",
            "all",
            "the",
            "actors",
            "refers",
            "to",
            "person_name",
            ";",
            "characters",
            "with",
            "\"captain\"",
            "in",
            "their",
            "names",
            "refers",
            "to",
            "character_name",
            "LIKE",
            "'%captain%'",
            ";"
        ],
        "tc_original": [
            "movie_cast.person_id",
            "movie_cast.character_name",
            "movie_cast.movie_id",
            "movie_cast.gender_id",
            "movie_cast.cast_order",
            "movie_cast.*",
            "person.person_id",
            "person.person_name",
            "person.*",
            "keyword.keyword_name",
            "keyword.keyword_id",
            "keyword.*",
            "gender.gender",
            "gender.gender_id",
            "gender.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie_cast]",
            "COLUMN:[movie_cast].[person_id]",
            "COLUMN:[movie_cast].[character_name]",
            "COLUMN:[movie_cast].[movie_id]",
            "COLUMN:[movie_cast].[gender_id]",
            "COLUMN:[movie_cast].[cast_order]",
            "COLUMN:[movie_cast].[*]",
            "TABLE:[person]",
            "COLUMN:[person].[person_id]",
            "COLUMN:[person].[person_name]",
            "COLUMN:[person].[*]",
            "TABLE:[keyword]",
            "COLUMN:[keyword].[keyword_name]",
            "COLUMN:[keyword].[keyword_id]",
            "COLUMN:[keyword].[*]",
            "TABLE:[gender]",
            "COLUMN:[gender].[gender]",
            "COLUMN:[gender].[gender_id]",
            "COLUMN:[gender].[*]"
        ],
        "schema": "'[gender]':\n  '[gender]': text\n  '[gender_id]':\n    primary_key: true\n    type: integer\n'[keyword]':\n  '[keyword_id]':\n    primary_key: true\n    type: integer\n  '[keyword_name]': text\n'[movie]':\n  '[movie_id]':\n    primary_key: true\n    type: integer\n'[movie_cast]':\n  '[cast_order]': integer\n  '[character_name]': text\n  '[gender_id]':\n    foreign_key: '[gender].[gender_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n  '[person_name]': text\n",
        "gold_links": {
            "actors": "TABLE:[person]",
            "person_name": "COLUMN:[person].[person_name]",
            "characters": "COLUMN:[movie_cast].[character_name]",
            "captain": "VALUE:[movie_cast].[character_name]",
            "character_name": "COLUMN:[movie_cast].[character_name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[gender]",
                "[C1]": "[gender].[gender]",
                "[C2]": "[gender].[gender_id]",
                "[T2]": "[keyword]",
                "[C3]": "[keyword].[keyword_id]",
                "[C4]": "[keyword].[keyword_name]",
                "[T3]": "[movie]",
                "[C5]": "[movie].[movie_id]",
                "[T4]": "[movie_cast]",
                "[C6]": "[movie_cast].[cast_order]",
                "[C7]": "[movie_cast].[character_name]",
                "[C8]": "[movie_cast].[gender_id]",
                "[C9]": "[movie_cast].[movie_id]",
                "[C10]": "[movie_cast].[person_id]",
                "[T5]": "[person]",
                "[C11]": "[person].[person_id]",
                "[C12]": "[person].[person_name]"
            },
            "to_symbol": {
                "[gender]": "[T1]",
                "[gender].[gender]": "[C1]",
                "[gender].[gender_id]": "[C2]",
                "[keyword]": "[T2]",
                "[keyword].[keyword_id]": "[C3]",
                "[keyword].[keyword_name]": "[C4]",
                "[movie]": "[T3]",
                "[movie].[movie_id]": "[C5]",
                "[movie_cast]": "[T4]",
                "[movie_cast].[cast_order]": "[C6]",
                "[movie_cast].[character_name]": "[C7]",
                "[movie_cast].[gender_id]": "[C8]",
                "[movie_cast].[movie_id]": "[C9]",
                "[movie_cast].[person_id]": "[C10]",
                "[person]": "[T5]",
                "[person].[person_id]": "[C11]",
                "[person].[person_name]": "[C12]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n'[T3]':\n  '[C5]':\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]':\n    foreign_key: '[T5].[C11]'\n    type: integer\n  '[C6]': integer\n  '[C7]': text\n  '[C8]':\n    foreign_key: '[T1].[C2]'\n    type: integer\n  '[C9]':\n    foreign_key: '[T3].[C5]'\n    type: integer\n'[T5]':\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': text\n",
            "reverse_dict": {
                "[T1]": "[gender]",
                "[T1].[C1]": "[gender].[gender]",
                "[C1]": "[gender].[gender]",
                "[T1].[C2]": "[gender].[gender_id]",
                "[C2]": "[gender].[gender_id]",
                "[T2]": "[keyword]",
                "[T2].[C3]": "[keyword].[keyword_id]",
                "[C3]": "[keyword].[keyword_id]",
                "[T2].[C4]": "[keyword].[keyword_name]",
                "[C4]": "[keyword].[keyword_name]",
                "[T3]": "[movie]",
                "[T3].[C5]": "[movie].[movie_id]",
                "[C5]": "[movie].[movie_id]",
                "[T4]": "[movie_cast]",
                "[T4].[C6]": "[movie_cast].[cast_order]",
                "[C6]": "[movie_cast].[cast_order]",
                "[T4].[C7]": "[movie_cast].[character_name]",
                "[C7]": "[movie_cast].[character_name]",
                "[T4].[C8]": "[movie_cast].[gender_id]",
                "[C8]": "[movie_cast].[gender_id]",
                "[T4].[C9]": "[movie_cast].[movie_id]",
                "[C9]": "[movie_cast].[movie_id]",
                "[T4].[C10]": "[movie_cast].[person_id]",
                "[C10]": "[movie_cast].[person_id]",
                "[T5]": "[person]",
                "[T5].[C11]": "[person].[person_id]",
                "[C11]": "[person].[person_id]",
                "[T5].[C12]": "[person].[person_name]",
                "[C12]": "[person].[person_name]"
            },
            "question": "List all the [T5] who have played characters with \"[V1]\" in their names. List all the [T5] refers to person_name; characters with \"[V1]\" in their names refers to character_name LIKE '%[V1]%';; [V1] is a value of the column [C7]",
            "to_value": {
                "[V1]": "captain"
            },
            "masked": 3,
            "masked_terms": [
                "captain",
                "actors",
                "captain"
            ],
            "sql": "SELECT [T5].[C12] FROM [T5] WHERE [T5].[C11] IN (SELECT [T4].[C10] FROM [T4] WHERE [T4].[C7] LIKE '%[V1]%')",
            "repaired_sql": "SELECT DISTINCT [T5].[C12] FROM [T5] JOIN [T4] ON [T5].[C11] = [T4].[C10] WHERE [T4].[C7] LIKE '%[V1]%';"
        },
        "values": [
            "captain"
        ],
        "value_links": {
            "captain": "[movie_cast].[character_name]"
        },
        "filtered_value_links": {
            "captain": "[movie_cast].[character_name]"
        },
        "schema_links": {
            "actors": "TABLE:[person]",
            "captain": "COLUMN:[movie_cast].[character_name]"
        },
        "filtered_schema_links": {
            "actors": "TABLE:[person]",
            "captain": "COLUMN:[movie_cast].[character_name]"
        },
        "attack": "List all the person_name who have played characters with \"V1\" in their names."
    },
    {
        "db_id": "movies_4",
        "question": "What is the most common keyword among all the movies released in 2006? most common keyword refers to max(count(keyword_name)); movies released in 2006 refers to release_date LIKE '%2006%'",
        "evidence": "most common keyword refers to max(count(keyword_name)); movies released in 2006 refers to release_date LIKE '%2006%'",
        "SQL": "SELECT T3.keyword_name FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T1.release_date LIKE '2006%' GROUP BY T3.keyword_name ORDER BY COUNT(T3.keyword_name) DESC LIMIT 1",
        "query": "SELECT T3.keyword_name FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T1.release_date LIKE '2006%' GROUP BY T3.keyword_name ORDER BY COUNT(T3.keyword_name) DESC LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "most",
            "common",
            "keyword",
            "among",
            "all",
            "the",
            "movies",
            "released",
            "in",
            "2006",
            "?",
            "most",
            "common",
            "keyword",
            "refers",
            "to",
            "max(count(keyword_name))",
            ";",
            "movies",
            "released",
            "in",
            "2006",
            "refers",
            "to",
            "release_date",
            "LIKE",
            "'%2006%'"
        ],
        "tc_original": [
            "movie.release_date",
            "movie.movie_id",
            "movie.movie_status",
            "movie.title",
            "movie.budget",
            "movie.*",
            "movie_keywords.keyword_id",
            "movie_keywords.movie_id",
            "movie_keywords.*",
            "keyword.keyword_name",
            "keyword.keyword_id",
            "keyword.*",
            "movie_company.movie_id",
            "movie_company.company_id",
            "movie_company.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[release_date]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[movie_status]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_keywords]",
            "COLUMN:[movie_keywords].[keyword_id]",
            "COLUMN:[movie_keywords].[movie_id]",
            "COLUMN:[movie_keywords].[*]",
            "TABLE:[keyword]",
            "COLUMN:[keyword].[keyword_name]",
            "COLUMN:[keyword].[keyword_id]",
            "COLUMN:[keyword].[*]",
            "TABLE:[movie_company]",
            "COLUMN:[movie_company].[movie_id]",
            "COLUMN:[movie_company].[company_id]",
            "COLUMN:[movie_company].[*]"
        ],
        "schema": "'[keyword]':\n  '[keyword_id]':\n    primary_key: true\n    type: integer\n  '[keyword_name]': text\n'[movie]':\n  '[budget]': integer\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_status]': text\n  '[release_date]': date\n  '[title]': text\n'[movie_company]':\n  '[company_id]': integer\n  '[movie_id]': integer\n'[movie_keywords]':\n  '[keyword_id]': integer\n  '[movie_id]': integer\n",
        "gold_links": {
            "keyword": "COLUMN:[keyword].[keyword_name]",
            "most common": "COLUMN:[keyword].[keyword_name]",
            "movies": "TABLE:[movie]",
            "2006": "VALUE:[movie].[release_date]",
            "release date": "COLUMN:[movie].[release_date]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[keyword]",
                "[C1]": "[keyword].[keyword_id]",
                "[C2]": "[keyword].[keyword_name]",
                "[T2]": "[movie]",
                "[C3]": "[movie].[budget]",
                "[C4]": "[movie].[movie_id]",
                "[C5]": "[movie].[movie_status]",
                "[C6]": "[movie].[release_date]",
                "[C7]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[C8]": "[movie_company].[company_id]",
                "[C9]": "[movie_company].[movie_id]",
                "[T4]": "[movie_keywords]",
                "[C10]": "[movie_keywords].[keyword_id]",
                "[C11]": "[movie_keywords].[movie_id]"
            },
            "to_symbol": {
                "[keyword]": "[T1]",
                "[keyword].[keyword_id]": "[C1]",
                "[keyword].[keyword_name]": "[C2]",
                "[movie]": "[T2]",
                "[movie].[budget]": "[C3]",
                "[movie].[movie_id]": "[C4]",
                "[movie].[movie_status]": "[C5]",
                "[movie].[release_date]": "[C6]",
                "[movie].[title]": "[C7]",
                "[movie_company]": "[T3]",
                "[movie_company].[company_id]": "[C8]",
                "[movie_company].[movie_id]": "[C9]",
                "[movie_keywords]": "[T4]",
                "[movie_keywords].[keyword_id]": "[C10]",
                "[movie_keywords].[movie_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n'[T2]':\n  '[C3]': integer\n  '[C4]':\n    primary_key: true\n    type: integer\n  '[C5]': text\n  '[C6]': date\n  '[C7]': text\n'[T3]':\n  '[C8]': integer\n  '[C9]': integer\n'[T4]':\n  '[C10]': integer\n  '[C11]': integer\n",
            "reverse_dict": {
                "[T1]": "[keyword]",
                "[T1].[C1]": "[keyword].[keyword_id]",
                "[C1]": "[keyword].[keyword_id]",
                "[T1].[C2]": "[keyword].[keyword_name]",
                "[C2]": "[keyword].[keyword_name]",
                "[T2]": "[movie]",
                "[T2].[C3]": "[movie].[budget]",
                "[C3]": "[movie].[budget]",
                "[T2].[C4]": "[movie].[movie_id]",
                "[C4]": "[movie].[movie_id]",
                "[T2].[C5]": "[movie].[movie_status]",
                "[C5]": "[movie].[movie_status]",
                "[T2].[C6]": "[movie].[release_date]",
                "[C6]": "[movie].[release_date]",
                "[T2].[C7]": "[movie].[title]",
                "[C7]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[T3].[C8]": "[movie_company].[company_id]",
                "[C8]": "[movie_company].[company_id]",
                "[T3].[C9]": "[movie_company].[movie_id]",
                "[C9]": "[movie_company].[movie_id]",
                "[T4]": "[movie_keywords]",
                "[T4].[C10]": "[movie_keywords].[keyword_id]",
                "[C10]": "[movie_keywords].[keyword_id]",
                "[T4].[C11]": "[movie_keywords].[movie_id]",
                "[C11]": "[movie_keywords].[movie_id]"
            },
            "question": "What is the [C2] among all the movies released in [V1]? [C2] refers to max(count(keyword_name)); movies released in [V1] refers to release_date LIKE '%[V1]%'; [V1] is a value of the column [C6]",
            "to_value": {
                "[V1]": "2006"
            },
            "masked": 4,
            "masked_terms": [
                "2006",
                "most common keyword",
                "movies released in 2006",
                "2006"
            ],
            "sql": "SELECT MAX(cnt) FROM (SELECT COUNT([T1].[C2]) AS cnt FROM [T2] JOIN [T3] ON [T2].[C4] = [T3].[C8] JOIN [T1] ON [T3].[C9] = [T1].[C1] WHERE [T2].[C6] LIKE '%[V1]%' GROUP BY [T2].[C4]) AS subquery",
            "repaired_sql": "SELECT MAX(keyword_count) FROM (SELECT COUNT([T3].[C9]) AS keyword_count FROM [T2] JOIN [T3] ON [T2].[C4] = [T3].[C8] WHERE [T2].[C6] LIKE '%[V1]%' GROUP BY [T2].[C4]) AS subquery"
        },
        "values": [
            "2006"
        ],
        "value_links": {
            "2006": "[movie].[release_date]"
        },
        "filtered_value_links": {
            "2006": "[movie].[release_date]"
        },
        "schema_links": {
            "most common keyword": "COLUMN:[keyword].[keyword_name]",
            "movies released in 2006": "TABLE:[movie]",
            "2006": "COLUMN:[movie].[release_date]"
        },
        "filtered_schema_links": {
            "most common keyword": "COLUMN:[keyword].[keyword_name]",
            "movies released in 2006": "TABLE:[movie]",
            "2006": "COLUMN:[movie].[release_date]"
        },
        "attack": "What is the max(count(keyword_name)) among all the movies released in 2014?"
    },
    {
        "db_id": "movies_4",
        "question": "What is the third least common genre? least common genre refers to min(count(genre_name))",
        "evidence": "least common genre refers to min(count(genre_name))",
        "SQL": "SELECT T2.genre_name FROM movie_genres AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.genre_id GROUP BY T2.genre_id ORDER BY COUNT(T1.movie_id) LIMIT 2, 1",
        "query": "SELECT T2.genre_name FROM movie_genres AS T1 INNER JOIN genre AS T2 ON T1.genre_id = T2.genre_id GROUP BY T2.genre_id ORDER BY COUNT(T1.movie_id) LIMIT 2, 1",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "third",
            "least",
            "common",
            "genre",
            "?",
            "least",
            "common",
            "genre",
            "refers",
            "to",
            "min(count(genre_name))"
        ],
        "tc_original": [
            "genre.genre_name",
            "genre.genre_id",
            "genre.*",
            "movie_genres.genre_id",
            "movie_genres.movie_id",
            "movie_genres.*",
            "movie.title",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.popularity",
            "movie.*",
            "movie_crew.job",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[genre]",
            "COLUMN:[genre].[genre_name]",
            "COLUMN:[genre].[genre_id]",
            "COLUMN:[genre].[*]",
            "TABLE:[movie_genres]",
            "COLUMN:[movie_genres].[genre_id]",
            "COLUMN:[movie_genres].[movie_id]",
            "COLUMN:[movie_genres].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[popularity]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[genre]':\n  '[genre_id]':\n    primary_key: true\n    type: integer\n  '[genre_name]': text\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[popularity]': real\n  '[title]': text\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[movie_genres]':\n  '[genre_id]':\n    foreign_key: '[genre].[genre_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "genre": "TABLE:[genre]",
            "genre_name": "COLUMN:[genre].[genre_name]",
            "common": "COLUMN:[genre].[genre_name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[genre]",
                "[C2]": "[genre].[genre_id]",
                "[C3]": "[genre].[genre_name]",
                "[T3]": "[movie]",
                "[C4]": "[movie].[budget]",
                "[C5]": "[movie].[homepage]",
                "[C6]": "[movie].[movie_id]",
                "[C7]": "[movie].[overview]",
                "[C8]": "[movie].[popularity]",
                "[C9]": "[movie].[title]",
                "[T4]": "[movie_crew]",
                "[C10]": "[movie_crew].[department_id]",
                "[C11]": "[movie_crew].[job]",
                "[C12]": "[movie_crew].[movie_id]",
                "[C13]": "[movie_crew].[person_id]",
                "[T5]": "[movie_genres]",
                "[C14]": "[movie_genres].[genre_id]",
                "[C15]": "[movie_genres].[movie_id]",
                "[T6]": "[person]",
                "[C16]": "[person].[person_id]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[genre]": "[T2]",
                "[genre].[genre_id]": "[C2]",
                "[genre].[genre_name]": "[C3]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C4]",
                "[movie].[homepage]": "[C5]",
                "[movie].[movie_id]": "[C6]",
                "[movie].[overview]": "[C7]",
                "[movie].[popularity]": "[C8]",
                "[movie].[title]": "[C9]",
                "[movie_crew]": "[T4]",
                "[movie_crew].[department_id]": "[C10]",
                "[movie_crew].[job]": "[C11]",
                "[movie_crew].[movie_id]": "[C12]",
                "[movie_crew].[person_id]": "[C13]",
                "[movie_genres]": "[T5]",
                "[movie_genres].[genre_id]": "[C14]",
                "[movie_genres].[movie_id]": "[C15]",
                "[person]": "[T6]",
                "[person].[person_id]": "[C16]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n'[T3]':\n  '[C4]': integer\n  '[C5]': text\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': real\n  '[C9]': text\n'[T4]':\n  '[C10]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C11]': text\n  '[C12]':\n    foreign_key: '[T3].[C6]'\n    type: integer\n  '[C13]':\n    foreign_key: '[T6].[C16]'\n    type: integer\n'[T5]':\n  '[C14]':\n    foreign_key: '[T2].[C2]'\n    type: integer\n  '[C15]':\n    foreign_key: '[T3].[C6]'\n    type: integer\n'[T6]':\n  '[C16]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[genre]",
                "[T2].[C2]": "[genre].[genre_id]",
                "[C2]": "[genre].[genre_id]",
                "[T2].[C3]": "[genre].[genre_name]",
                "[C3]": "[genre].[genre_name]",
                "[T3]": "[movie]",
                "[T3].[C4]": "[movie].[budget]",
                "[C4]": "[movie].[budget]",
                "[T3].[C5]": "[movie].[homepage]",
                "[C5]": "[movie].[homepage]",
                "[T3].[C6]": "[movie].[movie_id]",
                "[C6]": "[movie].[movie_id]",
                "[T3].[C7]": "[movie].[overview]",
                "[C7]": "[movie].[overview]",
                "[T3].[C8]": "[movie].[popularity]",
                "[C8]": "[movie].[popularity]",
                "[T3].[C9]": "[movie].[title]",
                "[C9]": "[movie].[title]",
                "[T4]": "[movie_crew]",
                "[T4].[C10]": "[movie_crew].[department_id]",
                "[C10]": "[movie_crew].[department_id]",
                "[T4].[C11]": "[movie_crew].[job]",
                "[C11]": "[movie_crew].[job]",
                "[T4].[C12]": "[movie_crew].[movie_id]",
                "[C12]": "[movie_crew].[movie_id]",
                "[T4].[C13]": "[movie_crew].[person_id]",
                "[C13]": "[movie_crew].[person_id]",
                "[T5]": "[movie_genres]",
                "[T5].[C14]": "[movie_genres].[genre_id]",
                "[C14]": "[movie_genres].[genre_id]",
                "[T5].[C15]": "[movie_genres].[movie_id]",
                "[C15]": "[movie_genres].[movie_id]",
                "[T6]": "[person]",
                "[T6].[C16]": "[person].[person_id]",
                "[C16]": "[person].[person_id]"
            },
            "question": "What is the [V1]? [C3] [T2] refers to min(count(genre_name)); [V1] is a value of the column [C3]",
            "to_value": {
                "[V1]": "third least common genre"
            },
            "masked": 3,
            "masked_terms": [
                "third least common genre",
                "least common",
                "genre"
            ],
            "sql": "SELECT [T2].[C3] FROM [T2] GROUP BY [T2].[C3] ORDER BY COUNT([T2].[C3]) ASC LIMIT 1",
            "repaired_sql": "SELECT [T2].[C3] FROM [T2] JOIN [T5] ON [T2].[C2] = [T5].[C14] GROUP BY [T2].[C3] HAVING COUNT([T5].[C15]) = (SELECT MIN(g_count) FROM (SELECT COUNT([T5].[C15]) AS g_count FROM [T2] JOIN [T5] ON [T2].[C2] = [T5].[C14] GROUP BY [T2].[C3]))"
        },
        "values": [
            "third least common genre"
        ],
        "value_links": {
            "third least common genre": "[genre].[genre_name]"
        },
        "filtered_value_links": {
            "third least common genre": "[genre].[genre_name]"
        },
        "schema_links": {
            "least common": "COLUMN:[genre].[genre_name]",
            "genre": "TABLE:[genre]"
        },
        "filtered_schema_links": {
            "least common": "COLUMN:[genre].[genre_name]",
            "genre": "TABLE:[genre]"
        },
        "attack": "What is the genre name? genre name in genres refers to min(count(genre_name)); genre name is a value of the column genre name"
    },
    {
        "db_id": "movies_4",
        "question": "Provide the average revenue of all the French movies. French movies refers to country_name = 'France'; average revenue = AVG(revenue)",
        "evidence": "French movies refers to country_name = 'France'; average revenue = AVG(revenue)",
        "SQL": "SELECT AVG(T1.revenue) FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id WHERE T3.COUNTry_name = 'France'",
        "query": "SELECT AVG(T1.revenue) FROM movie AS T1 INNER JOIN production_COUNTry AS T2 ON T1.movie_id = T2.movie_id INNER JOIN COUNTry AS T3 ON T2.COUNTry_id = T3.COUNTry_id WHERE T3.COUNTry_name = 'France'",
        "evidence_added": true,
        "question_toks": [
            "Provide",
            "the",
            "average",
            "revenue",
            "of",
            "all",
            "the",
            "French",
            "movies",
            ".",
            "French",
            "movies",
            "refers",
            "to",
            "country_name",
            "=",
            "'France'",
            ";",
            "average",
            "revenue",
            "=",
            "AVG(revenue)"
        ],
        "tc_original": [
            "movie.revenue",
            "movie.movie_id",
            "movie.title",
            "movie.budget",
            "movie.homepage",
            "movie.*",
            "country.country_name",
            "country.country_id",
            "country.country_iso_code",
            "country.*",
            "keyword.keyword_name",
            "keyword.keyword_id",
            "keyword.*",
            "language.language_id",
            "language.language_code",
            "language.language_name",
            "language.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[revenue]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[*]",
            "TABLE:[country]",
            "COLUMN:[country].[country_name]",
            "COLUMN:[country].[country_id]",
            "COLUMN:[country].[country_iso_code]",
            "COLUMN:[country].[*]",
            "TABLE:[keyword]",
            "COLUMN:[keyword].[keyword_name]",
            "COLUMN:[keyword].[keyword_id]",
            "COLUMN:[keyword].[*]",
            "TABLE:[language]",
            "COLUMN:[language].[language_id]",
            "COLUMN:[language].[language_code]",
            "COLUMN:[language].[language_name]",
            "COLUMN:[language].[*]"
        ],
        "schema": "'[country]':\n  '[country_id]':\n    primary_key: true\n    type: integer\n  '[country_iso_code]': text\n  '[country_name]': text\n'[keyword]':\n  '[keyword_id]':\n    primary_key: true\n    type: integer\n  '[keyword_name]': text\n'[language]':\n  '[language_code]': text\n  '[language_id]':\n    primary_key: true\n    type: integer\n  '[language_name]': text\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[revenue]': integer\n  '[title]': text\n",
        "gold_links": {
            "average revenue": "COLUMN:[movie].[revenue]",
            "revenue": "COLUMN:[movie].[revenue]",
            "French movies": "VALUE:[country].[country_name]",
            "France": "VALUE:[country].[country_name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[country]",
                "[C1]": "[country].[country_id]",
                "[C2]": "[country].[country_iso_code]",
                "[C3]": "[country].[country_name]",
                "[T2]": "[keyword]",
                "[C4]": "[keyword].[keyword_id]",
                "[C5]": "[keyword].[keyword_name]",
                "[T3]": "[language]",
                "[C6]": "[language].[language_code]",
                "[C7]": "[language].[language_id]",
                "[C8]": "[language].[language_name]",
                "[T4]": "[movie]",
                "[C9]": "[movie].[budget]",
                "[C10]": "[movie].[homepage]",
                "[C11]": "[movie].[movie_id]",
                "[C12]": "[movie].[revenue]",
                "[C13]": "[movie].[title]"
            },
            "to_symbol": {
                "[country]": "[T1]",
                "[country].[country_id]": "[C1]",
                "[country].[country_iso_code]": "[C2]",
                "[country].[country_name]": "[C3]",
                "[keyword]": "[T2]",
                "[keyword].[keyword_id]": "[C4]",
                "[keyword].[keyword_name]": "[C5]",
                "[language]": "[T3]",
                "[language].[language_code]": "[C6]",
                "[language].[language_id]": "[C7]",
                "[language].[language_name]": "[C8]",
                "[movie]": "[T4]",
                "[movie].[budget]": "[C9]",
                "[movie].[homepage]": "[C10]",
                "[movie].[movie_id]": "[C11]",
                "[movie].[revenue]": "[C12]",
                "[movie].[title]": "[C13]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n'[T2]':\n  '[C4]':\n    primary_key: true\n    type: integer\n  '[C5]': text\n'[T3]':\n  '[C6]': text\n  '[C7]':\n    primary_key: true\n    type: integer\n  '[C8]': text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': text\n  '[C9]': integer\n",
            "reverse_dict": {
                "[T1]": "[country]",
                "[T1].[C1]": "[country].[country_id]",
                "[C1]": "[country].[country_id]",
                "[T1].[C2]": "[country].[country_iso_code]",
                "[C2]": "[country].[country_iso_code]",
                "[T1].[C3]": "[country].[country_name]",
                "[C3]": "[country].[country_name]",
                "[T2]": "[keyword]",
                "[T2].[C4]": "[keyword].[keyword_id]",
                "[C4]": "[keyword].[keyword_id]",
                "[T2].[C5]": "[keyword].[keyword_name]",
                "[C5]": "[keyword].[keyword_name]",
                "[T3]": "[language]",
                "[T3].[C6]": "[language].[language_code]",
                "[C6]": "[language].[language_code]",
                "[T3].[C7]": "[language].[language_id]",
                "[C7]": "[language].[language_id]",
                "[T3].[C8]": "[language].[language_name]",
                "[C8]": "[language].[language_name]",
                "[T4]": "[movie]",
                "[T4].[C9]": "[movie].[budget]",
                "[C9]": "[movie].[budget]",
                "[T4].[C10]": "[movie].[homepage]",
                "[C10]": "[movie].[homepage]",
                "[T4].[C11]": "[movie].[movie_id]",
                "[C11]": "[movie].[movie_id]",
                "[T4].[C12]": "[movie].[revenue]",
                "[C12]": "[movie].[revenue]",
                "[T4].[C13]": "[movie].[title]",
                "[C13]": "[movie].[title]"
            },
            "question": "Provide the [C12] [C12] of all the [C3] [T4]. [C3] [T4] refers to country_name = '[V1]'; [C12] [C12] = AVG([C12]); [V1] is a value of the column [C12]",
            "to_value": {
                "[V1]": "France"
            },
            "masked": 5,
            "masked_terms": [
                "France",
                "revenue",
                "French",
                "movies",
                "average"
            ],
            "sql": "SELECT AVG([T4].[C12]) FROM [T4] WHERE [T4].[C10] = '[V1]'",
            "repaired_sql": "SELECT AVG([C12]) FROM [T4] WHERE [C13] = '[V1]'"
        },
        "values": [
            "France"
        ],
        "value_links": {
            "France": "[movie].[revenue]"
        },
        "filtered_value_links": {
            "France": "[movie].[revenue]"
        },
        "schema_links": {
            "revenue": "COLUMN:[movie].[revenue]",
            "French": "COLUMN:[country].[country_name]",
            "movies": "TABLE:[movie]",
            "average": "COLUMN:[movie].[revenue]"
        },
        "filtered_schema_links": {
            "revenue": "COLUMN:[movie].[revenue]",
            "French": "COLUMN:[country].[country_name]",
            "movies": "TABLE:[movie]",
            "average": "COLUMN:[movie].[revenue]"
        },
        "attack": "Provide the average population of all the countries. Country refers to country_name = 'population'; average population = AVG(population); 'population' is a value of the column population"
    },
    {
        "db_id": "movies_4",
        "question": "Which department has the most people? department refers to department_name; most people refers to max(count(department_id))",
        "evidence": "department refers to department_name; most people refers to max(count(department_id))",
        "SQL": "SELECT T1.department_name FROM department AS T1 INNER JOIN movie_crew AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY COUNT(T2.department_id) DESC LIMIT 1",
        "query": "SELECT T1.department_name FROM department AS T1 INNER JOIN movie_crew AS T2 ON T1.department_id = T2.department_id GROUP BY T1.department_id ORDER BY COUNT(T2.department_id) DESC LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "Which",
            "department",
            "has",
            "the",
            "most",
            "people",
            "?",
            "department",
            "refers",
            "to",
            "department_name",
            ";",
            "most",
            "people",
            "refers",
            "to",
            "max(count(department_id))"
        ],
        "tc_original": [
            "department.department_name",
            "department.department_id",
            "department.*",
            "person.person_id",
            "person.person_name",
            "person.*",
            "movie_crew.job",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.*",
            "movie.title",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.popularity",
            "movie.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[department]",
            "COLUMN:[department].[department_name]",
            "COLUMN:[department].[department_id]",
            "COLUMN:[department].[*]",
            "TABLE:[person]",
            "COLUMN:[person].[person_id]",
            "COLUMN:[person].[person_name]",
            "COLUMN:[person].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[popularity]",
            "COLUMN:[movie].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n  '[department_name]': text\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[popularity]': real\n  '[title]': text\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n  '[person_name]': text\n",
        "gold_links": {
            "department": "TABLE:[department]",
            "department_name": "COLUMN:[department].[department_name]",
            "most people": "COLUMN:[movie_crew].[department_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[C2]": "[department].[department_name]",
                "[T2]": "[movie]",
                "[C3]": "[movie].[budget]",
                "[C4]": "[movie].[homepage]",
                "[C5]": "[movie].[movie_id]",
                "[C6]": "[movie].[overview]",
                "[C7]": "[movie].[popularity]",
                "[C8]": "[movie].[title]",
                "[T3]": "[movie_crew]",
                "[C9]": "[movie_crew].[department_id]",
                "[C10]": "[movie_crew].[job]",
                "[C11]": "[movie_crew].[movie_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T4]": "[person]",
                "[C13]": "[person].[person_id]",
                "[C14]": "[person].[person_name]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[department].[department_name]": "[C2]",
                "[movie]": "[T2]",
                "[movie].[budget]": "[C3]",
                "[movie].[homepage]": "[C4]",
                "[movie].[movie_id]": "[C5]",
                "[movie].[overview]": "[C6]",
                "[movie].[popularity]": "[C7]",
                "[movie].[title]": "[C8]",
                "[movie_crew]": "[T3]",
                "[movie_crew].[department_id]": "[C9]",
                "[movie_crew].[job]": "[C10]",
                "[movie_crew].[movie_id]": "[C11]",
                "[movie_crew].[person_id]": "[C12]",
                "[person]": "[T4]",
                "[person].[person_id]": "[C13]",
                "[person].[person_name]": "[C14]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n'[T2]':\n  '[C3]': integer\n  '[C4]': text\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]': text\n  '[C7]': real\n  '[C8]': text\n'[T3]':\n  '[C10]': text\n  '[C11]':\n    foreign_key: '[T2].[C5]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T4].[C13]'\n    type: integer\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T4]':\n  '[C13]':\n    primary_key: true\n    type: integer\n  '[C14]': text\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T1].[C2]": "[department].[department_name]",
                "[C2]": "[department].[department_name]",
                "[T2]": "[movie]",
                "[T2].[C3]": "[movie].[budget]",
                "[C3]": "[movie].[budget]",
                "[T2].[C4]": "[movie].[homepage]",
                "[C4]": "[movie].[homepage]",
                "[T2].[C5]": "[movie].[movie_id]",
                "[C5]": "[movie].[movie_id]",
                "[T2].[C6]": "[movie].[overview]",
                "[C6]": "[movie].[overview]",
                "[T2].[C7]": "[movie].[popularity]",
                "[C7]": "[movie].[popularity]",
                "[T2].[C8]": "[movie].[title]",
                "[C8]": "[movie].[title]",
                "[T3]": "[movie_crew]",
                "[T3].[C9]": "[movie_crew].[department_id]",
                "[C9]": "[movie_crew].[department_id]",
                "[T3].[C10]": "[movie_crew].[job]",
                "[C10]": "[movie_crew].[job]",
                "[T3].[C11]": "[movie_crew].[movie_id]",
                "[C11]": "[movie_crew].[movie_id]",
                "[T3].[C12]": "[movie_crew].[person_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T4]": "[person]",
                "[T4].[C13]": "[person].[person_id]",
                "[C13]": "[person].[person_id]",
                "[T4].[C14]": "[person].[person_name]",
                "[C14]": "[person].[person_name]"
            },
            "question": "Which [T1] has the [C2]? [T1] refers to [V1]; [C2] refers to max(count(department_id)); [V1] is a value of the column [C2]",
            "to_value": {
                "[V1]": "department_name"
            },
            "masked": 3,
            "masked_terms": [
                "department_name",
                "department",
                "most people"
            ],
            "sql": "SELECT [T1].[C2] FROM [T1] WHERE [T1].[C2] = (SELECT [T1].[C2] FROM [T3] JOIN [T1] ON [T3].[C9] = [T1].[C1] GROUP BY [T1].[C2] ORDER BY COUNT([T3].[C9]) DESC LIMIT 1)",
            "repaired_sql": "SELECT [T1].[C2] FROM [T1] JOIN [T3] ON [T1].[C1] = [T3].[C9] WHERE [T1].[C2] = '[V1]' GROUP BY [T1].[C2] ORDER BY COUNT([T3].[C9]) DESC LIMIT 1;"
        },
        "values": [
            "department_name"
        ],
        "value_links": {
            "department_name": "[department].[department_name]"
        },
        "filtered_value_links": {
            "department_name": "[department].[department_name]"
        },
        "schema_links": {
            "department": "TABLE:[department]",
            "most people": "COLUMN:[department].[department_name]"
        },
        "filtered_schema_links": {
            "department": "TABLE:[department]",
            "most people": "COLUMN:[department].[department_name]"
        },
        "attack": "Which department has the max(count(department_id))?"
    },
    {
        "db_id": "movies_4",
        "question": "What is the original language of the \"Four Rooms\" movie? language refers to language_name; original language refers to language_role = 'Original'; \"Four Rooms\" refers to title = 'Four Rooms'",
        "evidence": "language refers to language_name; original language refers to language_role = 'Original'; \"Four Rooms\" refers to title = 'Four Rooms'",
        "SQL": "SELECT T3.language_name FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id INNER JOIN language_role AS T4 ON T2.language_role_id = T4.role_id WHERE T4.language_role = 'Original' AND T1.title = 'Four Rooms'",
        "query": "SELECT T3.language_name FROM movie AS T1 INNER JOIN movie_languages AS T2 ON T1.movie_id = T2.movie_id INNER JOIN language AS T3 ON T2.language_id = T3.language_id INNER JOIN language_role AS T4 ON T2.language_role_id = T4.role_id WHERE T4.language_role = 'Original' AND T1.title = 'Four Rooms'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "original",
            "language",
            "of",
            "the",
            "\"Four",
            "Rooms\"",
            "movie",
            "?",
            "language",
            "refers",
            "to",
            "language_name",
            ";",
            "original",
            "language",
            "refers",
            "to",
            "language_role",
            "=",
            "'Original'",
            ";",
            "\"Four",
            "Rooms\"",
            "refers",
            "to",
            "title",
            "=",
            "'Four",
            "Rooms'"
        ],
        "tc_original": [
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "movie_languages.language_id",
            "movie_languages.movie_id",
            "movie_languages.language_role_id",
            "movie_languages.*",
            "language.language_name",
            "language.language_id",
            "language.language_code",
            "language.*",
            "language_role.language_role",
            "language_role.role_id",
            "language_role.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_languages]",
            "COLUMN:[movie_languages].[language_id]",
            "COLUMN:[movie_languages].[movie_id]",
            "COLUMN:[movie_languages].[language_role_id]",
            "COLUMN:[movie_languages].[*]",
            "TABLE:[language]",
            "COLUMN:[language].[language_name]",
            "COLUMN:[language].[language_id]",
            "COLUMN:[language].[language_code]",
            "COLUMN:[language].[*]",
            "TABLE:[language_role]",
            "COLUMN:[language_role].[language_role]",
            "COLUMN:[language_role].[role_id]",
            "COLUMN:[language_role].[*]"
        ],
        "schema": "'[language]':\n  '[language_code]': text\n  '[language_id]':\n    primary_key: true\n    type: integer\n  '[language_name]': text\n'[language_role]':\n  '[language_role]': text\n  '[role_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_languages]':\n  '[language_id]':\n    foreign_key: '[language].[language_id]'\n    type: integer\n  '[language_role_id]':\n    foreign_key: '[language_role].[role_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n",
        "gold_links": {
            "original language": "COLUMN:[language_role].[language_role]",
            "language": "COLUMN:[language].[language_name]",
            "Four Rooms": "VALUE:[movie].[title]",
            "movie": "TABLE:[movie]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[language]",
                "[C1]": "[language].[language_code]",
                "[C2]": "[language].[language_id]",
                "[C3]": "[language].[language_name]",
                "[T2]": "[language_role]",
                "[C4]": "[language_role].[language_role]",
                "[C5]": "[language_role].[role_id]",
                "[T3]": "[movie]",
                "[C6]": "[movie].[budget]",
                "[C7]": "[movie].[homepage]",
                "[C8]": "[movie].[movie_id]",
                "[C9]": "[movie].[overview]",
                "[C10]": "[movie].[title]",
                "[T4]": "[movie_languages]",
                "[C11]": "[movie_languages].[language_id]",
                "[C12]": "[movie_languages].[language_role_id]",
                "[C13]": "[movie_languages].[movie_id]"
            },
            "to_symbol": {
                "[language]": "[T1]",
                "[language].[language_code]": "[C1]",
                "[language].[language_id]": "[C2]",
                "[language].[language_name]": "[C3]",
                "[language_role]": "[T2]",
                "[language_role].[language_role]": "[C4]",
                "[language_role].[role_id]": "[C5]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C6]",
                "[movie].[homepage]": "[C7]",
                "[movie].[movie_id]": "[C8]",
                "[movie].[overview]": "[C9]",
                "[movie].[title]": "[C10]",
                "[movie_languages]": "[T4]",
                "[movie_languages].[language_id]": "[C11]",
                "[movie_languages].[language_role_id]": "[C12]",
                "[movie_languages].[movie_id]": "[C13]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n'[T2]':\n  '[C4]': text\n  '[C5]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]': text\n  '[C8]':\n    primary_key: true\n    type: integer\n  '[C9]': text\n'[T4]':\n  '[C11]':\n    foreign_key: '[T1].[C2]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T2].[C5]'\n    type: integer\n  '[C13]':\n    foreign_key: '[T3].[C8]'\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[language]",
                "[T1].[C1]": "[language].[language_code]",
                "[C1]": "[language].[language_code]",
                "[T1].[C2]": "[language].[language_id]",
                "[C2]": "[language].[language_id]",
                "[T1].[C3]": "[language].[language_name]",
                "[C3]": "[language].[language_name]",
                "[T2]": "[language_role]",
                "[T2].[C4]": "[language_role].[language_role]",
                "[C4]": "[language_role].[language_role]",
                "[T2].[C5]": "[language_role].[role_id]",
                "[C5]": "[language_role].[role_id]",
                "[T3]": "[movie]",
                "[T3].[C6]": "[movie].[budget]",
                "[C6]": "[movie].[budget]",
                "[T3].[C7]": "[movie].[homepage]",
                "[C7]": "[movie].[homepage]",
                "[T3].[C8]": "[movie].[movie_id]",
                "[C8]": "[movie].[movie_id]",
                "[T3].[C9]": "[movie].[overview]",
                "[C9]": "[movie].[overview]",
                "[T3].[C10]": "[movie].[title]",
                "[C10]": "[movie].[title]",
                "[T4]": "[movie_languages]",
                "[T4].[C11]": "[movie_languages].[language_id]",
                "[C11]": "[movie_languages].[language_id]",
                "[T4].[C12]": "[movie_languages].[language_role_id]",
                "[C12]": "[movie_languages].[language_role_id]",
                "[T4].[C13]": "[movie_languages].[movie_id]",
                "[C13]": "[movie_languages].[movie_id]"
            },
            "question": "What is the [V1] [T1] of the \"[V2]\" [T3]? [T1] refers to language_name; [V1] [T1] refers to language_role = '[V1]'; \"[V2]\" refers to title = '[V2]'; [V1] is a value of the column [C12]; [V2] is a value of the column [C10]",
            "to_value": {
                "[V1]": "Original",
                "[V2]": "Four Rooms"
            },
            "masked": 5,
            "masked_terms": [
                "Original",
                "Four Rooms",
                "language",
                "Four Rooms",
                "movie"
            ],
            "sql": "SELECT [T1].[C1] FROM [T1] JOIN [T4] ON [T1].[C2] = [T4].[C11] JOIN [T3] ON [T4].[C13] = [T3].[C8] WHERE [T4].[C12] = '[V1]' AND [T3].[C10] = '[V2]'",
            "repaired_sql": "SELECT [T1].[C1] FROM [T4] JOIN [T1] ON [T4].[C11] = [T1].[C2] JOIN [T2] ON [T4].[C12] = [T2].[C5] JOIN [T3] ON [T4].[C13] = [T3].[C8] WHERE [T2].[C4] = '[V1]' AND [T3].[C10] = '[V2]'"
        },
        "values": [
            "Original",
            "Four Rooms"
        ],
        "value_links": {
            "Original": "[movie_languages].[language_role_id]",
            "Four Rooms": "[movie].[title]"
        },
        "filtered_value_links": {
            "Original": "[movie_languages].[language_role_id]",
            "Four Rooms": "[movie].[title]"
        },
        "schema_links": {
            "original language": "COLUMN:[movie].[*]",
            "language": "TABLE:[language]",
            "Four Rooms": "COLUMN:[movie].[title]",
            "movie": "TABLE:[movie]"
        },
        "filtered_schema_links": {
            "original language": "COLUMN:[movie].[*]",
            "language": "TABLE:[language]",
            "Four Rooms": "COLUMN:[movie].[title]",
            "movie": "TABLE:[movie]"
        },
        "attack": "What is the main language_name of the \"title\" [T3]?"
    },
    {
        "db_id": "movies_4",
        "question": "Who is the main actor in the \"Pirates of the Caribbean: At World's End\" movie? main actor refers to person_name where Min(cast_order); \"Pirates of the Caribbean: At World's End\" refers to title = 'Pirates of the Caribbean: At World''s End'",
        "evidence": "main actor refers to person_name where Min(cast_order); \"Pirates of the Caribbean: At World's End\" refers to title = 'Pirates of the Caribbean: At World''s End'",
        "SQL": "SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title LIKE 'Pirates of the Caribbean: At World%s End' ORDER BY T2.cast_order LIMIT 1",
        "query": "SELECT T3.person_name FROM movie AS T1 INNER JOIN movie_cast AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id WHERE T1.title LIKE 'Pirates of the Caribbean: At World%s End' ORDER BY T2.cast_order LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "Who",
            "is",
            "the",
            "main",
            "actor",
            "in",
            "the",
            "\"Pirates",
            "of",
            "the",
            "Caribbean",
            ":",
            "At",
            "World's",
            "End\"",
            "movie",
            "?",
            "main",
            "actor",
            "refers",
            "to",
            "person_name",
            "where",
            "Min(cast_order)",
            ";",
            "\"Pirates",
            "of",
            "the",
            "Caribbean",
            ":",
            "At",
            "World's",
            "End\"",
            "refers",
            "to",
            "title",
            "=",
            "'Pirates",
            "of",
            "the",
            "Caribbean",
            ":",
            "At",
            "World''s",
            "End'"
        ],
        "tc_original": [
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "movie_cast.movie_id",
            "movie_cast.cast_order",
            "movie_cast.person_id",
            "movie_cast.gender_id",
            "movie_cast.character_name",
            "movie_cast.*",
            "person.person_id",
            "person.person_name",
            "person.*",
            "gender.gender",
            "gender.gender_id",
            "gender.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_cast]",
            "COLUMN:[movie_cast].[movie_id]",
            "COLUMN:[movie_cast].[cast_order]",
            "COLUMN:[movie_cast].[person_id]",
            "COLUMN:[movie_cast].[gender_id]",
            "COLUMN:[movie_cast].[character_name]",
            "COLUMN:[movie_cast].[*]",
            "TABLE:[person]",
            "COLUMN:[person].[person_id]",
            "COLUMN:[person].[person_name]",
            "COLUMN:[person].[*]",
            "TABLE:[gender]",
            "COLUMN:[gender].[gender]",
            "COLUMN:[gender].[gender_id]",
            "COLUMN:[gender].[*]"
        ],
        "schema": "'[gender]':\n  '[gender]': text\n  '[gender_id]':\n    primary_key: true\n    type: integer\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_cast]':\n  '[cast_order]': integer\n  '[character_name]': text\n  '[gender_id]':\n    foreign_key: '[gender].[gender_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n  '[person_name]': text\n",
        "gold_links": {
            "main actor": "COLUMN:[person].[person_name]",
            "actor": "COLUMN:[person].[person_name]",
            "person_name": "COLUMN:[person].[person_name]",
            "Pirates of the Caribbean: At World's End": "VALUE:[movie].[title]",
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "cast_order": "COLUMN:[movie_cast].[cast_order]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[gender]",
                "[C1]": "[gender].[gender]",
                "[C2]": "[gender].[gender_id]",
                "[T2]": "[movie]",
                "[C3]": "[movie].[budget]",
                "[C4]": "[movie].[homepage]",
                "[C5]": "[movie].[movie_id]",
                "[C6]": "[movie].[overview]",
                "[C7]": "[movie].[title]",
                "[T3]": "[movie_cast]",
                "[C8]": "[movie_cast].[cast_order]",
                "[C9]": "[movie_cast].[character_name]",
                "[C10]": "[movie_cast].[gender_id]",
                "[C11]": "[movie_cast].[movie_id]",
                "[C12]": "[movie_cast].[person_id]",
                "[T4]": "[person]",
                "[C13]": "[person].[person_id]",
                "[C14]": "[person].[person_name]"
            },
            "to_symbol": {
                "[gender]": "[T1]",
                "[gender].[gender]": "[C1]",
                "[gender].[gender_id]": "[C2]",
                "[movie]": "[T2]",
                "[movie].[budget]": "[C3]",
                "[movie].[homepage]": "[C4]",
                "[movie].[movie_id]": "[C5]",
                "[movie].[overview]": "[C6]",
                "[movie].[title]": "[C7]",
                "[movie_cast]": "[T3]",
                "[movie_cast].[cast_order]": "[C8]",
                "[movie_cast].[character_name]": "[C9]",
                "[movie_cast].[gender_id]": "[C10]",
                "[movie_cast].[movie_id]": "[C11]",
                "[movie_cast].[person_id]": "[C12]",
                "[person]": "[T4]",
                "[person].[person_id]": "[C13]",
                "[person].[person_name]": "[C14]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C3]': integer\n  '[C4]': text\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]': text\n  '[C7]': text\n'[T3]':\n  '[C10]':\n    foreign_key: '[T1].[C2]'\n    type: integer\n  '[C11]':\n    foreign_key: '[T2].[C5]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T4].[C13]'\n    type: integer\n  '[C8]': integer\n  '[C9]': text\n'[T4]':\n  '[C13]':\n    primary_key: true\n    type: integer\n  '[C14]': text\n",
            "reverse_dict": {
                "[T1]": "[gender]",
                "[T1].[C1]": "[gender].[gender]",
                "[C1]": "[gender].[gender]",
                "[T1].[C2]": "[gender].[gender_id]",
                "[C2]": "[gender].[gender_id]",
                "[T2]": "[movie]",
                "[T2].[C3]": "[movie].[budget]",
                "[C3]": "[movie].[budget]",
                "[T2].[C4]": "[movie].[homepage]",
                "[C4]": "[movie].[homepage]",
                "[T2].[C5]": "[movie].[movie_id]",
                "[C5]": "[movie].[movie_id]",
                "[T2].[C6]": "[movie].[overview]",
                "[C6]": "[movie].[overview]",
                "[T2].[C7]": "[movie].[title]",
                "[C7]": "[movie].[title]",
                "[T3]": "[movie_cast]",
                "[T3].[C8]": "[movie_cast].[cast_order]",
                "[C8]": "[movie_cast].[cast_order]",
                "[T3].[C9]": "[movie_cast].[character_name]",
                "[C9]": "[movie_cast].[character_name]",
                "[T3].[C10]": "[movie_cast].[gender_id]",
                "[C10]": "[movie_cast].[gender_id]",
                "[T3].[C11]": "[movie_cast].[movie_id]",
                "[C11]": "[movie_cast].[movie_id]",
                "[T3].[C12]": "[movie_cast].[person_id]",
                "[C12]": "[movie_cast].[person_id]",
                "[T4]": "[person]",
                "[T4].[C13]": "[person].[person_id]",
                "[C13]": "[person].[person_id]",
                "[T4].[C14]": "[person].[person_name]",
                "[C14]": "[person].[person_name]"
            },
            "question": "Who is the [C14] in the \"[C7]: [C7]\" [T2]? [C14] refers to [C14] where Min([C8]); \"[C7]: [C7]\" refers to title = '[C7]: At World''s End'; [V1] is a value of the column [C7]",
            "to_value": {
                "[V1]": "'Pirates of the Caribbean: At World's End'"
            },
            "masked": 7,
            "masked_terms": [
                "'Pirates of the Caribbean: At World's End'",
                "main actor",
                "Pirates of the Caribbean",
                "At World's End",
                "movie",
                "person_name",
                "cast_order"
            ],
            "sql": "SELECT [T4].[C14] FROM [T3] JOIN [T4] ON [T3].[C12] = [T4].[C13] JOIN [T2] ON [T3].[C11] = [T2].[C5] WHERE [T2].[C7] = '[C7]: At World''s End' AND [T3].[C8] = (SELECT MIN([T3b].[C8]) FROM [T3] AS [T3b] JOIN [T2] ON [T3b].[C11] = [T2].[C5] WHERE [T2].[C7] = '[C7]: At World''s End')",
            "repaired_sql": "SELECT [T4].[C14] FROM [T3] JOIN [T2] ON [T3].[C11] = [T2].[C5] JOIN [T4] ON [T3].[C12] = [T4].[C13] WHERE [T2].[C7] = 'At World''s End' AND [T3].[C8] = (SELECT MIN([T3_sub].[C8]) FROM [T3] AS [T3_sub] JOIN [T2] AS [T2_sub] ON [T3_sub].[C11] = [T2_sub].[C5] WHERE [T2_sub].[C7] = 'At World''s End')"
        },
        "values": [
            "'Pirates of the Caribbean: At World's End'"
        ],
        "value_links": {
            "'Pirates of the Caribbean: At World's End'": "[movie].[title]"
        },
        "filtered_value_links": {
            "'Pirates of the Caribbean: At World's End'": "[movie].[title]"
        },
        "schema_links": {
            "main actor": "COLUMN:[person].[person_name]",
            "Pirates of the Caribbean": "COLUMN:[movie].[title]",
            "At World's End": "COLUMN:[movie].[title]",
            "movie": "TABLE:[movie]",
            "person_name": "COLUMN:[person].[person_name]",
            "cast_order": "COLUMN:[movie_cast].[cast_order]"
        },
        "filtered_schema_links": {
            "main actor": "COLUMN:[person].[person_name]",
            "Pirates of the Caribbean": "COLUMN:[movie].[title]",
            "At World's End": "COLUMN:[movie].[title]",
            "movie": "TABLE:[movie]",
            "person_name": "COLUMN:[person].[person_name]",
            "cast_order": "COLUMN:[movie_cast].[cast_order]"
        },
        "attack": "Who is the actor in the \"title: At World's End\" movie? Actor refers to actor where Min(role order); \"title: At World's End\" refers to title = 'At World's End'; At World's End is a value of the column title"
    },
    {
        "db_id": "movies_4",
        "question": "Provide the names and departments of the person who worked as a music editor in the \"Pirates of the Caribbean: At World's End\" movie. names refers to person_name; departments refers to department_name; worked as a music editor refers to job = 'Music Editor'; \"Pirates of the Caribbean: At World's End\" refers to title = 'Pirates of the Caribbean: At World''s End'",
        "evidence": "names refers to person_name; departments refers to department_name; worked as a music editor refers to job = 'Music Editor'; \"Pirates of the Caribbean: At World's End\" refers to title = 'Pirates of the Caribbean: At World''s End'",
        "SQL": "SELECT T3.person_name, T4.department_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id INNER JOIN department AS T4 ON T2.department_id = T4.department_id WHERE T1.title LIKE 'Pirates of the Caribbean: At World%s End' AND T2.job = 'Music Editor'",
        "query": "SELECT T3.person_name, T4.department_name FROM movie AS T1 INNER JOIN movie_crew AS T2 ON T1.movie_id = T2.movie_id INNER JOIN person AS T3 ON T2.person_id = T3.person_id INNER JOIN department AS T4 ON T2.department_id = T4.department_id WHERE T1.title LIKE 'Pirates of the Caribbean: At World%s End' AND T2.job = 'Music Editor'",
        "evidence_added": true,
        "question_toks": [
            "Provide",
            "the",
            "names",
            "and",
            "departments",
            "of",
            "the",
            "person",
            "who",
            "worked",
            "as",
            "a",
            "music",
            "editor",
            "in",
            "the",
            "\"Pirates",
            "of",
            "the",
            "Caribbean",
            ":",
            "At",
            "World's",
            "End\"",
            "movie",
            ".",
            "names",
            "refers",
            "to",
            "person_name",
            ";",
            "departments",
            "refers",
            "to",
            "department_name",
            ";",
            "worked",
            "as",
            "a",
            "music",
            "editor",
            "refers",
            "to",
            "job",
            "=",
            "'Music",
            "Editor'",
            ";",
            "\"Pirates",
            "of",
            "the",
            "Caribbean",
            ":",
            "At",
            "World's",
            "End\"",
            "refers",
            "to",
            "title",
            "=",
            "'Pirates",
            "of",
            "the",
            "Caribbean",
            ":",
            "At",
            "World''s",
            "End'"
        ],
        "tc_original": [
            "movie.movie_id",
            "movie.title",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.job",
            "movie_crew.*",
            "person.person_id",
            "person.person_name",
            "person.*",
            "department.department_name",
            "department.department_id",
            "department.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[*]",
            "TABLE:[person]",
            "COLUMN:[person].[person_id]",
            "COLUMN:[person].[person_name]",
            "COLUMN:[person].[*]",
            "TABLE:[department]",
            "COLUMN:[department].[department_name]",
            "COLUMN:[department].[department_id]",
            "COLUMN:[department].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n  '[department_name]': text\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n  '[person_name]': text\n",
        "gold_links": {
            "names": "COLUMN:[person].[person_name]",
            "departments": "COLUMN:[department].[department_name]",
            "person": "TABLE:[person]",
            "music editor": "VALUE:[movie_crew].[job]",
            "Pirates of the Caribbean: At World's End": "VALUE:[movie].[title]",
            "movie": "TABLE:[movie]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[C2]": "[department].[department_name]",
                "[T2]": "[movie]",
                "[C3]": "[movie].[budget]",
                "[C4]": "[movie].[homepage]",
                "[C5]": "[movie].[movie_id]",
                "[C6]": "[movie].[overview]",
                "[C7]": "[movie].[title]",
                "[T3]": "[movie_crew]",
                "[C8]": "[movie_crew].[department_id]",
                "[C9]": "[movie_crew].[job]",
                "[C10]": "[movie_crew].[movie_id]",
                "[C11]": "[movie_crew].[person_id]",
                "[T4]": "[person]",
                "[C12]": "[person].[person_id]",
                "[C13]": "[person].[person_name]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[department].[department_name]": "[C2]",
                "[movie]": "[T2]",
                "[movie].[budget]": "[C3]",
                "[movie].[homepage]": "[C4]",
                "[movie].[movie_id]": "[C5]",
                "[movie].[overview]": "[C6]",
                "[movie].[title]": "[C7]",
                "[movie_crew]": "[T3]",
                "[movie_crew].[department_id]": "[C8]",
                "[movie_crew].[job]": "[C9]",
                "[movie_crew].[movie_id]": "[C10]",
                "[movie_crew].[person_id]": "[C11]",
                "[person]": "[T4]",
                "[person].[person_id]": "[C12]",
                "[person].[person_name]": "[C13]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n'[T2]':\n  '[C3]': integer\n  '[C4]': text\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]': text\n  '[C7]': text\n'[T3]':\n  '[C10]':\n    foreign_key: '[T2].[C5]'\n    type: integer\n  '[C11]':\n    foreign_key: '[T4].[C12]'\n    type: integer\n  '[C8]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C9]': text\n'[T4]':\n  '[C12]':\n    primary_key: true\n    type: integer\n  '[C13]': text\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T1].[C2]": "[department].[department_name]",
                "[C2]": "[department].[department_name]",
                "[T2]": "[movie]",
                "[T2].[C3]": "[movie].[budget]",
                "[C3]": "[movie].[budget]",
                "[T2].[C4]": "[movie].[homepage]",
                "[C4]": "[movie].[homepage]",
                "[T2].[C5]": "[movie].[movie_id]",
                "[C5]": "[movie].[movie_id]",
                "[T2].[C6]": "[movie].[overview]",
                "[C6]": "[movie].[overview]",
                "[T2].[C7]": "[movie].[title]",
                "[C7]": "[movie].[title]",
                "[T3]": "[movie_crew]",
                "[T3].[C8]": "[movie_crew].[department_id]",
                "[C8]": "[movie_crew].[department_id]",
                "[T3].[C9]": "[movie_crew].[job]",
                "[C9]": "[movie_crew].[job]",
                "[T3].[C10]": "[movie_crew].[movie_id]",
                "[C10]": "[movie_crew].[movie_id]",
                "[T3].[C11]": "[movie_crew].[person_id]",
                "[C11]": "[movie_crew].[person_id]",
                "[T4]": "[person]",
                "[T4].[C12]": "[person].[person_id]",
                "[C12]": "[person].[person_id]",
                "[T4].[C13]": "[person].[person_name]",
                "[C13]": "[person].[person_name]"
            },
            "question": "Provide the [C13] and [C2] of the [C11] [V1] in the \"[V2]\" [T2]. [C13] refers to person_name; [C2] refers to department_name; worked as a [V1] refers to [C9] = '[V1]'; \"[V2]\" refers to [C7] = 'Pirates of the Caribbean: At World''s End'; [V1] is a value of the column [C9]; [V2] is a value of the column [C7]",
            "to_value": {
                "[V1]": "Music Editor",
                "[V2]": "Pirates of the Caribbean: At World's End"
            },
            "masked": 8,
            "masked_terms": [
                "Music Editor",
                "Pirates of the Caribbean: At World's End",
                "names",
                "departments",
                "movie",
                "title",
                "job",
                "person who worked as a"
            ],
            "sql": "SELECT [T4].[C13], [T1].[C2] FROM [T3] INNER JOIN [T4] ON [T3].[C11] = [T4].[C12] INNER JOIN [T1] ON [T3].[C8] = [T1].[C1] INNER JOIN [T2] ON [T3].[C10] = [T2].[C5] WHERE [T3].[C9] = '[V1]' AND [T2].[C7] = 'Pirates of the Caribbean: At World''s End'",
            "repaired_sql": "SELECT [T4].[C13], [T1].[C2] FROM [T3] JOIN [T1] ON [T3].[C8] = [T1].[C1] JOIN [T4] ON [T3].[C11] = [T4].[C12] JOIN [T2] ON [T3].[C10] = [T2].[C5] WHERE [T3].[C9] = '[V1]' AND [T2].[C7] = 'Pirates of the Caribbean: At World''s End'"
        },
        "values": [
            "Music Editor",
            "Pirates of the Caribbean: At World's End"
        ],
        "value_links": {
            "Music Editor": "[movie_crew].[job]",
            "Pirates of the Caribbean: At World's End": "[movie].[title]"
        },
        "filtered_value_links": {
            "Music Editor": "[movie_crew].[job]",
            "Pirates of the Caribbean: At World's End": "[movie].[title]"
        },
        "schema_links": {
            "names": "COLUMN:[person].[person_name]",
            "departments": "COLUMN:[department].[department_name]",
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "job": "COLUMN:[movie_crew].[job]",
            "person who worked as a": "COLUMN:[movie_crew].[person_id]"
        },
        "filtered_schema_links": {
            "names": "COLUMN:[person].[person_name]",
            "departments": "COLUMN:[department].[department_name]",
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "job": "COLUMN:[movie_crew].[job]",
            "person who worked as a": "COLUMN:[movie_crew].[person_id]"
        },
        "attack": "Provide the person_name and department_name of the person who worked as a director in the \"Pirates of the Caribbean: At World's End\" movie."
    },
    {
        "db_id": "movies_4",
        "question": "Provide the production companies of the movie that has over 35% average running time per movie in 2016. production companies refers to company_name; in 2016 refers to release_date LIKE '2016%'; over 35% average running time per movie refers to divide(subtract(runtime, AVG(runtime)), AVG(runtime)) * 100 as percentage > 35",
        "evidence": "production companies refers to company_name; in 2016 refers to release_date LIKE '2016%'; over 35% average running time per movie refers to divide(subtract(runtime, AVG(runtime)), AVG(runtime)) * 100 as percentage > 35",
        "SQL": "SELECT T.company_name FROM ( SELECT DISTINCT T3.company_name, T1.runtime FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id INNER JOIN production_company AS T3 ON T3.company_id = T2.company_id WHERE T1.release_date LIKE '2016%' ) T WHERE T.runtime * 100 > (0.35 * ( SELECT AVG(T1.runtime) FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id INNER JOIN production_company AS T3 ON T3.company_id = T2.company_id WHERE T1.release_date LIKE '2016%' ) + ( SELECT AVG(T1.runtime) FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id INNER JOIN production_company AS T3 ON T3.company_id = T2.company_id WHERE T1.release_date LIKE '2016%' )) * 100",
        "query": "SELECT T.company_name FROM ( SELECT DISTINCT T3.company_name, T1.runtime FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id INNER JOIN production_company AS T3 ON T3.company_id = T2.company_id WHERE T1.release_date LIKE '2016%' ) T WHERE T.runtime * 100 > (0.35 * ( SELECT AVG(T1.runtime) FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id INNER JOIN production_company AS T3 ON T3.company_id = T2.company_id WHERE T1.release_date LIKE '2016%' ) + ( SELECT AVG(T1.runtime) FROM movie AS T1 INNER JOIN movie_company AS T2 ON T1.movie_id = T2.movie_id INNER JOIN production_company AS T3 ON T3.company_id = T2.company_id WHERE T1.release_date LIKE '2016%' )) * 100",
        "evidence_added": true,
        "question_toks": [
            "Provide",
            "the",
            "production",
            "companies",
            "of",
            "the",
            "movie",
            "that",
            "has",
            "over",
            "35%",
            "average",
            "running",
            "time",
            "per",
            "movie",
            "in",
            "2016",
            ".",
            "production",
            "companies",
            "refers",
            "to",
            "company_name",
            ";",
            "in",
            "2016",
            "refers",
            "to",
            "release_date",
            "LIKE",
            "'2016%'",
            ";",
            "over",
            "35%",
            "average",
            "running",
            "time",
            "per",
            "movie",
            "refers",
            "to",
            "divide(subtract(runtime",
            ",",
            "AVG(runtime))",
            ",",
            "AVG(runtime))",
            "*",
            "100",
            "as",
            "percentage",
            ">",
            "35"
        ],
        "tc_original": [
            "movie.movie_id",
            "movie.runtime",
            "movie.release_date",
            "movie.title",
            "movie.budget",
            "movie.*",
            "movie_company.company_id",
            "movie_company.movie_id",
            "movie_company.*",
            "production_company.company_name",
            "production_company.company_id",
            "production_company.*",
            "keyword.keyword_id",
            "keyword.keyword_name",
            "keyword.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[runtime]",
            "COLUMN:[movie].[release_date]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[*]",
            "TABLE:[movie_company]",
            "COLUMN:[movie_company].[company_id]",
            "COLUMN:[movie_company].[movie_id]",
            "COLUMN:[movie_company].[*]",
            "TABLE:[production_company]",
            "COLUMN:[production_company].[company_name]",
            "COLUMN:[production_company].[company_id]",
            "COLUMN:[production_company].[*]",
            "TABLE:[keyword]",
            "COLUMN:[keyword].[keyword_id]",
            "COLUMN:[keyword].[keyword_name]",
            "COLUMN:[keyword].[*]"
        ],
        "schema": "'[keyword]':\n  '[keyword_id]':\n    primary_key: true\n    type: integer\n  '[keyword_name]': text\n'[movie]':\n  '[budget]': integer\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[release_date]': date\n  '[runtime]': integer\n  '[title]': text\n'[movie_company]':\n  '[company_id]': integer\n  '[movie_id]': integer\n'[production_company]':\n  '[company_id]':\n    primary_key: true\n    type: integer\n  '[company_name]': text\n",
        "gold_links": {
            "production companies": "TABLE:[production_company]",
            "company_name": "COLUMN:[production_company].[company_name]",
            "movie": "TABLE:[movie]",
            "average running time": "COLUMN:[movie].[runtime]",
            "runtime": "COLUMN:[movie].[runtime]",
            "2016": "VALUE:[movie].[release_date]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[keyword]",
                "[C1]": "[keyword].[keyword_id]",
                "[C2]": "[keyword].[keyword_name]",
                "[T2]": "[movie]",
                "[C3]": "[movie].[budget]",
                "[C4]": "[movie].[movie_id]",
                "[C5]": "[movie].[release_date]",
                "[C6]": "[movie].[runtime]",
                "[C7]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[C8]": "[movie_company].[company_id]",
                "[C9]": "[movie_company].[movie_id]",
                "[T4]": "[production_company]",
                "[C10]": "[production_company].[company_id]",
                "[C11]": "[production_company].[company_name]"
            },
            "to_symbol": {
                "[keyword]": "[T1]",
                "[keyword].[keyword_id]": "[C1]",
                "[keyword].[keyword_name]": "[C2]",
                "[movie]": "[T2]",
                "[movie].[budget]": "[C3]",
                "[movie].[movie_id]": "[C4]",
                "[movie].[release_date]": "[C5]",
                "[movie].[runtime]": "[C6]",
                "[movie].[title]": "[C7]",
                "[movie_company]": "[T3]",
                "[movie_company].[company_id]": "[C8]",
                "[movie_company].[movie_id]": "[C9]",
                "[production_company]": "[T4]",
                "[production_company].[company_id]": "[C10]",
                "[production_company].[company_name]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n'[T2]':\n  '[C3]': integer\n  '[C4]':\n    primary_key: true\n    type: integer\n  '[C5]': date\n  '[C6]': integer\n  '[C7]': text\n'[T3]':\n  '[C8]': integer\n  '[C9]': integer\n'[T4]':\n  '[C10]':\n    primary_key: true\n    type: integer\n  '[C11]': text\n",
            "reverse_dict": {
                "[T1]": "[keyword]",
                "[T1].[C1]": "[keyword].[keyword_id]",
                "[C1]": "[keyword].[keyword_id]",
                "[T1].[C2]": "[keyword].[keyword_name]",
                "[C2]": "[keyword].[keyword_name]",
                "[T2]": "[movie]",
                "[T2].[C3]": "[movie].[budget]",
                "[C3]": "[movie].[budget]",
                "[T2].[C4]": "[movie].[movie_id]",
                "[C4]": "[movie].[movie_id]",
                "[T2].[C5]": "[movie].[release_date]",
                "[C5]": "[movie].[release_date]",
                "[T2].[C6]": "[movie].[runtime]",
                "[C6]": "[movie].[runtime]",
                "[T2].[C7]": "[movie].[title]",
                "[C7]": "[movie].[title]",
                "[T3]": "[movie_company]",
                "[T3].[C8]": "[movie_company].[company_id]",
                "[C8]": "[movie_company].[company_id]",
                "[T3].[C9]": "[movie_company].[movie_id]",
                "[C9]": "[movie_company].[movie_id]",
                "[T4]": "[production_company]",
                "[T4].[C10]": "[production_company].[company_id]",
                "[C10]": "[production_company].[company_id]",
                "[T4].[C11]": "[production_company].[company_name]",
                "[C11]": "[production_company].[company_name]"
            },
            "question": "Provide the [C11] of the [T2] that has over 35% average running time per [T2] in [C5]. [C11] refers to [V1]; in [C5] refers to release_date LIKE '[C5]%'; over 35% average running time per [T2] refers to divide(subtract([C6], AVG([C6])), AVG([C6])) * 100 as percentage > 35; [V1] is a value of the column [C11]; [V2] is a value of the column [C5]",
            "to_value": {
                "[V1]": "company_name",
                "[V2]": "2016%"
            },
            "masked": 6,
            "masked_terms": [
                "company_name",
                "2016%",
                "production companies",
                "movie",
                "2016",
                "runtime"
            ],
            "sql": "SELECT [T4].[C11] FROM [T2] JOIN [T4] ON [T2].[C4] = [T4].[C10] WHERE ( ([T2].[C6] - (SELECT AVG([T2].[C6]) FROM [T2] WHERE [T2].[C5] LIKE '[C5]%')) / (SELECT AVG([T2].[C6]) FROM [T2] WHERE [T2].[C5] LIKE '[C5]%') ) * 100 > 35 AND [T2].[C5] LIKE '[C5]%'",
            "repaired_sql": "SELECT [T4].[C11] FROM [T2] JOIN [T4] ON [T2].[C7] = [T4].[C11] WHERE [T2].[C5] LIKE '[C5]%' GROUP BY [T4].[C11] HAVING (MAX([T2].[C6]) - AVG([T2].[C6])) / AVG([T2].[C6]) * 100 > 35"
        },
        "values": [
            "company_name",
            "2016%"
        ],
        "value_links": {
            "company_name": "[production_company].[company_name]",
            "2016%": "[movie].[release_date]"
        },
        "filtered_value_links": {
            "company_name": "[production_company].[company_name]",
            "2016%": "[movie].[release_date]"
        },
        "schema_links": {
            "production companies": "COLUMN:[production_company].[company_name]",
            "movie": "TABLE:[movie]",
            "2016": "COLUMN:[movie].[release_date]",
            "runtime": "COLUMN:[movie].[runtime]",
            "percentage": "COLUMN:[movie].[*]"
        },
        "filtered_schema_links": {
            "production companies": "COLUMN:[production_company].[company_name]",
            "movie": "TABLE:[movie]",
            "2016": "COLUMN:[movie].[release_date]",
            "runtime": "COLUMN:[movie].[runtime]",
            "percentage": "COLUMN:[movie].[*]"
        },
        "attack": "Provide the title of the movies that has over 35% average running time per movie in release_date. title refers to V1; in release_date refers to release_date LIKE 'release_date%'; over 35% average running time per movie refers to divide(subtract(running_time, AVG(running_time)), AVG(running_time)) * 100 as percentage > 35; V1 is a value of the column title; V2 is a value of the column release_date"
    },
    {
        "db_id": "movies_4",
        "question": "Which genre does the movie Dancer in the Dark belong to? genre refers to genre_name; movie Dancer in the Dark refers to title = 'Dancer in the Dark'",
        "evidence": "genre refers to genre_name; movie Dancer in the Dark refers to title = 'Dancer in the Dark'",
        "SQL": "SELECT T3.genre_name FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T1.title = 'Dancer in the Dark'",
        "query": "SELECT T3.genre_name FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T1.title = 'Dancer in the Dark'",
        "evidence_added": true,
        "question_toks": [
            "Which",
            "genre",
            "does",
            "the",
            "movie",
            "Dancer",
            "in",
            "the",
            "Dark",
            "belong",
            "to",
            "?",
            "genre",
            "refers",
            "to",
            "genre_name",
            ";",
            "movie",
            "Dancer",
            "in",
            "the",
            "Dark",
            "refers",
            "to",
            "title",
            "=",
            "'Dancer",
            "in",
            "the",
            "Dark'"
        ],
        "tc_original": [
            "movie_genres.genre_id",
            "movie_genres.movie_id",
            "movie_genres.*",
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "genre.genre_name",
            "genre.genre_id",
            "genre.*",
            "keyword.keyword_name",
            "keyword.keyword_id",
            "keyword.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie_genres]",
            "COLUMN:[movie_genres].[genre_id]",
            "COLUMN:[movie_genres].[movie_id]",
            "COLUMN:[movie_genres].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[genre]",
            "COLUMN:[genre].[genre_name]",
            "COLUMN:[genre].[genre_id]",
            "COLUMN:[genre].[*]",
            "TABLE:[keyword]",
            "COLUMN:[keyword].[keyword_name]",
            "COLUMN:[keyword].[keyword_id]",
            "COLUMN:[keyword].[*]"
        ],
        "schema": "'[genre]':\n  '[genre_id]':\n    primary_key: true\n    type: integer\n  '[genre_name]': text\n'[keyword]':\n  '[keyword_id]':\n    primary_key: true\n    type: integer\n  '[keyword_name]': text\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_genres]':\n  '[genre_id]':\n    foreign_key: '[genre].[genre_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n",
        "gold_links": {
            "genre": "COLUMN:[genre].[genre_name]",
            "movie": "TABLE:[movie]",
            "Dancer in the Dark": "VALUE:[movie].[title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[genre]",
                "[C1]": "[genre].[genre_id]",
                "[C2]": "[genre].[genre_name]",
                "[T2]": "[keyword]",
                "[C3]": "[keyword].[keyword_id]",
                "[C4]": "[keyword].[keyword_name]",
                "[T3]": "[movie]",
                "[C5]": "[movie].[budget]",
                "[C6]": "[movie].[homepage]",
                "[C7]": "[movie].[movie_id]",
                "[C8]": "[movie].[overview]",
                "[C9]": "[movie].[title]",
                "[T4]": "[movie_genres]",
                "[C10]": "[movie_genres].[genre_id]",
                "[C11]": "[movie_genres].[movie_id]"
            },
            "to_symbol": {
                "[genre]": "[T1]",
                "[genre].[genre_id]": "[C1]",
                "[genre].[genre_name]": "[C2]",
                "[keyword]": "[T2]",
                "[keyword].[keyword_id]": "[C3]",
                "[keyword].[keyword_name]": "[C4]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C5]",
                "[movie].[homepage]": "[C6]",
                "[movie].[movie_id]": "[C7]",
                "[movie].[overview]": "[C8]",
                "[movie].[title]": "[C9]",
                "[movie_genres]": "[T4]",
                "[movie_genres].[genre_id]": "[C10]",
                "[movie_genres].[movie_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n'[T2]':\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n'[T3]':\n  '[C5]': integer\n  '[C6]': text\n  '[C7]':\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]': text\n'[T4]':\n  '[C10]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n  '[C11]':\n    foreign_key: '[T3].[C7]'\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[genre]",
                "[T1].[C1]": "[genre].[genre_id]",
                "[C1]": "[genre].[genre_id]",
                "[T1].[C2]": "[genre].[genre_name]",
                "[C2]": "[genre].[genre_name]",
                "[T2]": "[keyword]",
                "[T2].[C3]": "[keyword].[keyword_id]",
                "[C3]": "[keyword].[keyword_id]",
                "[T2].[C4]": "[keyword].[keyword_name]",
                "[C4]": "[keyword].[keyword_name]",
                "[T3]": "[movie]",
                "[T3].[C5]": "[movie].[budget]",
                "[C5]": "[movie].[budget]",
                "[T3].[C6]": "[movie].[homepage]",
                "[C6]": "[movie].[homepage]",
                "[T3].[C7]": "[movie].[movie_id]",
                "[C7]": "[movie].[movie_id]",
                "[T3].[C8]": "[movie].[overview]",
                "[C8]": "[movie].[overview]",
                "[T3].[C9]": "[movie].[title]",
                "[C9]": "[movie].[title]",
                "[T4]": "[movie_genres]",
                "[T4].[C10]": "[movie_genres].[genre_id]",
                "[C10]": "[movie_genres].[genre_id]",
                "[T4].[C11]": "[movie_genres].[movie_id]",
                "[C11]": "[movie_genres].[movie_id]"
            },
            "question": "Which [C2] does the [T3] [C9] belong to? [C2] refers to genre_name; [T3] [C9] refers to title = '[C9]'",
            "to_value": {},
            "masked": 3,
            "masked_terms": [
                "genre",
                "movie",
                "Dancer in the Dark"
            ],
            "sql": "SELECT [T1].[C2] FROM [T4] JOIN [T1] ON [T4].[C10] = [T1].[C1] JOIN [T3] ON [T4].[C11] = [T3].[C7] WHERE [T3].[C9] = '[C9]'",
            "repaired_sql": "SELECT [T1].[C2] FROM [T1] JOIN [T4] ON [T1].[C1] = [T4].[C10] JOIN [T3] ON [T4].[C11] = [T3].[C7] WHERE [T3].[C9] = '[C9]'"
        },
        "values": [
            "genre_name"
        ],
        "value_links": {
            "genre_name": "[movie_genres].[genre_name]"
        },
        "filtered_value_links": {
            "genre_name": "[movie_genres].[genre_name]"
        },
        "schema_links": {
            "genre": "COLUMN:[genre].[genre_name]",
            "movie": "TABLE:[movie]",
            "Dancer in the Dark": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "genre": "COLUMN:[genre].[genre_name]",
            "movie": "TABLE:[movie]",
            "Dancer in the Dark": "COLUMN:[movie].[title]"
        },
        "attack": "Which genre_name does the movie title belong to? title refers to title = 'title'"
    },
    {
        "db_id": "movies_4",
        "question": "How many adventure movies are there that were released in 2000? adventure movies refers to genre_name = 'Adventure'; released in 2000 refers to release_date LIKE '2000%'",
        "evidence": "adventure movies refers to genre_name = 'Adventure'; released in 2000 refers to release_date LIKE '2000%'",
        "SQL": "SELECT COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Adventure' AND CAST(STRFTIME('%Y', T1.release_date) AS INT) = 2000",
        "query": "SELECT COUNT(T1.movie_id) FROM movie AS T1 INNER JOIN movie_genres AS T2 ON T1.movie_id = T2.movie_id INNER JOIN genre AS T3 ON T2.genre_id = T3.genre_id WHERE T3.genre_name = 'Adventure' AND CAST(STRFTIME('%Y', T1.release_date) AS INT) = 2000",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "adventure",
            "movies",
            "are",
            "there",
            "that",
            "were",
            "released",
            "in",
            "2000",
            "?",
            "adventure",
            "movies",
            "refers",
            "to",
            "genre_name",
            "=",
            "'Adventure'",
            ";",
            "released",
            "in",
            "2000",
            "refers",
            "to",
            "release_date",
            "LIKE",
            "'2000%'"
        ],
        "tc_original": [
            "movie.release_date",
            "movie.movie_id",
            "movie.movie_status",
            "movie.title",
            "movie.budget",
            "movie.*",
            "genre.genre_name",
            "genre.genre_id",
            "genre.*",
            "movie_genres.genre_id",
            "movie_genres.movie_id",
            "movie_genres.*",
            "movie_crew.job",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[release_date]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[movie_status]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[*]",
            "TABLE:[genre]",
            "COLUMN:[genre].[genre_name]",
            "COLUMN:[genre].[genre_id]",
            "COLUMN:[genre].[*]",
            "TABLE:[movie_genres]",
            "COLUMN:[movie_genres].[genre_id]",
            "COLUMN:[movie_genres].[movie_id]",
            "COLUMN:[movie_genres].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[genre]':\n  '[genre_id]':\n    primary_key: true\n    type: integer\n  '[genre_name]': text\n'[movie]':\n  '[budget]': integer\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[movie_status]': text\n  '[release_date]': date\n  '[title]': text\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[movie_genres]':\n  '[genre_id]':\n    foreign_key: '[genre].[genre_id]'\n    type: integer\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "adventure": "VALUE:[genre].[genre_name]",
            "movies": "TABLE:[movie]",
            "released": "COLUMN:[movie].[release_date]",
            "2000": "VALUE:[movie].[release_date]",
            "genre_name": "COLUMN:[genre].[genre_name]",
            "release_date": "COLUMN:[movie].[release_date]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[genre]",
                "[C2]": "[genre].[genre_id]",
                "[C3]": "[genre].[genre_name]",
                "[T3]": "[movie]",
                "[C4]": "[movie].[budget]",
                "[C5]": "[movie].[movie_id]",
                "[C6]": "[movie].[movie_status]",
                "[C7]": "[movie].[release_date]",
                "[C8]": "[movie].[title]",
                "[T4]": "[movie_crew]",
                "[C9]": "[movie_crew].[department_id]",
                "[C10]": "[movie_crew].[job]",
                "[C11]": "[movie_crew].[movie_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[movie_genres]",
                "[C13]": "[movie_genres].[genre_id]",
                "[C14]": "[movie_genres].[movie_id]",
                "[T6]": "[person]",
                "[C15]": "[person].[person_id]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[genre]": "[T2]",
                "[genre].[genre_id]": "[C2]",
                "[genre].[genre_name]": "[C3]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C4]",
                "[movie].[movie_id]": "[C5]",
                "[movie].[movie_status]": "[C6]",
                "[movie].[release_date]": "[C7]",
                "[movie].[title]": "[C8]",
                "[movie_crew]": "[T4]",
                "[movie_crew].[department_id]": "[C9]",
                "[movie_crew].[job]": "[C10]",
                "[movie_crew].[movie_id]": "[C11]",
                "[movie_crew].[person_id]": "[C12]",
                "[movie_genres]": "[T5]",
                "[movie_genres].[genre_id]": "[C13]",
                "[movie_genres].[movie_id]": "[C14]",
                "[person]": "[T6]",
                "[person].[person_id]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n'[T3]':\n  '[C4]': integer\n  '[C5]':\n    primary_key: true\n    type: integer\n  '[C6]': text\n  '[C7]': date\n  '[C8]': text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    foreign_key: '[T3].[C5]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T6].[C15]'\n    type: integer\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T5]':\n  '[C13]':\n    foreign_key: '[T2].[C2]'\n    type: integer\n  '[C14]':\n    foreign_key: '[T3].[C5]'\n    type: integer\n'[T6]':\n  '[C15]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[genre]",
                "[T2].[C2]": "[genre].[genre_id]",
                "[C2]": "[genre].[genre_id]",
                "[T2].[C3]": "[genre].[genre_name]",
                "[C3]": "[genre].[genre_name]",
                "[T3]": "[movie]",
                "[T3].[C4]": "[movie].[budget]",
                "[C4]": "[movie].[budget]",
                "[T3].[C5]": "[movie].[movie_id]",
                "[C5]": "[movie].[movie_id]",
                "[T3].[C6]": "[movie].[movie_status]",
                "[C6]": "[movie].[movie_status]",
                "[T3].[C7]": "[movie].[release_date]",
                "[C7]": "[movie].[release_date]",
                "[T3].[C8]": "[movie].[title]",
                "[C8]": "[movie].[title]",
                "[T4]": "[movie_crew]",
                "[T4].[C9]": "[movie_crew].[department_id]",
                "[C9]": "[movie_crew].[department_id]",
                "[T4].[C10]": "[movie_crew].[job]",
                "[C10]": "[movie_crew].[job]",
                "[T4].[C11]": "[movie_crew].[movie_id]",
                "[C11]": "[movie_crew].[movie_id]",
                "[T4].[C12]": "[movie_crew].[person_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[movie_genres]",
                "[T5].[C13]": "[movie_genres].[genre_id]",
                "[C13]": "[movie_genres].[genre_id]",
                "[T5].[C14]": "[movie_genres].[movie_id]",
                "[C14]": "[movie_genres].[movie_id]",
                "[T6]": "[person]",
                "[T6].[C15]": "[person].[person_id]",
                "[C15]": "[person].[person_id]"
            },
            "question": "How many [V1] movies are there that were released in [C7]? [V1] movies refers to genre_name = '[V1]'; released in [C7] refers to release_date LIKE '[C7]%'; [V1] is a value of the column [C3]; [V2] is a value of the column [C7]",
            "to_value": {
                "[V1]": "Adventure",
                "[V2]": "2000%"
            },
            "masked": 3,
            "masked_terms": [
                "Adventure",
                "2000%",
                "2000"
            ],
            "sql": "SELECT COUNT(*) FROM [T2] INNER JOIN [T5] ON [T2].[C2] = [T5].[C13] INNER JOIN [T3] ON [T5].[C14] = [T3].[C5] WHERE [T2].[C3] = '[V1]' AND [T3].[C7] LIKE '[C7]%'",
            "repaired_sql": "SELECT COUNT(*) FROM [T3] JOIN [T5] ON [T3].[C5] = [T5].[C14] JOIN [T2] ON [T5].[C13] = [T2].[C2] WHERE [T2].[C3] = '[V1]' AND [T3].[C7] LIKE '[C7]%';"
        },
        "values": [
            "Adventure",
            "2000%"
        ],
        "value_links": {
            "Adventure": "[genre].[genre_name]",
            "2000%": "[movie].[release_date]"
        },
        "filtered_value_links": {
            "Adventure": "[genre].[genre_name]",
            "2000%": "[movie].[release_date]"
        },
        "schema_links": {
            "2000": "COLUMN:[movie].[release_date]"
        },
        "filtered_schema_links": {
            "2000": "COLUMN:[movie].[release_date]"
        },
        "attack": "How many action movies are there that were released in 2020?"
    },
    {
        "db_id": "movies_4",
        "question": "What keyword can the user use to search for the movie Finding Nemo? What keyword refers to keyword_name; Finding Nemo refers to title = 'Finding Nemo'",
        "evidence": "What keyword refers to keyword_name; Finding Nemo refers to title = 'Finding Nemo'",
        "SQL": "SELECT T3.keyword_name FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T1.title = 'Finding Nemo'",
        "query": "SELECT T3.keyword_name FROM movie AS T1 INNER JOIN movie_keywords AS T2 ON T1.movie_id = T2.movie_id INNER JOIN keyword AS T3 ON T2.keyword_id = T3.keyword_id WHERE T1.title = 'Finding Nemo'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "keyword",
            "can",
            "the",
            "user",
            "use",
            "to",
            "search",
            "for",
            "the",
            "movie",
            "Finding",
            "Nemo",
            "?",
            "What",
            "keyword",
            "refers",
            "to",
            "keyword_name",
            ";",
            "Finding",
            "Nemo",
            "refers",
            "to",
            "title",
            "=",
            "'Finding",
            "Nemo'"
        ],
        "tc_original": [
            "movie.title",
            "movie.movie_id",
            "movie.budget",
            "movie.homepage",
            "movie.overview",
            "movie.*",
            "keyword.keyword_name",
            "keyword.keyword_id",
            "keyword.*",
            "movie_keywords.movie_id",
            "movie_keywords.keyword_id",
            "movie_keywords.*",
            "movie_crew.job",
            "movie_crew.movie_id",
            "movie_crew.person_id",
            "movie_crew.department_id",
            "movie_crew.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movie_id]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[homepage]",
            "COLUMN:[movie].[overview]",
            "COLUMN:[movie].[*]",
            "TABLE:[keyword]",
            "COLUMN:[keyword].[keyword_name]",
            "COLUMN:[keyword].[keyword_id]",
            "COLUMN:[keyword].[*]",
            "TABLE:[movie_keywords]",
            "COLUMN:[movie_keywords].[movie_id]",
            "COLUMN:[movie_keywords].[keyword_id]",
            "COLUMN:[movie_keywords].[*]",
            "TABLE:[movie_crew]",
            "COLUMN:[movie_crew].[job]",
            "COLUMN:[movie_crew].[movie_id]",
            "COLUMN:[movie_crew].[person_id]",
            "COLUMN:[movie_crew].[department_id]",
            "COLUMN:[movie_crew].[*]"
        ],
        "schema": "'[department]':\n  '[department_id]':\n    primary_key: true\n    type: integer\n'[keyword]':\n  '[keyword_id]':\n    primary_key: true\n    type: integer\n  '[keyword_name]': text\n'[movie]':\n  '[budget]': integer\n  '[homepage]': text\n  '[movie_id]':\n    primary_key: true\n    type: integer\n  '[overview]': text\n  '[title]': text\n'[movie_crew]':\n  '[department_id]':\n    foreign_key: '[department].[department_id]'\n    type: integer\n  '[job]': text\n  '[movie_id]':\n    foreign_key: '[movie].[movie_id]'\n    type: integer\n  '[person_id]':\n    foreign_key: '[person].[person_id]'\n    type: integer\n'[movie_keywords]':\n  '[keyword_id]': integer\n  '[movie_id]': integer\n'[person]':\n  '[person_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "keyword": "TABLE:[keyword]",
            "keyword_name": "COLUMN:[keyword].[keyword_name]",
            "movie": "TABLE:[movie]",
            "Finding Nemo": "VALUE:[movie].[title]",
            "title": "COLUMN:[movie].[title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[department]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[keyword]",
                "[C2]": "[keyword].[keyword_id]",
                "[C3]": "[keyword].[keyword_name]",
                "[T3]": "[movie]",
                "[C4]": "[movie].[budget]",
                "[C5]": "[movie].[homepage]",
                "[C6]": "[movie].[movie_id]",
                "[C7]": "[movie].[overview]",
                "[C8]": "[movie].[title]",
                "[T4]": "[movie_crew]",
                "[C9]": "[movie_crew].[department_id]",
                "[C10]": "[movie_crew].[job]",
                "[C11]": "[movie_crew].[movie_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[movie_keywords]",
                "[C13]": "[movie_keywords].[keyword_id]",
                "[C14]": "[movie_keywords].[movie_id]",
                "[T6]": "[person]",
                "[C15]": "[person].[person_id]"
            },
            "to_symbol": {
                "[department]": "[T1]",
                "[department].[department_id]": "[C1]",
                "[keyword]": "[T2]",
                "[keyword].[keyword_id]": "[C2]",
                "[keyword].[keyword_name]": "[C3]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C4]",
                "[movie].[homepage]": "[C5]",
                "[movie].[movie_id]": "[C6]",
                "[movie].[overview]": "[C7]",
                "[movie].[title]": "[C8]",
                "[movie_crew]": "[T4]",
                "[movie_crew].[department_id]": "[C9]",
                "[movie_crew].[job]": "[C10]",
                "[movie_crew].[movie_id]": "[C11]",
                "[movie_crew].[person_id]": "[C12]",
                "[movie_keywords]": "[T5]",
                "[movie_keywords].[keyword_id]": "[C13]",
                "[movie_keywords].[movie_id]": "[C14]",
                "[person]": "[T6]",
                "[person].[person_id]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n'[T3]':\n  '[C4]': integer\n  '[C5]': text\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n'[T4]':\n  '[C10]': text\n  '[C11]':\n    foreign_key: '[T3].[C6]'\n    type: integer\n  '[C12]':\n    foreign_key: '[T6].[C15]'\n    type: integer\n  '[C9]':\n    foreign_key: '[T1].[C1]'\n    type: integer\n'[T5]':\n  '[C13]': integer\n  '[C14]': integer\n'[T6]':\n  '[C15]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[department]",
                "[T1].[C1]": "[department].[department_id]",
                "[C1]": "[department].[department_id]",
                "[T2]": "[keyword]",
                "[T2].[C2]": "[keyword].[keyword_id]",
                "[C2]": "[keyword].[keyword_id]",
                "[T2].[C3]": "[keyword].[keyword_name]",
                "[C3]": "[keyword].[keyword_name]",
                "[T3]": "[movie]",
                "[T3].[C4]": "[movie].[budget]",
                "[C4]": "[movie].[budget]",
                "[T3].[C5]": "[movie].[homepage]",
                "[C5]": "[movie].[homepage]",
                "[T3].[C6]": "[movie].[movie_id]",
                "[C6]": "[movie].[movie_id]",
                "[T3].[C7]": "[movie].[overview]",
                "[C7]": "[movie].[overview]",
                "[T3].[C8]": "[movie].[title]",
                "[C8]": "[movie].[title]",
                "[T4]": "[movie_crew]",
                "[T4].[C9]": "[movie_crew].[department_id]",
                "[C9]": "[movie_crew].[department_id]",
                "[T4].[C10]": "[movie_crew].[job]",
                "[C10]": "[movie_crew].[job]",
                "[T4].[C11]": "[movie_crew].[movie_id]",
                "[C11]": "[movie_crew].[movie_id]",
                "[T4].[C12]": "[movie_crew].[person_id]",
                "[C12]": "[movie_crew].[person_id]",
                "[T5]": "[movie_keywords]",
                "[T5].[C13]": "[movie_keywords].[keyword_id]",
                "[C13]": "[movie_keywords].[keyword_id]",
                "[T5].[C14]": "[movie_keywords].[movie_id]",
                "[C14]": "[movie_keywords].[movie_id]",
                "[T6]": "[person]",
                "[T6].[C15]": "[person].[person_id]",
                "[C15]": "[person].[person_id]"
            },
            "question": "What [C3] can the user use to search for the movie [V2]? What [C3] refers to [V1]; [V2] refers to [C8] = '[V2]'; [V1] is a value of the column [C3]; [V2] is a value of the column [C8]",
            "to_value": {
                "[V1]": "keyword_name",
                "[V2]": "Finding Nemo"
            },
            "masked": 5,
            "masked_terms": [
                "keyword_name",
                "Finding Nemo",
                "keyword",
                "title",
                "Finding Nemo"
            ],
            "sql": "SELECT [T2].[C3] FROM [T2] WHERE [T2].[C2] IN (SELECT [T4].[C9] FROM [T4] WHERE [T4].[C11] IN (SELECT [T3].[C6] FROM [T3] WHERE [T3].[C8] = '[V2]'))",
            "repaired_sql": "SELECT [T2].[C3] FROM [T2] JOIN [T3] ON [T2].[C3] = '[V1]' AND [T3].[C8] = '[V2]'"
        },
        "values": [
            "keyword_name",
            "Finding Nemo"
        ],
        "value_links": {
            "keyword_name": "[keyword].[keyword_name]",
            "Finding Nemo": "[movie].[title]"
        },
        "filtered_value_links": {
            "keyword_name": "[keyword].[keyword_name]",
            "Finding Nemo": "[movie].[title]"
        },
        "schema_links": {
            "keyword": "COLUMN:[keyword].[keyword_name]",
            "title": "COLUMN:[movie].[title]",
            "Finding Nemo": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "keyword": "COLUMN:[keyword].[keyword_name]",
            "title": "COLUMN:[movie].[title]",
            "Finding Nemo": "COLUMN:[movie].[title]"
        },
        "attack": "What genres can the user use to search for the movie Titanic? What genre refers to Action; Titanic refers to title = 'Titanic'; Action is a value of the column genre; Titanic is a value of the column title"
    },
    {
        "db_id": "codebase_comments",
        "question": "How many solution paths are there inside the 2nd most popular repository? more watchers mean that this repository is more popular; most popular repository refers to max(Watchers);",
        "evidence": "more watchers mean that this repository is more popular; most popular repository refers to max(Watchers);",
        "SQL": "SELECT COUNT(DISTINCT T2.Path) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Watchers = ( SELECT Watchers FROM Repo ORDER BY Watchers DESC LIMIT 1, 1 )",
        "query": "SELECT COUNT(DISTINCT T2.Path) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Watchers = ( SELECT Watchers FROM Repo ORDER BY Watchers DESC LIMIT 1, 1 )",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "solution",
            "paths",
            "are",
            "there",
            "inside",
            "the",
            "2nd",
            "most",
            "popular",
            "repository",
            "?",
            "more",
            "watchers",
            "mean",
            "that",
            "this",
            "repository",
            "is",
            "more",
            "popular",
            ";",
            "most",
            "popular",
            "repository",
            "refers",
            "to",
            "max(Watchers)",
            ";"
        ],
        "tc_original": [
            "repo.watchers",
            "repo.id",
            "repo.url",
            "repo.stars",
            "repo.forks",
            "repo.*",
            "solution.repoid",
            "solution.path",
            "solution.id",
            "solution.processedtime",
            "solution.wascompiled",
            "solution.*",
            "methodparameter.id",
            "methodparameter.type",
            "methodparameter.methodid",
            "methodparameter.name",
            "methodparameter.*",
            "method.id",
            "method.name",
            "method.summary",
            "method.lang",
            "method.fullcomment",
            "method.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[repo]",
            "COLUMN:[repo].[watchers]",
            "COLUMN:[repo].[id]",
            "COLUMN:[repo].[url]",
            "COLUMN:[repo].[stars]",
            "COLUMN:[repo].[forks]",
            "COLUMN:[repo].[*]",
            "TABLE:[solution]",
            "COLUMN:[solution].[repoid]",
            "COLUMN:[solution].[path]",
            "COLUMN:[solution].[id]",
            "COLUMN:[solution].[processedtime]",
            "COLUMN:[solution].[wascompiled]",
            "COLUMN:[solution].[*]",
            "TABLE:[methodparameter]",
            "COLUMN:[methodparameter].[id]",
            "COLUMN:[methodparameter].[type]",
            "COLUMN:[methodparameter].[methodid]",
            "COLUMN:[methodparameter].[name]",
            "COLUMN:[methodparameter].[*]",
            "TABLE:[method]",
            "COLUMN:[method].[id]",
            "COLUMN:[method].[name]",
            "COLUMN:[method].[summary]",
            "COLUMN:[method].[lang]",
            "COLUMN:[method].[fullcomment]",
            "COLUMN:[method].[*]"
        ],
        "schema": "'[method]':\n  '[fullcomment]': text\n  '[id]':\n    primary_key: true\n    type: integer\n  '[lang]': text\n  '[name]': text\n  '[summary]': text\n'[methodparameter]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[methodid]': text\n  '[name]': text\n  '[type]': text\n'[repo]':\n  '[forks]': integer\n  '[id]':\n    primary_key: true\n    type: integer\n  '[stars]': integer\n  '[url]': text\n  '[watchers]': integer\n'[solution]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[path]': text\n  '[processedtime]': integer\n  '[repoid]': integer\n  '[wascompiled]': integer\n",
        "gold_links": {
            "solution paths": "COLUMN:[solution].[path]",
            "paths": "COLUMN:[solution].[path]",
            "repository": "TABLE:[repo]",
            "popular": "COLUMN:[repo].[watchers]",
            "watchers": "COLUMN:[repo].[watchers]",
            "2nd": "COLUMN:[repo].[watchers]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[method]",
                "[C1]": "[method].[fullcomment]",
                "[C2]": "[method].[id]",
                "[C3]": "[method].[lang]",
                "[C4]": "[method].[name]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[C6]": "[methodparameter].[id]",
                "[C7]": "[methodparameter].[methodid]",
                "[C8]": "[methodparameter].[name]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[C10]": "[repo].[forks]",
                "[C11]": "[repo].[id]",
                "[C12]": "[repo].[stars]",
                "[C13]": "[repo].[url]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[C15]": "[solution].[id]",
                "[C16]": "[solution].[path]",
                "[C17]": "[solution].[processedtime]",
                "[C18]": "[solution].[repoid]",
                "[C19]": "[solution].[wascompiled]"
            },
            "to_symbol": {
                "[method]": "[T1]",
                "[method].[fullcomment]": "[C1]",
                "[method].[id]": "[C2]",
                "[method].[lang]": "[C3]",
                "[method].[name]": "[C4]",
                "[method].[summary]": "[C5]",
                "[methodparameter]": "[T2]",
                "[methodparameter].[id]": "[C6]",
                "[methodparameter].[methodid]": "[C7]",
                "[methodparameter].[name]": "[C8]",
                "[methodparameter].[type]": "[C9]",
                "[repo]": "[T3]",
                "[repo].[forks]": "[C10]",
                "[repo].[id]": "[C11]",
                "[repo].[stars]": "[C12]",
                "[repo].[url]": "[C13]",
                "[repo].[watchers]": "[C14]",
                "[solution]": "[T4]",
                "[solution].[id]": "[C15]",
                "[solution].[path]": "[C16]",
                "[solution].[processedtime]": "[C17]",
                "[solution].[repoid]": "[C18]",
                "[solution].[wascompiled]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': text\n  '[C14]': integer\n'[T4]':\n  '[C15]':\n    primary_key: true\n    type: integer\n  '[C16]': text\n  '[C17]': integer\n  '[C18]': integer\n  '[C19]': integer\n",
            "reverse_dict": {
                "[T1]": "[method]",
                "[T1].[C1]": "[method].[fullcomment]",
                "[C1]": "[method].[fullcomment]",
                "[T1].[C2]": "[method].[id]",
                "[C2]": "[method].[id]",
                "[T1].[C3]": "[method].[lang]",
                "[C3]": "[method].[lang]",
                "[T1].[C4]": "[method].[name]",
                "[C4]": "[method].[name]",
                "[T1].[C5]": "[method].[summary]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[T2].[C6]": "[methodparameter].[id]",
                "[C6]": "[methodparameter].[id]",
                "[T2].[C7]": "[methodparameter].[methodid]",
                "[C7]": "[methodparameter].[methodid]",
                "[T2].[C8]": "[methodparameter].[name]",
                "[C8]": "[methodparameter].[name]",
                "[T2].[C9]": "[methodparameter].[type]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[T3].[C10]": "[repo].[forks]",
                "[C10]": "[repo].[forks]",
                "[T3].[C11]": "[repo].[id]",
                "[C11]": "[repo].[id]",
                "[T3].[C12]": "[repo].[stars]",
                "[C12]": "[repo].[stars]",
                "[T3].[C13]": "[repo].[url]",
                "[C13]": "[repo].[url]",
                "[T3].[C14]": "[repo].[watchers]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[T4].[C15]": "[solution].[id]",
                "[C15]": "[solution].[id]",
                "[T4].[C16]": "[solution].[path]",
                "[C16]": "[solution].[path]",
                "[T4].[C17]": "[solution].[processedtime]",
                "[C17]": "[solution].[processedtime]",
                "[T4].[C18]": "[solution].[repoid]",
                "[C18]": "[solution].[repoid]",
                "[T4].[C19]": "[solution].[wascompiled]",
                "[C19]": "[solution].[wascompiled]"
            },
            "question": "How many [T4] paths are there inside the [V1] [T3]? more [C14] mean that this repository is more popular; [T3] refers to max([C14]);; [V1] is a value of the column [T4]; [V2] is a value of the column [C14]",
            "to_value": {
                "[V1]": "2nd",
                "[V2]": "max(Watchers)"
            },
            "masked": 9,
            "masked_terms": [
                "2nd",
                "max(Watchers)",
                "solution",
                "repo",
                "watchers",
                "id",
                "path",
                "most popular repository",
                "max(Watchers)"
            ],
            "sql": "SELECT COUNT(*) FROM [T4] WHERE [C16] = '[V1]' AND [C17] = (SELECT MAX([C14]) FROM [T3])",
            "repaired_sql": "SELECT COUNT(*) FROM [T4] WHERE [C17] = (SELECT [C11] FROM [T3] WHERE [C14] = (SELECT MAX([C14]) FROM [T3])) AND [C16] = '[V1]'"
        },
        "values": [
            "2nd",
            "max(Watchers)"
        ],
        "value_links": {
            "2nd": "[solution]",
            "max(Watchers)": "[repo].[watchers]"
        },
        "filtered_value_links": {
            "2nd": "[solution]",
            "max(Watchers)": "[repo].[watchers]"
        },
        "schema_links": {
            "solution": "TABLE:[solution]",
            "repo": "TABLE:[repo]",
            "watchers": "COLUMN:[repo].[watchers]",
            "id": "COLUMN:[repo].[id]",
            "path": "COLUMN:[solution].[path]",
            "most popular repository": "TABLE:[repo]",
            "max(Watchers)": "COLUMN:[repo].[watchers]"
        },
        "filtered_schema_links": {
            "solution": "TABLE:[solution]",
            "repo": "TABLE:[repo]",
            "watchers": "COLUMN:[repo].[watchers]",
            "id": "COLUMN:[repo].[id]",
            "path": "COLUMN:[solution].[path]",
            "most popular repository": "TABLE:[repo]",
            "max(Watchers)": "COLUMN:[repo].[watchers]"
        },
        "attack": "How many path paths are there inside the most popular repository? more stars mean that this repository is more popular; repository refers to max(stars);"
    },
    {
        "db_id": "codebase_comments",
        "question": "What is the average processed time of the solution paths inside the \"https://github.com/zphingphong/DiscardCustomerApp.git\"? average processed time = avg(Solution.ProcessedTime);",
        "evidence": "average processed time = avg(Solution.ProcessedTime);",
        "SQL": "SELECT CAST(SUM(T2.ProcessedTime) AS REAL) / COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/zphingphong/DiscardCustomerApp.git'",
        "query": "SELECT CAST(SUM(T2.ProcessedTime) AS REAL) / COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/zphingphong/DiscardCustomerApp.git'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "processed",
            "time",
            "of",
            "the",
            "solution",
            "paths",
            "inside",
            "the",
            "\"https://github.com/zphingphong/DiscardCustomerApp.git\"",
            "?",
            "average",
            "processed",
            "time",
            "=",
            "avg(Solution.ProcessedTime)",
            ";"
        ],
        "tc_original": [
            "solution.processedtime",
            "solution.path",
            "solution.repoid",
            "solution.id",
            "solution.wascompiled",
            "solution.*",
            "repo.id",
            "repo.url",
            "repo.stars",
            "repo.forks",
            "repo.processedtime",
            "repo.*",
            "methodparameter.id",
            "methodparameter.type",
            "methodparameter.methodid",
            "methodparameter.name",
            "methodparameter.*",
            "method.id",
            "method.name",
            "method.summary",
            "method.lang",
            "method.fullcomment",
            "method.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[solution]",
            "COLUMN:[solution].[processedtime]",
            "COLUMN:[solution].[path]",
            "COLUMN:[solution].[repoid]",
            "COLUMN:[solution].[id]",
            "COLUMN:[solution].[wascompiled]",
            "COLUMN:[solution].[*]",
            "TABLE:[repo]",
            "COLUMN:[repo].[id]",
            "COLUMN:[repo].[url]",
            "COLUMN:[repo].[stars]",
            "COLUMN:[repo].[forks]",
            "COLUMN:[repo].[processedtime]",
            "COLUMN:[repo].[*]",
            "TABLE:[methodparameter]",
            "COLUMN:[methodparameter].[id]",
            "COLUMN:[methodparameter].[type]",
            "COLUMN:[methodparameter].[methodid]",
            "COLUMN:[methodparameter].[name]",
            "COLUMN:[methodparameter].[*]",
            "TABLE:[method]",
            "COLUMN:[method].[id]",
            "COLUMN:[method].[name]",
            "COLUMN:[method].[summary]",
            "COLUMN:[method].[lang]",
            "COLUMN:[method].[fullcomment]",
            "COLUMN:[method].[*]"
        ],
        "schema": "'[method]':\n  '[fullcomment]': text\n  '[id]':\n    primary_key: true\n    type: integer\n  '[lang]': text\n  '[name]': text\n  '[summary]': text\n'[methodparameter]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[methodid]': text\n  '[name]': text\n  '[type]': text\n'[repo]':\n  '[forks]': integer\n  '[id]':\n    primary_key: true\n    type: integer\n  '[processedtime]': integer\n  '[stars]': integer\n  '[url]': text\n'[solution]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[path]': text\n  '[processedtime]': integer\n  '[repoid]': integer\n  '[wascompiled]': integer\n",
        "gold_links": {
            "average processed time": "COLUMN:[solution].[processedtime]",
            "solution paths": "COLUMN:[solution].[path]",
            "https://github.com/zphingphong/DiscardCustomerApp.git": "VALUE:[repo].[url]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[method]",
                "[C1]": "[method].[fullcomment]",
                "[C2]": "[method].[id]",
                "[C3]": "[method].[lang]",
                "[C4]": "[method].[name]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[C6]": "[methodparameter].[id]",
                "[C7]": "[methodparameter].[methodid]",
                "[C8]": "[methodparameter].[name]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[C10]": "[repo].[forks]",
                "[C11]": "[repo].[id]",
                "[C12]": "[repo].[processedtime]",
                "[C13]": "[repo].[stars]",
                "[C14]": "[repo].[url]",
                "[T4]": "[solution]",
                "[C15]": "[solution].[id]",
                "[C16]": "[solution].[path]",
                "[C17]": "[solution].[processedtime]",
                "[C18]": "[solution].[repoid]",
                "[C19]": "[solution].[wascompiled]"
            },
            "to_symbol": {
                "[method]": "[T1]",
                "[method].[fullcomment]": "[C1]",
                "[method].[id]": "[C2]",
                "[method].[lang]": "[C3]",
                "[method].[name]": "[C4]",
                "[method].[summary]": "[C5]",
                "[methodparameter]": "[T2]",
                "[methodparameter].[id]": "[C6]",
                "[methodparameter].[methodid]": "[C7]",
                "[methodparameter].[name]": "[C8]",
                "[methodparameter].[type]": "[C9]",
                "[repo]": "[T3]",
                "[repo].[forks]": "[C10]",
                "[repo].[id]": "[C11]",
                "[repo].[processedtime]": "[C12]",
                "[repo].[stars]": "[C13]",
                "[repo].[url]": "[C14]",
                "[solution]": "[T4]",
                "[solution].[id]": "[C15]",
                "[solution].[path]": "[C16]",
                "[solution].[processedtime]": "[C17]",
                "[solution].[repoid]": "[C18]",
                "[solution].[wascompiled]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': integer\n  '[C14]': text\n'[T4]':\n  '[C15]':\n    primary_key: true\n    type: integer\n  '[C16]': text\n  '[C17]': integer\n  '[C18]': integer\n  '[C19]': integer\n",
            "reverse_dict": {
                "[T1]": "[method]",
                "[T1].[C1]": "[method].[fullcomment]",
                "[C1]": "[method].[fullcomment]",
                "[T1].[C2]": "[method].[id]",
                "[C2]": "[method].[id]",
                "[T1].[C3]": "[method].[lang]",
                "[C3]": "[method].[lang]",
                "[T1].[C4]": "[method].[name]",
                "[C4]": "[method].[name]",
                "[T1].[C5]": "[method].[summary]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[T2].[C6]": "[methodparameter].[id]",
                "[C6]": "[methodparameter].[id]",
                "[T2].[C7]": "[methodparameter].[methodid]",
                "[C7]": "[methodparameter].[methodid]",
                "[T2].[C8]": "[methodparameter].[name]",
                "[C8]": "[methodparameter].[name]",
                "[T2].[C9]": "[methodparameter].[type]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[T3].[C10]": "[repo].[forks]",
                "[C10]": "[repo].[forks]",
                "[T3].[C11]": "[repo].[id]",
                "[C11]": "[repo].[id]",
                "[T3].[C12]": "[repo].[processedtime]",
                "[C12]": "[repo].[processedtime]",
                "[T3].[C13]": "[repo].[stars]",
                "[C13]": "[repo].[stars]",
                "[T3].[C14]": "[repo].[url]",
                "[C14]": "[repo].[url]",
                "[T4]": "[solution]",
                "[T4].[C15]": "[solution].[id]",
                "[C15]": "[solution].[id]",
                "[T4].[C16]": "[solution].[path]",
                "[C16]": "[solution].[path]",
                "[T4].[C17]": "[solution].[processedtime]",
                "[C17]": "[solution].[processedtime]",
                "[T4].[C18]": "[solution].[repoid]",
                "[C18]": "[solution].[repoid]",
                "[T4].[C19]": "[solution].[wascompiled]",
                "[C19]": "[solution].[wascompiled]"
            },
            "question": "What is the [C17] of the [T4] paths inside the \"[V1]\"? [C17] = avg([T4].ProcessedTime);; [V1] is a value of the column [C14]",
            "to_value": {
                "[V1]": "https://github.com/zphingphong/DiscardCustomerApp.git"
            },
            "masked": 4,
            "masked_terms": [
                "https://github.com/zphingphong/DiscardCustomerApp.git",
                "average processed time",
                "solution",
                "discardcustomerapp"
            ],
            "sql": "SELECT AVG([T4].[C17]) FROM [T4] JOIN [T3] ON [T4].[C18] = [T3].[C11] WHERE [T3].[C14] = '[V1]'",
            "repaired_sql": "SELECT AVG([T4].[C17]) FROM [T4] JOIN [T3] ON [T4].[C18] = [T3].[C11] WHERE [T3].[C14] = '[V1]'"
        },
        "values": [
            "https://github.com/zphingphong/DiscardCustomerApp.git"
        ],
        "value_links": {
            "https://github.com/zphingphong/DiscardCustomerApp.git": "[repo].[url]"
        },
        "filtered_value_links": {
            "https://github.com/zphingphong/DiscardCustomerApp.git": "[repo].[url]"
        },
        "schema_links": {
            "average processed time": "COLUMN:[solution].[processedtime]",
            "solution": "TABLE:[solution]",
            "discardcustomerapp": "COLUMN:[repo].[url]"
        },
        "filtered_schema_links": {
            "average processed time": "COLUMN:[solution].[processedtime]",
            "solution": "TABLE:[solution]",
            "discardcustomerapp": "COLUMN:[repo].[url]"
        },
        "attack": "What is the average processed time of the path paths inside the \"region\"?"
    },
    {
        "db_id": "codebase_comments",
        "question": "How many solution paths that needs to be compiled if user wants to implement it in \"https://github.com/jeffdik/tachy.git\"? needs to be compiled if user wants to implement refers to WasCompiled = 0; https://github.com/jeffdik/tachy.git is url of repository",
        "evidence": "needs to be compiled if user wants to implement refers to WasCompiled = 0; https://github.com/jeffdik/tachy.git is url of repository",
        "SQL": "SELECT COUNT(T2.Path) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/jeffdik/tachy.git' AND T2.WasCompiled = 0",
        "query": "SELECT COUNT(T2.Path) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/jeffdik/tachy.git' AND T2.WasCompiled = 0",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "solution",
            "paths",
            "that",
            "needs",
            "to",
            "be",
            "compiled",
            "if",
            "user",
            "wants",
            "to",
            "implement",
            "it",
            "in",
            "\"https://github.com/jeffdik/tachy.git\"",
            "?",
            "needs",
            "to",
            "be",
            "compiled",
            "if",
            "user",
            "wants",
            "to",
            "implement",
            "refers",
            "to",
            "WasCompiled",
            "=",
            "0",
            ";",
            "https://github.com/jeffdik/tachy.git",
            "is",
            "url",
            "of",
            "repository"
        ],
        "tc_original": [
            "solution.repoid",
            "solution.path",
            "solution.wascompiled",
            "solution.id",
            "solution.processedtime",
            "solution.*",
            "repo.url",
            "repo.id",
            "repo.stars",
            "repo.forks",
            "repo.watchers",
            "repo.*",
            "methodparameter.id",
            "methodparameter.type",
            "methodparameter.methodid",
            "methodparameter.name",
            "methodparameter.*",
            "method.id",
            "method.name",
            "method.summary",
            "method.lang",
            "method.fullcomment",
            "method.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[solution]",
            "COLUMN:[solution].[repoid]",
            "COLUMN:[solution].[path]",
            "COLUMN:[solution].[wascompiled]",
            "COLUMN:[solution].[id]",
            "COLUMN:[solution].[processedtime]",
            "COLUMN:[solution].[*]",
            "TABLE:[repo]",
            "COLUMN:[repo].[url]",
            "COLUMN:[repo].[id]",
            "COLUMN:[repo].[stars]",
            "COLUMN:[repo].[forks]",
            "COLUMN:[repo].[watchers]",
            "COLUMN:[repo].[*]",
            "TABLE:[methodparameter]",
            "COLUMN:[methodparameter].[id]",
            "COLUMN:[methodparameter].[type]",
            "COLUMN:[methodparameter].[methodid]",
            "COLUMN:[methodparameter].[name]",
            "COLUMN:[methodparameter].[*]",
            "TABLE:[method]",
            "COLUMN:[method].[id]",
            "COLUMN:[method].[name]",
            "COLUMN:[method].[summary]",
            "COLUMN:[method].[lang]",
            "COLUMN:[method].[fullcomment]",
            "COLUMN:[method].[*]"
        ],
        "schema": "'[method]':\n  '[fullcomment]': text\n  '[id]':\n    primary_key: true\n    type: integer\n  '[lang]': text\n  '[name]': text\n  '[summary]': text\n'[methodparameter]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[methodid]': text\n  '[name]': text\n  '[type]': text\n'[repo]':\n  '[forks]': integer\n  '[id]':\n    primary_key: true\n    type: integer\n  '[stars]': integer\n  '[url]': text\n  '[watchers]': integer\n'[solution]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[path]': text\n  '[processedtime]': integer\n  '[repoid]': integer\n  '[wascompiled]': integer\n",
        "gold_links": {
            "solution paths": "COLUMN:[solution].[path]",
            "paths": "COLUMN:[solution].[path]",
            "compiled": "COLUMN:[solution].[wascompiled]",
            "needs to be compiled": "COLUMN:[solution].[wascompiled]",
            "WasCompiled = 0": "COLUMN:[solution].[wascompiled]",
            "repository": "TABLE:[repo]",
            "https://github.com/jeffdik/tachy.git": "VALUE:[repo].[url]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[method]",
                "[C1]": "[method].[fullcomment]",
                "[C2]": "[method].[id]",
                "[C3]": "[method].[lang]",
                "[C4]": "[method].[name]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[C6]": "[methodparameter].[id]",
                "[C7]": "[methodparameter].[methodid]",
                "[C8]": "[methodparameter].[name]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[C10]": "[repo].[forks]",
                "[C11]": "[repo].[id]",
                "[C12]": "[repo].[stars]",
                "[C13]": "[repo].[url]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[C15]": "[solution].[id]",
                "[C16]": "[solution].[path]",
                "[C17]": "[solution].[processedtime]",
                "[C18]": "[solution].[repoid]",
                "[C19]": "[solution].[wascompiled]"
            },
            "to_symbol": {
                "[method]": "[T1]",
                "[method].[fullcomment]": "[C1]",
                "[method].[id]": "[C2]",
                "[method].[lang]": "[C3]",
                "[method].[name]": "[C4]",
                "[method].[summary]": "[C5]",
                "[methodparameter]": "[T2]",
                "[methodparameter].[id]": "[C6]",
                "[methodparameter].[methodid]": "[C7]",
                "[methodparameter].[name]": "[C8]",
                "[methodparameter].[type]": "[C9]",
                "[repo]": "[T3]",
                "[repo].[forks]": "[C10]",
                "[repo].[id]": "[C11]",
                "[repo].[stars]": "[C12]",
                "[repo].[url]": "[C13]",
                "[repo].[watchers]": "[C14]",
                "[solution]": "[T4]",
                "[solution].[id]": "[C15]",
                "[solution].[path]": "[C16]",
                "[solution].[processedtime]": "[C17]",
                "[solution].[repoid]": "[C18]",
                "[solution].[wascompiled]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': text\n  '[C14]': integer\n'[T4]':\n  '[C15]':\n    primary_key: true\n    type: integer\n  '[C16]': text\n  '[C17]': integer\n  '[C18]': integer\n  '[C19]': integer\n",
            "reverse_dict": {
                "[T1]": "[method]",
                "[T1].[C1]": "[method].[fullcomment]",
                "[C1]": "[method].[fullcomment]",
                "[T1].[C2]": "[method].[id]",
                "[C2]": "[method].[id]",
                "[T1].[C3]": "[method].[lang]",
                "[C3]": "[method].[lang]",
                "[T1].[C4]": "[method].[name]",
                "[C4]": "[method].[name]",
                "[T1].[C5]": "[method].[summary]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[T2].[C6]": "[methodparameter].[id]",
                "[C6]": "[methodparameter].[id]",
                "[T2].[C7]": "[methodparameter].[methodid]",
                "[C7]": "[methodparameter].[methodid]",
                "[T2].[C8]": "[methodparameter].[name]",
                "[C8]": "[methodparameter].[name]",
                "[T2].[C9]": "[methodparameter].[type]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[T3].[C10]": "[repo].[forks]",
                "[C10]": "[repo].[forks]",
                "[T3].[C11]": "[repo].[id]",
                "[C11]": "[repo].[id]",
                "[T3].[C12]": "[repo].[stars]",
                "[C12]": "[repo].[stars]",
                "[T3].[C13]": "[repo].[url]",
                "[C13]": "[repo].[url]",
                "[T3].[C14]": "[repo].[watchers]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[T4].[C15]": "[solution].[id]",
                "[C15]": "[solution].[id]",
                "[T4].[C16]": "[solution].[path]",
                "[C16]": "[solution].[path]",
                "[T4].[C17]": "[solution].[processedtime]",
                "[C17]": "[solution].[processedtime]",
                "[T4].[C18]": "[solution].[repoid]",
                "[C18]": "[solution].[repoid]",
                "[T4].[C19]": "[solution].[wascompiled]",
                "[C19]": "[solution].[wascompiled]"
            },
            "question": "How many solution paths that needs to be compiled if user wants to implement it in \"[V1]\"? needs to be compiled if user wants to implement refers to [C19] = [V2]; [V1] is url of repository; [V1] is a value of the column [C13]; [V2] is a value of the column [C19]",
            "to_value": {
                "[V1]": "https://github.com/jeffdik/tachy.git",
                "[V2]": "0"
            },
            "masked": 4,
            "masked_terms": [
                "https://github.com/jeffdik/tachy.git",
                "0",
                "tachy",
                "wascompiled"
            ],
            "sql": "SELECT COUNT(*) FROM [T4] WHERE [C19] = (SELECT [C19] FROM [T3] WHERE [C13] = '[V1]')",
            "repaired_sql": "SELECT COUNT(*) FROM [T4] WHERE [C19] = [V2] AND [C16] = '[V1]'"
        },
        "values": [
            "https://github.com/jeffdik/tachy.git",
            "0"
        ],
        "value_links": {
            "https://github.com/jeffdik/tachy.git": "[repo].[url]",
            "0": "[solution].[wascompiled]"
        },
        "filtered_value_links": {
            "https://github.com/jeffdik/tachy.git": "[repo].[url]",
            "0": "[solution].[wascompiled]"
        },
        "schema_links": {
            "tachy": "TABLE:[repo]",
            "wascompiled": "COLUMN:[solution].[wascompiled]"
        },
        "filtered_schema_links": {
            "tachy": "TABLE:[repo]",
            "wascompiled": "COLUMN:[solution].[wascompiled]"
        },
        "attack": "How many solution paths that needs to be compiled if user wants to implement it in \"url of repository\"? needs to be compiled if user wants to implement refers to `needs to be compiled` = 1; \"url of repository\" is url of repository; \"url of repository\" is a value of the column url; 1 is a value of the column `needs to be compiled`"
    },
    {
        "db_id": "codebase_comments",
        "question": "What is the github address of the repository that contains files used by solution ID12? github address refers to Url;",
        "evidence": "github address refers to Url;",
        "SQL": "SELECT T1.Url FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Id = 12",
        "query": "SELECT T1.Url FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Id = 12",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "github",
            "address",
            "of",
            "the",
            "repository",
            "that",
            "contains",
            "files",
            "used",
            "by",
            "solution",
            "ID12",
            "?",
            "github",
            "address",
            "refers",
            "to",
            "Url",
            ";"
        ],
        "tc_original": [
            "repo.url",
            "repo.id",
            "repo.stars",
            "repo.forks",
            "repo.watchers",
            "repo.*",
            "solution.repoid",
            "solution.id",
            "solution.path",
            "solution.processedtime",
            "solution.wascompiled",
            "solution.*",
            "method.id",
            "method.name",
            "method.summary",
            "method.solutionid",
            "method.lang",
            "method.*",
            "methodparameter.id",
            "methodparameter.type",
            "methodparameter.methodid",
            "methodparameter.name",
            "methodparameter.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[repo]",
            "COLUMN:[repo].[url]",
            "COLUMN:[repo].[id]",
            "COLUMN:[repo].[stars]",
            "COLUMN:[repo].[forks]",
            "COLUMN:[repo].[watchers]",
            "COLUMN:[repo].[*]",
            "TABLE:[solution]",
            "COLUMN:[solution].[repoid]",
            "COLUMN:[solution].[id]",
            "COLUMN:[solution].[path]",
            "COLUMN:[solution].[processedtime]",
            "COLUMN:[solution].[wascompiled]",
            "COLUMN:[solution].[*]",
            "TABLE:[method]",
            "COLUMN:[method].[id]",
            "COLUMN:[method].[name]",
            "COLUMN:[method].[summary]",
            "COLUMN:[method].[solutionid]",
            "COLUMN:[method].[lang]",
            "COLUMN:[method].[*]",
            "TABLE:[methodparameter]",
            "COLUMN:[methodparameter].[id]",
            "COLUMN:[methodparameter].[type]",
            "COLUMN:[methodparameter].[methodid]",
            "COLUMN:[methodparameter].[name]",
            "COLUMN:[methodparameter].[*]"
        ],
        "schema": "'[method]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[lang]': text\n  '[name]': text\n  '[solutionid]': integer\n  '[summary]': text\n'[methodparameter]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[methodid]': text\n  '[name]': text\n  '[type]': text\n'[repo]':\n  '[forks]': integer\n  '[id]':\n    primary_key: true\n    type: integer\n  '[stars]': integer\n  '[url]': text\n  '[watchers]': integer\n'[solution]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[path]': text\n  '[processedtime]': integer\n  '[repoid]': integer\n  '[wascompiled]': integer\n",
        "gold_links": {
            "github address": "COLUMN:[repo].[url]",
            "repository": "TABLE:[repo]",
            "solution": "TABLE:[solution]",
            "ID12": "VALUE:[solution].[id]",
            "files": "COLUMN:[solution].[path]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[method]",
                "[C1]": "[method].[id]",
                "[C2]": "[method].[lang]",
                "[C3]": "[method].[name]",
                "[C4]": "[method].[solutionid]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[C6]": "[methodparameter].[id]",
                "[C7]": "[methodparameter].[methodid]",
                "[C8]": "[methodparameter].[name]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[C10]": "[repo].[forks]",
                "[C11]": "[repo].[id]",
                "[C12]": "[repo].[stars]",
                "[C13]": "[repo].[url]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[C15]": "[solution].[id]",
                "[C16]": "[solution].[path]",
                "[C17]": "[solution].[processedtime]",
                "[C18]": "[solution].[repoid]",
                "[C19]": "[solution].[wascompiled]"
            },
            "to_symbol": {
                "[method]": "[T1]",
                "[method].[id]": "[C1]",
                "[method].[lang]": "[C2]",
                "[method].[name]": "[C3]",
                "[method].[solutionid]": "[C4]",
                "[method].[summary]": "[C5]",
                "[methodparameter]": "[T2]",
                "[methodparameter].[id]": "[C6]",
                "[methodparameter].[methodid]": "[C7]",
                "[methodparameter].[name]": "[C8]",
                "[methodparameter].[type]": "[C9]",
                "[repo]": "[T3]",
                "[repo].[forks]": "[C10]",
                "[repo].[id]": "[C11]",
                "[repo].[stars]": "[C12]",
                "[repo].[url]": "[C13]",
                "[repo].[watchers]": "[C14]",
                "[solution]": "[T4]",
                "[solution].[id]": "[C15]",
                "[solution].[path]": "[C16]",
                "[solution].[processedtime]": "[C17]",
                "[solution].[repoid]": "[C18]",
                "[solution].[wascompiled]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': integer\n  '[C5]': text\n'[T2]':\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': text\n  '[C14]': integer\n'[T4]':\n  '[C15]':\n    primary_key: true\n    type: integer\n  '[C16]': text\n  '[C17]': integer\n  '[C18]': integer\n  '[C19]': integer\n",
            "reverse_dict": {
                "[T1]": "[method]",
                "[T1].[C1]": "[method].[id]",
                "[C1]": "[method].[id]",
                "[T1].[C2]": "[method].[lang]",
                "[C2]": "[method].[lang]",
                "[T1].[C3]": "[method].[name]",
                "[C3]": "[method].[name]",
                "[T1].[C4]": "[method].[solutionid]",
                "[C4]": "[method].[solutionid]",
                "[T1].[C5]": "[method].[summary]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[T2].[C6]": "[methodparameter].[id]",
                "[C6]": "[methodparameter].[id]",
                "[T2].[C7]": "[methodparameter].[methodid]",
                "[C7]": "[methodparameter].[methodid]",
                "[T2].[C8]": "[methodparameter].[name]",
                "[C8]": "[methodparameter].[name]",
                "[T2].[C9]": "[methodparameter].[type]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[T3].[C10]": "[repo].[forks]",
                "[C10]": "[repo].[forks]",
                "[T3].[C11]": "[repo].[id]",
                "[C11]": "[repo].[id]",
                "[T3].[C12]": "[repo].[stars]",
                "[C12]": "[repo].[stars]",
                "[T3].[C13]": "[repo].[url]",
                "[C13]": "[repo].[url]",
                "[T3].[C14]": "[repo].[watchers]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[T4].[C15]": "[solution].[id]",
                "[C15]": "[solution].[id]",
                "[T4].[C16]": "[solution].[path]",
                "[C16]": "[solution].[path]",
                "[T4].[C17]": "[solution].[processedtime]",
                "[C17]": "[solution].[processedtime]",
                "[T4].[C18]": "[solution].[repoid]",
                "[C18]": "[solution].[repoid]",
                "[T4].[C19]": "[solution].[wascompiled]",
                "[C19]": "[solution].[wascompiled]"
            },
            "question": "What is the [C13] of the [T3] that contains files used by [C18]? [C13] refers to [V1];; [V1] is a value of the column [C13]",
            "to_value": {
                "[V1]": "Url"
            },
            "masked": 4,
            "masked_terms": [
                "Url",
                "github address",
                "repository",
                "solution id12"
            ],
            "sql": "SELECT [T3].[C13] FROM [T3] WHERE [T3].[C11] IN (SELECT [T4].[C17] FROM [T4] WHERE [T4].[C18] IS NOT NULL)",
            "repaired_sql": "SELECT [C13] FROM [T3] WHERE [C13] = '[V1]' AND [C14] = [C18]"
        },
        "values": [
            "Url"
        ],
        "value_links": {
            "Url": "[repo].[url]"
        },
        "filtered_value_links": {
            "Url": "[repo].[url]"
        },
        "schema_links": {
            "github address": "COLUMN:[repo].[url]",
            "repository": "TABLE:[repo]",
            "contains": "COLUMN:[repo].[*]",
            "solution id12": "COLUMN:[solution].[repoid]"
        },
        "filtered_schema_links": {
            "github address": "COLUMN:[repo].[url]",
            "repository": "TABLE:[repo]",
            "contains": "COLUMN:[repo].[*]",
            "solution id12": "COLUMN:[solution].[repoid]"
        },
        "attack": "What is the file type of the file_sets that contains files used by file_id? file type refers to file_set_type; file_set_type is a value of the column file type"
    },
    {
        "db_id": "codebase_comments",
        "question": "What is the average time needed for the solutions containing files within the repository whose url is \"https://github.com/jeffdik/tachy.git\" to be processd? average time = avg(ProcessedTime)\uff1b",
        "evidence": "average time = avg(ProcessedTime)\uff1b",
        "SQL": "SELECT CAST(SUM(T2.ProcessedTime) AS REAL) / COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/jeffdik/tachy.git'",
        "query": "SELECT CAST(SUM(T2.ProcessedTime) AS REAL) / COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/jeffdik/tachy.git'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "time",
            "needed",
            "for",
            "the",
            "solutions",
            "containing",
            "files",
            "within",
            "the",
            "repository",
            "whose",
            "url",
            "is",
            "\"https://github.com/jeffdik/tachy.git\"",
            "to",
            "be",
            "processd",
            "?",
            "average",
            "time",
            "=",
            "avg(ProcessedTime)\uff1b"
        ],
        "tc_original": [
            "solution.processedtime",
            "solution.repoid",
            "solution.id",
            "solution.path",
            "solution.wascompiled",
            "solution.*",
            "repo.url",
            "repo.processedtime",
            "repo.id",
            "repo.stars",
            "repo.forks",
            "repo.*",
            "methodparameter.id",
            "methodparameter.type",
            "methodparameter.methodid",
            "methodparameter.name",
            "methodparameter.*",
            "method.id",
            "method.name",
            "method.summary",
            "method.lang",
            "method.fullcomment",
            "method.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[solution]",
            "COLUMN:[solution].[processedtime]",
            "COLUMN:[solution].[repoid]",
            "COLUMN:[solution].[id]",
            "COLUMN:[solution].[path]",
            "COLUMN:[solution].[wascompiled]",
            "COLUMN:[solution].[*]",
            "TABLE:[repo]",
            "COLUMN:[repo].[url]",
            "COLUMN:[repo].[processedtime]",
            "COLUMN:[repo].[id]",
            "COLUMN:[repo].[stars]",
            "COLUMN:[repo].[forks]",
            "COLUMN:[repo].[*]",
            "TABLE:[methodparameter]",
            "COLUMN:[methodparameter].[id]",
            "COLUMN:[methodparameter].[type]",
            "COLUMN:[methodparameter].[methodid]",
            "COLUMN:[methodparameter].[name]",
            "COLUMN:[methodparameter].[*]",
            "TABLE:[method]",
            "COLUMN:[method].[id]",
            "COLUMN:[method].[name]",
            "COLUMN:[method].[summary]",
            "COLUMN:[method].[lang]",
            "COLUMN:[method].[fullcomment]",
            "COLUMN:[method].[*]"
        ],
        "schema": "'[method]':\n  '[fullcomment]': text\n  '[id]':\n    primary_key: true\n    type: integer\n  '[lang]': text\n  '[name]': text\n  '[summary]': text\n'[methodparameter]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[methodid]': text\n  '[name]': text\n  '[type]': text\n'[repo]':\n  '[forks]': integer\n  '[id]':\n    primary_key: true\n    type: integer\n  '[processedtime]': integer\n  '[stars]': integer\n  '[url]': text\n'[solution]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[path]': text\n  '[processedtime]': integer\n  '[repoid]': integer\n  '[wascompiled]': integer\n",
        "gold_links": {
            "average time": "COLUMN:[repo].[processedtime]",
            "solutions": "TABLE:[solution]",
            "files": "COLUMN:[solution].[path]",
            "repository": "TABLE:[repo]",
            "url": "COLUMN:[repo].[url]",
            "https://github.com/jeffdik/tachy.git": "VALUE:[repo].[url]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[method]",
                "[C1]": "[method].[fullcomment]",
                "[C2]": "[method].[id]",
                "[C3]": "[method].[lang]",
                "[C4]": "[method].[name]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[C6]": "[methodparameter].[id]",
                "[C7]": "[methodparameter].[methodid]",
                "[C8]": "[methodparameter].[name]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[C10]": "[repo].[forks]",
                "[C11]": "[repo].[id]",
                "[C12]": "[repo].[processedtime]",
                "[C13]": "[repo].[stars]",
                "[C14]": "[repo].[url]",
                "[T4]": "[solution]",
                "[C15]": "[solution].[id]",
                "[C16]": "[solution].[path]",
                "[C17]": "[solution].[processedtime]",
                "[C18]": "[solution].[repoid]",
                "[C19]": "[solution].[wascompiled]"
            },
            "to_symbol": {
                "[method]": "[T1]",
                "[method].[fullcomment]": "[C1]",
                "[method].[id]": "[C2]",
                "[method].[lang]": "[C3]",
                "[method].[name]": "[C4]",
                "[method].[summary]": "[C5]",
                "[methodparameter]": "[T2]",
                "[methodparameter].[id]": "[C6]",
                "[methodparameter].[methodid]": "[C7]",
                "[methodparameter].[name]": "[C8]",
                "[methodparameter].[type]": "[C9]",
                "[repo]": "[T3]",
                "[repo].[forks]": "[C10]",
                "[repo].[id]": "[C11]",
                "[repo].[processedtime]": "[C12]",
                "[repo].[stars]": "[C13]",
                "[repo].[url]": "[C14]",
                "[solution]": "[T4]",
                "[solution].[id]": "[C15]",
                "[solution].[path]": "[C16]",
                "[solution].[processedtime]": "[C17]",
                "[solution].[repoid]": "[C18]",
                "[solution].[wascompiled]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': integer\n  '[C14]': text\n'[T4]':\n  '[C15]':\n    primary_key: true\n    type: integer\n  '[C16]': text\n  '[C17]': integer\n  '[C18]': integer\n  '[C19]': integer\n",
            "reverse_dict": {
                "[T1]": "[method]",
                "[T1].[C1]": "[method].[fullcomment]",
                "[C1]": "[method].[fullcomment]",
                "[T1].[C2]": "[method].[id]",
                "[C2]": "[method].[id]",
                "[T1].[C3]": "[method].[lang]",
                "[C3]": "[method].[lang]",
                "[T1].[C4]": "[method].[name]",
                "[C4]": "[method].[name]",
                "[T1].[C5]": "[method].[summary]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[T2].[C6]": "[methodparameter].[id]",
                "[C6]": "[methodparameter].[id]",
                "[T2].[C7]": "[methodparameter].[methodid]",
                "[C7]": "[methodparameter].[methodid]",
                "[T2].[C8]": "[methodparameter].[name]",
                "[C8]": "[methodparameter].[name]",
                "[T2].[C9]": "[methodparameter].[type]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[T3].[C10]": "[repo].[forks]",
                "[C10]": "[repo].[forks]",
                "[T3].[C11]": "[repo].[id]",
                "[C11]": "[repo].[id]",
                "[T3].[C12]": "[repo].[processedtime]",
                "[C12]": "[repo].[processedtime]",
                "[T3].[C13]": "[repo].[stars]",
                "[C13]": "[repo].[stars]",
                "[T3].[C14]": "[repo].[url]",
                "[C14]": "[repo].[url]",
                "[T4]": "[solution]",
                "[T4].[C15]": "[solution].[id]",
                "[C15]": "[solution].[id]",
                "[T4].[C16]": "[solution].[path]",
                "[C16]": "[solution].[path]",
                "[T4].[C17]": "[solution].[processedtime]",
                "[C17]": "[solution].[processedtime]",
                "[T4].[C18]": "[solution].[repoid]",
                "[C18]": "[solution].[repoid]",
                "[T4].[C19]": "[solution].[wascompiled]",
                "[C19]": "[solution].[wascompiled]"
            },
            "question": "What is the average time needed for the solutions containing files within the repository whose [C14] is \"[V1]\" to be processd? average time = avg([C17])\uff1b; [V1] is a value of the column [C14]",
            "to_value": {
                "[V1]": "https://github.com/jeffdik/tachy.git"
            },
            "masked": 5,
            "masked_terms": [
                "https://github.com/jeffdik/tachy.git",
                "url",
                "processedtime",
                "solution",
                "repo"
            ],
            "sql": "SELECT AVG([T4].[C17]) FROM [T4] JOIN [T3] ON [T4].[C18] = [T3].[C11] WHERE [T3].[C14] = '[V1]'",
            "repaired_sql": "SELECT AVG([T4].[C17]) FROM [T4] JOIN [T3] ON [T4].[C19] = [T3].[C11] WHERE [T3].[C14] = '[V1]'"
        },
        "values": [
            "https://github.com/jeffdik/tachy.git"
        ],
        "value_links": {
            "https://github.com/jeffdik/tachy.git": "[repo].[url]"
        },
        "filtered_value_links": {
            "https://github.com/jeffdik/tachy.git": "[repo].[url]"
        },
        "schema_links": {
            "url": "COLUMN:[repo].[url]",
            "processedtime": "COLUMN:[solution].[processedtime]",
            "solution": "TABLE:[solution]",
            "repo": "TABLE:[repo]"
        },
        "filtered_schema_links": {
            "url": "COLUMN:[repo].[url]",
            "processedtime": "COLUMN:[solution].[processedtime]",
            "solution": "TABLE:[solution]",
            "repo": "TABLE:[repo]"
        },
        "attack": "What is the average time needed for the solutions containing files within the repository whose language is \"Python\" to be processed? average time = avg(process_time); \"Python\" is a value of the column language"
    },
    {
        "db_id": "codebase_comments",
        "question": "How many more followers in percentage are there for the repository used by solution ID 18 than solution ID19? followers refers to Forks; percentage = divide(SUBTRACT(Forks(Solution.ID = 18), Forks(Solution.ID = 19)), Forks(Solution.ID = 19))*100%",
        "evidence": "followers refers to Forks; percentage = divide(SUBTRACT(Forks(Solution.ID = 18), Forks(Solution.ID = 19)), Forks(Solution.ID = 19))*100%",
        "SQL": "SELECT CAST((SUM(CASE WHEN T2.Id = 18 THEN T1.Forks ELSE 0 END) - SUM(CASE WHEN T2.Id = 19 THEN T1.Forks ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T2.Id = 19 THEN T1.Forks ELSE 0 END) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId",
        "query": "SELECT CAST((SUM(CASE WHEN T2.Id = 18 THEN T1.Forks ELSE 0 END) - SUM(CASE WHEN T2.Id = 19 THEN T1.Forks ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN T2.Id = 19 THEN T1.Forks ELSE 0 END) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "more",
            "followers",
            "in",
            "percentage",
            "are",
            "there",
            "for",
            "the",
            "repository",
            "used",
            "by",
            "solution",
            "ID",
            "18",
            "than",
            "solution",
            "ID19",
            "?",
            "followers",
            "refers",
            "to",
            "Forks",
            ";",
            "percentage",
            "=",
            "divide(SUBTRACT(Forks(Solution.ID",
            "=",
            "18)",
            ",",
            "Forks(Solution.ID",
            "=",
            "19))",
            ",",
            "Forks(Solution.ID",
            "=",
            "19))*100%"
        ],
        "tc_original": [
            "solution.repoid",
            "solution.id",
            "solution.path",
            "solution.processedtime",
            "solution.wascompiled",
            "solution.*",
            "repo.id",
            "repo.forks",
            "repo.url",
            "repo.stars",
            "repo.watchers",
            "repo.*",
            "methodparameter.id",
            "methodparameter.methodid",
            "methodparameter.type",
            "methodparameter.name",
            "methodparameter.*",
            "method.id",
            "method.name",
            "method.summary",
            "method.lang",
            "method.fullcomment",
            "method.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[solution]",
            "COLUMN:[solution].[repoid]",
            "COLUMN:[solution].[id]",
            "COLUMN:[solution].[path]",
            "COLUMN:[solution].[processedtime]",
            "COLUMN:[solution].[wascompiled]",
            "COLUMN:[solution].[*]",
            "TABLE:[repo]",
            "COLUMN:[repo].[id]",
            "COLUMN:[repo].[forks]",
            "COLUMN:[repo].[url]",
            "COLUMN:[repo].[stars]",
            "COLUMN:[repo].[watchers]",
            "COLUMN:[repo].[*]",
            "TABLE:[methodparameter]",
            "COLUMN:[methodparameter].[id]",
            "COLUMN:[methodparameter].[methodid]",
            "COLUMN:[methodparameter].[type]",
            "COLUMN:[methodparameter].[name]",
            "COLUMN:[methodparameter].[*]",
            "TABLE:[method]",
            "COLUMN:[method].[id]",
            "COLUMN:[method].[name]",
            "COLUMN:[method].[summary]",
            "COLUMN:[method].[lang]",
            "COLUMN:[method].[fullcomment]",
            "COLUMN:[method].[*]"
        ],
        "schema": "'[method]':\n  '[fullcomment]': text\n  '[id]':\n    primary_key: true\n    type: integer\n  '[lang]': text\n  '[name]': text\n  '[summary]': text\n'[methodparameter]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[methodid]': text\n  '[name]': text\n  '[type]': text\n'[repo]':\n  '[forks]': integer\n  '[id]':\n    primary_key: true\n    type: integer\n  '[stars]': integer\n  '[url]': text\n  '[watchers]': integer\n'[solution]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[path]': text\n  '[processedtime]': integer\n  '[repoid]': integer\n  '[wascompiled]': integer\n",
        "gold_links": {
            "followers": "COLUMN:[repo].[forks]",
            "repository": "TABLE:[repo]",
            "solution ID 18": "VALUE:[solution].[id]",
            "solution ID 19": "VALUE:[solution].[id]",
            "percentage": "COLUMN:[repo].[forks]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[method]",
                "[C1]": "[method].[fullcomment]",
                "[C2]": "[method].[id]",
                "[C3]": "[method].[lang]",
                "[C4]": "[method].[name]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[C6]": "[methodparameter].[id]",
                "[C7]": "[methodparameter].[methodid]",
                "[C8]": "[methodparameter].[name]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[C10]": "[repo].[forks]",
                "[C11]": "[repo].[id]",
                "[C12]": "[repo].[stars]",
                "[C13]": "[repo].[url]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[C15]": "[solution].[id]",
                "[C16]": "[solution].[path]",
                "[C17]": "[solution].[processedtime]",
                "[C18]": "[solution].[repoid]",
                "[C19]": "[solution].[wascompiled]"
            },
            "to_symbol": {
                "[method]": "[T1]",
                "[method].[fullcomment]": "[C1]",
                "[method].[id]": "[C2]",
                "[method].[lang]": "[C3]",
                "[method].[name]": "[C4]",
                "[method].[summary]": "[C5]",
                "[methodparameter]": "[T2]",
                "[methodparameter].[id]": "[C6]",
                "[methodparameter].[methodid]": "[C7]",
                "[methodparameter].[name]": "[C8]",
                "[methodparameter].[type]": "[C9]",
                "[repo]": "[T3]",
                "[repo].[forks]": "[C10]",
                "[repo].[id]": "[C11]",
                "[repo].[stars]": "[C12]",
                "[repo].[url]": "[C13]",
                "[repo].[watchers]": "[C14]",
                "[solution]": "[T4]",
                "[solution].[id]": "[C15]",
                "[solution].[path]": "[C16]",
                "[solution].[processedtime]": "[C17]",
                "[solution].[repoid]": "[C18]",
                "[solution].[wascompiled]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': text\n  '[C14]': integer\n'[T4]':\n  '[C15]':\n    primary_key: true\n    type: integer\n  '[C16]': text\n  '[C17]': integer\n  '[C18]': integer\n  '[C19]': integer\n",
            "reverse_dict": {
                "[T1]": "[method]",
                "[T1].[C1]": "[method].[fullcomment]",
                "[C1]": "[method].[fullcomment]",
                "[T1].[C2]": "[method].[id]",
                "[C2]": "[method].[id]",
                "[T1].[C3]": "[method].[lang]",
                "[C3]": "[method].[lang]",
                "[T1].[C4]": "[method].[name]",
                "[C4]": "[method].[name]",
                "[T1].[C5]": "[method].[summary]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[T2].[C6]": "[methodparameter].[id]",
                "[C6]": "[methodparameter].[id]",
                "[T2].[C7]": "[methodparameter].[methodid]",
                "[C7]": "[methodparameter].[methodid]",
                "[T2].[C8]": "[methodparameter].[name]",
                "[C8]": "[methodparameter].[name]",
                "[T2].[C9]": "[methodparameter].[type]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[T3].[C10]": "[repo].[forks]",
                "[C10]": "[repo].[forks]",
                "[T3].[C11]": "[repo].[id]",
                "[C11]": "[repo].[id]",
                "[T3].[C12]": "[repo].[stars]",
                "[C12]": "[repo].[stars]",
                "[T3].[C13]": "[repo].[url]",
                "[C13]": "[repo].[url]",
                "[T3].[C14]": "[repo].[watchers]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[T4].[C15]": "[solution].[id]",
                "[C15]": "[solution].[id]",
                "[T4].[C16]": "[solution].[path]",
                "[C16]": "[solution].[path]",
                "[T4].[C17]": "[solution].[processedtime]",
                "[C17]": "[solution].[processedtime]",
                "[T4].[C18]": "[solution].[repoid]",
                "[C18]": "[solution].[repoid]",
                "[T4].[C19]": "[solution].[wascompiled]",
                "[C19]": "[solution].[wascompiled]"
            },
            "question": "How many more followers in percentage are there for the repository used by solution ID [V1] than solution ID19? followers refers to [C10]; percentage = divide(SUBTRACT([C10](Solution.ID = [V1]), [C10](Solution.ID = [V2])), [C10](Solution.ID = [V2]))*100%; [V1] is a value of the column [C11]; [V2] is a value of the column [C11]",
            "to_value": {
                "[V1]": "18",
                "[V2]": "19"
            },
            "masked": 3,
            "masked_terms": [
                "18",
                "19",
                "forks"
            ],
            "sql": "SELECT ((CAST((SELECT [C10] FROM [T3] WHERE [C11] = '[V1]') AS FLOAT) - CAST((SELECT [C10] FROM [T3] WHERE [C11] = '19') AS FLOAT)) / CAST((SELECT [C10] FROM [T3] WHERE [C11] = '19') AS FLOAT)) * 100 AS [percentage_difference]",
            "repaired_sql": "SELECT (CAST((t1.[C10] - t2.[C10]) AS FLOAT) / t2.[C10]) * 100 AS percentage_difference FROM [T3] AS t1, [T3] AS t2 WHERE t1.[C11] = [V1] AND t2.[C11] = 19"
        },
        "values": [
            "18",
            "19"
        ],
        "value_links": {
            "18": "[repo].[id]",
            "19": "[repo].[id]"
        },
        "filtered_value_links": {
            "18": "[repo].[id]",
            "19": "[repo].[id]"
        },
        "schema_links": {
            "forks": "COLUMN:[repo].[forks]"
        },
        "filtered_schema_links": {
            "forks": "COLUMN:[repo].[forks]"
        },
        "attack": "How many more followers in percentage are there for the repository used by solution ID 17 than solution ID19? followers refers to followers; percentage = divide(SUBTRACT(followers(Solution.ID = 17), followers(Solution.ID = 19)), followers(Solution.ID = 19))*100%; 17 is a value of the column ID; 19 is a value of the column ID"
    },
    {
        "db_id": "codebase_comments",
        "question": "Give the number of watchers that the repository of the solution No. 338082 have. number of watchers refers to Watchers; solution number refers to Solution.Id;",
        "evidence": "number of watchers refers to Watchers; solution number refers to Solution.Id;",
        "SQL": "SELECT T1.Watchers FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Id = 338082",
        "query": "SELECT T1.Watchers FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Id = 338082",
        "evidence_added": true,
        "question_toks": [
            "Give",
            "the",
            "number",
            "of",
            "watchers",
            "that",
            "the",
            "repository",
            "of",
            "the",
            "solution",
            "No",
            ".",
            "338082",
            "have",
            ".",
            "number",
            "of",
            "watchers",
            "refers",
            "to",
            "Watchers",
            ";",
            "solution",
            "number",
            "refers",
            "to",
            "Solution.Id",
            ";"
        ],
        "tc_original": [
            "repo.watchers",
            "repo.id",
            "repo.url",
            "repo.stars",
            "repo.forks",
            "repo.*",
            "solution.repoid",
            "solution.id",
            "solution.path",
            "solution.processedtime",
            "solution.wascompiled",
            "solution.*",
            "methodparameter.id",
            "methodparameter.type",
            "methodparameter.methodid",
            "methodparameter.name",
            "methodparameter.*",
            "method.id",
            "method.name",
            "method.summary",
            "method.fullcomment",
            "method.apicalls",
            "method.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[repo]",
            "COLUMN:[repo].[watchers]",
            "COLUMN:[repo].[id]",
            "COLUMN:[repo].[url]",
            "COLUMN:[repo].[stars]",
            "COLUMN:[repo].[forks]",
            "COLUMN:[repo].[*]",
            "TABLE:[solution]",
            "COLUMN:[solution].[repoid]",
            "COLUMN:[solution].[id]",
            "COLUMN:[solution].[path]",
            "COLUMN:[solution].[processedtime]",
            "COLUMN:[solution].[wascompiled]",
            "COLUMN:[solution].[*]",
            "TABLE:[methodparameter]",
            "COLUMN:[methodparameter].[id]",
            "COLUMN:[methodparameter].[type]",
            "COLUMN:[methodparameter].[methodid]",
            "COLUMN:[methodparameter].[name]",
            "COLUMN:[methodparameter].[*]",
            "TABLE:[method]",
            "COLUMN:[method].[id]",
            "COLUMN:[method].[name]",
            "COLUMN:[method].[summary]",
            "COLUMN:[method].[fullcomment]",
            "COLUMN:[method].[apicalls]",
            "COLUMN:[method].[*]"
        ],
        "schema": "'[method]':\n  '[apicalls]': text\n  '[fullcomment]': text\n  '[id]':\n    primary_key: true\n    type: integer\n  '[name]': text\n  '[summary]': text\n'[methodparameter]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[methodid]': text\n  '[name]': text\n  '[type]': text\n'[repo]':\n  '[forks]': integer\n  '[id]':\n    primary_key: true\n    type: integer\n  '[stars]': integer\n  '[url]': text\n  '[watchers]': integer\n'[solution]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[path]': text\n  '[processedtime]': integer\n  '[repoid]': integer\n  '[wascompiled]': integer\n",
        "gold_links": {
            "number of watchers": "COLUMN:[repo].[watchers]",
            "watchers": "COLUMN:[repo].[watchers]",
            "repository": "TABLE:[repo]",
            "solution number": "COLUMN:[solution].[id]",
            "338082": "VALUE:[solution].[id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[method]",
                "[C1]": "[method].[apicalls]",
                "[C2]": "[method].[fullcomment]",
                "[C3]": "[method].[id]",
                "[C4]": "[method].[name]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[C6]": "[methodparameter].[id]",
                "[C7]": "[methodparameter].[methodid]",
                "[C8]": "[methodparameter].[name]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[C10]": "[repo].[forks]",
                "[C11]": "[repo].[id]",
                "[C12]": "[repo].[stars]",
                "[C13]": "[repo].[url]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[C15]": "[solution].[id]",
                "[C16]": "[solution].[path]",
                "[C17]": "[solution].[processedtime]",
                "[C18]": "[solution].[repoid]",
                "[C19]": "[solution].[wascompiled]"
            },
            "to_symbol": {
                "[method]": "[T1]",
                "[method].[apicalls]": "[C1]",
                "[method].[fullcomment]": "[C2]",
                "[method].[id]": "[C3]",
                "[method].[name]": "[C4]",
                "[method].[summary]": "[C5]",
                "[methodparameter]": "[T2]",
                "[methodparameter].[id]": "[C6]",
                "[methodparameter].[methodid]": "[C7]",
                "[methodparameter].[name]": "[C8]",
                "[methodparameter].[type]": "[C9]",
                "[repo]": "[T3]",
                "[repo].[forks]": "[C10]",
                "[repo].[id]": "[C11]",
                "[repo].[stars]": "[C12]",
                "[repo].[url]": "[C13]",
                "[repo].[watchers]": "[C14]",
                "[solution]": "[T4]",
                "[solution].[id]": "[C15]",
                "[solution].[path]": "[C16]",
                "[solution].[processedtime]": "[C17]",
                "[solution].[repoid]": "[C18]",
                "[solution].[wascompiled]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': text\n  '[C14]': integer\n'[T4]':\n  '[C15]':\n    primary_key: true\n    type: integer\n  '[C16]': text\n  '[C17]': integer\n  '[C18]': integer\n  '[C19]': integer\n",
            "reverse_dict": {
                "[T1]": "[method]",
                "[T1].[C1]": "[method].[apicalls]",
                "[C1]": "[method].[apicalls]",
                "[T1].[C2]": "[method].[fullcomment]",
                "[C2]": "[method].[fullcomment]",
                "[T1].[C3]": "[method].[id]",
                "[C3]": "[method].[id]",
                "[T1].[C4]": "[method].[name]",
                "[C4]": "[method].[name]",
                "[T1].[C5]": "[method].[summary]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[T2].[C6]": "[methodparameter].[id]",
                "[C6]": "[methodparameter].[id]",
                "[T2].[C7]": "[methodparameter].[methodid]",
                "[C7]": "[methodparameter].[methodid]",
                "[T2].[C8]": "[methodparameter].[name]",
                "[C8]": "[methodparameter].[name]",
                "[T2].[C9]": "[methodparameter].[type]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[T3].[C10]": "[repo].[forks]",
                "[C10]": "[repo].[forks]",
                "[T3].[C11]": "[repo].[id]",
                "[C11]": "[repo].[id]",
                "[T3].[C12]": "[repo].[stars]",
                "[C12]": "[repo].[stars]",
                "[T3].[C13]": "[repo].[url]",
                "[C13]": "[repo].[url]",
                "[T3].[C14]": "[repo].[watchers]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[T4].[C15]": "[solution].[id]",
                "[C15]": "[solution].[id]",
                "[T4].[C16]": "[solution].[path]",
                "[C16]": "[solution].[path]",
                "[T4].[C17]": "[solution].[processedtime]",
                "[C17]": "[solution].[processedtime]",
                "[T4].[C18]": "[solution].[repoid]",
                "[C18]": "[solution].[repoid]",
                "[T4].[C19]": "[solution].[wascompiled]",
                "[C19]": "[solution].[wascompiled]"
            },
            "question": "Give the number of [V2] that the repository of the solution No. 338082 have. number of [V2] refers to [V2]; solution number refers to [V3];; [V1] is a value of the column [C18]; [V2] is a value of the column [C14]; [V3] is a value of the column [C15]",
            "to_value": {
                "[V1]": "No. 338282",
                "[V2]": "Watchers",
                "[V3]": "Solution.Id"
            },
            "masked": 7,
            "masked_terms": [
                "No. 338282",
                "Watchers",
                "Solution.Id",
                "watchers",
                "repo",
                "id",
                "Solution.Id"
            ],
            "sql": "SELECT COUNT([T3].[C14]) FROM [T3] JOIN [T4] ON [T3].[C10] = [T4].[C15] WHERE [T4].[C15] = 338082",
            "repaired_sql": "SELECT COUNT(*) FROM [T3] WHERE [C14] = '[V2]' AND [C11] IN (SELECT [C19] FROM [T4] WHERE [C15] = 338082)"
        },
        "values": [
            "No. 338282",
            "Watchers",
            "Solution.Id"
        ],
        "value_links": {
            "No. 338282": "[solution].[repoid]",
            "Watchers": "[repo].[watchers]",
            "Solution.Id": "[solution].[id]"
        },
        "filtered_value_links": {
            "No. 338282": "[solution].[repoid]",
            "Watchers": "[repo].[watchers]",
            "Solution.Id": "[solution].[id]"
        },
        "schema_links": {
            "watchers": "COLUMN:[repo].[watchers]",
            "repo": "TABLE:[repo]",
            "id": "COLUMN:[solution].[id]",
            "Solution.Id": "COLUMN:[solution].[id]"
        },
        "filtered_schema_links": {
            "watchers": "COLUMN:[repo].[watchers]",
            "repo": "TABLE:[repo]",
            "id": "COLUMN:[solution].[id]",
            "Solution.Id": "COLUMN:[solution].[id]"
        },
        "attack": "Give the number of comments that the repository of the solution No. 338082 have. number of comments refers to comments; solution number refers to 338082; 338082 is a value of the column solution_no; comments is a value of the column num_comments; solution_no is a value of the column solution_no"
    },
    {
        "db_id": "codebase_comments",
        "question": "For the repository which got '189' Stars, how many solutions which needs to be compiled does it contain? repository refers to Repository.Id; solution needs to be compiled refers to WasCompiled = 0;",
        "evidence": "repository refers to Repository.Id; solution needs to be compiled refers to WasCompiled = 0;",
        "SQL": "SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Stars = 189 AND T2.WasCompiled = 0",
        "query": "SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Stars = 189 AND T2.WasCompiled = 0",
        "evidence_added": true,
        "question_toks": [
            "For",
            "the",
            "repository",
            "which",
            "got",
            "'189'",
            "Stars",
            ",",
            "how",
            "many",
            "solutions",
            "which",
            "needs",
            "to",
            "be",
            "compiled",
            "does",
            "it",
            "contain",
            "?",
            "repository",
            "refers",
            "to",
            "Repository.Id",
            ";",
            "solution",
            "needs",
            "to",
            "be",
            "compiled",
            "refers",
            "to",
            "WasCompiled",
            "=",
            "0",
            ";"
        ],
        "tc_original": [
            "repo.stars",
            "repo.id",
            "repo.url",
            "repo.forks",
            "repo.watchers",
            "repo.*",
            "solution.repoid",
            "solution.wascompiled",
            "solution.id",
            "solution.path",
            "solution.processedtime",
            "solution.*",
            "methodparameter.id",
            "methodparameter.type",
            "methodparameter.name",
            "methodparameter.methodid",
            "methodparameter.*",
            "method.id",
            "method.name",
            "method.summary",
            "method.lang",
            "method.fullcomment",
            "method.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[repo]",
            "COLUMN:[repo].[stars]",
            "COLUMN:[repo].[id]",
            "COLUMN:[repo].[url]",
            "COLUMN:[repo].[forks]",
            "COLUMN:[repo].[watchers]",
            "COLUMN:[repo].[*]",
            "TABLE:[solution]",
            "COLUMN:[solution].[repoid]",
            "COLUMN:[solution].[wascompiled]",
            "COLUMN:[solution].[id]",
            "COLUMN:[solution].[path]",
            "COLUMN:[solution].[processedtime]",
            "COLUMN:[solution].[*]",
            "TABLE:[methodparameter]",
            "COLUMN:[methodparameter].[id]",
            "COLUMN:[methodparameter].[type]",
            "COLUMN:[methodparameter].[name]",
            "COLUMN:[methodparameter].[methodid]",
            "COLUMN:[methodparameter].[*]",
            "TABLE:[method]",
            "COLUMN:[method].[id]",
            "COLUMN:[method].[name]",
            "COLUMN:[method].[summary]",
            "COLUMN:[method].[lang]",
            "COLUMN:[method].[fullcomment]",
            "COLUMN:[method].[*]"
        ],
        "schema": "'[method]':\n  '[fullcomment]': text\n  '[id]':\n    primary_key: true\n    type: integer\n  '[lang]': text\n  '[name]': text\n  '[summary]': text\n'[methodparameter]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[methodid]': text\n  '[name]': text\n  '[type]': text\n'[repo]':\n  '[forks]': integer\n  '[id]':\n    primary_key: true\n    type: integer\n  '[stars]': integer\n  '[url]': text\n  '[watchers]': integer\n'[solution]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[path]': text\n  '[processedtime]': integer\n  '[repoid]': integer\n  '[wascompiled]': integer\n",
        "gold_links": {
            "repository": "COLUMN:[repo].[id]",
            "stars": "COLUMN:[repo].[stars]",
            "189": "VALUE:[repo].[stars]",
            "solutions": "TABLE:[solution]",
            "compiled": "COLUMN:[solution].[wascompiled]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[method]",
                "[C1]": "[method].[fullcomment]",
                "[C2]": "[method].[id]",
                "[C3]": "[method].[lang]",
                "[C4]": "[method].[name]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[C6]": "[methodparameter].[id]",
                "[C7]": "[methodparameter].[methodid]",
                "[C8]": "[methodparameter].[name]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[C10]": "[repo].[forks]",
                "[C11]": "[repo].[id]",
                "[C12]": "[repo].[stars]",
                "[C13]": "[repo].[url]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[C15]": "[solution].[id]",
                "[C16]": "[solution].[path]",
                "[C17]": "[solution].[processedtime]",
                "[C18]": "[solution].[repoid]",
                "[C19]": "[solution].[wascompiled]"
            },
            "to_symbol": {
                "[method]": "[T1]",
                "[method].[fullcomment]": "[C1]",
                "[method].[id]": "[C2]",
                "[method].[lang]": "[C3]",
                "[method].[name]": "[C4]",
                "[method].[summary]": "[C5]",
                "[methodparameter]": "[T2]",
                "[methodparameter].[id]": "[C6]",
                "[methodparameter].[methodid]": "[C7]",
                "[methodparameter].[name]": "[C8]",
                "[methodparameter].[type]": "[C9]",
                "[repo]": "[T3]",
                "[repo].[forks]": "[C10]",
                "[repo].[id]": "[C11]",
                "[repo].[stars]": "[C12]",
                "[repo].[url]": "[C13]",
                "[repo].[watchers]": "[C14]",
                "[solution]": "[T4]",
                "[solution].[id]": "[C15]",
                "[solution].[path]": "[C16]",
                "[solution].[processedtime]": "[C17]",
                "[solution].[repoid]": "[C18]",
                "[solution].[wascompiled]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': text\n  '[C14]': integer\n'[T4]':\n  '[C15]':\n    primary_key: true\n    type: integer\n  '[C16]': text\n  '[C17]': integer\n  '[C18]': integer\n  '[C19]': integer\n",
            "reverse_dict": {
                "[T1]": "[method]",
                "[T1].[C1]": "[method].[fullcomment]",
                "[C1]": "[method].[fullcomment]",
                "[T1].[C2]": "[method].[id]",
                "[C2]": "[method].[id]",
                "[T1].[C3]": "[method].[lang]",
                "[C3]": "[method].[lang]",
                "[T1].[C4]": "[method].[name]",
                "[C4]": "[method].[name]",
                "[T1].[C5]": "[method].[summary]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[T2].[C6]": "[methodparameter].[id]",
                "[C6]": "[methodparameter].[id]",
                "[T2].[C7]": "[methodparameter].[methodid]",
                "[C7]": "[methodparameter].[methodid]",
                "[T2].[C8]": "[methodparameter].[name]",
                "[C8]": "[methodparameter].[name]",
                "[T2].[C9]": "[methodparameter].[type]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[T3].[C10]": "[repo].[forks]",
                "[C10]": "[repo].[forks]",
                "[T3].[C11]": "[repo].[id]",
                "[C11]": "[repo].[id]",
                "[T3].[C12]": "[repo].[stars]",
                "[C12]": "[repo].[stars]",
                "[T3].[C13]": "[repo].[url]",
                "[C13]": "[repo].[url]",
                "[T3].[C14]": "[repo].[watchers]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[T4].[C15]": "[solution].[id]",
                "[C15]": "[solution].[id]",
                "[T4].[C16]": "[solution].[path]",
                "[C16]": "[solution].[path]",
                "[T4].[C17]": "[solution].[processedtime]",
                "[C17]": "[solution].[processedtime]",
                "[T4].[C18]": "[solution].[repoid]",
                "[C18]": "[solution].[repoid]",
                "[T4].[C19]": "[solution].[wascompiled]",
                "[C19]": "[solution].[wascompiled]"
            },
            "question": "For the repository which got '[V1]' [C12], how many [T4] which needs to be [C19] does it contain? repository refers to Repository.Id; solution needs to be [C19] refers to WasCompiled = 0;; [V1] is a value of the column [C12]",
            "to_value": {
                "[V1]": "189"
            },
            "masked": 5,
            "masked_terms": [
                "189",
                "stars",
                "repo",
                "Compiled",
                "solutions"
            ],
            "sql": "SELECT COUNT(*) FROM [T4] WHERE [C18] = (SELECT [T3].[C11] FROM [T3] WHERE [T3].[C12] = '[V1]') AND [C19] = 0",
            "repaired_sql": "SELECT COUNT(*) FROM [T4] JOIN [T3] ON [T4].[C18] = [T3].[C11] WHERE [T3].[C12] = '[V1]' AND [T4].[C19] = 0"
        },
        "values": [
            "189"
        ],
        "value_links": {
            "189": "[repo].[stars]"
        },
        "filtered_value_links": {
            "189": "[repo].[stars]"
        },
        "schema_links": {
            "stars": "COLUMN:[repo].[stars]",
            "repo": "TABLE:[repo]",
            "Compiled": "COLUMN:[solution].[wascompiled]",
            "solutions": "TABLE:[solution]"
        },
        "filtered_schema_links": {
            "stars": "COLUMN:[repo].[stars]",
            "repo": "TABLE:[repo]",
            "Compiled": "COLUMN:[solution].[wascompiled]",
            "solutions": "TABLE:[solution]"
        },
        "attack": "For the repository which got '0' Repository.Id, how many Solution which needs to be WasCompiled does it contain?"
    },
    {
        "db_id": "codebase_comments",
        "question": "How many solutions are in \"https://github.com/derickbailey/presentations-and-training.git\"? solutions refers to Solution.Id; https://github.com/derickbailey/presentations-and-training.git refers to Url; Url; = 'https://github.com/derickbailey/presentations-and-training.git';",
        "evidence": "solutions refers to Solution.Id; https://github.com/derickbailey/presentations-and-training.git refers to Url; Url; = 'https://github.com/derickbailey/presentations-and-training.git';",
        "SQL": "SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/derickbailey/presentations-and-training.git'",
        "query": "SELECT COUNT(T2.RepoId) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Url = 'https://github.com/derickbailey/presentations-and-training.git'",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "solutions",
            "are",
            "in",
            "\"https://github.com/derickbailey/presentations-and-training.git\"",
            "?",
            "solutions",
            "refers",
            "to",
            "Solution.Id",
            ";",
            "https://github.com/derickbailey/presentations-and-training.git",
            "refers",
            "to",
            "Url",
            ";",
            "Url",
            ";",
            "=",
            "'https://github.com/derickbailey/presentations-and-training.git'",
            ";"
        ],
        "tc_original": [
            "solution.id",
            "solution.repoid",
            "solution.path",
            "solution.processedtime",
            "solution.wascompiled",
            "solution.*",
            "repo.id",
            "repo.url",
            "repo.stars",
            "repo.forks",
            "repo.watchers",
            "repo.*",
            "method.solutionid",
            "method.id",
            "method.name",
            "method.summary",
            "method.lang",
            "method.*",
            "methodparameter.id",
            "methodparameter.type",
            "methodparameter.name",
            "methodparameter.methodid",
            "methodparameter.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[solution]",
            "COLUMN:[solution].[id]",
            "COLUMN:[solution].[repoid]",
            "COLUMN:[solution].[path]",
            "COLUMN:[solution].[processedtime]",
            "COLUMN:[solution].[wascompiled]",
            "COLUMN:[solution].[*]",
            "TABLE:[repo]",
            "COLUMN:[repo].[id]",
            "COLUMN:[repo].[url]",
            "COLUMN:[repo].[stars]",
            "COLUMN:[repo].[forks]",
            "COLUMN:[repo].[watchers]",
            "COLUMN:[repo].[*]",
            "TABLE:[method]",
            "COLUMN:[method].[solutionid]",
            "COLUMN:[method].[id]",
            "COLUMN:[method].[name]",
            "COLUMN:[method].[summary]",
            "COLUMN:[method].[lang]",
            "COLUMN:[method].[*]",
            "TABLE:[methodparameter]",
            "COLUMN:[methodparameter].[id]",
            "COLUMN:[methodparameter].[type]",
            "COLUMN:[methodparameter].[name]",
            "COLUMN:[methodparameter].[methodid]",
            "COLUMN:[methodparameter].[*]"
        ],
        "schema": "'[method]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[lang]': text\n  '[name]': text\n  '[solutionid]': integer\n  '[summary]': text\n'[methodparameter]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[methodid]': text\n  '[name]': text\n  '[type]': text\n'[repo]':\n  '[forks]': integer\n  '[id]':\n    primary_key: true\n    type: integer\n  '[stars]': integer\n  '[url]': text\n  '[watchers]': integer\n'[solution]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[path]': text\n  '[processedtime]': integer\n  '[repoid]': integer\n  '[wascompiled]': integer\n",
        "gold_links": {
            "solutions": "TABLE:[solution]",
            "Solution.Id": "COLUMN:[solution].[id]",
            "Url": "COLUMN:[repo].[url]",
            "https://github.com/derickbailey/presentations-and-training.git": "VALUE:[repo].[url]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[method]",
                "[C1]": "[method].[id]",
                "[C2]": "[method].[lang]",
                "[C3]": "[method].[name]",
                "[C4]": "[method].[solutionid]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[C6]": "[methodparameter].[id]",
                "[C7]": "[methodparameter].[methodid]",
                "[C8]": "[methodparameter].[name]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[C10]": "[repo].[forks]",
                "[C11]": "[repo].[id]",
                "[C12]": "[repo].[stars]",
                "[C13]": "[repo].[url]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[C15]": "[solution].[id]",
                "[C16]": "[solution].[path]",
                "[C17]": "[solution].[processedtime]",
                "[C18]": "[solution].[repoid]",
                "[C19]": "[solution].[wascompiled]"
            },
            "to_symbol": {
                "[method]": "[T1]",
                "[method].[id]": "[C1]",
                "[method].[lang]": "[C2]",
                "[method].[name]": "[C3]",
                "[method].[solutionid]": "[C4]",
                "[method].[summary]": "[C5]",
                "[methodparameter]": "[T2]",
                "[methodparameter].[id]": "[C6]",
                "[methodparameter].[methodid]": "[C7]",
                "[methodparameter].[name]": "[C8]",
                "[methodparameter].[type]": "[C9]",
                "[repo]": "[T3]",
                "[repo].[forks]": "[C10]",
                "[repo].[id]": "[C11]",
                "[repo].[stars]": "[C12]",
                "[repo].[url]": "[C13]",
                "[repo].[watchers]": "[C14]",
                "[solution]": "[T4]",
                "[solution].[id]": "[C15]",
                "[solution].[path]": "[C16]",
                "[solution].[processedtime]": "[C17]",
                "[solution].[repoid]": "[C18]",
                "[solution].[wascompiled]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': integer\n  '[C5]': text\n'[T2]':\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': text\n  '[C14]': integer\n'[T4]':\n  '[C15]':\n    primary_key: true\n    type: integer\n  '[C16]': text\n  '[C17]': integer\n  '[C18]': integer\n  '[C19]': integer\n",
            "reverse_dict": {
                "[T1]": "[method]",
                "[T1].[C1]": "[method].[id]",
                "[C1]": "[method].[id]",
                "[T1].[C2]": "[method].[lang]",
                "[C2]": "[method].[lang]",
                "[T1].[C3]": "[method].[name]",
                "[C3]": "[method].[name]",
                "[T1].[C4]": "[method].[solutionid]",
                "[C4]": "[method].[solutionid]",
                "[T1].[C5]": "[method].[summary]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[T2].[C6]": "[methodparameter].[id]",
                "[C6]": "[methodparameter].[id]",
                "[T2].[C7]": "[methodparameter].[methodid]",
                "[C7]": "[methodparameter].[methodid]",
                "[T2].[C8]": "[methodparameter].[name]",
                "[C8]": "[methodparameter].[name]",
                "[T2].[C9]": "[methodparameter].[type]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[T3].[C10]": "[repo].[forks]",
                "[C10]": "[repo].[forks]",
                "[T3].[C11]": "[repo].[id]",
                "[C11]": "[repo].[id]",
                "[T3].[C12]": "[repo].[stars]",
                "[C12]": "[repo].[stars]",
                "[T3].[C13]": "[repo].[url]",
                "[C13]": "[repo].[url]",
                "[T3].[C14]": "[repo].[watchers]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[T4].[C15]": "[solution].[id]",
                "[C15]": "[solution].[id]",
                "[T4].[C16]": "[solution].[path]",
                "[C16]": "[solution].[path]",
                "[T4].[C17]": "[solution].[processedtime]",
                "[C17]": "[solution].[processedtime]",
                "[T4].[C18]": "[solution].[repoid]",
                "[C18]": "[solution].[repoid]",
                "[T4].[C19]": "[solution].[wascompiled]",
                "[C19]": "[solution].[wascompiled]"
            },
            "question": "How many [T4] are in \"[V1]\"? [T4] refers to Solution.[C15]; [V1] refers to [C13]; [C13]; = '[V1]';; [V1] is a value of the column [C16]",
            "to_value": {
                "[V1]": "https://github.com/derickbailey/presentations-and-training.git"
            },
            "masked": 4,
            "masked_terms": [
                "https://github.com/derickbailey/presentations-and-training.git",
                "solutions",
                "id",
                "url"
            ],
            "sql": "SELECT COUNT([T4].[C15]) FROM [T4] WHERE [T4].[C16] = '[V1]'",
            "repaired_sql": "SELECT COUNT([T4].[C15]) FROM [T4] WHERE [T4].[C16] = '[V1]'"
        },
        "values": [
            "https://github.com/derickbailey/presentations-and-training.git"
        ],
        "value_links": {
            "https://github.com/derickbailey/presentations-and-training.git": "[solution].[path]"
        },
        "filtered_value_links": {
            "https://github.com/derickbailey/presentations-and-training.git": "[solution].[path]"
        },
        "schema_links": {
            "solutions": "TABLE:[solution]",
            "id": "COLUMN:[solution].[id]",
            "url": "COLUMN:[repo].[url]"
        },
        "filtered_schema_links": {
            "solutions": "TABLE:[solution]",
            "id": "COLUMN:[solution].[id]",
            "url": "COLUMN:[repo].[url]"
        },
        "attack": "How many solutions are in \"Physics\"?"
    },
    {
        "db_id": "codebase_comments",
        "question": "What is the total processed time of all solutions from the repository with the most forks? total processed time = AVG(ProcessedTime where MAX(COUNT(Forks))); repository with the most forks refers to MAX(COUNT(Forks));",
        "evidence": "total processed time = AVG(ProcessedTime where MAX(COUNT(Forks))); repository with the most forks refers to MAX(COUNT(Forks));",
        "SQL": "SELECT SUM(T2.ProcessedTime) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Forks = ( SELECT MAX(Forks) FROM Repo )",
        "query": "SELECT SUM(T2.ProcessedTime) FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Forks = ( SELECT MAX(Forks) FROM Repo )",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "total",
            "processed",
            "time",
            "of",
            "all",
            "solutions",
            "from",
            "the",
            "repository",
            "with",
            "the",
            "most",
            "forks",
            "?",
            "total",
            "processed",
            "time",
            "=",
            "AVG(ProcessedTime",
            "where",
            "MAX(COUNT(Forks)))",
            ";",
            "repository",
            "with",
            "the",
            "most",
            "forks",
            "refers",
            "to",
            "MAX(COUNT(Forks))",
            ";"
        ],
        "tc_original": [
            "solution.processedtime",
            "solution.repoid",
            "solution.id",
            "solution.path",
            "solution.wascompiled",
            "solution.*",
            "repo.forks",
            "repo.processedtime",
            "repo.id",
            "repo.url",
            "repo.stars",
            "repo.*",
            "methodparameter.id",
            "methodparameter.type",
            "methodparameter.methodid",
            "methodparameter.name",
            "methodparameter.*",
            "method.id",
            "method.name",
            "method.summary",
            "method.lang",
            "method.fullcomment",
            "method.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[solution]",
            "COLUMN:[solution].[processedtime]",
            "COLUMN:[solution].[repoid]",
            "COLUMN:[solution].[id]",
            "COLUMN:[solution].[path]",
            "COLUMN:[solution].[wascompiled]",
            "COLUMN:[solution].[*]",
            "TABLE:[repo]",
            "COLUMN:[repo].[forks]",
            "COLUMN:[repo].[processedtime]",
            "COLUMN:[repo].[id]",
            "COLUMN:[repo].[url]",
            "COLUMN:[repo].[stars]",
            "COLUMN:[repo].[*]",
            "TABLE:[methodparameter]",
            "COLUMN:[methodparameter].[id]",
            "COLUMN:[methodparameter].[type]",
            "COLUMN:[methodparameter].[methodid]",
            "COLUMN:[methodparameter].[name]",
            "COLUMN:[methodparameter].[*]",
            "TABLE:[method]",
            "COLUMN:[method].[id]",
            "COLUMN:[method].[name]",
            "COLUMN:[method].[summary]",
            "COLUMN:[method].[lang]",
            "COLUMN:[method].[fullcomment]",
            "COLUMN:[method].[*]"
        ],
        "schema": "'[method]':\n  '[fullcomment]': text\n  '[id]':\n    primary_key: true\n    type: integer\n  '[lang]': text\n  '[name]': text\n  '[summary]': text\n'[methodparameter]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[methodid]': text\n  '[name]': text\n  '[type]': text\n'[repo]':\n  '[forks]': integer\n  '[id]':\n    primary_key: true\n    type: integer\n  '[processedtime]': integer\n  '[stars]': integer\n  '[url]': text\n'[solution]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[path]': text\n  '[processedtime]': integer\n  '[repoid]': integer\n  '[wascompiled]': integer\n",
        "gold_links": {
            "total processed time": "COLUMN:[solution].[processedtime]",
            "solutions": "TABLE:[solution]",
            "repository": "TABLE:[repo]",
            "forks": "COLUMN:[repo].[forks]",
            "most forks": "COLUMN:[repo].[forks]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[method]",
                "[C1]": "[method].[fullcomment]",
                "[C2]": "[method].[id]",
                "[C3]": "[method].[lang]",
                "[C4]": "[method].[name]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[C6]": "[methodparameter].[id]",
                "[C7]": "[methodparameter].[methodid]",
                "[C8]": "[methodparameter].[name]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[C10]": "[repo].[forks]",
                "[C11]": "[repo].[id]",
                "[C12]": "[repo].[processedtime]",
                "[C13]": "[repo].[stars]",
                "[C14]": "[repo].[url]",
                "[T4]": "[solution]",
                "[C15]": "[solution].[id]",
                "[C16]": "[solution].[path]",
                "[C17]": "[solution].[processedtime]",
                "[C18]": "[solution].[repoid]",
                "[C19]": "[solution].[wascompiled]"
            },
            "to_symbol": {
                "[method]": "[T1]",
                "[method].[fullcomment]": "[C1]",
                "[method].[id]": "[C2]",
                "[method].[lang]": "[C3]",
                "[method].[name]": "[C4]",
                "[method].[summary]": "[C5]",
                "[methodparameter]": "[T2]",
                "[methodparameter].[id]": "[C6]",
                "[methodparameter].[methodid]": "[C7]",
                "[methodparameter].[name]": "[C8]",
                "[methodparameter].[type]": "[C9]",
                "[repo]": "[T3]",
                "[repo].[forks]": "[C10]",
                "[repo].[id]": "[C11]",
                "[repo].[processedtime]": "[C12]",
                "[repo].[stars]": "[C13]",
                "[repo].[url]": "[C14]",
                "[solution]": "[T4]",
                "[solution].[id]": "[C15]",
                "[solution].[path]": "[C16]",
                "[solution].[processedtime]": "[C17]",
                "[solution].[repoid]": "[C18]",
                "[solution].[wascompiled]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': integer\n  '[C14]': text\n'[T4]':\n  '[C15]':\n    primary_key: true\n    type: integer\n  '[C16]': text\n  '[C17]': integer\n  '[C18]': integer\n  '[C19]': integer\n",
            "reverse_dict": {
                "[T1]": "[method]",
                "[T1].[C1]": "[method].[fullcomment]",
                "[C1]": "[method].[fullcomment]",
                "[T1].[C2]": "[method].[id]",
                "[C2]": "[method].[id]",
                "[T1].[C3]": "[method].[lang]",
                "[C3]": "[method].[lang]",
                "[T1].[C4]": "[method].[name]",
                "[C4]": "[method].[name]",
                "[T1].[C5]": "[method].[summary]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[T2].[C6]": "[methodparameter].[id]",
                "[C6]": "[methodparameter].[id]",
                "[T2].[C7]": "[methodparameter].[methodid]",
                "[C7]": "[methodparameter].[methodid]",
                "[T2].[C8]": "[methodparameter].[name]",
                "[C8]": "[methodparameter].[name]",
                "[T2].[C9]": "[methodparameter].[type]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[T3].[C10]": "[repo].[forks]",
                "[C10]": "[repo].[forks]",
                "[T3].[C11]": "[repo].[id]",
                "[C11]": "[repo].[id]",
                "[T3].[C12]": "[repo].[processedtime]",
                "[C12]": "[repo].[processedtime]",
                "[T3].[C13]": "[repo].[stars]",
                "[C13]": "[repo].[stars]",
                "[T3].[C14]": "[repo].[url]",
                "[C14]": "[repo].[url]",
                "[T4]": "[solution]",
                "[T4].[C15]": "[solution].[id]",
                "[C15]": "[solution].[id]",
                "[T4].[C16]": "[solution].[path]",
                "[C16]": "[solution].[path]",
                "[T4].[C17]": "[solution].[processedtime]",
                "[C17]": "[solution].[processedtime]",
                "[T4].[C18]": "[solution].[repoid]",
                "[C18]": "[solution].[repoid]",
                "[T4].[C19]": "[solution].[wascompiled]",
                "[C19]": "[solution].[wascompiled]"
            },
            "question": "What is the total [V1] of all [T4] from the [T3] with the most [C10]? total [V1] = AVG(ProcessedTime where [T3]([C10]([C10]))); [T3] with the most [C10] refers to [T3]([C10]([C10]));; [V1] is a value of the column [C17]; [V2] is a value of the column [C10]",
            "to_value": {
                "[V1]": "processed time",
                "[V2]": "MAX(COUNT(Forks))"
            },
            "masked": 8,
            "masked_terms": [
                "processed time",
                "MAX(COUNT(Forks))",
                "total processed time",
                "solutions",
                "repository",
                "forks",
                "MAX",
                "COUNT"
            ],
            "sql": "SELECT AVG([T4].[C17]) AS [total V1] FROM [T4] WHERE [T4].[C18] = (SELECT [T3].[C10] FROM [T3] GROUP BY [T3].[C10] ORDER BY COUNT(*) DESC LIMIT 1)",
            "repaired_sql": "SELECT AVG([T4].[C17]) FROM [T4] WHERE [T4].[C19] = (SELECT [C10] FROM [T3] GROUP BY [C10] ORDER BY COUNT(*) DESC LIMIT 1)"
        },
        "values": [
            "processed time",
            "MAX(COUNT(Forks))"
        ],
        "value_links": {
            "processed time": "[solution].[processedtime]",
            "MAX(COUNT(Forks))": "[repo].[forks]"
        },
        "filtered_value_links": {
            "processed time": "[solution].[processedtime]",
            "MAX(COUNT(Forks))": "[repo].[forks]"
        },
        "schema_links": {
            "total processed time": "COLUMN:[solution].[processedtime]",
            "solutions": "TABLE:[solution]",
            "repository": "TABLE:[repo]",
            "forks": "COLUMN:[repo].[forks]",
            "MAX": "TABLE:[repo]",
            "COUNT": "COLUMN:[repo].[forks]"
        },
        "filtered_schema_links": {
            "total processed time": "COLUMN:[solution].[processedtime]",
            "solutions": "TABLE:[solution]",
            "repository": "TABLE:[repo]",
            "forks": "COLUMN:[repo].[forks]",
            "MAX": "TABLE:[repo]",
            "COUNT": "COLUMN:[repo].[forks]"
        },
        "attack": "What is the total ProcessedTime of all orders from the product with the most quantity? total ProcessedTime = AVG(ProcessedTime where Product(quantity(quantity))); product with the most quantity refers to Product(quantity(quantity))); ProcessedTime is a value of the column ProcessedTime; quantity is a value of the column quantity"
    },
    {
        "db_id": "codebase_comments",
        "question": "What is the percentage of Forks to Stars of repository for solution \"104086\"? solution refers to Solution.Id; Solution.Id = 104086; percentage = MULTIPLY(DIVIDE(Forkk, Stars), 100);",
        "evidence": "solution refers to Solution.Id; Solution.Id = 104086; percentage = MULTIPLY(DIVIDE(Forkk, Stars), 100);",
        "SQL": "SELECT CAST(T1.Forks AS REAL) * 100 / T1.Stars FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Id = 104086",
        "query": "SELECT CAST(T1.Forks AS REAL) * 100 / T1.Stars FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Id = 104086",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "percentage",
            "of",
            "Forks",
            "to",
            "Stars",
            "of",
            "repository",
            "for",
            "solution",
            "\"104086\"",
            "?",
            "solution",
            "refers",
            "to",
            "Solution.Id",
            ";",
            "Solution.Id",
            "=",
            "104086",
            ";",
            "percentage",
            "=",
            "MULTIPLY(DIVIDE(Forkk",
            ",",
            "Stars)",
            ",",
            "100)",
            ";"
        ],
        "tc_original": [
            "repo.forks",
            "repo.stars",
            "repo.id",
            "repo.url",
            "repo.watchers",
            "repo.*",
            "solution.repoid",
            "solution.id",
            "solution.path",
            "solution.processedtime",
            "solution.wascompiled",
            "solution.*",
            "methodparameter.id",
            "methodparameter.type",
            "methodparameter.methodid",
            "methodparameter.name",
            "methodparameter.*",
            "method.id",
            "method.name",
            "method.summary",
            "method.lang",
            "method.fullcomment",
            "method.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[repo]",
            "COLUMN:[repo].[forks]",
            "COLUMN:[repo].[stars]",
            "COLUMN:[repo].[id]",
            "COLUMN:[repo].[url]",
            "COLUMN:[repo].[watchers]",
            "COLUMN:[repo].[*]",
            "TABLE:[solution]",
            "COLUMN:[solution].[repoid]",
            "COLUMN:[solution].[id]",
            "COLUMN:[solution].[path]",
            "COLUMN:[solution].[processedtime]",
            "COLUMN:[solution].[wascompiled]",
            "COLUMN:[solution].[*]",
            "TABLE:[methodparameter]",
            "COLUMN:[methodparameter].[id]",
            "COLUMN:[methodparameter].[type]",
            "COLUMN:[methodparameter].[methodid]",
            "COLUMN:[methodparameter].[name]",
            "COLUMN:[methodparameter].[*]",
            "TABLE:[method]",
            "COLUMN:[method].[id]",
            "COLUMN:[method].[name]",
            "COLUMN:[method].[summary]",
            "COLUMN:[method].[lang]",
            "COLUMN:[method].[fullcomment]",
            "COLUMN:[method].[*]"
        ],
        "schema": "'[method]':\n  '[fullcomment]': text\n  '[id]':\n    primary_key: true\n    type: integer\n  '[lang]': text\n  '[name]': text\n  '[summary]': text\n'[methodparameter]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[methodid]': text\n  '[name]': text\n  '[type]': text\n'[repo]':\n  '[forks]': integer\n  '[id]':\n    primary_key: true\n    type: integer\n  '[stars]': integer\n  '[url]': text\n  '[watchers]': integer\n'[solution]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[path]': text\n  '[processedtime]': integer\n  '[repoid]': integer\n  '[wascompiled]': integer\n",
        "gold_links": {
            "percentage": "COLUMN:[repo].[forks]",
            "Forks": "COLUMN:[repo].[forks]",
            "Stars": "COLUMN:[repo].[stars]",
            "repository": "TABLE:[repo]",
            "solution": "TABLE:[solution]",
            "104086": "VALUE:[solution].[id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[method]",
                "[C1]": "[method].[fullcomment]",
                "[C2]": "[method].[id]",
                "[C3]": "[method].[lang]",
                "[C4]": "[method].[name]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[C6]": "[methodparameter].[id]",
                "[C7]": "[methodparameter].[methodid]",
                "[C8]": "[methodparameter].[name]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[C10]": "[repo].[forks]",
                "[C11]": "[repo].[id]",
                "[C12]": "[repo].[stars]",
                "[C13]": "[repo].[url]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[C15]": "[solution].[id]",
                "[C16]": "[solution].[path]",
                "[C17]": "[solution].[processedtime]",
                "[C18]": "[solution].[repoid]",
                "[C19]": "[solution].[wascompiled]"
            },
            "to_symbol": {
                "[method]": "[T1]",
                "[method].[fullcomment]": "[C1]",
                "[method].[id]": "[C2]",
                "[method].[lang]": "[C3]",
                "[method].[name]": "[C4]",
                "[method].[summary]": "[C5]",
                "[methodparameter]": "[T2]",
                "[methodparameter].[id]": "[C6]",
                "[methodparameter].[methodid]": "[C7]",
                "[methodparameter].[name]": "[C8]",
                "[methodparameter].[type]": "[C9]",
                "[repo]": "[T3]",
                "[repo].[forks]": "[C10]",
                "[repo].[id]": "[C11]",
                "[repo].[stars]": "[C12]",
                "[repo].[url]": "[C13]",
                "[repo].[watchers]": "[C14]",
                "[solution]": "[T4]",
                "[solution].[id]": "[C15]",
                "[solution].[path]": "[C16]",
                "[solution].[processedtime]": "[C17]",
                "[solution].[repoid]": "[C18]",
                "[solution].[wascompiled]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': text\n  '[C14]': integer\n'[T4]':\n  '[C15]':\n    primary_key: true\n    type: integer\n  '[C16]': text\n  '[C17]': integer\n  '[C18]': integer\n  '[C19]': integer\n",
            "reverse_dict": {
                "[T1]": "[method]",
                "[T1].[C1]": "[method].[fullcomment]",
                "[C1]": "[method].[fullcomment]",
                "[T1].[C2]": "[method].[id]",
                "[C2]": "[method].[id]",
                "[T1].[C3]": "[method].[lang]",
                "[C3]": "[method].[lang]",
                "[T1].[C4]": "[method].[name]",
                "[C4]": "[method].[name]",
                "[T1].[C5]": "[method].[summary]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[T2].[C6]": "[methodparameter].[id]",
                "[C6]": "[methodparameter].[id]",
                "[T2].[C7]": "[methodparameter].[methodid]",
                "[C7]": "[methodparameter].[methodid]",
                "[T2].[C8]": "[methodparameter].[name]",
                "[C8]": "[methodparameter].[name]",
                "[T2].[C9]": "[methodparameter].[type]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[T3].[C10]": "[repo].[forks]",
                "[C10]": "[repo].[forks]",
                "[T3].[C11]": "[repo].[id]",
                "[C11]": "[repo].[id]",
                "[T3].[C12]": "[repo].[stars]",
                "[C12]": "[repo].[stars]",
                "[T3].[C13]": "[repo].[url]",
                "[C13]": "[repo].[url]",
                "[T3].[C14]": "[repo].[watchers]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[T4].[C15]": "[solution].[id]",
                "[C15]": "[solution].[id]",
                "[T4].[C16]": "[solution].[path]",
                "[C16]": "[solution].[path]",
                "[T4].[C17]": "[solution].[processedtime]",
                "[C17]": "[solution].[processedtime]",
                "[T4].[C18]": "[solution].[repoid]",
                "[C18]": "[solution].[repoid]",
                "[T4].[C19]": "[solution].[wascompiled]",
                "[C19]": "[solution].[wascompiled]"
            },
            "question": "What is the percentage of [C10] to [C12] of repository for [T4] \"[V1]\"? [T4] refers to [T4].[C15]; [T4].[C15] = [V1]; percentage = MULTIPLY(DIVIDE(Forkk, [C12]), 100);; [V1] is a value of the column [C11]",
            "to_value": {
                "[V1]": "104086"
            },
            "masked": 7,
            "masked_terms": [
                "104086",
                "forks",
                "stars",
                "repo",
                "solution",
                "id",
                "104086"
            ],
            "sql": "SELECT (CAST([T3].[C10] AS FLOAT) / NULLIF([T3].[C12], 0)) * 100 AS [percentage] FROM [T3] WHERE [T3].[C11] = [V1]",
            "repaired_sql": "SELECT ([T3].[C10] * 100.0 / [T3].[C12]) AS percentage FROM [T3] WHERE [T3].[C11] = (SELECT [T4].[C15] FROM [T4] WHERE [T4].[C15] = [V1])"
        },
        "values": [
            "104086"
        ],
        "value_links": {
            "104086": "[repo].[id]"
        },
        "filtered_value_links": {
            "104086": "[repo].[id]"
        },
        "schema_links": {
            "forks": "COLUMN:[repo].[forks]",
            "stars": "COLUMN:[repo].[stars]",
            "repo": "TABLE:[repo]",
            "solution": "TABLE:[solution]",
            "id": "COLUMN:[solution].[id]",
            "104086": "COLUMN:[solution].[id]"
        },
        "filtered_schema_links": {
            "forks": "COLUMN:[repo].[forks]",
            "stars": "COLUMN:[repo].[stars]",
            "repo": "TABLE:[repo]",
            "solution": "TABLE:[solution]",
            "id": "COLUMN:[solution].[id]",
            "104086": "COLUMN:[solution].[id]"
        },
        "attack": "What is the percentage of Forkk to stars of repository for Project \"42\"? Project refers to Project.project_id; Project.project_id = 42; percentage = MULTIPLY(DIVIDE(Forkk, stars), 100); 42 is a value of the column repo_id"
    },
    {
        "db_id": "codebase_comments",
        "question": "Please provide the solution id of the respository among the respository that receive 238 forks. solution id of the repository refers to solution.Id;",
        "evidence": "solution id of the repository refers to solution.Id;",
        "SQL": "SELECT T2.Id FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Forks = 238",
        "query": "SELECT T2.Id FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T1.Forks = 238",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "provide",
            "the",
            "solution",
            "id",
            "of",
            "the",
            "respository",
            "among",
            "the",
            "respository",
            "that",
            "receive",
            "238",
            "forks",
            ".",
            "solution",
            "id",
            "of",
            "the",
            "repository",
            "refers",
            "to",
            "solution.Id",
            ";"
        ],
        "tc_original": [
            "repo.forks",
            "repo.id",
            "repo.url",
            "repo.stars",
            "repo.watchers",
            "repo.*",
            "solution.repoid",
            "solution.id",
            "solution.path",
            "solution.processedtime",
            "solution.wascompiled",
            "solution.*",
            "methodparameter.id",
            "methodparameter.type",
            "methodparameter.name",
            "methodparameter.methodid",
            "methodparameter.*",
            "method.id",
            "method.name",
            "method.summary",
            "method.lang",
            "method.fullcomment",
            "method.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[repo]",
            "COLUMN:[repo].[forks]",
            "COLUMN:[repo].[id]",
            "COLUMN:[repo].[url]",
            "COLUMN:[repo].[stars]",
            "COLUMN:[repo].[watchers]",
            "COLUMN:[repo].[*]",
            "TABLE:[solution]",
            "COLUMN:[solution].[repoid]",
            "COLUMN:[solution].[id]",
            "COLUMN:[solution].[path]",
            "COLUMN:[solution].[processedtime]",
            "COLUMN:[solution].[wascompiled]",
            "COLUMN:[solution].[*]",
            "TABLE:[methodparameter]",
            "COLUMN:[methodparameter].[id]",
            "COLUMN:[methodparameter].[type]",
            "COLUMN:[methodparameter].[name]",
            "COLUMN:[methodparameter].[methodid]",
            "COLUMN:[methodparameter].[*]",
            "TABLE:[method]",
            "COLUMN:[method].[id]",
            "COLUMN:[method].[name]",
            "COLUMN:[method].[summary]",
            "COLUMN:[method].[lang]",
            "COLUMN:[method].[fullcomment]",
            "COLUMN:[method].[*]"
        ],
        "schema": "'[method]':\n  '[fullcomment]': text\n  '[id]':\n    primary_key: true\n    type: integer\n  '[lang]': text\n  '[name]': text\n  '[summary]': text\n'[methodparameter]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[methodid]': text\n  '[name]': text\n  '[type]': text\n'[repo]':\n  '[forks]': integer\n  '[id]':\n    primary_key: true\n    type: integer\n  '[stars]': integer\n  '[url]': text\n  '[watchers]': integer\n'[solution]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[path]': text\n  '[processedtime]': integer\n  '[repoid]': integer\n  '[wascompiled]': integer\n",
        "gold_links": {
            "solution id": "COLUMN:[solution].[id]",
            "repository": "TABLE:[repo]",
            "238": "VALUE:[repo].[forks]",
            "forks": "COLUMN:[repo].[forks]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[method]",
                "[C1]": "[method].[fullcomment]",
                "[C2]": "[method].[id]",
                "[C3]": "[method].[lang]",
                "[C4]": "[method].[name]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[C6]": "[methodparameter].[id]",
                "[C7]": "[methodparameter].[methodid]",
                "[C8]": "[methodparameter].[name]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[C10]": "[repo].[forks]",
                "[C11]": "[repo].[id]",
                "[C12]": "[repo].[stars]",
                "[C13]": "[repo].[url]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[C15]": "[solution].[id]",
                "[C16]": "[solution].[path]",
                "[C17]": "[solution].[processedtime]",
                "[C18]": "[solution].[repoid]",
                "[C19]": "[solution].[wascompiled]"
            },
            "to_symbol": {
                "[method]": "[T1]",
                "[method].[fullcomment]": "[C1]",
                "[method].[id]": "[C2]",
                "[method].[lang]": "[C3]",
                "[method].[name]": "[C4]",
                "[method].[summary]": "[C5]",
                "[methodparameter]": "[T2]",
                "[methodparameter].[id]": "[C6]",
                "[methodparameter].[methodid]": "[C7]",
                "[methodparameter].[name]": "[C8]",
                "[methodparameter].[type]": "[C9]",
                "[repo]": "[T3]",
                "[repo].[forks]": "[C10]",
                "[repo].[id]": "[C11]",
                "[repo].[stars]": "[C12]",
                "[repo].[url]": "[C13]",
                "[repo].[watchers]": "[C14]",
                "[solution]": "[T4]",
                "[solution].[id]": "[C15]",
                "[solution].[path]": "[C16]",
                "[solution].[processedtime]": "[C17]",
                "[solution].[repoid]": "[C18]",
                "[solution].[wascompiled]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': text\n  '[C14]': integer\n'[T4]':\n  '[C15]':\n    primary_key: true\n    type: integer\n  '[C16]': text\n  '[C17]': integer\n  '[C18]': integer\n  '[C19]': integer\n",
            "reverse_dict": {
                "[T1]": "[method]",
                "[T1].[C1]": "[method].[fullcomment]",
                "[C1]": "[method].[fullcomment]",
                "[T1].[C2]": "[method].[id]",
                "[C2]": "[method].[id]",
                "[T1].[C3]": "[method].[lang]",
                "[C3]": "[method].[lang]",
                "[T1].[C4]": "[method].[name]",
                "[C4]": "[method].[name]",
                "[T1].[C5]": "[method].[summary]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[T2].[C6]": "[methodparameter].[id]",
                "[C6]": "[methodparameter].[id]",
                "[T2].[C7]": "[methodparameter].[methodid]",
                "[C7]": "[methodparameter].[methodid]",
                "[T2].[C8]": "[methodparameter].[name]",
                "[C8]": "[methodparameter].[name]",
                "[T2].[C9]": "[methodparameter].[type]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[T3].[C10]": "[repo].[forks]",
                "[C10]": "[repo].[forks]",
                "[T3].[C11]": "[repo].[id]",
                "[C11]": "[repo].[id]",
                "[T3].[C12]": "[repo].[stars]",
                "[C12]": "[repo].[stars]",
                "[T3].[C13]": "[repo].[url]",
                "[C13]": "[repo].[url]",
                "[T3].[C14]": "[repo].[watchers]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[T4].[C15]": "[solution].[id]",
                "[C15]": "[solution].[id]",
                "[T4].[C16]": "[solution].[path]",
                "[C16]": "[solution].[path]",
                "[T4].[C17]": "[solution].[processedtime]",
                "[C17]": "[solution].[processedtime]",
                "[T4].[C18]": "[solution].[repoid]",
                "[C18]": "[solution].[repoid]",
                "[T4].[C19]": "[solution].[wascompiled]",
                "[C19]": "[solution].[wascompiled]"
            },
            "question": "Please provide the [C15] of the respository among the respository that receive [V1] [C10]. [C15] of the repository refers to solution.Id;; [V1] is a value of the column [C10]",
            "to_value": {
                "[V1]": "238"
            },
            "masked": 4,
            "masked_terms": [
                "238",
                "solution id",
                "repo",
                "forks"
            ],
            "sql": "SELECT [T4].[C15] FROM [T4] WHERE [T4].[C19] = [V1]",
            "repaired_sql": "SELECT [T4].[C15] FROM [T4] JOIN [T3] ON [T4].[C19] = [T3].[C11] WHERE [T3].[C10] = [V1]"
        },
        "values": [
            "238"
        ],
        "value_links": {
            "238": "[repo].[forks]"
        },
        "filtered_value_links": {
            "238": "[repo].[forks]"
        },
        "schema_links": {
            "solution id": "COLUMN:[solution].[id]",
            "repo": "TABLE:[repo]",
            "forks": "COLUMN:[repo].[forks]"
        },
        "filtered_schema_links": {
            "solution id": "COLUMN:[solution].[id]",
            "repo": "TABLE:[repo]",
            "forks": "COLUMN:[repo].[forks]"
        },
        "attack": "Please provide the Id of the respository among the respository that receive  solution.Cnt. Id of the repository refers to solution.Id; 100 is a value of the column solution.Cnt."
    },
    {
        "db_id": "codebase_comments",
        "question": "Please state the API calls for method number 10 and its intended course of action. method number refers to Method_100k.Id; Method_100k.Id = 10; intended course of action refers to Path;",
        "evidence": "method number refers to Method_100k.Id; Method_100k.Id = 10; intended course of action refers to Path;",
        "SQL": "SELECT T2.ApiCalls, T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Id = 10",
        "query": "SELECT T2.ApiCalls, T1.Path FROM Solution AS T1 INNER JOIN Method AS T2 ON T1.Id = T2.SolutionId WHERE T2.Id = 10",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "state",
            "the",
            "API",
            "calls",
            "for",
            "method",
            "number",
            "10",
            "and",
            "its",
            "intended",
            "course",
            "of",
            "action",
            ".",
            "method",
            "number",
            "refers",
            "to",
            "Method_100k.Id",
            ";",
            "Method_100k.Id",
            "=",
            "10",
            ";",
            "intended",
            "course",
            "of",
            "action",
            "refers",
            "to",
            "Path",
            ";"
        ],
        "tc_original": [
            "method.apicalls",
            "method.id",
            "method.name",
            "method.summary",
            "method.lang",
            "method.*",
            "methodparameter.name",
            "methodparameter.id",
            "methodparameter.methodid",
            "methodparameter.type",
            "methodparameter.*",
            "repo.id",
            "repo.url",
            "repo.stars",
            "repo.forks",
            "repo.watchers",
            "repo.*",
            "solution.id",
            "solution.path",
            "solution.repoid",
            "solution.processedtime",
            "solution.wascompiled",
            "solution.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[method]",
            "COLUMN:[method].[apicalls]",
            "COLUMN:[method].[id]",
            "COLUMN:[method].[name]",
            "COLUMN:[method].[summary]",
            "COLUMN:[method].[lang]",
            "COLUMN:[method].[*]",
            "TABLE:[methodparameter]",
            "COLUMN:[methodparameter].[name]",
            "COLUMN:[methodparameter].[id]",
            "COLUMN:[methodparameter].[methodid]",
            "COLUMN:[methodparameter].[type]",
            "COLUMN:[methodparameter].[*]",
            "TABLE:[repo]",
            "COLUMN:[repo].[id]",
            "COLUMN:[repo].[url]",
            "COLUMN:[repo].[stars]",
            "COLUMN:[repo].[forks]",
            "COLUMN:[repo].[watchers]",
            "COLUMN:[repo].[*]",
            "TABLE:[solution]",
            "COLUMN:[solution].[id]",
            "COLUMN:[solution].[path]",
            "COLUMN:[solution].[repoid]",
            "COLUMN:[solution].[processedtime]",
            "COLUMN:[solution].[wascompiled]",
            "COLUMN:[solution].[*]"
        ],
        "schema": "'[method]':\n  '[apicalls]': text\n  '[id]':\n    primary_key: true\n    type: integer\n  '[lang]': text\n  '[name]': text\n  '[summary]': text\n'[methodparameter]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[methodid]': text\n  '[name]': text\n  '[type]': text\n'[repo]':\n  '[forks]': integer\n  '[id]':\n    primary_key: true\n    type: integer\n  '[stars]': integer\n  '[url]': text\n  '[watchers]': integer\n'[solution]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[path]': text\n  '[processedtime]': integer\n  '[repoid]': integer\n  '[wascompiled]': integer\n",
        "gold_links": {
            "API calls": "COLUMN:[method].[apicalls]",
            "method number": "COLUMN:[method].[id]",
            "10": "VALUE:[method].[id]",
            "course of action": "COLUMN:[solution].[path]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[method]",
                "[C1]": "[method].[apicalls]",
                "[C2]": "[method].[id]",
                "[C3]": "[method].[lang]",
                "[C4]": "[method].[name]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[C6]": "[methodparameter].[id]",
                "[C7]": "[methodparameter].[methodid]",
                "[C8]": "[methodparameter].[name]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[C10]": "[repo].[forks]",
                "[C11]": "[repo].[id]",
                "[C12]": "[repo].[stars]",
                "[C13]": "[repo].[url]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[C15]": "[solution].[id]",
                "[C16]": "[solution].[path]",
                "[C17]": "[solution].[processedtime]",
                "[C18]": "[solution].[repoid]",
                "[C19]": "[solution].[wascompiled]"
            },
            "to_symbol": {
                "[method]": "[T1]",
                "[method].[apicalls]": "[C1]",
                "[method].[id]": "[C2]",
                "[method].[lang]": "[C3]",
                "[method].[name]": "[C4]",
                "[method].[summary]": "[C5]",
                "[methodparameter]": "[T2]",
                "[methodparameter].[id]": "[C6]",
                "[methodparameter].[methodid]": "[C7]",
                "[methodparameter].[name]": "[C8]",
                "[methodparameter].[type]": "[C9]",
                "[repo]": "[T3]",
                "[repo].[forks]": "[C10]",
                "[repo].[id]": "[C11]",
                "[repo].[stars]": "[C12]",
                "[repo].[url]": "[C13]",
                "[repo].[watchers]": "[C14]",
                "[solution]": "[T4]",
                "[solution].[id]": "[C15]",
                "[solution].[path]": "[C16]",
                "[solution].[processedtime]": "[C17]",
                "[solution].[repoid]": "[C18]",
                "[solution].[wascompiled]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': text\n  '[C14]': integer\n'[T4]':\n  '[C15]':\n    primary_key: true\n    type: integer\n  '[C16]': text\n  '[C17]': integer\n  '[C18]': integer\n  '[C19]': integer\n",
            "reverse_dict": {
                "[T1]": "[method]",
                "[T1].[C1]": "[method].[apicalls]",
                "[C1]": "[method].[apicalls]",
                "[T1].[C2]": "[method].[id]",
                "[C2]": "[method].[id]",
                "[T1].[C3]": "[method].[lang]",
                "[C3]": "[method].[lang]",
                "[T1].[C4]": "[method].[name]",
                "[C4]": "[method].[name]",
                "[T1].[C5]": "[method].[summary]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[T2].[C6]": "[methodparameter].[id]",
                "[C6]": "[methodparameter].[id]",
                "[T2].[C7]": "[methodparameter].[methodid]",
                "[C7]": "[methodparameter].[methodid]",
                "[T2].[C8]": "[methodparameter].[name]",
                "[C8]": "[methodparameter].[name]",
                "[T2].[C9]": "[methodparameter].[type]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[T3].[C10]": "[repo].[forks]",
                "[C10]": "[repo].[forks]",
                "[T3].[C11]": "[repo].[id]",
                "[C11]": "[repo].[id]",
                "[T3].[C12]": "[repo].[stars]",
                "[C12]": "[repo].[stars]",
                "[T3].[C13]": "[repo].[url]",
                "[C13]": "[repo].[url]",
                "[T3].[C14]": "[repo].[watchers]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[T4].[C15]": "[solution].[id]",
                "[C15]": "[solution].[id]",
                "[T4].[C16]": "[solution].[path]",
                "[C16]": "[solution].[path]",
                "[T4].[C17]": "[solution].[processedtime]",
                "[C17]": "[solution].[processedtime]",
                "[T4].[C18]": "[solution].[repoid]",
                "[C18]": "[solution].[repoid]",
                "[T4].[C19]": "[solution].[wascompiled]",
                "[C19]": "[solution].[wascompiled]"
            },
            "question": "Please state the [T1] for method number [V2] and its [C16]. method number refers to [V1]; [V1] = [V2]; [C16] refers to [V3];; [V1] is a value of the column [C2]; [V2] is a value of the column [C2]; [V3] is a value of the column [C16]",
            "to_value": {
                "[V1]": "Method_100k.Id",
                "[V2]": "10",
                "[V3]": "Path"
            },
            "masked": 8,
            "masked_terms": [
                "Method_100k.Id",
                "10",
                "Path",
                "api calls",
                "id",
                "10",
                "intended course of action",
                "path"
            ],
            "sql": "SELECT [T1].[C1] FROM [T1] WHERE [T1].[C2] = [V2] AND [T1].[C3] = '[V3]'",
            "repaired_sql": "SELECT * FROM [T1] JOIN [T4] ON [T1].[C2] = [T4].[C17] WHERE [T1].[C2] = [V2] AND [T4].[C16] = '[V3]'"
        },
        "values": [
            "Method_100k.Id",
            "10",
            "Path"
        ],
        "value_links": {
            "Method_100k.Id": "[method].[id]",
            "10": "[method].[id]",
            "Path": "[solution].[path]"
        },
        "filtered_value_links": {
            "Method_100k.Id": "[method].[id]",
            "10": "[method].[id]",
            "Path": "[solution].[path]"
        },
        "schema_links": {
            "api calls": "TABLE:[method]",
            "id": "COLUMN:[method].[id]",
            "10": "COLUMN:[method].[id]",
            "intended course of action": "COLUMN:[solution].[path]",
            "path": "COLUMN:[solution].[path]"
        },
        "filtered_schema_links": {
            "api calls": "TABLE:[method]",
            "id": "COLUMN:[method].[id]",
            "10": "COLUMN:[method].[id]",
            "intended course of action": "COLUMN:[solution].[path]",
            "path": "COLUMN:[solution].[path]"
        },
        "attack": "Please state the method for method number 2 and its description."
    },
    {
        "db_id": "codebase_comments",
        "question": "How many watchers does the path \"maff_se3ue7\\US7.sln\" have?",
        "evidence": "",
        "SQL": "SELECT T1.Watchers FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Path = 'maff_se3ue7US7.sln'",
        "query": "SELECT T1.Watchers FROM Repo AS T1 INNER JOIN Solution AS T2 ON T1.Id = T2.RepoId WHERE T2.Path = 'maff_se3ue7US7.sln'",
        "question_toks": [
            "How",
            "many",
            "watchers",
            "does",
            "the",
            "path",
            "\"maff_se3ue7\\US7.sln\"",
            "have",
            "?"
        ],
        "tc_original": [
            "repo.watchers",
            "repo.id",
            "repo.url",
            "repo.stars",
            "repo.forks",
            "repo.*",
            "solution.path",
            "solution.repoid",
            "solution.id",
            "solution.processedtime",
            "solution.wascompiled",
            "solution.*",
            "methodparameter.id",
            "methodparameter.type",
            "methodparameter.methodid",
            "methodparameter.name",
            "methodparameter.*",
            "method.id",
            "method.name",
            "method.summary",
            "method.lang",
            "method.fullcomment",
            "method.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[repo]",
            "COLUMN:[repo].[watchers]",
            "COLUMN:[repo].[id]",
            "COLUMN:[repo].[url]",
            "COLUMN:[repo].[stars]",
            "COLUMN:[repo].[forks]",
            "COLUMN:[repo].[*]",
            "TABLE:[solution]",
            "COLUMN:[solution].[path]",
            "COLUMN:[solution].[repoid]",
            "COLUMN:[solution].[id]",
            "COLUMN:[solution].[processedtime]",
            "COLUMN:[solution].[wascompiled]",
            "COLUMN:[solution].[*]",
            "TABLE:[methodparameter]",
            "COLUMN:[methodparameter].[id]",
            "COLUMN:[methodparameter].[type]",
            "COLUMN:[methodparameter].[methodid]",
            "COLUMN:[methodparameter].[name]",
            "COLUMN:[methodparameter].[*]",
            "TABLE:[method]",
            "COLUMN:[method].[id]",
            "COLUMN:[method].[name]",
            "COLUMN:[method].[summary]",
            "COLUMN:[method].[lang]",
            "COLUMN:[method].[fullcomment]",
            "COLUMN:[method].[*]"
        ],
        "schema": "'[method]':\n  '[fullcomment]': text\n  '[id]':\n    primary_key: true\n    type: integer\n  '[lang]': text\n  '[name]': text\n  '[summary]': text\n'[methodparameter]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[methodid]': text\n  '[name]': text\n  '[type]': text\n'[repo]':\n  '[forks]': integer\n  '[id]':\n    primary_key: true\n    type: integer\n  '[stars]': integer\n  '[url]': text\n  '[watchers]': integer\n'[solution]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[path]': text\n  '[processedtime]': integer\n  '[repoid]': integer\n  '[wascompiled]': integer\n",
        "gold_links": {
            "watchers": "COLUMN:[repo].[watchers]",
            "path": "COLUMN:[solution].[path]",
            "maff_se3ue7\\US7.sln": "VALUE:[solution].[path]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[method]",
                "[C1]": "[method].[fullcomment]",
                "[C2]": "[method].[id]",
                "[C3]": "[method].[lang]",
                "[C4]": "[method].[name]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[C6]": "[methodparameter].[id]",
                "[C7]": "[methodparameter].[methodid]",
                "[C8]": "[methodparameter].[name]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[C10]": "[repo].[forks]",
                "[C11]": "[repo].[id]",
                "[C12]": "[repo].[stars]",
                "[C13]": "[repo].[url]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[C15]": "[solution].[id]",
                "[C16]": "[solution].[path]",
                "[C17]": "[solution].[processedtime]",
                "[C18]": "[solution].[repoid]",
                "[C19]": "[solution].[wascompiled]"
            },
            "to_symbol": {
                "[method]": "[T1]",
                "[method].[fullcomment]": "[C1]",
                "[method].[id]": "[C2]",
                "[method].[lang]": "[C3]",
                "[method].[name]": "[C4]",
                "[method].[summary]": "[C5]",
                "[methodparameter]": "[T2]",
                "[methodparameter].[id]": "[C6]",
                "[methodparameter].[methodid]": "[C7]",
                "[methodparameter].[name]": "[C8]",
                "[methodparameter].[type]": "[C9]",
                "[repo]": "[T3]",
                "[repo].[forks]": "[C10]",
                "[repo].[id]": "[C11]",
                "[repo].[stars]": "[C12]",
                "[repo].[url]": "[C13]",
                "[repo].[watchers]": "[C14]",
                "[solution]": "[T4]",
                "[solution].[id]": "[C15]",
                "[solution].[path]": "[C16]",
                "[solution].[processedtime]": "[C17]",
                "[solution].[repoid]": "[C18]",
                "[solution].[wascompiled]": "[C19]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]':\n    primary_key: true\n    type: integer\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C6]':\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': text\n  '[C9]': text\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': integer\n  '[C13]': text\n  '[C14]': integer\n'[T4]':\n  '[C15]':\n    primary_key: true\n    type: integer\n  '[C16]': text\n  '[C17]': integer\n  '[C18]': integer\n  '[C19]': integer\n",
            "reverse_dict": {
                "[T1]": "[method]",
                "[T1].[C1]": "[method].[fullcomment]",
                "[C1]": "[method].[fullcomment]",
                "[T1].[C2]": "[method].[id]",
                "[C2]": "[method].[id]",
                "[T1].[C3]": "[method].[lang]",
                "[C3]": "[method].[lang]",
                "[T1].[C4]": "[method].[name]",
                "[C4]": "[method].[name]",
                "[T1].[C5]": "[method].[summary]",
                "[C5]": "[method].[summary]",
                "[T2]": "[methodparameter]",
                "[T2].[C6]": "[methodparameter].[id]",
                "[C6]": "[methodparameter].[id]",
                "[T2].[C7]": "[methodparameter].[methodid]",
                "[C7]": "[methodparameter].[methodid]",
                "[T2].[C8]": "[methodparameter].[name]",
                "[C8]": "[methodparameter].[name]",
                "[T2].[C9]": "[methodparameter].[type]",
                "[C9]": "[methodparameter].[type]",
                "[T3]": "[repo]",
                "[T3].[C10]": "[repo].[forks]",
                "[C10]": "[repo].[forks]",
                "[T3].[C11]": "[repo].[id]",
                "[C11]": "[repo].[id]",
                "[T3].[C12]": "[repo].[stars]",
                "[C12]": "[repo].[stars]",
                "[T3].[C13]": "[repo].[url]",
                "[C13]": "[repo].[url]",
                "[T3].[C14]": "[repo].[watchers]",
                "[C14]": "[repo].[watchers]",
                "[T4]": "[solution]",
                "[T4].[C15]": "[solution].[id]",
                "[C15]": "[solution].[id]",
                "[T4].[C16]": "[solution].[path]",
                "[C16]": "[solution].[path]",
                "[T4].[C17]": "[solution].[processedtime]",
                "[C17]": "[solution].[processedtime]",
                "[T4].[C18]": "[solution].[repoid]",
                "[C18]": "[solution].[repoid]",
                "[T4].[C19]": "[solution].[wascompiled]",
                "[C19]": "[solution].[wascompiled]"
            },
            "question": "How many [C14] does the [C16] \"[V1]\" have?; [V1] is a value of the column [C16]",
            "to_value": {
                "[V1]": "maff_se3ue7\\US7.sln"
            },
            "masked": 3,
            "masked_terms": [
                "maff_se3ue7\\US7.sln",
                "path",
                "watchers"
            ],
            "sql": "SELECT [T4].[C14] FROM [T4] WHERE [T4].[C16] = '[V1]'",
            "repaired_sql": "SELECT SUM([T3].[C14]) FROM [T3] JOIN [T4] ON [T3].[C12] = [T4].[C15] WHERE [T4].[C16] = '[V1]'"
        },
        "values": [
            "maff_se3ue7\\US7.sln"
        ],
        "value_links": {
            "maff_se3ue7\\US7.sln": "[solution].[path]"
        },
        "filtered_value_links": {
            "maff_se3ue7\\US7.sln": "[solution].[path]"
        },
        "schema_links": {
            "path": "COLUMN:[solution].[path]",
            "watchers": "COLUMN:[repo].[watchers]"
        },
        "filtered_schema_links": {
            "path": "COLUMN:[solution].[path]",
            "watchers": "COLUMN:[repo].[watchers]"
        },
        "attack": "How many students does the school \"ABC High\" have?"
    },
    {
        "db_id": "trains",
        "question": "Please list the IDs of all the trains that run in the east direction and have less than 4 cars. less than 4 cars refers to carsNum < 4",
        "evidence": "less than 4 cars refers to carsNum < 4",
        "SQL": "SELECT T1.id FROM trains AS T1 INNER JOIN ( SELECT train_id, MAX(position) AS carsNum FROM cars GROUP BY train_id ) AS T2 ON T1.id = T2.train_id WHERE T1.direction = 'east' AND T2.carsNum < 4",
        "query": "SELECT T1.id FROM trains AS T1 INNER JOIN ( SELECT train_id, MAX(position) AS carsNum FROM cars GROUP BY train_id ) AS T2 ON T1.id = T2.train_id WHERE T1.direction = 'east' AND T2.carsNum < 4",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "list",
            "the",
            "IDs",
            "of",
            "all",
            "the",
            "trains",
            "that",
            "run",
            "in",
            "the",
            "east",
            "direction",
            "and",
            "have",
            "less",
            "than",
            "4",
            "cars",
            ".",
            "less",
            "than",
            "4",
            "cars",
            "refers",
            "to",
            "carsNum",
            "<",
            "4"
        ],
        "tc_original": [
            "trains.direction",
            "trains.id",
            "trains.*",
            "cars.train_id",
            "cars.id",
            "cars.position",
            "cars.shape",
            "cars.len",
            "cars.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[trains]",
            "COLUMN:[trains].[direction]",
            "COLUMN:[trains].[id]",
            "COLUMN:[trains].[*]",
            "TABLE:[cars]",
            "COLUMN:[cars].[train_id]",
            "COLUMN:[cars].[id]",
            "COLUMN:[cars].[position]",
            "COLUMN:[cars].[shape]",
            "COLUMN:[cars].[len]",
            "COLUMN:[cars].[*]"
        ],
        "schema": "'[cars]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[len]': text\n  '[position]': integer\n  '[shape]': text\n  '[train_id]':\n    foreign_key: '[trains].[id]'\n    type: integer\n'[trains]':\n  '[direction]': text\n  '[id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "IDs": "COLUMN:[trains].[id]",
            "trains": "TABLE:[trains]",
            "east": "VALUE:[trains].[direction]",
            "direction": "COLUMN:[trains].[direction]",
            "cars": "TABLE:[cars]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[cars]",
                "[C1]": "[cars].[id]",
                "[C2]": "[cars].[len]",
                "[C3]": "[cars].[position]",
                "[C4]": "[cars].[shape]",
                "[C5]": "[cars].[train_id]",
                "[T2]": "[trains]",
                "[C6]": "[trains].[direction]",
                "[C7]": "[trains].[id]"
            },
            "to_symbol": {
                "[cars]": "[T1]",
                "[cars].[id]": "[C1]",
                "[cars].[len]": "[C2]",
                "[cars].[position]": "[C3]",
                "[cars].[shape]": "[C4]",
                "[cars].[train_id]": "[C5]",
                "[trains]": "[T2]",
                "[trains].[direction]": "[C6]",
                "[trains].[id]": "[C7]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': integer\n  '[C4]': text\n  '[C5]':\n    foreign_key: '[T2].[C7]'\n    type: integer\n'[T2]':\n  '[C6]': text\n  '[C7]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[cars]",
                "[T1].[C1]": "[cars].[id]",
                "[C1]": "[cars].[id]",
                "[T1].[C2]": "[cars].[len]",
                "[C2]": "[cars].[len]",
                "[T1].[C3]": "[cars].[position]",
                "[C3]": "[cars].[position]",
                "[T1].[C4]": "[cars].[shape]",
                "[C4]": "[cars].[shape]",
                "[T1].[C5]": "[cars].[train_id]",
                "[C5]": "[cars].[train_id]",
                "[T2]": "[trains]",
                "[T2].[C6]": "[trains].[direction]",
                "[C6]": "[trains].[direction]",
                "[T2].[C7]": "[trains].[id]",
                "[C7]": "[trains].[id]"
            },
            "question": "Please list the IDs of all the [T2] that run in the [V1] [C6] and have less than 4 [T1]. less than 4 [T1] refers to [C2] < 4; [V1] is a value of the column [C6]",
            "to_value": {
                "[V1]": "east"
            },
            "masked": 6,
            "masked_terms": [
                "east",
                "trains",
                "direction",
                "id",
                "carsNum",
                "cars"
            ],
            "sql": "SELECT [T2].[C7] FROM [T2] WHERE [T2].[C6] = '[V1]' AND (SELECT COUNT(*) FROM [T1] WHERE [T1].[C5] = [T2].[C7]) < 4",
            "repaired_sql": "SELECT [T2].[C7] FROM [T2] WHERE [T2].[C6] = '[V1]' AND (SELECT COUNT(*) FROM [T1] WHERE [T1].[C5] = [T2].[C7]) < 4"
        },
        "values": [
            "east"
        ],
        "value_links": {
            "east": "[trains].[direction]"
        },
        "filtered_value_links": {
            "east": "[trains].[direction]"
        },
        "schema_links": {
            "trains": "TABLE:[trains]",
            "direction": "COLUMN:[trains].[direction]",
            "id": "COLUMN:[trains].[id]",
            "carsNum": "COLUMN:[cars].[len]",
            "cars": "TABLE:[cars]"
        },
        "filtered_schema_links": {
            "trains": "TABLE:[trains]",
            "direction": "COLUMN:[trains].[direction]",
            "id": "COLUMN:[trains].[id]",
            "carsNum": "COLUMN:[cars].[len]",
            "cars": "TABLE:[cars]"
        },
        "attack": "Please list the IDs of all the teams that run in the \"Premier League\" league and have less than 4 players."
    },
    {
        "db_id": "trains",
        "question": "What is the average number of cars on trains that run in the east direction? calculation = DIVIDE(count(id), count(train_id))",
        "evidence": "calculation = DIVIDE(count(id), count(train_id))",
        "SQL": "SELECT CAST(COUNT(T1.id) AS REAL) / COUNT(DISTINCT T1.train_id) FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'east'",
        "query": "SELECT CAST(COUNT(T1.id) AS REAL) / COUNT(DISTINCT T1.train_id) FROM cars AS T1 INNER JOIN trains AS T2 ON T1.train_id = T2.id WHERE T2.direction = 'east'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "number",
            "of",
            "cars",
            "on",
            "trains",
            "that",
            "run",
            "in",
            "the",
            "east",
            "direction",
            "?",
            "calculation",
            "=",
            "DIVIDE(count(id)",
            ",",
            "count(train_id))"
        ],
        "tc_original": [
            "trains.direction",
            "trains.id",
            "trains.*",
            "cars.train_id",
            "cars.id",
            "cars.position",
            "cars.shape",
            "cars.len",
            "cars.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[trains]",
            "COLUMN:[trains].[direction]",
            "COLUMN:[trains].[id]",
            "COLUMN:[trains].[*]",
            "TABLE:[cars]",
            "COLUMN:[cars].[train_id]",
            "COLUMN:[cars].[id]",
            "COLUMN:[cars].[position]",
            "COLUMN:[cars].[shape]",
            "COLUMN:[cars].[len]",
            "COLUMN:[cars].[*]"
        ],
        "schema": "'[cars]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[len]': text\n  '[position]': integer\n  '[shape]': text\n  '[train_id]':\n    foreign_key: '[trains].[id]'\n    type: integer\n'[trains]':\n  '[direction]': text\n  '[id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "average number": "COLUMN:[cars].[id]",
            "cars": "TABLE:[cars]",
            "trains": "TABLE:[trains]",
            "east": "VALUE:[trains].[direction]",
            "direction": "COLUMN:[trains].[direction]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[cars]",
                "[C1]": "[cars].[id]",
                "[C2]": "[cars].[len]",
                "[C3]": "[cars].[position]",
                "[C4]": "[cars].[shape]",
                "[C5]": "[cars].[train_id]",
                "[T2]": "[trains]",
                "[C6]": "[trains].[direction]",
                "[C7]": "[trains].[id]"
            },
            "to_symbol": {
                "[cars]": "[T1]",
                "[cars].[id]": "[C1]",
                "[cars].[len]": "[C2]",
                "[cars].[position]": "[C3]",
                "[cars].[shape]": "[C4]",
                "[cars].[train_id]": "[C5]",
                "[trains]": "[T2]",
                "[trains].[direction]": "[C6]",
                "[trains].[id]": "[C7]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': integer\n  '[C4]': text\n  '[C5]':\n    foreign_key: '[T2].[C7]'\n    type: integer\n'[T2]':\n  '[C6]': text\n  '[C7]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[cars]",
                "[T1].[C1]": "[cars].[id]",
                "[C1]": "[cars].[id]",
                "[T1].[C2]": "[cars].[len]",
                "[C2]": "[cars].[len]",
                "[T1].[C3]": "[cars].[position]",
                "[C3]": "[cars].[position]",
                "[T1].[C4]": "[cars].[shape]",
                "[C4]": "[cars].[shape]",
                "[T1].[C5]": "[cars].[train_id]",
                "[C5]": "[cars].[train_id]",
                "[T2]": "[trains]",
                "[T2].[C6]": "[trains].[direction]",
                "[C6]": "[trains].[direction]",
                "[T2].[C7]": "[trains].[id]",
                "[C7]": "[trains].[id]"
            },
            "question": "What is the average number of [T1] on [T2] that run in the [V1] direction? calculation = DIVIDE(count([C7]), count(train_id)); [V1] is a value of the column [C6]",
            "to_value": {
                "[V1]": "east"
            },
            "masked": 5,
            "masked_terms": [
                "east",
                "cars",
                "trains",
                "east",
                "id"
            ],
            "sql": "SELECT COUNT([T1].[C7]) * 1.0 / COUNT([T2].[train_id]) AS avg_count FROM [T1] JOIN [T2] ON [T1].[C5] = [T2].[C7] WHERE [T2].[C6] = '[V1]'",
            "repaired_sql": "SELECT 1.0 * COUNT(DISTINCT [T1].[C1]) / COUNT(DISTINCT [T2].[C7]) FROM [T1] JOIN [T2] ON [T1].[C5] = [T2].[C7] WHERE [T2].[C6] = '[V1]'"
        },
        "values": [
            "east"
        ],
        "value_links": {
            "east": "[trains].[direction]"
        },
        "filtered_value_links": {
            "east": "[trains].[direction]"
        },
        "schema_links": {
            "cars": "TABLE:[cars]",
            "trains": "TABLE:[trains]",
            "east": "COLUMN:[trains].[direction]",
            "id": "COLUMN:[trains].[id]"
        },
        "filtered_schema_links": {
            "cars": "TABLE:[cars]",
            "trains": "TABLE:[trains]",
            "east": "COLUMN:[trains].[direction]",
            "id": "COLUMN:[trains].[id]"
        },
        "attack": "What is the average number of passengers on trains that run in the north direction? calculation = DIVIDE(count(passenger_id), count(train_id)); north is a value of the column direction"
    },
    {
        "db_id": "trains",
        "question": "What are the ids of the train running east? east is a direction",
        "evidence": "east is a direction",
        "SQL": "SELECT id FROM trains WHERE direction = 'east'",
        "query": "SELECT id FROM trains WHERE direction = 'east'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "are",
            "the",
            "ids",
            "of",
            "the",
            "train",
            "running",
            "east",
            "?",
            "east",
            "is",
            "a",
            "direction"
        ],
        "tc_original": [
            "trains.direction",
            "trains.id",
            "trains.*",
            "cars.id",
            "cars.position",
            "cars.shape",
            "cars.len",
            "cars.sides",
            "cars.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[trains]",
            "COLUMN:[trains].[direction]",
            "COLUMN:[trains].[id]",
            "COLUMN:[trains].[*]",
            "TABLE:[cars]",
            "COLUMN:[cars].[id]",
            "COLUMN:[cars].[position]",
            "COLUMN:[cars].[shape]",
            "COLUMN:[cars].[len]",
            "COLUMN:[cars].[sides]",
            "COLUMN:[cars].[*]"
        ],
        "schema": "'[cars]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[len]': text\n  '[position]': integer\n  '[shape]': text\n  '[sides]': text\n'[trains]':\n  '[direction]': text\n  '[id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "ids": "COLUMN:[trains].[id]",
            "train": "TABLE:[trains]",
            "east": "VALUE:[trains].[direction]",
            "direction": "COLUMN:[trains].[direction]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[cars]",
                "[C1]": "[cars].[id]",
                "[C2]": "[cars].[len]",
                "[C3]": "[cars].[position]",
                "[C4]": "[cars].[shape]",
                "[C5]": "[cars].[sides]",
                "[T2]": "[trains]",
                "[C6]": "[trains].[direction]",
                "[C7]": "[trains].[id]"
            },
            "to_symbol": {
                "[cars]": "[T1]",
                "[cars].[id]": "[C1]",
                "[cars].[len]": "[C2]",
                "[cars].[position]": "[C3]",
                "[cars].[shape]": "[C4]",
                "[cars].[sides]": "[C5]",
                "[trains]": "[T2]",
                "[trains].[direction]": "[C6]",
                "[trains].[id]": "[C7]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C6]': text\n  '[C7]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[cars]",
                "[T1].[C1]": "[cars].[id]",
                "[C1]": "[cars].[id]",
                "[T1].[C2]": "[cars].[len]",
                "[C2]": "[cars].[len]",
                "[T1].[C3]": "[cars].[position]",
                "[C3]": "[cars].[position]",
                "[T1].[C4]": "[cars].[shape]",
                "[C4]": "[cars].[shape]",
                "[T1].[C5]": "[cars].[sides]",
                "[C5]": "[cars].[sides]",
                "[T2]": "[trains]",
                "[T2].[C6]": "[trains].[direction]",
                "[C6]": "[trains].[direction]",
                "[T2].[C7]": "[trains].[id]",
                "[C7]": "[trains].[id]"
            },
            "question": "What are the [C7] of the [T2] [C6] [V1]? [V1] is a direction; [V1] is a value of the column [C6]",
            "to_value": {
                "[V1]": "east"
            },
            "masked": 5,
            "masked_terms": [
                "east",
                "ids",
                "train",
                "running",
                "east"
            ],
            "sql": "SELECT [T2].[C7] FROM [T2] WHERE [T2].[C6] = 'direction'",
            "repaired_sql": "SELECT [T2].[C7] FROM [T2] WHERE [T2].[C6] = '[V1]'"
        },
        "values": [
            "east"
        ],
        "value_links": {
            "east": "[trains].[direction]"
        },
        "filtered_value_links": {
            "east": "[trains].[direction]"
        },
        "schema_links": {
            "ids": "COLUMN:[trains].[id]",
            "train": "TABLE:[trains]",
            "running": "COLUMN:[trains].[direction]",
            "east": "COLUMN:[trains].[direction]"
        },
        "filtered_schema_links": {
            "ids": "COLUMN:[trains].[id]",
            "train": "TABLE:[trains]",
            "running": "COLUMN:[trains].[direction]",
            "east": "COLUMN:[trains].[direction]"
        },
        "attack": "What are the ids of the streets facing north?"
    },
    {
        "db_id": "trains",
        "question": "Provide the directions for all the trains that have 2 or less cars. 2 or less cars refers to trailPosi < = 2",
        "evidence": "2 or less cars refers to trailPosi < = 2",
        "SQL": "SELECT T1.direction FROM trains AS T1 INNER JOIN ( SELECT train_id, MAX(position) AS trailPosi FROM cars GROUP BY train_id ) AS T2 ON T1.id = T2.train_id WHERE T2.trailPosi <= 2",
        "query": "SELECT T1.direction FROM trains AS T1 INNER JOIN ( SELECT train_id, MAX(position) AS trailPosi FROM cars GROUP BY train_id ) AS T2 ON T1.id = T2.train_id WHERE T2.trailPosi <= 2",
        "evidence_added": true,
        "question_toks": [
            "Provide",
            "the",
            "directions",
            "for",
            "all",
            "the",
            "trains",
            "that",
            "have",
            "2",
            "or",
            "less",
            "cars",
            ".",
            "2",
            "or",
            "less",
            "cars",
            "refers",
            "to",
            "trailPosi",
            "<",
            "=",
            "2"
        ],
        "tc_original": [
            "trains.id",
            "trains.direction",
            "trains.*",
            "cars.train_id",
            "cars.position",
            "cars.id",
            "cars.shape",
            "cars.len",
            "cars.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[trains]",
            "COLUMN:[trains].[id]",
            "COLUMN:[trains].[direction]",
            "COLUMN:[trains].[*]",
            "TABLE:[cars]",
            "COLUMN:[cars].[train_id]",
            "COLUMN:[cars].[position]",
            "COLUMN:[cars].[id]",
            "COLUMN:[cars].[shape]",
            "COLUMN:[cars].[len]",
            "COLUMN:[cars].[*]"
        ],
        "schema": "'[cars]':\n  '[id]':\n    primary_key: true\n    type: integer\n  '[len]': text\n  '[position]': integer\n  '[shape]': text\n  '[train_id]':\n    foreign_key: '[trains].[id]'\n    type: integer\n'[trains]':\n  '[direction]': text\n  '[id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "directions": "COLUMN:[trains].[direction]",
            "trains": "TABLE:[trains]",
            "cars": "TABLE:[cars]",
            "position": "COLUMN:[cars].[position]",
            "2": "VALUE:[cars].[position]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[cars]",
                "[C1]": "[cars].[id]",
                "[C2]": "[cars].[len]",
                "[C3]": "[cars].[position]",
                "[C4]": "[cars].[shape]",
                "[C5]": "[cars].[train_id]",
                "[T2]": "[trains]",
                "[C6]": "[trains].[direction]",
                "[C7]": "[trains].[id]"
            },
            "to_symbol": {
                "[cars]": "[T1]",
                "[cars].[id]": "[C1]",
                "[cars].[len]": "[C2]",
                "[cars].[position]": "[C3]",
                "[cars].[shape]": "[C4]",
                "[cars].[train_id]": "[C5]",
                "[trains]": "[T2]",
                "[trains].[direction]": "[C6]",
                "[trains].[id]": "[C7]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': integer\n  '[C4]': text\n  '[C5]':\n    foreign_key: '[T2].[C7]'\n    type: integer\n'[T2]':\n  '[C6]': text\n  '[C7]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[cars]",
                "[T1].[C1]": "[cars].[id]",
                "[C1]": "[cars].[id]",
                "[T1].[C2]": "[cars].[len]",
                "[C2]": "[cars].[len]",
                "[T1].[C3]": "[cars].[position]",
                "[C3]": "[cars].[position]",
                "[T1].[C4]": "[cars].[shape]",
                "[C4]": "[cars].[shape]",
                "[T1].[C5]": "[cars].[train_id]",
                "[C5]": "[cars].[train_id]",
                "[T2]": "[trains]",
                "[T2].[C6]": "[trains].[direction]",
                "[C6]": "[trains].[direction]",
                "[T2].[C7]": "[trains].[id]",
                "[C7]": "[trains].[id]"
            },
            "question": "Provide the directions for all the [T2] that have 2 or [V1] [T1]. 2 or [V1] [T1] refers to trailPosi < = 2; [V1] is a value of the column [C3]",
            "to_value": {
                "[V1]": "less"
            },
            "masked": 4,
            "masked_terms": [
                "less",
                "trains",
                "direction",
                "cars"
            ],
            "sql": "SELECT [T2].[C6] FROM [T2] WHERE [T2].[C7] IN (SELECT [T1].[C5] FROM [T1] WHERE [T1].[C3] <= 2)",
            "repaired_sql": "SELECT [T2].[C6] FROM [T2] JOIN [T1] ON [T2].[C7] = [T1].[C5] WHERE [T1].[C3] <= 2;"
        },
        "values": [
            "2",
            "less"
        ],
        "value_links": {
            "2": "[trains].[*]",
            "less": "[cars].[position]"
        },
        "filtered_value_links": {
            "2": "[trains].[*]",
            "less": "[cars].[position]"
        },
        "schema_links": {
            "trains": "TABLE:[trains]",
            "direction": "COLUMN:[trains].[direction]",
            "cars": "TABLE:[cars]"
        },
        "filtered_schema_links": {
            "trains": "TABLE:[trains]",
            "direction": "COLUMN:[trains].[direction]",
            "cars": "TABLE:[cars]"
        },
        "attack": "Provide the directions for all the trails that have 2 or fewer trail positions. 2 or fewer trail positions refers to trailPosi <= 2; fewer is a value of the column trailPosi"
    },
    {
        "db_id": "movie",
        "question": "Which actor played the role of Joker in the movie Batman? role of Joker refers to character_name = 'Joker'; movie Batman refers to title = 'Batman'",
        "evidence": "role of Joker refers to character_name = 'Joker'; movie Batman refers to title = 'Batman'",
        "SQL": "SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Batman' AND T2.`Character Name` = 'Joker'",
        "query": "SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Batman' AND T2.`Character Name` = 'Joker'",
        "evidence_added": true,
        "question_toks": [
            "Which",
            "actor",
            "played",
            "the",
            "role",
            "of",
            "Joker",
            "in",
            "the",
            "movie",
            "Batman",
            "?",
            "role",
            "of",
            "Joker",
            "refers",
            "to",
            "character_name",
            "=",
            "'Joker'",
            ";",
            "movie",
            "Batman",
            "refers",
            "to",
            "title",
            "=",
            "'Batman'"
        ],
        "tc_original": [
            "movie.movieid",
            "movie.title",
            "movie.budget",
            "movie.gross",
            "movie.genre",
            "movie.*",
            "characters.movieid",
            "characters.actorid",
            "characters.character name",
            "characters.pay",
            "characters.creditorder",
            "characters.*",
            "actor.actorid",
            "actor.name",
            "actor.biography",
            "actor.gender",
            "actor.ethnicity",
            "actor.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[movieid]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[genre]",
            "COLUMN:[movie].[*]",
            "TABLE:[characters]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[*]",
            "TABLE:[actor]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[ethnicity]",
            "COLUMN:[actor].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[ethnicity]': text\n  '[gender]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[genre]': text\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[title]': text\n",
        "gold_links": {
            "actor": "TABLE:[actor]",
            "played": "COLUMN:[characters].[actorid]",
            "role": "COLUMN:[characters].[character name]",
            "Joker": "VALUE:[characters].[character name]",
            "movie": "TABLE:[movie]",
            "Batman": "VALUE:[movie].[title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[ethnicity]",
                "[C4]": "[actor].[gender]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[genre]",
                "[C13]": "[movie].[gross]",
                "[C14]": "[movie].[movieid]",
                "[C15]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[ethnicity]": "[C3]",
                "[actor].[gender]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[genre]": "[C12]",
                "[movie].[gross]": "[C13]",
                "[movie].[movieid]": "[C14]",
                "[movie].[title]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[ethnicity]",
                "[C3]": "[actor].[ethnicity]",
                "[T1].[C4]": "[actor].[gender]",
                "[C4]": "[actor].[gender]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[genre]",
                "[C12]": "[movie].[genre]",
                "[T3].[C13]": "[movie].[gross]",
                "[C13]": "[movie].[gross]",
                "[T3].[C14]": "[movie].[movieid]",
                "[C14]": "[movie].[movieid]",
                "[T3].[C15]": "[movie].[title]",
                "[C15]": "[movie].[title]"
            },
            "question": "Which [T1] [C6] the [C7] of [V1] in the movie [V2]? [C7] of [V1] refers to character_name = '[V1]'; movie [V2] refers to title = '[V2]'; [V1] is a value of the column [C7]; [V2] is a value of the column [C15]",
            "to_value": {
                "[V1]": "Joker",
                "[V2]": "Batman"
            },
            "masked": 7,
            "masked_terms": [
                "Joker",
                "Batman",
                "actor",
                "played",
                "role",
                "Joker",
                "Batman"
            ],
            "sql": "SELECT [T2].[C6] FROM [T2] JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T2].[C7] = '[V1]' AND [T3].[C15] = '[V2]'",
            "repaired_sql": "SELECT [T1].[C2] FROM [T1] JOIN [T2] ON [T1].[C1] = [T2].[C6] JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T2].[C7] = '[V1]' AND [T3].[C15] = '[V2]'"
        },
        "values": [
            "Joker",
            "Batman"
        ],
        "value_links": {
            "Joker": "[characters].[character name]",
            "Batman": "[movie].[title]"
        },
        "filtered_value_links": {
            "Joker": "[characters].[character name]",
            "Batman": "[movie].[title]"
        },
        "schema_links": {
            "actor": "TABLE:[actor]",
            "played": "COLUMN:[characters].[actorid]",
            "role": "COLUMN:[characters].[character name]",
            "Joker": "COLUMN:[characters].[character name]",
            "Batman": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "actor": "TABLE:[actor]",
            "played": "COLUMN:[characters].[actorid]",
            "role": "COLUMN:[characters].[character name]",
            "Joker": "COLUMN:[characters].[character name]",
            "Batman": "COLUMN:[movie].[title]"
        },
        "attack": "Which actor played the character of Harry Potter in the movie Harry Potter and the Sorcerer's Stone?"
    },
    {
        "db_id": "movie",
        "question": "Which movie is the character Dr. Archibald 'Moonlight' Graham from? movie name refers to title; character Dr. Archibald 'Moonlight' Graham refers to character_name = 'Dr. Archibald 'Moonlight' Graham'",
        "evidence": "movie name refers to title; character Dr. Archibald 'Moonlight' Graham refers to character_name = 'Dr. Archibald 'Moonlight' Graham'",
        "SQL": "SELECT T1.Title FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T2.`Character Name` = 'Dr. Archibald ''Moonlight'' Graham'",
        "query": "SELECT T1.Title FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T2.`Character Name` = 'Dr. Archibald ''Moonlight'' Graham'",
        "evidence_added": true,
        "question_toks": [
            "Which",
            "movie",
            "is",
            "the",
            "character",
            "Dr",
            ".",
            "Archibald",
            "'Moonlight'",
            "Graham",
            "from",
            "?",
            "movie",
            "name",
            "refers",
            "to",
            "title",
            ";",
            "character",
            "Dr",
            ".",
            "Archibald",
            "'Moonlight'",
            "Graham",
            "refers",
            "to",
            "character_name",
            "=",
            "'Dr",
            ".",
            "Archibald",
            "'Moonlight'",
            "Graham'"
        ],
        "tc_original": [
            "movie.movieid",
            "movie.title",
            "movie.budget",
            "movie.gross",
            "movie.genre",
            "movie.*",
            "characters.movieid",
            "characters.character name",
            "characters.actorid",
            "characters.pay",
            "characters.creditorder",
            "characters.*",
            "actor.name",
            "actor.biography",
            "actor.gender",
            "actor.ethnicity",
            "actor.actorid",
            "actor.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[movieid]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[genre]",
            "COLUMN:[movie].[*]",
            "TABLE:[characters]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[*]",
            "TABLE:[actor]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[ethnicity]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[ethnicity]': text\n  '[gender]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[genre]': text\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[title]': text\n",
        "gold_links": {
            "movie": "TABLE:[movie]",
            "movie name": "COLUMN:[movie].[title]",
            "Dr. Archibald 'Moonlight' Graham": "VALUE:[characters].[character name]",
            "character": "COLUMN:[characters].[character name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[ethnicity]",
                "[C4]": "[actor].[gender]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[genre]",
                "[C13]": "[movie].[gross]",
                "[C14]": "[movie].[movieid]",
                "[C15]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[ethnicity]": "[C3]",
                "[actor].[gender]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[genre]": "[C12]",
                "[movie].[gross]": "[C13]",
                "[movie].[movieid]": "[C14]",
                "[movie].[title]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[ethnicity]",
                "[C3]": "[actor].[ethnicity]",
                "[T1].[C4]": "[actor].[gender]",
                "[C4]": "[actor].[gender]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[genre]",
                "[C12]": "[movie].[genre]",
                "[T3].[C13]": "[movie].[gross]",
                "[C13]": "[movie].[gross]",
                "[T3].[C14]": "[movie].[movieid]",
                "[C14]": "[movie].[movieid]",
                "[T3].[C15]": "[movie].[title]",
                "[C15]": "[movie].[title]"
            },
            "question": "Which [T3] is the character [V1] from? [T3] name refers to [V2]; character [V1] refers to [C7] = '[V1]'; [V1] is a value of the column [C7]; [V2] is a value of the column [C15]",
            "to_value": {
                "[V1]": "Dr. Archibald 'Moonlight' Graham",
                "[V2]": "title"
            },
            "masked": 5,
            "masked_terms": [
                "Dr. Archibald 'Moonlight' Graham",
                "title",
                "movie",
                "title",
                "character_name"
            ],
            "sql": "SELECT [T3].[C15] FROM [T2] INNER JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T2].[C7] = '[V1]'",
            "repaired_sql": "SELECT [T3].[C15] FROM [T2] JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T2].[C7] = '[V1]';"
        },
        "values": [
            "Dr. Archibald 'Moonlight' Graham",
            "title"
        ],
        "value_links": {
            "Dr. Archibald 'Moonlight' Graham": "[characters].[character name]",
            "title": "[movie].[title]"
        },
        "filtered_value_links": {
            "Dr. Archibald 'Moonlight' Graham": "[characters].[character name]",
            "title": "[movie].[title]"
        },
        "schema_links": {
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "character_name": "COLUMN:[characters].[character name]"
        },
        "filtered_schema_links": {
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "character_name": "COLUMN:[characters].[character name]"
        },
        "attack": "Which show is the character Homer Simpson from? Show name refers to title; character Homer Simpson refers to name = 'Homer Simpson'; Homer Simpson is a value of the column name; title is a value of the column title"
    },
    {
        "db_id": "movie",
        "question": "What is the name of the character played by Tom Cruise in the movie Born on the Fourth of July? played by Tom Cruise refers to name = 'Tom Cruise'; movie Born on the Fourth of July refers to title = 'Born on the Fourth of July'",
        "evidence": "played by Tom Cruise refers to name = 'Tom Cruise'; movie Born on the Fourth of July refers to title = 'Born on the Fourth of July'",
        "SQL": "SELECT T2.`Character Name` FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Name = 'Tom Cruise' AND T1.Title = 'Born on the Fourth of July'",
        "query": "SELECT T2.`Character Name` FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T3.Name = 'Tom Cruise' AND T1.Title = 'Born on the Fourth of July'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "name",
            "of",
            "the",
            "character",
            "played",
            "by",
            "Tom",
            "Cruise",
            "in",
            "the",
            "movie",
            "Born",
            "on",
            "the",
            "Fourth",
            "of",
            "July",
            "?",
            "played",
            "by",
            "Tom",
            "Cruise",
            "refers",
            "to",
            "name",
            "=",
            "'Tom",
            "Cruise'",
            ";",
            "movie",
            "Born",
            "on",
            "the",
            "Fourth",
            "of",
            "July",
            "refers",
            "to",
            "title",
            "=",
            "'Born",
            "on",
            "the",
            "Fourth",
            "of",
            "July'"
        ],
        "tc_original": [
            "characters.character name",
            "characters.movieid",
            "characters.actorid",
            "characters.pay",
            "characters.creditorder",
            "characters.*",
            "movie.movieid",
            "movie.title",
            "movie.budget",
            "movie.gross",
            "movie.genre",
            "movie.*",
            "actor.actorid",
            "actor.name",
            "actor.biography",
            "actor.gender",
            "actor.ethnicity",
            "actor.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[characters]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[movieid]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[genre]",
            "COLUMN:[movie].[*]",
            "TABLE:[actor]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[ethnicity]",
            "COLUMN:[actor].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[ethnicity]': text\n  '[gender]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[genre]': text\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[title]': text\n",
        "gold_links": {
            "name": "COLUMN:[actor].[name]",
            "character": "COLUMN:[characters].[character name]",
            "Tom Cruise": "VALUE:[actor].[name]",
            "movie": "TABLE:[movie]",
            "Born on the Fourth of July": "VALUE:[movie].[title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[ethnicity]",
                "[C4]": "[actor].[gender]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[genre]",
                "[C13]": "[movie].[gross]",
                "[C14]": "[movie].[movieid]",
                "[C15]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[ethnicity]": "[C3]",
                "[actor].[gender]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[genre]": "[C12]",
                "[movie].[gross]": "[C13]",
                "[movie].[movieid]": "[C14]",
                "[movie].[title]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[ethnicity]",
                "[C3]": "[actor].[ethnicity]",
                "[T1].[C4]": "[actor].[gender]",
                "[C4]": "[actor].[gender]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[genre]",
                "[C12]": "[movie].[genre]",
                "[T3].[C13]": "[movie].[gross]",
                "[C13]": "[movie].[gross]",
                "[T3].[C14]": "[movie].[movieid]",
                "[C14]": "[movie].[movieid]",
                "[T3].[C15]": "[movie].[title]",
                "[C15]": "[movie].[title]"
            },
            "question": "What is the [C7] of the character played by [V1] in the [T3] [V2]? played by [V1] refers to [C7] = '[V1]'; [T3] [V2] refers to title = '[V2]'; [V1] is a value of the column [C5]; [V2] is a value of the column [C15]",
            "to_value": {
                "[V1]": "Tom Cruise",
                "[V2]": "Born on the Fourth of July"
            },
            "masked": 6,
            "masked_terms": [
                "Tom Cruise",
                "Born on the Fourth of July",
                "name",
                "Tom Cruise",
                "movie",
                "Born on the Fourth of July"
            ],
            "sql": "SELECT [T2].[C7] FROM [T2] INNER JOIN [T1] ON [T2].[C6] = [T1].[C1] INNER JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T1].[C5] = '[V1]' AND [T3].[C15] = '[V2]'",
            "repaired_sql": "SELECT [T2].[C7] FROM [T2] JOIN [T1] ON [T2].[C6] = [T1].[C1] JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T1].[C5] = '[V1]' AND [T3].[C15] = '[V2]'"
        },
        "values": [
            "Tom Cruise",
            "Born on the Fourth of July"
        ],
        "value_links": {
            "Tom Cruise": "[actor].[name]",
            "Born on the Fourth of July": "[movie].[title]"
        },
        "filtered_value_links": {
            "Tom Cruise": "[actor].[name]",
            "Born on the Fourth of July": "[movie].[title]"
        },
        "schema_links": {
            "name": "COLUMN:[characters].[character name]",
            "Tom Cruise": "COLUMN:[characters].[actorid]",
            "movie": "TABLE:[movie]",
            "Born on the Fourth of July": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "name": "COLUMN:[characters].[character name]",
            "Tom Cruise": "COLUMN:[characters].[actorid]",
            "movie": "TABLE:[movie]",
            "Born on the Fourth of July": "COLUMN:[movie].[title]"
        },
        "attack": "What is the role of the character played by actor in the movie Inception?"
    },
    {
        "db_id": "movie",
        "question": "Please list the names of all the characters played by Tom Cruise. played by Tom Cruise refers to name = 'Tom Cruise'",
        "evidence": "played by Tom Cruise refers to name = 'Tom Cruise'",
        "SQL": "SELECT T1.`Character Name` FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T2.Name = 'Tom Cruise'",
        "query": "SELECT T1.`Character Name` FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T2.Name = 'Tom Cruise'",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "list",
            "the",
            "names",
            "of",
            "all",
            "the",
            "characters",
            "played",
            "by",
            "Tom",
            "Cruise",
            ".",
            "played",
            "by",
            "Tom",
            "Cruise",
            "refers",
            "to",
            "name",
            "=",
            "'Tom",
            "Cruise'"
        ],
        "tc_original": [
            "characters.character name",
            "characters.actorid",
            "characters.pay",
            "characters.movieid",
            "characters.creditorder",
            "characters.*",
            "actor.name",
            "actor.actorid",
            "actor.biography",
            "actor.gender",
            "actor.ethnicity",
            "actor.*",
            "movie.title",
            "movie.budget",
            "movie.gross",
            "movie.genre",
            "movie.runtime",
            "movie.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[characters]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[*]",
            "TABLE:[actor]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[ethnicity]",
            "COLUMN:[actor].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[genre]",
            "COLUMN:[movie].[runtime]",
            "COLUMN:[movie].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[ethnicity]': text\n  '[gender]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[genre]': text\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[runtime]': integer\n  '[title]': text\n",
        "gold_links": {
            "characters": "TABLE:[characters]",
            "names": "COLUMN:[characters].[character name]",
            "Tom Cruise": "VALUE:[actor].[name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[ethnicity]",
                "[C4]": "[actor].[gender]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[genre]",
                "[C13]": "[movie].[gross]",
                "[C14]": "[movie].[movieid]",
                "[C15]": "[movie].[runtime]",
                "[C16]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[ethnicity]": "[C3]",
                "[actor].[gender]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[genre]": "[C12]",
                "[movie].[gross]": "[C13]",
                "[movie].[movieid]": "[C14]",
                "[movie].[runtime]": "[C15]",
                "[movie].[title]": "[C16]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': integer\n  '[C16]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[ethnicity]",
                "[C3]": "[actor].[ethnicity]",
                "[T1].[C4]": "[actor].[gender]",
                "[C4]": "[actor].[gender]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[genre]",
                "[C12]": "[movie].[genre]",
                "[T3].[C13]": "[movie].[gross]",
                "[C13]": "[movie].[gross]",
                "[T3].[C14]": "[movie].[movieid]",
                "[C14]": "[movie].[movieid]",
                "[T3].[C15]": "[movie].[runtime]",
                "[C15]": "[movie].[runtime]",
                "[T3].[C16]": "[movie].[title]",
                "[C16]": "[movie].[title]"
            },
            "question": "Please list the names of all the [T2] played by [V1]. played by [V1] refers to [C5] = '[V1]'; [V1] is a value of the column [C5]",
            "to_value": {
                "[V1]": "Tom Cruise"
            },
            "masked": 4,
            "masked_terms": [
                "Tom Cruise",
                "characters",
                "name",
                "Tom Cruise"
            ],
            "sql": "SELECT [T2].[C10] FROM [T2] INNER JOIN [T1] ON [T2].[C6] = [T1].[C1] WHERE [T1].[C5] = '[V1]'",
            "repaired_sql": "SELECT [T2].[C10] FROM [T2] JOIN [T1] ON [T2].[C6] = [T1].[C1] WHERE [T1].[C5] = '[V1]'"
        },
        "values": [
            "Tom Cruise"
        ],
        "value_links": {
            "Tom Cruise": "[actor].[name]"
        },
        "filtered_value_links": {
            "Tom Cruise": "[actor].[name]"
        },
        "schema_links": {
            "characters": "TABLE:[characters]",
            "name": "COLUMN:[actor].[name]",
            "Tom Cruise": "COLUMN:[actor].[name]"
        },
        "filtered_schema_links": {
            "characters": "TABLE:[characters]",
            "name": "COLUMN:[actor].[name]",
            "Tom Cruise": "COLUMN:[actor].[name]"
        },
        "attack": "Please list the names of all the movies played by Tom Hanks."
    },
    {
        "db_id": "movie",
        "question": "Among the actors who starred in the movie Batman, which one of them is the tallest? movie Batman refers to title = 'Batman'; tallest refers to max(height_inches)",
        "evidence": "movie Batman refers to title = 'Batman'; tallest refers to max(height_inches)",
        "SQL": "SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Batman' ORDER BY T3.`Height (Inches)` DESC LIMIT 1",
        "query": "SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Batman' ORDER BY T3.`Height (Inches)` DESC LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "Among",
            "the",
            "actors",
            "who",
            "starred",
            "in",
            "the",
            "movie",
            "Batman",
            ",",
            "which",
            "one",
            "of",
            "them",
            "is",
            "the",
            "tallest",
            "?",
            "movie",
            "Batman",
            "refers",
            "to",
            "title",
            "=",
            "'Batman'",
            ";",
            "tallest",
            "refers",
            "to",
            "max(height_inches)"
        ],
        "tc_original": [
            "movie.title",
            "movie.movieid",
            "movie.budget",
            "movie.gross",
            "movie.genre",
            "movie.*",
            "actor.actorid",
            "actor.height (inches)",
            "actor.name",
            "actor.biography",
            "actor.gender",
            "actor.*",
            "characters.movieid",
            "characters.actorid",
            "characters.character name",
            "characters.pay",
            "characters.creditorder",
            "characters.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movieid]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[genre]",
            "COLUMN:[movie].[*]",
            "TABLE:[actor]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[height (inches)]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[*]",
            "TABLE:[characters]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[gender]': text\n  '[height (inches)]': integer\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[genre]': text\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[title]': text\n",
        "gold_links": {
            "actors": "TABLE:[actor]",
            "starred": "TABLE:[characters]",
            "movie": "TABLE:[movie]",
            "Batman": "VALUE:[movie].[title]",
            "tallest": "COLUMN:[actor].[height (inches)]",
            "name": "COLUMN:[actor].[name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[gender]",
                "[C4]": "[actor].[height (inches)]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[genre]",
                "[C13]": "[movie].[gross]",
                "[C14]": "[movie].[movieid]",
                "[C15]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[gender]": "[C3]",
                "[actor].[height (inches)]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[genre]": "[C12]",
                "[movie].[gross]": "[C13]",
                "[movie].[movieid]": "[C14]",
                "[movie].[title]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': integer\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[gender]",
                "[C3]": "[actor].[gender]",
                "[T1].[C4]": "[actor].[height (inches)]",
                "[C4]": "[actor].[height (inches)]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[genre]",
                "[C12]": "[movie].[genre]",
                "[T3].[C13]": "[movie].[gross]",
                "[C13]": "[movie].[gross]",
                "[T3].[C14]": "[movie].[movieid]",
                "[C14]": "[movie].[movieid]",
                "[T3].[C15]": "[movie].[title]",
                "[C15]": "[movie].[title]"
            },
            "question": "Among the actors who starred in the [T3] [V1], which one of them is the [C4]? [T3] [V1] refers to title = '[V1]'; [C4] refers to max(height_inches); [V1] is a value of the column [C15]",
            "to_value": {
                "[V1]": "Batman"
            },
            "masked": 5,
            "masked_terms": [
                "Batman",
                "movie",
                "Batman",
                "tallest",
                "actor"
            ],
            "sql": "SELECT [T1].[C2] FROM [T1] INNER JOIN [T2] ON [T1].[C1] = [T2].[C6] INNER JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T3].[C15] = '[V1]' AND [T1].[C4] = (SELECT MAX([T1].[C4]) FROM [T1] INNER JOIN [T2] ON [T1].[C1] = [T2].[C6] INNER JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T3].[C15] = '[V1]')",
            "repaired_sql": "SELECT [T1].[C2] FROM [T1] JOIN [T2] ON [T1].[C1] = [T2].[C6] JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T3].[C15] = '[V1]' AND [T1].[C4] = (SELECT MAX([T1b].[C4]) FROM [T1] AS [T1b] JOIN [T2] AS [T2b] ON [T1b].[C1] = [T2b].[C6] JOIN [T3] AS [T3b] ON [T2b].[C9] = [T3b].[C14] WHERE [T3b].[C15] = '[V1]')"
        },
        "values": [
            "Batman"
        ],
        "value_links": {
            "Batman": "[movie].[title]"
        },
        "filtered_value_links": {
            "Batman": "[movie].[title]"
        },
        "schema_links": {
            "movie": "TABLE:[movie]",
            "Batman": "COLUMN:[movie].[title]",
            "tallest": "COLUMN:[actor].[height (inches)]",
            "actor": "TABLE:[actor]"
        },
        "filtered_schema_links": {
            "movie": "TABLE:[movie]",
            "Batman": "COLUMN:[movie].[title]",
            "tallest": "COLUMN:[actor].[height (inches)]",
            "actor": "TABLE:[actor]"
        },
        "attack": "Among the actors who starred in the movie Titanic, which one of them is the tallest?"
    },
    {
        "db_id": "movie",
        "question": "What is the MPAA rating for the movie with the character named \"Peter Quill\" in it? MPAA rating = 'G' means General audiences; MPAA rating = 'PG' means Parental guidance suggested; MPAA rating = 'R'means Restricted; MPAA rating = 'X' means No one under 17 admitted",
        "evidence": "MPAA rating = 'G' means General audiences; MPAA rating = 'PG' means Parental guidance suggested; MPAA rating = 'R'means Restricted; MPAA rating = 'X' means No one under 17 admitted",
        "SQL": "SELECT T1.`MPAA Rating` FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T2.`Character Name` = 'Peter Quill'",
        "query": "SELECT T1.`MPAA Rating` FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T2.`Character Name` = 'Peter Quill'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "MPAA",
            "rating",
            "for",
            "the",
            "movie",
            "with",
            "the",
            "character",
            "named",
            "\"Peter",
            "Quill\"",
            "in",
            "it",
            "?",
            "MPAA",
            "rating",
            "=",
            "'G'",
            "means",
            "General",
            "audiences",
            ";",
            "MPAA",
            "rating",
            "=",
            "'PG'",
            "means",
            "Parental",
            "guidance",
            "suggested",
            ";",
            "MPAA",
            "rating",
            "=",
            "'R'means",
            "Restricted",
            ";",
            "MPAA",
            "rating",
            "=",
            "'X'",
            "means",
            "No",
            "one",
            "under",
            "17",
            "admitted"
        ],
        "tc_original": [
            "characters.character name",
            "characters.movieid",
            "characters.actorid",
            "characters.pay",
            "characters.creditorder",
            "characters.*",
            "movie.movieid",
            "movie.rating",
            "movie.mpaa rating",
            "movie.title",
            "movie.budget",
            "movie.*",
            "actor.name",
            "actor.biography",
            "actor.gender",
            "actor.ethnicity",
            "actor.actorid",
            "actor.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[characters]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[movieid]",
            "COLUMN:[movie].[rating]",
            "COLUMN:[movie].[mpaa rating]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[*]",
            "TABLE:[actor]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[ethnicity]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[ethnicity]': text\n  '[gender]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[mpaa rating]': text\n  '[rating]': real\n  '[title]': text\n",
        "gold_links": {
            "MPAA rating": "COLUMN:[movie].[mpaa rating]",
            "movie": "TABLE:[movie]",
            "character": "COLUMN:[characters].[character name]",
            "Peter Quill": "VALUE:[characters].[character name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[ethnicity]",
                "[C4]": "[actor].[gender]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[movieid]",
                "[C13]": "[movie].[mpaa rating]",
                "[C14]": "[movie].[rating]",
                "[C15]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[ethnicity]": "[C3]",
                "[actor].[gender]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[movieid]": "[C12]",
                "[movie].[mpaa rating]": "[C13]",
                "[movie].[rating]": "[C14]",
                "[movie].[title]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C12]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]':\n    primary_key: true\n    type: integer\n  '[C13]': text\n  '[C14]': real\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[ethnicity]",
                "[C3]": "[actor].[ethnicity]",
                "[T1].[C4]": "[actor].[gender]",
                "[C4]": "[actor].[gender]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[movieid]",
                "[C12]": "[movie].[movieid]",
                "[T3].[C13]": "[movie].[mpaa rating]",
                "[C13]": "[movie].[mpaa rating]",
                "[T3].[C14]": "[movie].[rating]",
                "[C14]": "[movie].[rating]",
                "[T3].[C15]": "[movie].[title]",
                "[C15]": "[movie].[title]"
            },
            "question": "What is the [C13] for the [T3] with the character named \"[V1]\" in it? [C13] = '[V2]' means General audiences; [C13] = '[V3]' means Parental guidance suggested; [C13] = '[V4]'means Restricted; [C13] = '[V5]' means No one under 17 admitted; [V1] is a value of the column [C7]; [V2] is a value of the column [C13]; [V3] is a value of the column [C13]; [V4] is a value of the column [C13]; [V5] is a value of the column [C13]",
            "to_value": {
                "[V1]": "Peter Quill",
                "[V2]": "G",
                "[V3]": "PG",
                "[V4]": "R",
                "[V5]": "X"
            },
            "masked": 8,
            "masked_terms": [
                "Peter Quill",
                "G",
                "PG",
                "R",
                "X",
                "mpaa rating",
                "movie",
                "Peter Quill"
            ],
            "sql": "SELECT [T3].[C13] FROM [T3] JOIN [T2] ON [T2].[C9] = [T3].[C12] WHERE [T2].[C7] = '[V1]'",
            "repaired_sql": "SELECT [T3].[C13] FROM [T3] JOIN [T2] ON [T3].[C12] = [T2].[C9] WHERE [T2].[C7] = '[V1]'"
        },
        "values": [
            "Peter Quill",
            "G",
            "PG",
            "R",
            "X"
        ],
        "value_links": {
            "Peter Quill": "[characters].[character name]",
            "G": "[movie].[mpaa rating]",
            "PG": "[movie].[mpaa rating]",
            "R": "[movie].[mpaa rating]",
            "X": "[movie].[mpaa rating]"
        },
        "filtered_value_links": {
            "Peter Quill": "[characters].[character name]",
            "G": "[movie].[mpaa rating]",
            "PG": "[movie].[mpaa rating]",
            "R": "[movie].[mpaa rating]",
            "X": "[movie].[mpaa rating]"
        },
        "schema_links": {
            "mpaa rating": "COLUMN:[movie].[mpaa rating]",
            "movie": "TABLE:[movie]",
            "Peter Quill": "COLUMN:[characters].[character name]"
        },
        "filtered_schema_links": {
            "mpaa rating": "COLUMN:[movie].[mpaa rating]",
            "movie": "TABLE:[movie]",
            "Peter Quill": "COLUMN:[characters].[character name]"
        },
        "attack": "What is the rating for the movie with the character named \"Luke Skywalker\" in it? Rating = 'G' means General audiences; rating = 'PG' means Parental guidance suggested; rating = 'R' means Restricted; rating = 'NC-17' means No one under 17 admitted; \"Luke Skywalker\" is a value of the column character_name; 'G' is a value of the column rating; 'PG' is a value of the column rating; 'R' is a value of the column rating; 'NC-17' is a value of the column rating"
    },
    {
        "db_id": "movie",
        "question": "Who was the actor that played in the movie \"Batman\" with the longest screentime? movie \"Batman\" refers to Title = 'Batman'; longest screentime refers to max(screentime)",
        "evidence": "movie \"Batman\" refers to Title = 'Batman'; longest screentime refers to max(screentime)",
        "SQL": "SELECT T2.Name FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID INNER JOIN movie AS T3 ON T3.MovieID = T1.MovieID WHERE T3.Title = 'Batman' ORDER BY T1.screentime DESC LIMIT 1",
        "query": "SELECT T2.Name FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID INNER JOIN movie AS T3 ON T3.MovieID = T1.MovieID WHERE T3.Title = 'Batman' ORDER BY T1.screentime DESC LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "Who",
            "was",
            "the",
            "actor",
            "that",
            "played",
            "in",
            "the",
            "movie",
            "\"Batman\"",
            "with",
            "the",
            "longest",
            "screentime",
            "?",
            "movie",
            "\"Batman\"",
            "refers",
            "to",
            "Title",
            "=",
            "'Batman'",
            ";",
            "longest",
            "screentime",
            "refers",
            "to",
            "max(screentime)"
        ],
        "tc_original": [
            "movie.title",
            "movie.movieid",
            "movie.budget",
            "movie.gross",
            "movie.genre",
            "movie.*",
            "characters.screentime",
            "characters.movieid",
            "characters.actorid",
            "characters.character name",
            "characters.pay",
            "characters.*",
            "actor.actorid",
            "actor.name",
            "actor.biography",
            "actor.gender",
            "actor.ethnicity",
            "actor.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movieid]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[genre]",
            "COLUMN:[movie].[*]",
            "TABLE:[characters]",
            "COLUMN:[characters].[screentime]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[*]",
            "TABLE:[actor]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[ethnicity]",
            "COLUMN:[actor].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[ethnicity]': text\n  '[gender]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n  '[screentime]': text\n'[movie]':\n  '[budget]': integer\n  '[genre]': text\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[title]': text\n",
        "gold_links": {
            "actor": "TABLE:[actor]",
            "movie": "TABLE:[movie]",
            "Batman": "VALUE:[movie].[title]",
            "screentime": "COLUMN:[characters].[screentime]",
            "longest screentime": "COLUMN:[characters].[screentime]",
            "name": "COLUMN:[actor].[name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[ethnicity]",
                "[C4]": "[actor].[gender]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[movieid]",
                "[C9]": "[characters].[pay]",
                "[C10]": "[characters].[screentime]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[genre]",
                "[C13]": "[movie].[gross]",
                "[C14]": "[movie].[movieid]",
                "[C15]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[ethnicity]": "[C3]",
                "[actor].[gender]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[movieid]": "[C8]",
                "[characters].[pay]": "[C9]",
                "[characters].[screentime]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[genre]": "[C12]",
                "[movie].[gross]": "[C13]",
                "[movie].[movieid]": "[C14]",
                "[movie].[title]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: integer\n  '[C9]': text\n'[T3]':\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[ethnicity]",
                "[C3]": "[actor].[ethnicity]",
                "[T1].[C4]": "[actor].[gender]",
                "[C4]": "[actor].[gender]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[movieid]",
                "[C8]": "[characters].[movieid]",
                "[T2].[C9]": "[characters].[pay]",
                "[C9]": "[characters].[pay]",
                "[T2].[C10]": "[characters].[screentime]",
                "[C10]": "[characters].[screentime]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[genre]",
                "[C12]": "[movie].[genre]",
                "[T3].[C13]": "[movie].[gross]",
                "[C13]": "[movie].[gross]",
                "[T3].[C14]": "[movie].[movieid]",
                "[C14]": "[movie].[movieid]",
                "[T3].[C15]": "[movie].[title]",
                "[C15]": "[movie].[title]"
            },
            "question": "Who was the [C5] that played in the [T3] \"[V1]\" with the [C10] screentime? [T3] \"[V1]\" refers to [C15] = '[V1]'; [C10] screentime refers to max(screentime); [V1] is a value of the column [C15]",
            "to_value": {
                "[V1]": "Batman"
            },
            "masked": 6,
            "masked_terms": [
                "Batman",
                "actor",
                "movie",
                "title",
                "longest",
                "Batman"
            ],
            "sql": "SELECT [T1].[C5] FROM [T1] JOIN [T2] ON [T2].[C6] = [T1].[C1] JOIN [T3] ON [T2].[C8] = [T3].[C14] WHERE [T3].[C15] = '[V1]' AND [T2].[C10] = (     SELECT MAX([T2].[C10]) FROM [T2]     JOIN [T3] ON [T2].[C8] = [T3].[C14]     WHERE [T3].[C15] = '[V1]' )",
            "repaired_sql": "SELECT [T1].[C5] FROM [T1] JOIN [T2] ON [T1].[C1] = [T2].[C6] JOIN [T3] ON [T2].[C8] = [T3].[C14] WHERE [T3].[C15] = '[V1]' AND [T2].[C10] = (SELECT MAX([T2_sub].[C10]) FROM [T2] AS [T2_sub] JOIN [T3] AS [T3_sub] ON [T2_sub].[C8] = [T3_sub].[C14] WHERE [T3_sub].[C15] = '[V1]')"
        },
        "values": [
            "Batman"
        ],
        "value_links": {
            "Batman": "[movie].[title]"
        },
        "filtered_value_links": {
            "Batman": "[movie].[title]"
        },
        "schema_links": {
            "actor": "COLUMN:[actor].[name]",
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "longest": "COLUMN:[characters].[screentime]",
            "Batman": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "actor": "COLUMN:[actor].[name]",
            "movie": "TABLE:[movie]",
            "title": "COLUMN:[movie].[title]",
            "longest": "COLUMN:[characters].[screentime]",
            "Batman": "COLUMN:[movie].[title]"
        },
        "attack": "Who was the actor that played in the movie \"Inception\" with the highest screentime? Movie \"Inception\" refers to title = 'Inception'; highest screentime refers to max(screentime); \"Inception\" is a value of the column title."
    },
    {
        "db_id": "movie",
        "question": "Who played the character named \"Chanice Kobolowski\"?",
        "evidence": "",
        "SQL": "SELECT T2.Name FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T1.`Character Name` = 'Chanice Kobolowski'",
        "query": "SELECT T2.Name FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T1.`Character Name` = 'Chanice Kobolowski'",
        "question_toks": [
            "Who",
            "played",
            "the",
            "character",
            "named",
            "\"Chanice",
            "Kobolowski\"",
            "?"
        ],
        "tc_original": [
            "characters.character name",
            "characters.actorid",
            "characters.pay",
            "characters.movieid",
            "characters.creditorder",
            "characters.*",
            "actor.actorid",
            "actor.name",
            "actor.biography",
            "actor.gender",
            "actor.ethnicity",
            "actor.*",
            "movie.title",
            "movie.budget",
            "movie.gross",
            "movie.genre",
            "movie.runtime",
            "movie.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[characters]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[*]",
            "TABLE:[actor]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[ethnicity]",
            "COLUMN:[actor].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[genre]",
            "COLUMN:[movie].[runtime]",
            "COLUMN:[movie].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[ethnicity]': text\n  '[gender]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[genre]': text\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[runtime]': integer\n  '[title]': text\n",
        "gold_links": {
            "played": "COLUMN:[characters].[actorid]",
            "character": "COLUMN:[characters].[character name]",
            "Chanice Kobolowski": "VALUE:[characters].[character name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[ethnicity]",
                "[C4]": "[actor].[gender]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[genre]",
                "[C13]": "[movie].[gross]",
                "[C14]": "[movie].[movieid]",
                "[C15]": "[movie].[runtime]",
                "[C16]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[ethnicity]": "[C3]",
                "[actor].[gender]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[genre]": "[C12]",
                "[movie].[gross]": "[C13]",
                "[movie].[movieid]": "[C14]",
                "[movie].[runtime]": "[C15]",
                "[movie].[title]": "[C16]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': integer\n  '[C16]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[ethnicity]",
                "[C3]": "[actor].[ethnicity]",
                "[T1].[C4]": "[actor].[gender]",
                "[C4]": "[actor].[gender]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[genre]",
                "[C12]": "[movie].[genre]",
                "[T3].[C13]": "[movie].[gross]",
                "[C13]": "[movie].[gross]",
                "[T3].[C14]": "[movie].[movieid]",
                "[C14]": "[movie].[movieid]",
                "[T3].[C15]": "[movie].[runtime]",
                "[C15]": "[movie].[runtime]",
                "[T3].[C16]": "[movie].[title]",
                "[C16]": "[movie].[title]"
            },
            "question": "Who [C6] the [C7] named \"[V1]\"?; [V1] is a value of the column [C7]",
            "to_value": {
                "[V1]": "Chanice Kobolowski"
            },
            "masked": 4,
            "masked_terms": [
                "Chanice Kobolowski",
                "played",
                "character",
                "Chanice Kobolowski"
            ],
            "sql": "SELECT [T2].[C6] FROM [T2] WHERE [T2].[C7] = '[V1]'",
            "repaired_sql": "SELECT [T2].[C6] FROM [T2] WHERE [T2].[C7] = '[V1]'"
        },
        "values": [
            "Chanice Kobolowski"
        ],
        "value_links": {
            "Chanice Kobolowski": "[characters].[character name]"
        },
        "filtered_value_links": {
            "Chanice Kobolowski": "[characters].[character name]"
        },
        "schema_links": {
            "played": "COLUMN:[characters].[actorid]",
            "character": "COLUMN:[characters].[character name]",
            "Chanice Kobolowski": "COLUMN:[characters].[character name]"
        },
        "filtered_schema_links": {
            "played": "COLUMN:[characters].[actorid]",
            "character": "COLUMN:[characters].[character name]",
            "Chanice Kobolowski": "COLUMN:[characters].[character name]"
        },
        "attack": "Who owns the product named \"Widget\"?"
    },
    {
        "db_id": "movie",
        "question": "When is the birthday of the actor who played \"Sully\"? birthday refers to Date of Birth; \"Sully\" refers to Character Name = 'Sully'",
        "evidence": "birthday refers to Date of Birth; \"Sully\" refers to Character Name = 'Sully'",
        "SQL": "SELECT T2.`Date of Birth` FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T1.`Character Name` = 'Sully'",
        "query": "SELECT T2.`Date of Birth` FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T1.`Character Name` = 'Sully'",
        "evidence_added": true,
        "question_toks": [
            "When",
            "is",
            "the",
            "birthday",
            "of",
            "the",
            "actor",
            "who",
            "played",
            "\"Sully\"",
            "?",
            "birthday",
            "refers",
            "to",
            "Date",
            "of",
            "Birth",
            ";",
            "\"Sully\"",
            "refers",
            "to",
            "Character",
            "Name",
            "=",
            "'Sully'"
        ],
        "tc_original": [
            "actor.actorid",
            "actor.date of birth",
            "actor.name",
            "actor.biography",
            "actor.gender",
            "actor.*",
            "characters.character name",
            "characters.actorid",
            "characters.movieid",
            "characters.pay",
            "characters.creditorder",
            "characters.*",
            "movie.title",
            "movie.budget",
            "movie.gross",
            "movie.genre",
            "movie.runtime",
            "movie.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[actor]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[date of birth]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[*]",
            "TABLE:[characters]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[genre]",
            "COLUMN:[movie].[runtime]",
            "COLUMN:[movie].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[date of birth]': date\n  '[gender]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[genre]': text\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[runtime]': integer\n  '[title]': text\n",
        "gold_links": {
            "birthday": "COLUMN:[actor].[date of birth]",
            "actor": "TABLE:[actor]",
            "Sully": "VALUE:[characters].[character name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[date of birth]",
                "[C4]": "[actor].[gender]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[genre]",
                "[C13]": "[movie].[gross]",
                "[C14]": "[movie].[movieid]",
                "[C15]": "[movie].[runtime]",
                "[C16]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[date of birth]": "[C3]",
                "[actor].[gender]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[genre]": "[C12]",
                "[movie].[gross]": "[C13]",
                "[movie].[movieid]": "[C14]",
                "[movie].[runtime]": "[C15]",
                "[movie].[title]": "[C16]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': date\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': integer\n  '[C16]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[date of birth]",
                "[C3]": "[actor].[date of birth]",
                "[T1].[C4]": "[actor].[gender]",
                "[C4]": "[actor].[gender]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[genre]",
                "[C12]": "[movie].[genre]",
                "[T3].[C13]": "[movie].[gross]",
                "[C13]": "[movie].[gross]",
                "[T3].[C14]": "[movie].[movieid]",
                "[C14]": "[movie].[movieid]",
                "[T3].[C15]": "[movie].[runtime]",
                "[C15]": "[movie].[runtime]",
                "[T3].[C16]": "[movie].[title]",
                "[C16]": "[movie].[title]"
            },
            "question": "When is the [C3] of the [T1] who played \"[V2]\"? [C3] refers to [V1]; \"[V2]\" refers to Character Name = '[V2]'; [V1] is a value of the column [C3]; [V2] is a value of the column [C7]",
            "to_value": {
                "[V1]": "Date of Birth",
                "[V2]": "Sully"
            },
            "masked": 5,
            "masked_terms": [
                "Date of Birth",
                "Sully",
                "birthday",
                "actor",
                "Sully"
            ],
            "sql": "SELECT [T1].[C3] FROM [T1] JOIN [T2] ON [T1].[C1] = [T2].[C6] WHERE [T2].[C7] = '[V2]'",
            "repaired_sql": "SELECT [T1].[C3] FROM [T1] JOIN [T2] ON [T1].[C1] = [T2].[C6] WHERE [T2].[C7] = '[V2]' AND [T1].[C3] = '[V1]'"
        },
        "values": [
            "Date of Birth",
            "Sully"
        ],
        "value_links": {
            "Date of Birth": "[actor].[date of birth]",
            "Sully": "[characters].[character name]"
        },
        "filtered_value_links": {
            "Date of Birth": "[actor].[date of birth]",
            "Sully": "[characters].[character name]"
        },
        "schema_links": {
            "birthday": "COLUMN:[actor].[date of birth]",
            "actor": "TABLE:[actor]",
            "Sully": "COLUMN:[characters].[character name]"
        },
        "filtered_schema_links": {
            "birthday": "COLUMN:[actor].[date of birth]",
            "actor": "TABLE:[actor]",
            "Sully": "COLUMN:[characters].[character name]"
        },
        "attack": "When is the release date of the movie who played \"Harry Potter\"?"
    },
    {
        "db_id": "movie",
        "question": "Give the biography of the actor who played \"Michael Moscovitz\". \"Michael Moscovitz\" refers to Character Name = 'Michael Moscovitz'",
        "evidence": "\"Michael Moscovitz\" refers to Character Name = 'Michael Moscovitz'",
        "SQL": "SELECT T2.Biography FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T1.`Character Name` = 'Michael Moscovitz'",
        "query": "SELECT T2.Biography FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T1.`Character Name` = 'Michael Moscovitz'",
        "evidence_added": true,
        "question_toks": [
            "Give",
            "the",
            "biography",
            "of",
            "the",
            "actor",
            "who",
            "played",
            "\"Michael",
            "Moscovitz\"",
            ".",
            "\"Michael",
            "Moscovitz\"",
            "refers",
            "to",
            "Character",
            "Name",
            "=",
            "'Michael",
            "Moscovitz'"
        ],
        "tc_original": [
            "actor.actorid",
            "actor.biography",
            "actor.name",
            "actor.gender",
            "actor.ethnicity",
            "actor.*",
            "characters.character name",
            "characters.actorid",
            "characters.movieid",
            "characters.pay",
            "characters.creditorder",
            "characters.*",
            "movie.budget",
            "movie.gross",
            "movie.genre",
            "movie.runtime",
            "movie.rating",
            "movie.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[actor]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[ethnicity]",
            "COLUMN:[actor].[*]",
            "TABLE:[characters]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[genre]",
            "COLUMN:[movie].[runtime]",
            "COLUMN:[movie].[rating]",
            "COLUMN:[movie].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[ethnicity]': text\n  '[gender]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[genre]': text\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[rating]': real\n  '[runtime]': integer\n",
        "gold_links": {
            "biography": "COLUMN:[actor].[biography]",
            "actor": "TABLE:[actor]",
            "Michael Moscovitz": "VALUE:[characters].[character name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[ethnicity]",
                "[C4]": "[actor].[gender]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[genre]",
                "[C13]": "[movie].[gross]",
                "[C14]": "[movie].[movieid]",
                "[C15]": "[movie].[rating]",
                "[C16]": "[movie].[runtime]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[ethnicity]": "[C3]",
                "[actor].[gender]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[genre]": "[C12]",
                "[movie].[gross]": "[C13]",
                "[movie].[movieid]": "[C14]",
                "[movie].[rating]": "[C15]",
                "[movie].[runtime]": "[C16]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': real\n  '[C16]': integer\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[ethnicity]",
                "[C3]": "[actor].[ethnicity]",
                "[T1].[C4]": "[actor].[gender]",
                "[C4]": "[actor].[gender]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[genre]",
                "[C12]": "[movie].[genre]",
                "[T3].[C13]": "[movie].[gross]",
                "[C13]": "[movie].[gross]",
                "[T3].[C14]": "[movie].[movieid]",
                "[C14]": "[movie].[movieid]",
                "[T3].[C15]": "[movie].[rating]",
                "[C15]": "[movie].[rating]",
                "[T3].[C16]": "[movie].[runtime]",
                "[C16]": "[movie].[runtime]"
            },
            "question": "Give the [C2] of the [T1] who played \"[V1]\". \"[V1]\" refers to Character Name = '[V1]'; [V1] is a value of the column [C2]",
            "to_value": {
                "[V1]": "Michael Moscovitz"
            },
            "masked": 4,
            "masked_terms": [
                "Michael Moscovitz",
                "biography",
                "actor",
                "Michael Moscovitz"
            ],
            "sql": "SELECT [T1].[C2] FROM [T1] WHERE [T1].[C2] = '[V1]'",
            "repaired_sql": "SELECT [C2] FROM [T1] WHERE [C2] = '[V1]'"
        },
        "values": [
            "Michael Moscovitz"
        ],
        "value_links": {
            "Michael Moscovitz": "[actor].[biography]"
        },
        "filtered_value_links": {
            "Michael Moscovitz": "[actor].[biography]"
        },
        "schema_links": {
            "biography": "COLUMN:[actor].[biography]",
            "actor": "TABLE:[actor]",
            "Michael Moscovitz": "COLUMN:[characters].[character name]"
        },
        "filtered_schema_links": {
            "biography": "COLUMN:[actor].[biography]",
            "actor": "TABLE:[actor]",
            "Michael Moscovitz": "COLUMN:[characters].[character name]"
        },
        "attack": "Give the character name of the actors who played \"Harry Potter\". \"Harry Potter\" refers to Character Name = 'Harry Potter'; Harry Potter is a value of the column character name."
    },
    {
        "db_id": "movie",
        "question": "How tall is the actor who played \"Lurch\"? tall refers to Height (Inches); \"Lurch\" refers to Character Name = 'Lurch'",
        "evidence": "tall refers to Height (Inches); \"Lurch\" refers to Character Name = 'Lurch'",
        "SQL": "SELECT T2.`Height (Inches)` FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T1.`Character Name` = 'Lurch'",
        "query": "SELECT T2.`Height (Inches)` FROM characters AS T1 INNER JOIN actor AS T2 ON T1.ActorID = T2.ActorID WHERE T1.`Character Name` = 'Lurch'",
        "evidence_added": true,
        "question_toks": [
            "How",
            "tall",
            "is",
            "the",
            "actor",
            "who",
            "played",
            "\"Lurch\"",
            "?",
            "tall",
            "refers",
            "to",
            "Height",
            "(Inches)",
            ";",
            "\"Lurch\"",
            "refers",
            "to",
            "Character",
            "Name",
            "=",
            "'Lurch'"
        ],
        "tc_original": [
            "actor.height (inches)",
            "actor.actorid",
            "actor.name",
            "actor.biography",
            "actor.gender",
            "actor.*",
            "characters.actorid",
            "characters.character name",
            "characters.pay",
            "characters.movieid",
            "characters.creditorder",
            "characters.*",
            "movie.title",
            "movie.budget",
            "movie.gross",
            "movie.genre",
            "movie.runtime",
            "movie.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[actor]",
            "COLUMN:[actor].[height (inches)]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[*]",
            "TABLE:[characters]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[genre]",
            "COLUMN:[movie].[runtime]",
            "COLUMN:[movie].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[gender]': text\n  '[height (inches)]': integer\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[genre]': text\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[runtime]': integer\n  '[title]': text\n",
        "gold_links": {
            "tall": "COLUMN:[actor].[height (inches)]",
            "height": "COLUMN:[actor].[height (inches)]",
            "actor": "TABLE:[actor]",
            "Lurch": "VALUE:[characters].[character name]",
            "character name": "COLUMN:[characters].[character name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[gender]",
                "[C4]": "[actor].[height (inches)]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[genre]",
                "[C13]": "[movie].[gross]",
                "[C14]": "[movie].[movieid]",
                "[C15]": "[movie].[runtime]",
                "[C16]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[gender]": "[C3]",
                "[actor].[height (inches)]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[genre]": "[C12]",
                "[movie].[gross]": "[C13]",
                "[movie].[movieid]": "[C14]",
                "[movie].[runtime]": "[C15]",
                "[movie].[title]": "[C16]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': integer\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': integer\n  '[C16]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[gender]",
                "[C3]": "[actor].[gender]",
                "[T1].[C4]": "[actor].[height (inches)]",
                "[C4]": "[actor].[height (inches)]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[genre]",
                "[C12]": "[movie].[genre]",
                "[T3].[C13]": "[movie].[gross]",
                "[C13]": "[movie].[gross]",
                "[T3].[C14]": "[movie].[movieid]",
                "[C14]": "[movie].[movieid]",
                "[T3].[C15]": "[movie].[runtime]",
                "[C15]": "[movie].[runtime]",
                "[T3].[C16]": "[movie].[title]",
                "[C16]": "[movie].[title]"
            },
            "question": "How [C4] is the [T1] who played \"[V1]\"? [C4] refers to Height (Inches); \"[V1]\" refers to Character Name = '[V1]'; [V1] is a value of the column [C7]; [V2] is a value of the column [C4]",
            "to_value": {
                "[V1]": "Lurch",
                "[V2]": "Height (Inches)"
            },
            "masked": 5,
            "masked_terms": [
                "Lurch",
                "Height (Inches)",
                "tall",
                "actor",
                "Lurch"
            ],
            "sql": "SELECT [T1].[C4] FROM [T1] INNER JOIN [T2] ON [T1].[C1] = [T2].[C6] WHERE [T2].[C7] = '[V1]'",
            "repaired_sql": "SELECT [T1].[C4] FROM [T1] JOIN [T2] ON [T1].[C1] = [T2].[C6] WHERE [T2].[C7] = '[V1]'"
        },
        "values": [
            "Lurch",
            "Height (Inches)"
        ],
        "value_links": {
            "Lurch": "[characters].[character name]",
            "Height (Inches)": "[actor].[height (inches)]"
        },
        "filtered_value_links": {
            "Lurch": "[characters].[character name]",
            "Height (Inches)": "[actor].[height (inches)]"
        },
        "schema_links": {
            "tall": "COLUMN:[actor].[height (inches)]",
            "actor": "TABLE:[actor]",
            "Lurch": "COLUMN:[characters].[character name]"
        },
        "filtered_schema_links": {
            "tall": "COLUMN:[actor].[height (inches)]",
            "actor": "TABLE:[actor]",
            "Lurch": "COLUMN:[characters].[character name]"
        },
        "attack": "How tall is the actor who played \"Harry Potter\"?"
    },
    {
        "db_id": "movie",
        "question": "Show the No.3 character name in the credit list of the movie \"G.I. Joe: The Rise of Cobra\". No.3 character refers to creditOrder = '3'; movie \"G.I. Joe: The Rise of Cobra\" refers to Title = 'G.I. Joe: The Rise of Cobra'",
        "evidence": "No.3 character refers to creditOrder = '3'; movie \"G.I. Joe: The Rise of Cobra\" refers to Title = 'G.I. Joe: The Rise of Cobra'",
        "SQL": "SELECT T2.`Character Name` FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T1.Title = 'G.I. Joe: The Rise of Cobra' AND T2.creditOrder = '3'",
        "query": "SELECT T2.`Character Name` FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID WHERE T1.Title = 'G.I. Joe: The Rise of Cobra' AND T2.creditOrder = '3'",
        "evidence_added": true,
        "question_toks": [
            "Show",
            "the",
            "No.3",
            "character",
            "name",
            "in",
            "the",
            "credit",
            "list",
            "of",
            "the",
            "movie",
            "\"G.I",
            ".",
            "Joe",
            ":",
            "The",
            "Rise",
            "of",
            "Cobra\"",
            ".",
            "No.3",
            "character",
            "refers",
            "to",
            "creditOrder",
            "=",
            "'3'",
            ";",
            "movie",
            "\"G.I",
            ".",
            "Joe",
            ":",
            "The",
            "Rise",
            "of",
            "Cobra\"",
            "refers",
            "to",
            "Title",
            "=",
            "'G.I",
            ".",
            "Joe",
            ":",
            "The",
            "Rise",
            "of",
            "Cobra'"
        ],
        "tc_original": [
            "characters.character name",
            "characters.movieid",
            "characters.creditorder",
            "characters.actorid",
            "characters.pay",
            "characters.*",
            "movie.movieid",
            "movie.title",
            "movie.budget",
            "movie.gross",
            "movie.genre",
            "movie.*",
            "actor.name",
            "actor.biography",
            "actor.gender",
            "actor.ethnicity",
            "actor.actorid",
            "actor.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[characters]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[movieid]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[genre]",
            "COLUMN:[movie].[*]",
            "TABLE:[actor]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[ethnicity]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[ethnicity]': text\n  '[gender]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[genre]': text\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[title]': text\n",
        "gold_links": {
            "No.3 character": "COLUMN:[characters].[creditorder]",
            "character name": "COLUMN:[characters].[character name]",
            "credit list": "TABLE:[characters]",
            "movie": "TABLE:[movie]",
            "G.I. Joe: The Rise of Cobra": "VALUE:[movie].[title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[ethnicity]",
                "[C4]": "[actor].[gender]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[genre]",
                "[C13]": "[movie].[gross]",
                "[C14]": "[movie].[movieid]",
                "[C15]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[ethnicity]": "[C3]",
                "[actor].[gender]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[genre]": "[C12]",
                "[movie].[gross]": "[C13]",
                "[movie].[movieid]": "[C14]",
                "[movie].[title]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[ethnicity]",
                "[C3]": "[actor].[ethnicity]",
                "[T1].[C4]": "[actor].[gender]",
                "[C4]": "[actor].[gender]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[genre]",
                "[C12]": "[movie].[genre]",
                "[T3].[C13]": "[movie].[gross]",
                "[C13]": "[movie].[gross]",
                "[T3].[C14]": "[movie].[movieid]",
                "[C14]": "[movie].[movieid]",
                "[T3].[C15]": "[movie].[title]",
                "[C15]": "[movie].[title]"
            },
            "question": "Show the [C7] name in the [C8] of the [T3] \"[C15]: The [C15]\". [C7] refers to creditOrder = '3'; [T3] \"[C15]: The [C15]\" refers to [C15] = '[C15]: The [C15]'; [V1] is a value of the column [C8]; [V2] is a value of the column [C15]",
            "to_value": {
                "[V1]": "'3'",
                "[V2]": "'G.I. Joe: The Rise of Cobra'"
            },
            "masked": 8,
            "masked_terms": [
                "'3'",
                "'G.I. Joe: The Rise of Cobra'",
                "No.3 character",
                "credit list",
                "movie",
                "G.I. Joe",
                "Rise of Cobra",
                "Title"
            ],
            "sql": "SELECT [T2].[C7] FROM [T2] JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T2].[C8] = 3 AND [T3].[C15] = '[C15]: The [C15]'",
            "repaired_sql": "SELECT [T2].[C7] FROM [T2] JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T2].[C8] = 3 AND [T3].[C15] = '[C15]: The [C15]'"
        },
        "values": [
            "'3'",
            "'G.I. Joe: The Rise of Cobra'"
        ],
        "value_links": {
            "'3'": "[characters].[creditorder]",
            "'G.I. Joe: The Rise of Cobra'": "[movie].[title]"
        },
        "filtered_value_links": {
            "'3'": "[characters].[creditorder]",
            "'G.I. Joe: The Rise of Cobra'": "[movie].[title]"
        },
        "schema_links": {
            "No.3 character": "COLUMN:[characters].[character name]",
            "credit list": "COLUMN:[characters].[creditorder]",
            "movie": "TABLE:[movie]",
            "G.I. Joe": "COLUMN:[movie].[title]",
            "Rise of Cobra": "COLUMN:[movie].[title]",
            "Title": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "No.3 character": "COLUMN:[characters].[character name]",
            "credit list": "COLUMN:[characters].[creditorder]",
            "movie": "TABLE:[movie]",
            "G.I. Joe": "COLUMN:[movie].[title]",
            "Rise of Cobra": "COLUMN:[movie].[title]",
            "Title": "COLUMN:[movie].[title]"
        },
        "attack": "Show the creditOrder name in the year of the books \"title: The title\". creditOrder refers to creditOrder = '3'; books \"title: The title\" refers to title = 'title: The title'; 100 is a value of the column year; \"title: The title\" is a value of the column title"
    },
    {
        "db_id": "movie",
        "question": "Who played the No.2 character in the credit list of the movie \"American Hustle\"? No.2 character refers to creditOrder = '2'; movie \"American Hustle\" refers to Title = 'American Hustle'",
        "evidence": "No.2 character refers to creditOrder = '2'; movie \"American Hustle\" refers to Title = 'American Hustle'",
        "SQL": "SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'American Hustle' AND T2.creditOrder = '2'",
        "query": "SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'American Hustle' AND T2.creditOrder = '2'",
        "evidence_added": true,
        "question_toks": [
            "Who",
            "played",
            "the",
            "No.2",
            "character",
            "in",
            "the",
            "credit",
            "list",
            "of",
            "the",
            "movie",
            "\"American",
            "Hustle\"",
            "?",
            "No.2",
            "character",
            "refers",
            "to",
            "creditOrder",
            "=",
            "'2'",
            ";",
            "movie",
            "\"American",
            "Hustle\"",
            "refers",
            "to",
            "Title",
            "=",
            "'American",
            "Hustle'"
        ],
        "tc_original": [
            "movie.title",
            "movie.movieid",
            "movie.budget",
            "movie.gross",
            "movie.genre",
            "movie.*",
            "characters.movieid",
            "characters.creditorder",
            "characters.actorid",
            "characters.character name",
            "characters.pay",
            "characters.*",
            "actor.actorid",
            "actor.name",
            "actor.biography",
            "actor.gender",
            "actor.ethnicity",
            "actor.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[movieid]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[genre]",
            "COLUMN:[movie].[*]",
            "TABLE:[characters]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[*]",
            "TABLE:[actor]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[ethnicity]",
            "COLUMN:[actor].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[ethnicity]': text\n  '[gender]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[genre]': text\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[title]': text\n",
        "gold_links": {
            "played": "TABLE:[actor]",
            "No.2 character": "COLUMN:[characters].[creditorder]",
            "credit list": "TABLE:[characters]",
            "movie": "TABLE:[movie]",
            "American Hustle": "VALUE:[movie].[title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[ethnicity]",
                "[C4]": "[actor].[gender]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[genre]",
                "[C13]": "[movie].[gross]",
                "[C14]": "[movie].[movieid]",
                "[C15]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[ethnicity]": "[C3]",
                "[actor].[gender]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[genre]": "[C12]",
                "[movie].[gross]": "[C13]",
                "[movie].[movieid]": "[C14]",
                "[movie].[title]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[ethnicity]",
                "[C3]": "[actor].[ethnicity]",
                "[T1].[C4]": "[actor].[gender]",
                "[C4]": "[actor].[gender]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[genre]",
                "[C12]": "[movie].[genre]",
                "[T3].[C13]": "[movie].[gross]",
                "[C13]": "[movie].[gross]",
                "[T3].[C14]": "[movie].[movieid]",
                "[C14]": "[movie].[movieid]",
                "[T3].[C15]": "[movie].[title]",
                "[C15]": "[movie].[title]"
            },
            "question": "Who played the No.[V2] character in the [T2] of the [T3] \"[V1]\"? No.[V2] character refers to creditOrder = '[V2]'; [T3] \"[V1]\" refers to Title = '[V1]'; [V1] is a value of the column [C15]; [V2] is a value of the column [C8]",
            "to_value": {
                "[V1]": "American Hustle",
                "[V2]": "2"
            },
            "masked": 6,
            "masked_terms": [
                "American Hustle",
                "2",
                "No.2 character",
                "credit list",
                "movie",
                "American Hustle"
            ],
            "sql": "SELECT [T2].[C7] FROM [T2] JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T2].[C8] = '[V2]' AND [T3].[C15] = '[V1]'",
            "repaired_sql": "SELECT [T1].[C2] FROM [T2] JOIN [T1] ON [T2].[C6] = [T1].[C1] JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T3].[C15] = '[V1]' AND [T2].[C8] = [V2]"
        },
        "values": [
            "American Hustle",
            "2"
        ],
        "value_links": {
            "American Hustle": "[movie].[title]",
            "2": "[characters].[creditorder]"
        },
        "filtered_value_links": {
            "American Hustle": "[movie].[title]",
            "2": "[characters].[creditorder]"
        },
        "schema_links": {
            "No.2 character": "COLUMN:[characters].[creditorder]",
            "credit list": "TABLE:[characters]",
            "movie": "TABLE:[movie]",
            "American Hustle": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "No.2 character": "COLUMN:[characters].[creditorder]",
            "credit list": "TABLE:[characters]",
            "movie": "TABLE:[movie]",
            "American Hustle": "COLUMN:[movie].[title]"
        },
        "attack": "Who played the No. [creditOrder] character in the [Cast] of the [Movie] \"Title\"?"
    },
    {
        "db_id": "movie",
        "question": "Who played the No.1 character in the credit list of the movie which was released on \"2015/10/26\"? No.1 character refers to creditOrder = '1'; released on \"2015/10/26\" refers to Release Date = '2015-10-26'",
        "evidence": "No.1 character refers to creditOrder = '1'; released on \"2015/10/26\" refers to Release Date = '2015-10-26'",
        "SQL": "SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.`Release Date` = '2015-10-26' AND T2.creditOrder = '1'",
        "query": "SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.`Release Date` = '2015-10-26' AND T2.creditOrder = '1'",
        "evidence_added": true,
        "question_toks": [
            "Who",
            "played",
            "the",
            "No.1",
            "character",
            "in",
            "the",
            "credit",
            "list",
            "of",
            "the",
            "movie",
            "which",
            "was",
            "released",
            "on",
            "\"2015/10/26\"",
            "?",
            "No.1",
            "character",
            "refers",
            "to",
            "creditOrder",
            "=",
            "'1'",
            ";",
            "released",
            "on",
            "\"2015/10/26\"",
            "refers",
            "to",
            "Release",
            "Date",
            "=",
            "'2015-10-26'"
        ],
        "tc_original": [
            "movie.release date",
            "movie.movieid",
            "movie.title",
            "movie.budget",
            "movie.gross",
            "movie.*",
            "characters.movieid",
            "characters.actorid",
            "characters.creditorder",
            "characters.character name",
            "characters.pay",
            "characters.*",
            "actor.actorid",
            "actor.name",
            "actor.biography",
            "actor.gender",
            "actor.ethnicity",
            "actor.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[release date]",
            "COLUMN:[movie].[movieid]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[*]",
            "TABLE:[characters]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[*]",
            "TABLE:[actor]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[ethnicity]",
            "COLUMN:[actor].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[ethnicity]': text\n  '[gender]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[release date]': text\n  '[title]': text\n",
        "gold_links": {
            "played": "COLUMN:[characters].[actorid]",
            "No.1 character": "VALUE:[characters].[creditorder]",
            "credit list": "TABLE:[characters]",
            "movie": "TABLE:[movie]",
            "released": "COLUMN:[movie].[release date]",
            "2015/10/26": "VALUE:[movie].[release date]",
            "Release Date": "COLUMN:[movie].[release date]",
            "creditOrder": "COLUMN:[characters].[creditorder]",
            "name": "COLUMN:[actor].[name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[ethnicity]",
                "[C4]": "[actor].[gender]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[gross]",
                "[C13]": "[movie].[movieid]",
                "[C14]": "[movie].[release date]",
                "[C15]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[ethnicity]": "[C3]",
                "[actor].[gender]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[gross]": "[C12]",
                "[movie].[movieid]": "[C13]",
                "[movie].[release date]": "[C14]",
                "[movie].[title]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C13]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]': integer\n  '[C13]':\n    primary_key: true\n    type: integer\n  '[C14]': text\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[ethnicity]",
                "[C3]": "[actor].[ethnicity]",
                "[T1].[C4]": "[actor].[gender]",
                "[C4]": "[actor].[gender]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[gross]",
                "[C12]": "[movie].[gross]",
                "[T3].[C13]": "[movie].[movieid]",
                "[C13]": "[movie].[movieid]",
                "[T3].[C14]": "[movie].[release date]",
                "[C14]": "[movie].[release date]",
                "[T3].[C15]": "[movie].[title]",
                "[C15]": "[movie].[title]"
            },
            "question": "Who played the No.1 [C7] in the credit list of the [T3] which was released on \"[V1]\"? No.1 [C7] refers to creditOrder = '1'; released on \"[V1]\" refers to [C14] = '[C14]'; [V1] is a value of the column [C14]",
            "to_value": {
                "[V1]": "2015/10/26"
            },
            "masked": 5,
            "masked_terms": [
                "2015/10/26",
                "movie",
                "character",
                "release date",
                "2015-10-26"
            ],
            "sql": "SELECT [T2].[C10] FROM [T2] INNER JOIN [T3] ON [T2].[C9] = [T3].[C13] WHERE [T2].[C8] = 1 AND [T3].[C14] = '[C14]'",
            "repaired_sql": "SELECT [T1].[C2] FROM [T1] JOIN [T2] ON [T1].[C1] = [T2].[C6] JOIN [T3] ON [T2].[C9] = [T3].[C13] WHERE [T2].[C8] = 1 AND [T3].[C14] = '[V1]'"
        },
        "values": [
            "2015/10/26"
        ],
        "value_links": {
            "2015/10/26": "[movie].[release date]"
        },
        "filtered_value_links": {
            "2015/10/26": "[movie].[release date]"
        },
        "schema_links": {
            "movie": "TABLE:[movie]",
            "credit list": "COLUMN:[movie].[*]",
            "character": "COLUMN:[characters].[character name]",
            "release date": "COLUMN:[movie].[release date]",
            "2015-10-26": "COLUMN:[movie].[release date]"
        },
        "filtered_schema_links": {
            "movie": "TABLE:[movie]",
            "credit list": "COLUMN:[movie].[*]",
            "character": "COLUMN:[characters].[character name]",
            "release date": "COLUMN:[movie].[release date]",
            "2015-10-26": "COLUMN:[movie].[release date]"
        },
        "attack": "Who played the No.1 role in the credit list of the movie which was released on \"2006\"?"
    },
    {
        "db_id": "movie",
        "question": "What is the percentage of the USA actors that showed up in the credit list of movie \"Mrs. Doubtfire\"? USA actors refers to Birth Country = 'USA'; movie \"Mrs. Doubtfire\" refers to Title = 'Mrs. Doubtfire'; percentage = divide(count(ActorID where Birth Country = 'USA'), count(ActorID)) * 100%",
        "evidence": "USA actors refers to Birth Country = 'USA'; movie \"Mrs. Doubtfire\" refers to Title = 'Mrs. Doubtfire'; percentage = divide(count(ActorID where Birth Country = 'USA'), count(ActorID)) * 100%",
        "SQL": "SELECT CAST(SUM(CASE WHEN T3.`Birth Country` = 'USA' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.`Birth Country`) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Mrs. Doubtfire'",
        "query": "SELECT CAST(SUM(CASE WHEN T3.`Birth Country` = 'USA' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T3.`Birth Country`) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Mrs. Doubtfire'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "percentage",
            "of",
            "the",
            "USA",
            "actors",
            "that",
            "showed",
            "up",
            "in",
            "the",
            "credit",
            "list",
            "of",
            "movie",
            "\"Mrs",
            ".",
            "Doubtfire\"",
            "?",
            "USA",
            "actors",
            "refers",
            "to",
            "Birth",
            "Country",
            "=",
            "'USA'",
            ";",
            "movie",
            "\"Mrs",
            ".",
            "Doubtfire\"",
            "refers",
            "to",
            "Title",
            "=",
            "'Mrs",
            ".",
            "Doubtfire'",
            ";",
            "percentage",
            "=",
            "divide(count(ActorID",
            "where",
            "Birth",
            "Country",
            "=",
            "'USA')",
            ",",
            "count(ActorID))",
            "*",
            "100%"
        ],
        "tc_original": [
            "movie.movieid",
            "movie.title",
            "movie.budget",
            "movie.gross",
            "movie.genre",
            "movie.*",
            "characters.movieid",
            "characters.actorid",
            "characters.creditorder",
            "characters.pay",
            "characters.character name",
            "characters.*",
            "actor.birth country",
            "actor.actorid",
            "actor.birth city",
            "actor.name",
            "actor.biography",
            "actor.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[movieid]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[genre]",
            "COLUMN:[movie].[*]",
            "TABLE:[characters]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[*]",
            "TABLE:[actor]",
            "COLUMN:[actor].[birth country]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[birth city]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[birth city]': text\n  '[birth country]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[genre]': text\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[title]': text\n",
        "gold_links": {
            "percentage": "COLUMN:[actor].[actorid]",
            "USA actors": "VALUE:[actor].[birth country]",
            "Birth Country": "COLUMN:[actor].[birth country]",
            "credit list": "TABLE:[characters]",
            "movie": "TABLE:[movie]",
            "Mrs. Doubtfire": "VALUE:[movie].[title]",
            "Title": "COLUMN:[movie].[title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[birth city]",
                "[C4]": "[actor].[birth country]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[genre]",
                "[C13]": "[movie].[gross]",
                "[C14]": "[movie].[movieid]",
                "[C15]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[birth city]": "[C3]",
                "[actor].[birth country]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[genre]": "[C12]",
                "[movie].[gross]": "[C13]",
                "[movie].[movieid]": "[C14]",
                "[movie].[title]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[birth city]",
                "[C3]": "[actor].[birth city]",
                "[T1].[C4]": "[actor].[birth country]",
                "[C4]": "[actor].[birth country]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[genre]",
                "[C12]": "[movie].[genre]",
                "[T3].[C13]": "[movie].[gross]",
                "[C13]": "[movie].[gross]",
                "[T3].[C14]": "[movie].[movieid]",
                "[C14]": "[movie].[movieid]",
                "[T3].[C15]": "[movie].[title]",
                "[C15]": "[movie].[title]"
            },
            "question": "What is the [C4] of the [V1] [T1] that showed up in the credit list of [T3] \"[V2]\"? [V1] [T1] refers to Birth Country = '[V1]'; [T3] \"[V2]\" refers to Title = '[V2]'; [C4] = divide(count(ActorID where Birth Country = '[V1]'), count(ActorID)) * 100%; [V1] is a value of the column [C4]; [V2] is a value of the column [C15]",
            "to_value": {
                "[V1]": "USA",
                "[V2]": "Mrs. Doubtfire"
            },
            "masked": 7,
            "masked_terms": [
                "USA",
                "Mrs. Doubtfire",
                "percentage",
                "actors",
                "USA",
                "movie",
                "Mrs. Doubtfire"
            ],
            "sql": "SELECT 100.0 * COUNT(CASE WHEN [T1].[C4] = '[V1]' THEN 1 END) / COUNT([T1].[C1]) AS [C4]  FROM [T1]  JOIN [T2] ON [T1].[C1] = [T2].[C6]  JOIN [T3] ON [T2].[C9] = [T3].[C14]  WHERE [T3].[C15] = '[V2]'",
            "repaired_sql": "SELECT 100.0 * COUNT(DISTINCT [T1].[C1]) FILTER (WHERE [T1].[C4] = '[V1]') / NULLIF(COUNT(DISTINCT [T1].[C1]), 0) AS [C4] FROM [T1] JOIN [T2] ON [T2].[C6] = [T1].[C1] JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T3].[C15] = '[V2]'"
        },
        "values": [
            "USA",
            "Mrs. Doubtfire"
        ],
        "value_links": {
            "USA": "[actor].[birth country]",
            "Mrs. Doubtfire": "[movie].[title]"
        },
        "filtered_value_links": {
            "USA": "[actor].[birth country]",
            "Mrs. Doubtfire": "[movie].[title]"
        },
        "schema_links": {
            "percentage": "column:[actor].[birth country]",
            "actors": "table:[actor]",
            "USA": "column:[actor].[birth country]",
            "movie": "table:[movie]",
            "Mrs. Doubtfire": "column:[movie].[title]"
        },
        "filtered_schema_links": {
            "percentage": "column:[actor].[birth country]",
            "actors": "table:[actor]",
            "USA": "column:[actor].[birth country]",
            "movie": "table:[movie]",
            "Mrs. Doubtfire": "column:[movie].[title]"
        },
        "attack": "What is the percentage of the USA actors that showed up in the credit list of movies \"Star Wars\"?"
    },
    {
        "db_id": "movie",
        "question": "In rated PG movies, how many of them released in June 1990? rated PG refers to MPAA Rating = 'PG'; released in June 1990 refers to Release Date BETWEEN '1990-06-01' and '1990-06-30'",
        "evidence": "rated PG refers to MPAA Rating = 'PG'; released in June 1990 refers to Release Date BETWEEN '1990-06-01' and '1990-06-30'",
        "SQL": "SELECT COUNT(*) FROM movie WHERE `MPAA Rating` = 'PG' AND `Release Date` LIKE '1990-06%'",
        "query": "SELECT COUNT(*) FROM movie WHERE `MPAA Rating` = 'PG' AND `Release Date` LIKE '1990-06%'",
        "evidence_added": true,
        "question_toks": [
            "In",
            "rated",
            "PG",
            "movies",
            ",",
            "how",
            "many",
            "of",
            "them",
            "released",
            "in",
            "June",
            "1990",
            "?",
            "rated",
            "PG",
            "refers",
            "to",
            "MPAA",
            "Rating",
            "=",
            "'PG'",
            ";",
            "released",
            "in",
            "June",
            "1990",
            "refers",
            "to",
            "Release",
            "Date",
            "BETWEEN",
            "'1990-06-01'",
            "and",
            "'1990-06-30'"
        ],
        "tc_original": [
            "movie.release date",
            "movie.mpaa rating",
            "movie.rating",
            "movie.rating count",
            "movie.title",
            "movie.*",
            "actor.name",
            "actor.biography",
            "actor.gender",
            "actor.ethnicity",
            "actor.actorid",
            "actor.*",
            "characters.pay",
            "characters.movieid",
            "characters.actorid",
            "characters.character name",
            "characters.creditorder",
            "characters.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[release date]",
            "COLUMN:[movie].[mpaa rating]",
            "COLUMN:[movie].[rating]",
            "COLUMN:[movie].[rating count]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[*]",
            "TABLE:[actor]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[ethnicity]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[*]",
            "TABLE:[characters]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[ethnicity]': text\n  '[gender]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[mpaa rating]': text\n  '[rating count]': integer\n  '[rating]': real\n  '[release date]': text\n  '[title]': text\n",
        "gold_links": {
            "rated PG": "VALUE:[movie].[mpaa rating]",
            "PG": "VALUE:[movie].[mpaa rating]",
            "movies": "TABLE:[movie]",
            "released": "COLUMN:[movie].[release date]",
            "June 1990": "VALUE:[movie].[release date]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[ethnicity]",
                "[C4]": "[actor].[gender]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[movieid]",
                "[C12]": "[movie].[mpaa rating]",
                "[C13]": "[movie].[rating count]",
                "[C14]": "[movie].[rating]",
                "[C15]": "[movie].[release date]",
                "[C16]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[ethnicity]": "[C3]",
                "[actor].[gender]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[movieid]": "[C11]",
                "[movie].[mpaa rating]": "[C12]",
                "[movie].[rating count]": "[C13]",
                "[movie].[rating]": "[C14]",
                "[movie].[release date]": "[C15]",
                "[movie].[title]": "[C16]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C11]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]':\n    primary_key: true\n    type: integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]': real\n  '[C15]': text\n  '[C16]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[ethnicity]",
                "[C3]": "[actor].[ethnicity]",
                "[T1].[C4]": "[actor].[gender]",
                "[C4]": "[actor].[gender]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[movieid]",
                "[C11]": "[movie].[movieid]",
                "[T3].[C12]": "[movie].[mpaa rating]",
                "[C12]": "[movie].[mpaa rating]",
                "[T3].[C13]": "[movie].[rating count]",
                "[C13]": "[movie].[rating count]",
                "[T3].[C14]": "[movie].[rating]",
                "[C14]": "[movie].[rating]",
                "[T3].[C15]": "[movie].[release date]",
                "[C15]": "[movie].[release date]",
                "[T3].[C16]": "[movie].[title]",
                "[C16]": "[movie].[title]"
            },
            "question": "In rated [V1] movies, how many of them released in [C15]? rated [V1] refers to MPAA Rating = '[V1]'; released in [C15] refers to Release Date BETWEEN '[V2]' and '[V3]'; [V1] is a value of the column [C12]; [V2] is a value of the column [C15]; [V3] is a value of the column [C15]",
            "to_value": {
                "[V1]": "PG",
                "[V2]": "1990-06-01",
                "[V3]": "1990-06-30"
            },
            "masked": 6,
            "masked_terms": [
                "PG",
                "1990-06-01",
                "1990-06-30",
                "PG",
                "June 1990",
                "released in June 1990"
            ],
            "sql": "SELECT COUNT(*) FROM [T3] WHERE [C12] = '[V1]' AND [C15] BETWEEN '[V2]' AND '[V3]'",
            "repaired_sql": "SELECT COUNT(*) FROM [T3] WHERE [C12] = '[V1]' AND [C15] BETWEEN '[V2]' AND '[V3]'"
        },
        "values": [
            "PG",
            "1990-06-01",
            "1990-06-30"
        ],
        "value_links": {
            "PG": "[movie].[mpaa rating]",
            "1990-06-01": "[movie].[release date]",
            "1990-06-30": "[movie].[release date]"
        },
        "filtered_value_links": {
            "PG": "[movie].[mpaa rating]",
            "1990-06-01": "[movie].[release date]",
            "1990-06-30": "[movie].[release date]"
        },
        "schema_links": {
            "PG": "COLUMN:[movie].[mpaa rating]",
            "June 1990": "COLUMN:[movie].[release date]",
            "released in June 1990": "COLUMN:[movie].[release date]"
        },
        "filtered_schema_links": {
            "PG": "COLUMN:[movie].[mpaa rating]",
            "June 1990": "COLUMN:[movie].[release date]",
            "released in June 1990": "COLUMN:[movie].[release date]"
        },
        "attack": "In rated PG movies, how many of them released in 1994? rated PG refers to MPAA Rating = 'PG'; released in 1994 refers to Release Date BETWEEN '1994-01-01' and '1994-12-31'; PG is a value of the column MPAA Rating; 1994-01-01 is a value of the column Release Date; 1994-12-31 is a value of the column Release Date"
    },
    {
        "db_id": "movie",
        "question": "In romantic movies, how many of them starred by John Travolta? romantic movies refers to Genre = 'Romance'; starred by John Travolta refers to Name = 'John Travolta'",
        "evidence": "romantic movies refers to Genre = 'Romance'; starred by John Travolta refers to Name = 'John Travolta'",
        "SQL": "SELECT COUNT(*) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Genre = 'Romance' AND T3.Name = 'John Travolta'",
        "query": "SELECT COUNT(*) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Genre = 'Romance' AND T3.Name = 'John Travolta'",
        "evidence_added": true,
        "question_toks": [
            "In",
            "romantic",
            "movies",
            ",",
            "how",
            "many",
            "of",
            "them",
            "starred",
            "by",
            "John",
            "Travolta",
            "?",
            "romantic",
            "movies",
            "refers",
            "to",
            "Genre",
            "=",
            "'Romance'",
            ";",
            "starred",
            "by",
            "John",
            "Travolta",
            "refers",
            "to",
            "Name",
            "=",
            "'John",
            "Travolta'"
        ],
        "tc_original": [
            "movie.genre",
            "movie.movieid",
            "movie.title",
            "movie.budget",
            "movie.gross",
            "movie.*",
            "actor.name",
            "actor.actorid",
            "actor.biography",
            "actor.gender",
            "actor.ethnicity",
            "actor.*",
            "characters.movieid",
            "characters.actorid",
            "characters.character name",
            "characters.pay",
            "characters.creditorder",
            "characters.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[genre]",
            "COLUMN:[movie].[movieid]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[*]",
            "TABLE:[actor]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[ethnicity]",
            "COLUMN:[actor].[*]",
            "TABLE:[characters]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[ethnicity]': text\n  '[gender]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[genre]': text\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[title]': text\n",
        "gold_links": {
            "romantic movies": "COLUMN:[movie].[genre]",
            "romance": "VALUE:[movie].[genre]",
            "starred": "TABLE:[characters]",
            "John Travolta": "VALUE:[actor].[name]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[ethnicity]",
                "[C4]": "[actor].[gender]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[genre]",
                "[C13]": "[movie].[gross]",
                "[C14]": "[movie].[movieid]",
                "[C15]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[ethnicity]": "[C3]",
                "[actor].[gender]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[genre]": "[C12]",
                "[movie].[gross]": "[C13]",
                "[movie].[movieid]": "[C14]",
                "[movie].[title]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[ethnicity]",
                "[C3]": "[actor].[ethnicity]",
                "[T1].[C4]": "[actor].[gender]",
                "[C4]": "[actor].[gender]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[genre]",
                "[C12]": "[movie].[genre]",
                "[T3].[C13]": "[movie].[gross]",
                "[C13]": "[movie].[gross]",
                "[T3].[C14]": "[movie].[movieid]",
                "[C14]": "[movie].[movieid]",
                "[T3].[C15]": "[movie].[title]",
                "[C15]": "[movie].[title]"
            },
            "question": "In [T3], how many of them [C6] [V1]? [T3] refers to Genre = 'Romance'; [C6] [V1] refers to Name = '[V1]'; [V1] is a value of the column [C5]",
            "to_value": {
                "[V1]": "John Travolta"
            },
            "masked": 4,
            "masked_terms": [
                "John Travolta",
                "romantic movies",
                "starred by",
                "John Travolta"
            ],
            "sql": "SELECT COUNT(*) FROM [T3] WHERE [C15] = 'Romance' AND [C12] = '[V1]'",
            "repaired_sql": "SELECT COUNT(*) FROM [T3] WHERE [C15] = 'Romance' AND [C12] = '[V1]'"
        },
        "values": [
            "John Travolta"
        ],
        "value_links": {
            "John Travolta": "[actor].[name]"
        },
        "filtered_value_links": {
            "John Travolta": "[actor].[name]"
        },
        "schema_links": {
            "romantic movies": "TABLE:[movie]",
            "starred by": "COLUMN:[characters].[actorid]",
            "John Travolta": "COLUMN:[actor].[name]"
        },
        "filtered_schema_links": {
            "romantic movies": "TABLE:[movie]",
            "starred by": "COLUMN:[characters].[actorid]",
            "John Travolta": "COLUMN:[actor].[name]"
        },
        "attack": "In Genre, how many of them Name 'Romance'?"
    },
    {
        "db_id": "movie",
        "question": "Count the male actors born in USA that starred in Ghost. male refers to Gender = 'Male'; born in USA refers to Birth Country = 'USA'; Ghost refers to Title = 'Ghost'",
        "evidence": "male refers to Gender = 'Male'; born in USA refers to Birth Country = 'USA'; Ghost refers to Title = 'Ghost'",
        "SQL": "SELECT COUNT(*) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Ghost' AND T3.Gender = 'Male' AND T3.`Birth Country` = 'USA'",
        "query": "SELECT COUNT(*) FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Title = 'Ghost' AND T3.Gender = 'Male' AND T3.`Birth Country` = 'USA'",
        "evidence_added": true,
        "question_toks": [
            "Count",
            "the",
            "male",
            "actors",
            "born",
            "in",
            "USA",
            "that",
            "starred",
            "in",
            "Ghost",
            ".",
            "male",
            "refers",
            "to",
            "Gender",
            "=",
            "'Male'",
            ";",
            "born",
            "in",
            "USA",
            "refers",
            "to",
            "Birth",
            "Country",
            "=",
            "'USA'",
            ";",
            "Ghost",
            "refers",
            "to",
            "Title",
            "=",
            "'Ghost'"
        ],
        "tc_original": [
            "actor.birth country",
            "actor.actorid",
            "actor.gender",
            "actor.birth city",
            "actor.name",
            "actor.*",
            "movie.movieid",
            "movie.title",
            "movie.budget",
            "movie.gross",
            "movie.genre",
            "movie.*",
            "characters.movieid",
            "characters.actorid",
            "characters.pay",
            "characters.character name",
            "characters.creditorder",
            "characters.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[actor]",
            "COLUMN:[actor].[birth country]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[birth city]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[*]",
            "TABLE:[movie]",
            "COLUMN:[movie].[movieid]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[genre]",
            "COLUMN:[movie].[*]",
            "TABLE:[characters]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[birth city]': text\n  '[birth country]': text\n  '[gender]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[genre]': text\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[title]': text\n",
        "gold_links": {
            "male": "VALUE:[actor].[gender]",
            "actors": "TABLE:[actor]",
            "born": "COLUMN:[actor].[birth country]",
            "USA": "VALUE:[actor].[birth country]",
            "starred": "TABLE:[characters]",
            "Ghost": "VALUE:[movie].[title]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[birth city]",
                "[C3]": "[actor].[birth country]",
                "[C4]": "[actor].[gender]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[genre]",
                "[C13]": "[movie].[gross]",
                "[C14]": "[movie].[movieid]",
                "[C15]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[birth city]": "[C2]",
                "[actor].[birth country]": "[C3]",
                "[actor].[gender]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[genre]": "[C12]",
                "[movie].[gross]": "[C13]",
                "[movie].[movieid]": "[C14]",
                "[movie].[title]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[birth city]",
                "[C2]": "[actor].[birth city]",
                "[T1].[C3]": "[actor].[birth country]",
                "[C3]": "[actor].[birth country]",
                "[T1].[C4]": "[actor].[gender]",
                "[C4]": "[actor].[gender]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[genre]",
                "[C12]": "[movie].[genre]",
                "[T3].[C13]": "[movie].[gross]",
                "[C13]": "[movie].[gross]",
                "[T3].[C14]": "[movie].[movieid]",
                "[C14]": "[movie].[movieid]",
                "[T3].[C15]": "[movie].[title]",
                "[C15]": "[movie].[title]"
            },
            "question": "Count the [V3] actors born in [V1] that starred in [V2]. [V3] refers to Gender = '[V3]'; born in [V1] refers to Birth Country = '[V1]'; [V2] refers to Title = '[V2]'; [V1] is a value of the column [C3]; [V2] is a value of the column [C15]; [V3] is a value of the column [C4]",
            "to_value": {
                "[V1]": "USA",
                "[V2]": "Ghost",
                "[V3]": "Male"
            },
            "masked": 6,
            "masked_terms": [
                "USA",
                "Ghost",
                "Male",
                "male",
                "USA",
                "Ghost"
            ],
            "sql": "SELECT COUNT(*) FROM [T1] INNER JOIN [T2] ON [T1].[C1] = [T2].[C6] INNER JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T1].[C3] = '[V1]' AND [T1].[C4] = '[V3]' AND [T3].[C15] = '[V2]'",
            "repaired_sql": "SELECT COUNT(*) FROM [T1] JOIN [T2] ON [T1].[C1] = [T2].[C6] JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T1].[C4] = '[V3]' AND [T1].[C3] = '[V1]' AND [T3].[C15] = '[V2]'"
        },
        "values": [
            "USA",
            "Ghost",
            "Male"
        ],
        "value_links": {
            "USA": "[actor].[birth country]",
            "Ghost": "[movie].[title]",
            "Male": "[actor].[gender]"
        },
        "filtered_value_links": {
            "USA": "[actor].[birth country]",
            "Ghost": "[movie].[title]",
            "Male": "[actor].[gender]"
        },
        "schema_links": {
            "male": "COLUMN:[actor].[gender]",
            "USA": "COLUMN:[actor].[birth country]",
            "Ghost": "COLUMN:[movie].[title]"
        },
        "filtered_schema_links": {
            "male": "COLUMN:[actor].[gender]",
            "USA": "COLUMN:[actor].[birth country]",
            "Ghost": "COLUMN:[movie].[title]"
        },
        "attack": "Count the female actors born in USA that starred in Titanic."
    },
    {
        "db_id": "movie",
        "question": "Find the actor's name that played as Don Altobello in a drama movie that has a gross of 136766062. actor's name refers to Name; as Don Altobello refers to Character Name = 'Don Altobello'; drama movie refers to Genre = 'Drama'",
        "evidence": "actor's name refers to Name; as Don Altobello refers to Character Name = 'Don Altobello'; drama movie refers to Genre = 'Drama'",
        "SQL": "SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Gross = 136766062 AND T2.`Character Name` = 'Don Altobello' AND T1.Genre = 'Drama'",
        "query": "SELECT T3.Name FROM movie AS T1 INNER JOIN characters AS T2 ON T1.MovieID = T2.MovieID INNER JOIN actor AS T3 ON T3.ActorID = T2.ActorID WHERE T1.Gross = 136766062 AND T2.`Character Name` = 'Don Altobello' AND T1.Genre = 'Drama'",
        "evidence_added": true,
        "question_toks": [
            "Find",
            "the",
            "actor's",
            "name",
            "that",
            "played",
            "as",
            "Don",
            "Altobello",
            "in",
            "a",
            "drama",
            "movie",
            "that",
            "has",
            "a",
            "gross",
            "of",
            "136766062",
            ".",
            "actor's",
            "name",
            "refers",
            "to",
            "Name",
            ";",
            "as",
            "Don",
            "Altobello",
            "refers",
            "to",
            "Character",
            "Name",
            "=",
            "'Don",
            "Altobello'",
            ";",
            "drama",
            "movie",
            "refers",
            "to",
            "Genre",
            "=",
            "'Drama'"
        ],
        "tc_original": [
            "movie.movieid",
            "movie.gross",
            "movie.genre",
            "movie.title",
            "movie.budget",
            "movie.*",
            "characters.movieid",
            "characters.actorid",
            "characters.character name",
            "characters.pay",
            "characters.creditorder",
            "characters.*",
            "actor.actorid",
            "actor.name",
            "actor.biography",
            "actor.gender",
            "actor.ethnicity",
            "actor.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[movie]",
            "COLUMN:[movie].[movieid]",
            "COLUMN:[movie].[gross]",
            "COLUMN:[movie].[genre]",
            "COLUMN:[movie].[title]",
            "COLUMN:[movie].[budget]",
            "COLUMN:[movie].[*]",
            "TABLE:[characters]",
            "COLUMN:[characters].[movieid]",
            "COLUMN:[characters].[actorid]",
            "COLUMN:[characters].[character name]",
            "COLUMN:[characters].[pay]",
            "COLUMN:[characters].[creditorder]",
            "COLUMN:[characters].[*]",
            "TABLE:[actor]",
            "COLUMN:[actor].[actorid]",
            "COLUMN:[actor].[name]",
            "COLUMN:[actor].[biography]",
            "COLUMN:[actor].[gender]",
            "COLUMN:[actor].[ethnicity]",
            "COLUMN:[actor].[*]"
        ],
        "schema": "'[actor]':\n  '[actorid]':\n    primary_key: true\n    type: integer\n  '[biography]': text\n  '[ethnicity]': text\n  '[gender]': text\n  '[name]': text\n'[characters]':\n  '[actorid]':\n    foreign_key: '[actor].[actorid]'\n    primary_key: true\n    type: integer\n  '[character name]': text\n  '[creditorder]': integer\n  '[movieid]':\n    foreign_key: '[movie].[movieid]'\n    primary_key: true\n    type: integer\n  '[pay]': text\n'[movie]':\n  '[budget]': integer\n  '[genre]': text\n  '[gross]': integer\n  '[movieid]':\n    primary_key: true\n    type: integer\n  '[title]': text\n",
        "gold_links": {
            "actor's name": "COLUMN:[actor].[name]",
            "Don Altobello": "VALUE:[characters].[character name]",
            "drama movie": "VALUE:[movie].[genre]",
            "gross": "COLUMN:[movie].[gross]",
            "136766062": "VALUE:[movie].[gross]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[actor]",
                "[C1]": "[actor].[actorid]",
                "[C2]": "[actor].[biography]",
                "[C3]": "[actor].[ethnicity]",
                "[C4]": "[actor].[gender]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[C6]": "[characters].[actorid]",
                "[C7]": "[characters].[character name]",
                "[C8]": "[characters].[creditorder]",
                "[C9]": "[characters].[movieid]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[C11]": "[movie].[budget]",
                "[C12]": "[movie].[genre]",
                "[C13]": "[movie].[gross]",
                "[C14]": "[movie].[movieid]",
                "[C15]": "[movie].[title]"
            },
            "to_symbol": {
                "[actor]": "[T1]",
                "[actor].[actorid]": "[C1]",
                "[actor].[biography]": "[C2]",
                "[actor].[ethnicity]": "[C3]",
                "[actor].[gender]": "[C4]",
                "[actor].[name]": "[C5]",
                "[characters]": "[T2]",
                "[characters].[actorid]": "[C6]",
                "[characters].[character name]": "[C7]",
                "[characters].[creditorder]": "[C8]",
                "[characters].[movieid]": "[C9]",
                "[characters].[pay]": "[C10]",
                "[movie]": "[T3]",
                "[movie].[budget]": "[C11]",
                "[movie].[genre]": "[C12]",
                "[movie].[gross]": "[C13]",
                "[movie].[movieid]": "[C14]",
                "[movie].[title]": "[C15]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': text\n  '[C3]': text\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    foreign_key: '[T3].[C14]'\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C11]': integer\n  '[C12]': text\n  '[C13]': integer\n  '[C14]':\n    primary_key: true\n    type: integer\n  '[C15]': text\n",
            "reverse_dict": {
                "[T1]": "[actor]",
                "[T1].[C1]": "[actor].[actorid]",
                "[C1]": "[actor].[actorid]",
                "[T1].[C2]": "[actor].[biography]",
                "[C2]": "[actor].[biography]",
                "[T1].[C3]": "[actor].[ethnicity]",
                "[C3]": "[actor].[ethnicity]",
                "[T1].[C4]": "[actor].[gender]",
                "[C4]": "[actor].[gender]",
                "[T1].[C5]": "[actor].[name]",
                "[C5]": "[actor].[name]",
                "[T2]": "[characters]",
                "[T2].[C6]": "[characters].[actorid]",
                "[C6]": "[characters].[actorid]",
                "[T2].[C7]": "[characters].[character name]",
                "[C7]": "[characters].[character name]",
                "[T2].[C8]": "[characters].[creditorder]",
                "[C8]": "[characters].[creditorder]",
                "[T2].[C9]": "[characters].[movieid]",
                "[C9]": "[characters].[movieid]",
                "[T2].[C10]": "[characters].[pay]",
                "[C10]": "[characters].[pay]",
                "[T3]": "[movie]",
                "[T3].[C11]": "[movie].[budget]",
                "[C11]": "[movie].[budget]",
                "[T3].[C12]": "[movie].[genre]",
                "[C12]": "[movie].[genre]",
                "[T3].[C13]": "[movie].[gross]",
                "[C13]": "[movie].[gross]",
                "[T3].[C14]": "[movie].[movieid]",
                "[C14]": "[movie].[movieid]",
                "[T3].[C15]": "[movie].[title]",
                "[C15]": "[movie].[title]"
            },
            "question": "Find the [C5] that played as [V1] in a [C12] that has a [C13] of 136766062. [C5] refers to Name; as [V1] refers to Character Name = '[V1]'; [C12] refers to Genre = 'Drama'; [V1] is a value of the column [C7]",
            "to_value": {
                "[V1]": "Don Altobello"
            },
            "masked": 5,
            "masked_terms": [
                "Don Altobello",
                "actor's name",
                "Don Altobello",
                "drama movie",
                "gross"
            ],
            "sql": "SELECT [T1].[C5] FROM [T1] JOIN [T2] ON [T1].[C1] = [T2].[C6] JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T2].[C7] = '[V1]' AND [T3].[C12] = 'Drama' AND [T3].[C13] = 136766062",
            "repaired_sql": "SELECT [T1].[C5] FROM [T1] JOIN [T2] ON [T1].[C1] = [T2].[C6] JOIN [T3] ON [T2].[C9] = [T3].[C14] WHERE [T2].[C7] = '[V1]' AND [T3].[C12] = 'Drama' AND [T3].[C13] = 136766062"
        },
        "values": [
            "Don Altobello"
        ],
        "value_links": {
            "Don Altobello": "[characters].[character name]"
        },
        "filtered_value_links": {
            "Don Altobello": "[characters].[character name]"
        },
        "schema_links": {
            "actor's name": "COLUMN:[actor].[name]",
            "Don Altobello": "COLUMN:[characters].[character name]",
            "drama movie": "COLUMN:[movie].[genre]",
            "gross": "COLUMN:[movie].[gross]"
        },
        "filtered_schema_links": {
            "actor's name": "COLUMN:[actor].[name]",
            "Don Altobello": "COLUMN:[characters].[character name]",
            "drama movie": "COLUMN:[movie].[genre]",
            "gross": "COLUMN:[movie].[gross]"
        },
        "attack": "Find the Name that played as Character Name = '[V1]' in a Genre = 'Drama' that has a Movie ID of 136766062."
    },
    {
        "db_id": "social_media",
        "question": "How many tweets are seen by more than 1000 unique users? seen by more than 1000 unique users refers to Reach > 1000",
        "evidence": "seen by more than 1000 unique users refers to Reach > 1000",
        "SQL": "SELECT COUNT(TweetID) AS tweet_number FROM twitter WHERE Reach > 1000",
        "query": "SELECT COUNT(TweetID) AS tweet_number FROM twitter WHERE Reach > 1000",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "tweets",
            "are",
            "seen",
            "by",
            "more",
            "than",
            "1000",
            "unique",
            "users",
            "?",
            "seen",
            "by",
            "more",
            "than",
            "1000",
            "unique",
            "users",
            "refers",
            "to",
            "Reach",
            ">",
            "1000"
        ],
        "tc_original": [
            "twitter.reach",
            "twitter.tweetid",
            "twitter.weekday",
            "twitter.hour",
            "twitter.day",
            "twitter.*",
            "location.country",
            "location.state",
            "location.city",
            "location.locationid",
            "location.statecode",
            "location.*",
            "user.gender",
            "user.userid",
            "user.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[twitter]",
            "COLUMN:[twitter].[reach]",
            "COLUMN:[twitter].[tweetid]",
            "COLUMN:[twitter].[weekday]",
            "COLUMN:[twitter].[hour]",
            "COLUMN:[twitter].[day]",
            "COLUMN:[twitter].[*]",
            "TABLE:[location]",
            "COLUMN:[location].[country]",
            "COLUMN:[location].[state]",
            "COLUMN:[location].[city]",
            "COLUMN:[location].[locationid]",
            "COLUMN:[location].[statecode]",
            "COLUMN:[location].[*]",
            "TABLE:[user]",
            "COLUMN:[user].[gender]",
            "COLUMN:[user].[userid]",
            "COLUMN:[user].[*]"
        ],
        "schema": "'[location]':\n  '[city]': text\n  '[country]': text\n  '[locationid]':\n    primary_key: true\n    type: integer\n  '[state]': text\n  '[statecode]': text\n'[twitter]':\n  '[day]': integer\n  '[hour]': integer\n  '[reach]': integer\n  '[tweetid]':\n    primary_key: true\n    type: text\n  '[weekday]': text\n'[user]':\n  '[gender]': text\n  '[userid]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "tweets": "TABLE:[twitter]",
            "seen": "COLUMN:[twitter].[reach]",
            "more than 1000": "VALUE:[twitter].[reach]",
            "unique users": "COLUMN:[twitter].[reach]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[location]",
                "[C1]": "[location].[city]",
                "[C2]": "[location].[country]",
                "[C3]": "[location].[locationid]",
                "[C4]": "[location].[state]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[C6]": "[twitter].[day]",
                "[C7]": "[twitter].[hour]",
                "[C8]": "[twitter].[reach]",
                "[C9]": "[twitter].[tweetid]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[C11]": "[user].[gender]",
                "[C12]": "[user].[userid]"
            },
            "to_symbol": {
                "[location]": "[T1]",
                "[location].[city]": "[C1]",
                "[location].[country]": "[C2]",
                "[location].[locationid]": "[C3]",
                "[location].[state]": "[C4]",
                "[location].[statecode]": "[C5]",
                "[twitter]": "[T2]",
                "[twitter].[day]": "[C6]",
                "[twitter].[hour]": "[C7]",
                "[twitter].[reach]": "[C8]",
                "[twitter].[tweetid]": "[C9]",
                "[twitter].[weekday]": "[C10]",
                "[user]": "[T3]",
                "[user].[gender]": "[C11]",
                "[user].[userid]": "[C12]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]': integer\n  '[C8]': integer\n  '[C9]':\n    primary_key: true\n    type: text\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[location]",
                "[T1].[C1]": "[location].[city]",
                "[C1]": "[location].[city]",
                "[T1].[C2]": "[location].[country]",
                "[C2]": "[location].[country]",
                "[T1].[C3]": "[location].[locationid]",
                "[C3]": "[location].[locationid]",
                "[T1].[C4]": "[location].[state]",
                "[C4]": "[location].[state]",
                "[T1].[C5]": "[location].[statecode]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[T2].[C6]": "[twitter].[day]",
                "[C6]": "[twitter].[day]",
                "[T2].[C7]": "[twitter].[hour]",
                "[C7]": "[twitter].[hour]",
                "[T2].[C8]": "[twitter].[reach]",
                "[C8]": "[twitter].[reach]",
                "[T2].[C9]": "[twitter].[tweetid]",
                "[C9]": "[twitter].[tweetid]",
                "[T2].[C10]": "[twitter].[weekday]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[T3].[C11]": "[user].[gender]",
                "[C11]": "[user].[gender]",
                "[T3].[C12]": "[user].[userid]",
                "[C12]": "[user].[userid]"
            },
            "question": "How many [T2] are seen by more than [V1] unique [T3]? seen by more than [V1] unique [T3] refers to [C8] > [V1]; [V1] is a value of the column [C8]",
            "to_value": {
                "[V1]": "1000"
            },
            "masked": 4,
            "masked_terms": [
                "1000",
                "tweets",
                "Reach",
                "users"
            ],
            "sql": "SELECT COUNT(*) FROM [T2] WHERE [T2].[C8] > [V1]",
            "repaired_sql": "SELECT COUNT(*) FROM [T2] WHERE [C8] > [V1]"
        },
        "values": [
            "1000"
        ],
        "value_links": {
            "1000": "[twitter].[reach]"
        },
        "filtered_value_links": {
            "1000": "[twitter].[reach]"
        },
        "schema_links": {
            "tweets": "TABLE:[twitter]",
            "Reach": "COLUMN:[twitter].[reach]",
            "users": "TABLE:[user]"
        },
        "filtered_schema_links": {
            "tweets": "TABLE:[twitter]",
            "Reach": "COLUMN:[twitter].[reach]",
            "users": "TABLE:[user]"
        },
        "attack": "How many movies are seen by more than 100 unique viewers?"
    },
    {
        "db_id": "social_media",
        "question": "How many tweets in total were posted by a user in Argentina? \"Argentina\" is the Country",
        "evidence": "\"Argentina\" is the Country",
        "SQL": "SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T2.Country = 'Argentina' LIMIT 1",
        "query": "SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T2.Country = 'Argentina' LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "tweets",
            "in",
            "total",
            "were",
            "posted",
            "by",
            "a",
            "user",
            "in",
            "Argentina",
            "?",
            "\"Argentina\"",
            "is",
            "the",
            "Country"
        ],
        "tc_original": [
            "location.locationid",
            "location.country",
            "location.state",
            "location.city",
            "location.statecode",
            "location.*",
            "twitter.locationid",
            "twitter.userid",
            "twitter.tweetid",
            "twitter.weekday",
            "twitter.hour",
            "twitter.*",
            "user.userid",
            "user.gender",
            "user.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[location]",
            "COLUMN:[location].[locationid]",
            "COLUMN:[location].[country]",
            "COLUMN:[location].[state]",
            "COLUMN:[location].[city]",
            "COLUMN:[location].[statecode]",
            "COLUMN:[location].[*]",
            "TABLE:[twitter]",
            "COLUMN:[twitter].[locationid]",
            "COLUMN:[twitter].[userid]",
            "COLUMN:[twitter].[tweetid]",
            "COLUMN:[twitter].[weekday]",
            "COLUMN:[twitter].[hour]",
            "COLUMN:[twitter].[*]",
            "TABLE:[user]",
            "COLUMN:[user].[userid]",
            "COLUMN:[user].[gender]",
            "COLUMN:[user].[*]"
        ],
        "schema": "'[location]':\n  '[city]': text\n  '[country]': text\n  '[locationid]':\n    primary_key: true\n    type: integer\n  '[state]': text\n  '[statecode]': text\n'[twitter]':\n  '[hour]': integer\n  '[locationid]':\n    foreign_key: '[location].[locationid]'\n    type: integer\n  '[tweetid]':\n    primary_key: true\n    type: text\n  '[userid]':\n    foreign_key: '[user].[userid]'\n    type: text\n  '[weekday]': text\n'[user]':\n  '[gender]': text\n  '[userid]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "tweets": "TABLE:[twitter]",
            "user": "TABLE:[user]",
            "Argentina": "VALUE:[location].[country]",
            "Country": "COLUMN:[location].[country]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[location]",
                "[C1]": "[location].[city]",
                "[C2]": "[location].[country]",
                "[C3]": "[location].[locationid]",
                "[C4]": "[location].[state]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[C6]": "[twitter].[hour]",
                "[C7]": "[twitter].[locationid]",
                "[C8]": "[twitter].[tweetid]",
                "[C9]": "[twitter].[userid]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[C11]": "[user].[gender]",
                "[C12]": "[user].[userid]"
            },
            "to_symbol": {
                "[location]": "[T1]",
                "[location].[city]": "[C1]",
                "[location].[country]": "[C2]",
                "[location].[locationid]": "[C3]",
                "[location].[state]": "[C4]",
                "[location].[statecode]": "[C5]",
                "[twitter]": "[T2]",
                "[twitter].[hour]": "[C6]",
                "[twitter].[locationid]": "[C7]",
                "[twitter].[tweetid]": "[C8]",
                "[twitter].[userid]": "[C9]",
                "[twitter].[weekday]": "[C10]",
                "[user]": "[T3]",
                "[user].[gender]": "[C11]",
                "[user].[userid]": "[C12]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]':\n    foreign_key: '[T1].[C3]'\n    type: integer\n  '[C8]':\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T3].[C12]'\n    type: text\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[location]",
                "[T1].[C1]": "[location].[city]",
                "[C1]": "[location].[city]",
                "[T1].[C2]": "[location].[country]",
                "[C2]": "[location].[country]",
                "[T1].[C3]": "[location].[locationid]",
                "[C3]": "[location].[locationid]",
                "[T1].[C4]": "[location].[state]",
                "[C4]": "[location].[state]",
                "[T1].[C5]": "[location].[statecode]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[T2].[C6]": "[twitter].[hour]",
                "[C6]": "[twitter].[hour]",
                "[T2].[C7]": "[twitter].[locationid]",
                "[C7]": "[twitter].[locationid]",
                "[T2].[C8]": "[twitter].[tweetid]",
                "[C8]": "[twitter].[tweetid]",
                "[T2].[C9]": "[twitter].[userid]",
                "[C9]": "[twitter].[userid]",
                "[T2].[C10]": "[twitter].[weekday]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[T3].[C11]": "[user].[gender]",
                "[C11]": "[user].[gender]",
                "[T3].[C12]": "[user].[userid]",
                "[C12]": "[user].[userid]"
            },
            "question": "How many [T2] in total were [C8] by a [C9] in [V1]? \"[V1]\" is the Country; [V1] is a value of the column [C2]",
            "to_value": {
                "[V1]": "Argentina"
            },
            "masked": 5,
            "masked_terms": [
                "Argentina",
                "tweets",
                "posted",
                "user",
                "Argentina"
            ],
            "sql": "SELECT COUNT([T2].[C8]) FROM [T2] JOIN [T1] ON [T2].[C7] = [T1].[C3] WHERE [T1].[C2] = '[V1]' AND [T2].[C9] IS NOT NULL",
            "repaired_sql": "SELECT COUNT(*) FROM [T2] JOIN [T1] ON [T2].[C7] = [T1].[C3] WHERE [T1].[C2] = '[V1]';"
        },
        "values": [
            "Argentina"
        ],
        "value_links": {
            "Argentina": "[location].[country]"
        },
        "filtered_value_links": {
            "Argentina": "[location].[country]"
        },
        "schema_links": {
            "tweets": "TABLE:[twitter]",
            "posted": "COLUMN:[twitter].[tweetid]",
            "user": "COLUMN:[twitter].[userid]",
            "Argentina": "COLUMN:[location].[country]"
        },
        "filtered_schema_links": {
            "tweets": "TABLE:[twitter]",
            "posted": "COLUMN:[twitter].[tweetid]",
            "user": "COLUMN:[twitter].[userid]",
            "Argentina": "COLUMN:[location].[country]"
        },
        "attack": "How many vehicles in total were registered by a manufacturer in Germany? \"Germany\" is the Country; Germany is a value of the column [T1].[C2]"
    },
    {
        "db_id": "social_media",
        "question": "What is the gender of the user who has posted the tweet that is seen by the most number of unique users? seen by the most number of unique users refers to Max(Reach)",
        "evidence": "seen by the most number of unique users refers to Max(Reach)",
        "SQL": "SELECT T2.Gender FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID ORDER BY T1.Reach DESC LIMIT 1",
        "query": "SELECT T2.Gender FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID ORDER BY T1.Reach DESC LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "gender",
            "of",
            "the",
            "user",
            "who",
            "has",
            "posted",
            "the",
            "tweet",
            "that",
            "is",
            "seen",
            "by",
            "the",
            "most",
            "number",
            "of",
            "unique",
            "users",
            "?",
            "seen",
            "by",
            "the",
            "most",
            "number",
            "of",
            "unique",
            "users",
            "refers",
            "to",
            "Max(Reach)"
        ],
        "tc_original": [
            "twitter.reach",
            "twitter.userid",
            "twitter.tweetid",
            "twitter.weekday",
            "twitter.hour",
            "twitter.*",
            "user.userid",
            "user.gender",
            "user.*",
            "location.country",
            "location.state",
            "location.city",
            "location.locationid",
            "location.statecode",
            "location.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[twitter]",
            "COLUMN:[twitter].[reach]",
            "COLUMN:[twitter].[userid]",
            "COLUMN:[twitter].[tweetid]",
            "COLUMN:[twitter].[weekday]",
            "COLUMN:[twitter].[hour]",
            "COLUMN:[twitter].[*]",
            "TABLE:[user]",
            "COLUMN:[user].[userid]",
            "COLUMN:[user].[gender]",
            "COLUMN:[user].[*]",
            "TABLE:[location]",
            "COLUMN:[location].[country]",
            "COLUMN:[location].[state]",
            "COLUMN:[location].[city]",
            "COLUMN:[location].[locationid]",
            "COLUMN:[location].[statecode]",
            "COLUMN:[location].[*]"
        ],
        "schema": "'[location]':\n  '[city]': text\n  '[country]': text\n  '[locationid]':\n    primary_key: true\n    type: integer\n  '[state]': text\n  '[statecode]': text\n'[twitter]':\n  '[hour]': integer\n  '[reach]': integer\n  '[tweetid]':\n    primary_key: true\n    type: text\n  '[userid]':\n    foreign_key: '[user].[userid]'\n    type: text\n  '[weekday]': text\n'[user]':\n  '[gender]': text\n  '[userid]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "gender": "COLUMN:[user].[gender]",
            "user": "TABLE:[user]",
            "tweet": "TABLE:[twitter]",
            "reach": "COLUMN:[twitter].[reach]",
            "unique users": "COLUMN:[twitter].[reach]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[location]",
                "[C1]": "[location].[city]",
                "[C2]": "[location].[country]",
                "[C3]": "[location].[locationid]",
                "[C4]": "[location].[state]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[C6]": "[twitter].[hour]",
                "[C7]": "[twitter].[reach]",
                "[C8]": "[twitter].[tweetid]",
                "[C9]": "[twitter].[userid]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[C11]": "[user].[gender]",
                "[C12]": "[user].[userid]"
            },
            "to_symbol": {
                "[location]": "[T1]",
                "[location].[city]": "[C1]",
                "[location].[country]": "[C2]",
                "[location].[locationid]": "[C3]",
                "[location].[state]": "[C4]",
                "[location].[statecode]": "[C5]",
                "[twitter]": "[T2]",
                "[twitter].[hour]": "[C6]",
                "[twitter].[reach]": "[C7]",
                "[twitter].[tweetid]": "[C8]",
                "[twitter].[userid]": "[C9]",
                "[twitter].[weekday]": "[C10]",
                "[user]": "[T3]",
                "[user].[gender]": "[C11]",
                "[user].[userid]": "[C12]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]': integer\n  '[C8]':\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T3].[C12]'\n    type: text\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[location]",
                "[T1].[C1]": "[location].[city]",
                "[C1]": "[location].[city]",
                "[T1].[C2]": "[location].[country]",
                "[C2]": "[location].[country]",
                "[T1].[C3]": "[location].[locationid]",
                "[C3]": "[location].[locationid]",
                "[T1].[C4]": "[location].[state]",
                "[C4]": "[location].[state]",
                "[T1].[C5]": "[location].[statecode]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[T2].[C6]": "[twitter].[hour]",
                "[C6]": "[twitter].[hour]",
                "[T2].[C7]": "[twitter].[reach]",
                "[C7]": "[twitter].[reach]",
                "[T2].[C8]": "[twitter].[tweetid]",
                "[C8]": "[twitter].[tweetid]",
                "[T2].[C9]": "[twitter].[userid]",
                "[C9]": "[twitter].[userid]",
                "[T2].[C10]": "[twitter].[weekday]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[T3].[C11]": "[user].[gender]",
                "[C11]": "[user].[gender]",
                "[T3].[C12]": "[user].[userid]",
                "[C12]": "[user].[userid]"
            },
            "question": "What is the [C11] of the [T3] who has posted the tweet that is seen by the most number of unique users? seen by the most number of unique users refers to [V1]([V2]); [V1] is a value of the column [C7]; [V2] is a value of the column [C7]",
            "to_value": {
                "[V1]": "Max",
                "[V2]": "Reach"
            },
            "masked": 5,
            "masked_terms": [
                "Max",
                "Reach",
                "gender",
                "reach",
                "user"
            ],
            "sql": "SELECT [T3].[C11] FROM [T3] JOIN [T2] ON [T3].[C12] = [T2].[C9] WHERE [T2].[C7] = (SELECT MAX([C7]) FROM [T2])",
            "repaired_sql": "SELECT [T3].[C11] FROM [T2] JOIN [T3] ON [T2].[C9] = [T3].[C12] ORDER BY [T2].[C7] DESC LIMIT 1;"
        },
        "values": [
            "Max",
            "Reach"
        ],
        "value_links": {
            "Max": "[twitter].[reach]",
            "Reach": "[twitter].[reach]"
        },
        "filtered_value_links": {
            "Max": "[twitter].[reach]",
            "Reach": "[twitter].[reach]"
        },
        "schema_links": {
            "gender": "COLUMN:[user].[gender]",
            "reach": "COLUMN:[twitter].[reach]",
            "user": "TABLE:[user]"
        },
        "filtered_schema_links": {
            "gender": "COLUMN:[user].[gender]",
            "reach": "COLUMN:[twitter].[reach]",
            "user": "TABLE:[user]"
        },
        "attack": "What is the name of the user who has posted the tweet that is seen by the most number of unique users? seen by the most number of unique users refers to max(unique_views); max is a value of the column unique_views; unique_views is a value of the column unique_views"
    },
    {
        "db_id": "social_media",
        "question": "Give the name of the city of the user who tweeted `One of our favorite stories is @FINRA_News's move to the cloud with AWS Enterprise Support! https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a`. \"One of our favorite stories is @FINRA_News's move to the cloud with AWS Enterprise Support! https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a\" is the text",
        "evidence": "\"One of our favorite stories is @FINRA_News's move to the cloud with AWS Enterprise Support! https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a\" is the text",
        "SQL": "SELECT T2.City FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T1.text = 'One of our favorite stories is @FINRA_News''s move to the cloud with AWS Enterprise Support! https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a'",
        "query": "SELECT T2.City FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T1.text = 'One of our favorite stories is @FINRA_News''s move to the cloud with AWS Enterprise Support! https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a'",
        "evidence_added": true,
        "question_toks": [
            "Give",
            "the",
            "name",
            "of",
            "the",
            "city",
            "of",
            "the",
            "user",
            "who",
            "tweeted",
            "`One",
            "of",
            "our",
            "favorite",
            "stories",
            "is",
            "@FINRA_News's",
            "move",
            "to",
            "the",
            "cloud",
            "with",
            "AWS",
            "Enterprise",
            "Support!",
            "https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a`",
            ".",
            "\"One",
            "of",
            "our",
            "favorite",
            "stories",
            "is",
            "@FINRA_News's",
            "move",
            "to",
            "the",
            "cloud",
            "with",
            "AWS",
            "Enterprise",
            "Support!",
            "https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a\"",
            "is",
            "the",
            "text"
        ],
        "tc_original": [
            "location.locationid",
            "location.city",
            "location.country",
            "location.state",
            "location.statecode",
            "location.*",
            "twitter.locationid",
            "twitter.userid",
            "twitter.tweetid",
            "twitter.text",
            "twitter.weekday",
            "twitter.*",
            "user.userid",
            "user.gender",
            "user.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[location]",
            "COLUMN:[location].[locationid]",
            "COLUMN:[location].[city]",
            "COLUMN:[location].[country]",
            "COLUMN:[location].[state]",
            "COLUMN:[location].[statecode]",
            "COLUMN:[location].[*]",
            "TABLE:[twitter]",
            "COLUMN:[twitter].[locationid]",
            "COLUMN:[twitter].[userid]",
            "COLUMN:[twitter].[tweetid]",
            "COLUMN:[twitter].[text]",
            "COLUMN:[twitter].[weekday]",
            "COLUMN:[twitter].[*]",
            "TABLE:[user]",
            "COLUMN:[user].[userid]",
            "COLUMN:[user].[gender]",
            "COLUMN:[user].[*]"
        ],
        "schema": "'[location]':\n  '[city]': text\n  '[country]': text\n  '[locationid]':\n    primary_key: true\n    type: integer\n  '[state]': text\n  '[statecode]': text\n'[twitter]':\n  '[locationid]':\n    foreign_key: '[location].[locationid]'\n    type: integer\n  '[text]': text\n  '[tweetid]':\n    primary_key: true\n    type: text\n  '[userid]':\n    foreign_key: '[user].[userid]'\n    type: text\n  '[weekday]': text\n'[user]':\n  '[gender]': text\n  '[userid]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "name": "COLUMN:[location].[city]",
            "city": "COLUMN:[location].[city]",
            "user": "TABLE:[user]",
            "tweeted": "TABLE:[twitter]",
            "text": "COLUMN:[twitter].[text]",
            "One of our favorite stories is @FINRA_News's move to the cloud with AWS Enterprise Support! https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a": "VALUE:[twitter].[text]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[location]",
                "[C1]": "[location].[city]",
                "[C2]": "[location].[country]",
                "[C3]": "[location].[locationid]",
                "[C4]": "[location].[state]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[C6]": "[twitter].[locationid]",
                "[C7]": "[twitter].[text]",
                "[C8]": "[twitter].[tweetid]",
                "[C9]": "[twitter].[userid]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[C11]": "[user].[gender]",
                "[C12]": "[user].[userid]"
            },
            "to_symbol": {
                "[location]": "[T1]",
                "[location].[city]": "[C1]",
                "[location].[country]": "[C2]",
                "[location].[locationid]": "[C3]",
                "[location].[state]": "[C4]",
                "[location].[statecode]": "[C5]",
                "[twitter]": "[T2]",
                "[twitter].[locationid]": "[C6]",
                "[twitter].[text]": "[C7]",
                "[twitter].[tweetid]": "[C8]",
                "[twitter].[userid]": "[C9]",
                "[twitter].[weekday]": "[C10]",
                "[user]": "[T3]",
                "[user].[gender]": "[C11]",
                "[user].[userid]": "[C12]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]':\n    foreign_key: '[T1].[C3]'\n    type: integer\n  '[C7]': text\n  '[C8]':\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T3].[C12]'\n    type: text\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[location]",
                "[T1].[C1]": "[location].[city]",
                "[C1]": "[location].[city]",
                "[T1].[C2]": "[location].[country]",
                "[C2]": "[location].[country]",
                "[T1].[C3]": "[location].[locationid]",
                "[C3]": "[location].[locationid]",
                "[T1].[C4]": "[location].[state]",
                "[C4]": "[location].[state]",
                "[T1].[C5]": "[location].[statecode]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[T2].[C6]": "[twitter].[locationid]",
                "[C6]": "[twitter].[locationid]",
                "[T2].[C7]": "[twitter].[text]",
                "[C7]": "[twitter].[text]",
                "[T2].[C8]": "[twitter].[tweetid]",
                "[C8]": "[twitter].[tweetid]",
                "[T2].[C9]": "[twitter].[userid]",
                "[C9]": "[twitter].[userid]",
                "[T2].[C10]": "[twitter].[weekday]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[T3].[C11]": "[user].[gender]",
                "[C11]": "[user].[gender]",
                "[T3].[C12]": "[user].[userid]",
                "[C12]": "[user].[userid]"
            },
            "question": "Give the name of the [C1] of the user who tweeted `One of our favorite stories is @FINRA_News's move to the cloud with AWS Enterprise Support! https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a`. \"One of our favorite stories is @FINRA_News's move to the cloud with AWS Enterprise Support! https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a\" is the text; [V1] is a value of the column [C1]",
            "to_value": {
                "[V1]": "New York"
            },
            "masked": 2,
            "masked_terms": [
                "New York",
                "city"
            ],
            "sql": "SELECT [T1].[C1] FROM [T1] JOIN [T2] ON [T1].[C3] = [T2].[C6] WHERE [T2].[C10] = 'One of our favorite stories is @FINRA_News''s move to the cloud with AWS Enterprise Support! https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a'",
            "repaired_sql": "SELECT [T1].[C1] FROM [T1] JOIN [T2] ON [T2].[C6] = [T1].[C3] WHERE [T2].[C10] = 'One of our favorite stories is @FINRA_News''s move to the cloud with AWS Enterprise Support! https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a'"
        },
        "values": [
            "New York"
        ],
        "value_links": {
            "New York": "[location].[city]"
        },
        "filtered_value_links": {
            "New York": "[location].[city]"
        },
        "schema_links": {
            "city": "COLUMN:[location].[city]"
        },
        "filtered_schema_links": {
            "city": "COLUMN:[location].[city]"
        },
        "attack": "Give the name of the username of the user who tweeted `One of our favorite stories is @FINRA_News's move to the cloud with AWS Enterprise Support! https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a`. \"One of our favorite stories is @FINRA_News's move to the cloud with AWS Enterprise Support! https://amp.twimg.com/v/991837f1-4815-4edc-a88f-e68ded09a02a\" is the text; username is a value of the column username."
    },
    {
        "db_id": "social_media",
        "question": "Which state was the tweet `tw-685681052912873473` from? Give the state code. tw-685681052912873473' is the TweetID",
        "evidence": "tw-685681052912873473' is the TweetID",
        "SQL": "SELECT T2.StateCode FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T1.TweetID = 'tw-685681052912873473'",
        "query": "SELECT T2.StateCode FROM twitter AS T1 INNER JOIN location AS T2 ON T2.LocationID = T1.LocationID WHERE T1.TweetID = 'tw-685681052912873473'",
        "evidence_added": true,
        "question_toks": [
            "Which",
            "state",
            "was",
            "the",
            "tweet",
            "`tw-685681052912873473`",
            "from",
            "?",
            "Give",
            "the",
            "state",
            "code",
            ".",
            "tw-685681052912873473'",
            "is",
            "the",
            "TweetID"
        ],
        "tc_original": [
            "location.locationid",
            "location.statecode",
            "location.state",
            "location.country",
            "location.city",
            "location.*",
            "twitter.locationid",
            "twitter.tweetid",
            "twitter.weekday",
            "twitter.hour",
            "twitter.day",
            "twitter.*",
            "user.gender",
            "user.userid",
            "user.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[location]",
            "COLUMN:[location].[locationid]",
            "COLUMN:[location].[statecode]",
            "COLUMN:[location].[state]",
            "COLUMN:[location].[country]",
            "COLUMN:[location].[city]",
            "COLUMN:[location].[*]",
            "TABLE:[twitter]",
            "COLUMN:[twitter].[locationid]",
            "COLUMN:[twitter].[tweetid]",
            "COLUMN:[twitter].[weekday]",
            "COLUMN:[twitter].[hour]",
            "COLUMN:[twitter].[day]",
            "COLUMN:[twitter].[*]",
            "TABLE:[user]",
            "COLUMN:[user].[gender]",
            "COLUMN:[user].[userid]",
            "COLUMN:[user].[*]"
        ],
        "schema": "'[location]':\n  '[city]': text\n  '[country]': text\n  '[locationid]':\n    primary_key: true\n    type: integer\n  '[state]': text\n  '[statecode]': text\n'[twitter]':\n  '[day]': integer\n  '[hour]': integer\n  '[locationid]':\n    foreign_key: '[location].[locationid]'\n    type: integer\n  '[tweetid]':\n    primary_key: true\n    type: text\n  '[weekday]': text\n'[user]':\n  '[gender]': text\n  '[userid]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "state": "COLUMN:[location].[state]",
            "state code": "COLUMN:[location].[statecode]",
            "tweet": "COLUMN:[twitter].[tweetid]",
            "tw-685681052912873473": "VALUE:[twitter].[tweetid]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[location]",
                "[C1]": "[location].[city]",
                "[C2]": "[location].[country]",
                "[C3]": "[location].[locationid]",
                "[C4]": "[location].[state]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[C6]": "[twitter].[day]",
                "[C7]": "[twitter].[hour]",
                "[C8]": "[twitter].[locationid]",
                "[C9]": "[twitter].[tweetid]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[C11]": "[user].[gender]",
                "[C12]": "[user].[userid]"
            },
            "to_symbol": {
                "[location]": "[T1]",
                "[location].[city]": "[C1]",
                "[location].[country]": "[C2]",
                "[location].[locationid]": "[C3]",
                "[location].[state]": "[C4]",
                "[location].[statecode]": "[C5]",
                "[twitter]": "[T2]",
                "[twitter].[day]": "[C6]",
                "[twitter].[hour]": "[C7]",
                "[twitter].[locationid]": "[C8]",
                "[twitter].[tweetid]": "[C9]",
                "[twitter].[weekday]": "[C10]",
                "[user]": "[T3]",
                "[user].[gender]": "[C11]",
                "[user].[userid]": "[C12]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]': integer\n  '[C8]':\n    foreign_key: '[T1].[C3]'\n    type: integer\n  '[C9]':\n    primary_key: true\n    type: text\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[location]",
                "[T1].[C1]": "[location].[city]",
                "[C1]": "[location].[city]",
                "[T1].[C2]": "[location].[country]",
                "[C2]": "[location].[country]",
                "[T1].[C3]": "[location].[locationid]",
                "[C3]": "[location].[locationid]",
                "[T1].[C4]": "[location].[state]",
                "[C4]": "[location].[state]",
                "[T1].[C5]": "[location].[statecode]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[T2].[C6]": "[twitter].[day]",
                "[C6]": "[twitter].[day]",
                "[T2].[C7]": "[twitter].[hour]",
                "[C7]": "[twitter].[hour]",
                "[T2].[C8]": "[twitter].[locationid]",
                "[C8]": "[twitter].[locationid]",
                "[T2].[C9]": "[twitter].[tweetid]",
                "[C9]": "[twitter].[tweetid]",
                "[T2].[C10]": "[twitter].[weekday]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[T3].[C11]": "[user].[gender]",
                "[C11]": "[user].[gender]",
                "[T3].[C12]": "[user].[userid]",
                "[C12]": "[user].[userid]"
            },
            "question": "Which state was the [C9] `[V1]` from? Give the [C5]. [V1]' is the TweetID; [V1] is a value of the column [C8]",
            "to_value": {
                "[V1]": "tw-685681052912873473"
            },
            "masked": 3,
            "masked_terms": [
                "tw-685681052912873473",
                "state code",
                "tweet"
            ],
            "sql": "SELECT [T1].[C5] FROM [T2] INNER JOIN [T1] ON [T2].[C8] = [T1].[C3] WHERE [T2].[C9] = '[V1]'",
            "repaired_sql": "SELECT [T1].[C5] FROM [T2] JOIN [T1] ON [T2].[C8] = [T1].[C3] WHERE [T2].[C9] = '[V1]';"
        },
        "values": [
            "tw-685681052912873473"
        ],
        "value_links": {
            "tw-685681052912873473": "[twitter].[locationid]"
        },
        "filtered_value_links": {
            "tw-685681052912873473": "[twitter].[locationid]"
        },
        "schema_links": {
            "state code": "COLUMN:[location].[statecode]",
            "tweet": "COLUMN:[twitter].[tweetid]"
        },
        "filtered_schema_links": {
            "state code": "COLUMN:[location].[statecode]",
            "tweet": "COLUMN:[twitter].[tweetid]"
        },
        "attack": "Which state was the TweetID '12345' from? Give the state. '12345' is the TweetID; '12345' is a value of the column tweet_id."
    },
    {
        "db_id": "social_media",
        "question": "How many unique users have seen tweet with text `Happy New Year to all those AWS instances of ours!`? \"Happy New Year to all those AWS instances of ours!\" is the text; seen unique users refers to Reach",
        "evidence": "\"Happy New Year to all those AWS instances of ours!\" is the text; seen unique users refers to Reach",
        "SQL": "SELECT Reach FROM twitter WHERE text = 'Happy New Year to all those AWS instances of ours!'",
        "query": "SELECT Reach FROM twitter WHERE text = 'Happy New Year to all those AWS instances of ours!'",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "unique",
            "users",
            "have",
            "seen",
            "tweet",
            "with",
            "text",
            "`Happy",
            "New",
            "Year",
            "to",
            "all",
            "those",
            "AWS",
            "instances",
            "of",
            "ours!`",
            "?",
            "\"Happy",
            "New",
            "Year",
            "to",
            "all",
            "those",
            "AWS",
            "instances",
            "of",
            "ours!\"",
            "is",
            "the",
            "text",
            ";",
            "seen",
            "unique",
            "users",
            "refers",
            "to",
            "Reach"
        ],
        "tc_original": [
            "twitter.text",
            "twitter.userid",
            "twitter.tweetid",
            "twitter.weekday",
            "twitter.hour",
            "twitter.*",
            "user.gender",
            "user.userid",
            "user.*",
            "location.country",
            "location.state",
            "location.city",
            "location.locationid",
            "location.statecode",
            "location.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[twitter]",
            "COLUMN:[twitter].[text]",
            "COLUMN:[twitter].[userid]",
            "COLUMN:[twitter].[tweetid]",
            "COLUMN:[twitter].[weekday]",
            "COLUMN:[twitter].[hour]",
            "COLUMN:[twitter].[*]",
            "TABLE:[user]",
            "COLUMN:[user].[gender]",
            "COLUMN:[user].[userid]",
            "COLUMN:[user].[*]",
            "TABLE:[location]",
            "COLUMN:[location].[country]",
            "COLUMN:[location].[state]",
            "COLUMN:[location].[city]",
            "COLUMN:[location].[locationid]",
            "COLUMN:[location].[statecode]",
            "COLUMN:[location].[*]"
        ],
        "schema": "'[location]':\n  '[city]': text\n  '[country]': text\n  '[locationid]':\n    primary_key: true\n    type: integer\n  '[state]': text\n  '[statecode]': text\n'[twitter]':\n  '[hour]': integer\n  '[text]': text\n  '[tweetid]':\n    primary_key: true\n    type: text\n  '[userid]':\n    foreign_key: '[user].[userid]'\n    type: text\n  '[weekday]': text\n'[user]':\n  '[gender]': text\n  '[userid]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "unique users": "COLUMN:[twitter].[Reach]",
            "seen": "COLUMN:[twitter].[Reach]",
            "tweet": "TABLE:[twitter]",
            "text": "COLUMN:[twitter].[text]",
            "Happy New Year to all those AWS instances of ours": "VALUE:[twitter].[text]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[location]",
                "[C1]": "[location].[city]",
                "[C2]": "[location].[country]",
                "[C3]": "[location].[locationid]",
                "[C4]": "[location].[state]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[C6]": "[twitter].[hour]",
                "[C7]": "[twitter].[text]",
                "[C8]": "[twitter].[tweetid]",
                "[C9]": "[twitter].[userid]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[C11]": "[user].[gender]",
                "[C12]": "[user].[userid]"
            },
            "to_symbol": {
                "[location]": "[T1]",
                "[location].[city]": "[C1]",
                "[location].[country]": "[C2]",
                "[location].[locationid]": "[C3]",
                "[location].[state]": "[C4]",
                "[location].[statecode]": "[C5]",
                "[twitter]": "[T2]",
                "[twitter].[hour]": "[C6]",
                "[twitter].[text]": "[C7]",
                "[twitter].[tweetid]": "[C8]",
                "[twitter].[userid]": "[C9]",
                "[twitter].[weekday]": "[C10]",
                "[user]": "[T3]",
                "[user].[gender]": "[C11]",
                "[user].[userid]": "[C12]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]': text\n  '[C8]':\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T3].[C12]'\n    type: text\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[location]",
                "[T1].[C1]": "[location].[city]",
                "[C1]": "[location].[city]",
                "[T1].[C2]": "[location].[country]",
                "[C2]": "[location].[country]",
                "[T1].[C3]": "[location].[locationid]",
                "[C3]": "[location].[locationid]",
                "[T1].[C4]": "[location].[state]",
                "[C4]": "[location].[state]",
                "[T1].[C5]": "[location].[statecode]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[T2].[C6]": "[twitter].[hour]",
                "[C6]": "[twitter].[hour]",
                "[T2].[C7]": "[twitter].[text]",
                "[C7]": "[twitter].[text]",
                "[T2].[C8]": "[twitter].[tweetid]",
                "[C8]": "[twitter].[tweetid]",
                "[T2].[C9]": "[twitter].[userid]",
                "[C9]": "[twitter].[userid]",
                "[T2].[C10]": "[twitter].[weekday]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[T3].[C11]": "[user].[gender]",
                "[C11]": "[user].[gender]",
                "[T3].[C12]": "[user].[userid]",
                "[C12]": "[user].[userid]"
            },
            "question": "How many unique [C12] have seen [T2] with [C7] `Happy New Year to all those AWS instances of ours!`? \"Happy New Year to all those AWS instances of ours!\" is the [C7]; seen unique [C12] refers to Reach; [V1] is a value of the column [C7]",
            "to_value": {
                "[V1]": "Happy New Year to all those AWS instances of ours!"
            },
            "masked": 4,
            "masked_terms": [
                "Happy New Year to all those AWS instances of ours!",
                "users",
                "text",
                "tweet"
            ],
            "sql": "SELECT COUNT(DISTINCT [T2].[C9]) AS Reach FROM [T2] WHERE [T2].[C7] = 'Happy New Year to all those AWS instances of ours!'",
            "repaired_sql": "SELECT COUNT(DISTINCT [T3].[C12]) FROM [T2] JOIN [T3] ON [T2].[C9] = [T3].[C12] WHERE [T2].[C7] = 'Happy New Year to all those AWS instances of ours!'"
        },
        "values": [
            "Happy New Year to all those AWS instances of ours!"
        ],
        "value_links": {
            "Happy New Year to all those AWS instances of ours!": "[twitter].[text]"
        },
        "filtered_value_links": {
            "Happy New Year to all those AWS instances of ours!": "[twitter].[text]"
        },
        "schema_links": {
            "users": "COLUMN:[user].[userid]",
            "text": "COLUMN:[twitter].[text]",
            "tweet": "TABLE:[twitter]"
        },
        "filtered_schema_links": {
            "users": "COLUMN:[user].[userid]",
            "text": "COLUMN:[twitter].[text]",
            "tweet": "TABLE:[twitter]"
        },
        "attack": "How many unique user ids have seen posts with content 'Happy New Year to all those AWS instances of ours!'?"
    },
    {
        "db_id": "social_media",
        "question": "List down the text of tweets posted by unknown gender users. unknown gender user refers to Gender = 'Unknown'",
        "evidence": "unknown gender user refers to Gender = 'Unknown'",
        "SQL": "SELECT T1.text FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Unknown'",
        "query": "SELECT T1.text FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Unknown'",
        "evidence_added": true,
        "question_toks": [
            "List",
            "down",
            "the",
            "text",
            "of",
            "tweets",
            "posted",
            "by",
            "unknown",
            "gender",
            "users",
            ".",
            "unknown",
            "gender",
            "user",
            "refers",
            "to",
            "Gender",
            "=",
            "'Unknown'"
        ],
        "tc_original": [
            "twitter.text",
            "twitter.userid",
            "twitter.tweetid",
            "twitter.weekday",
            "twitter.hour",
            "twitter.*",
            "user.gender",
            "user.userid",
            "user.*",
            "location.country",
            "location.state",
            "location.city",
            "location.locationid",
            "location.statecode",
            "location.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[twitter]",
            "COLUMN:[twitter].[text]",
            "COLUMN:[twitter].[userid]",
            "COLUMN:[twitter].[tweetid]",
            "COLUMN:[twitter].[weekday]",
            "COLUMN:[twitter].[hour]",
            "COLUMN:[twitter].[*]",
            "TABLE:[user]",
            "COLUMN:[user].[gender]",
            "COLUMN:[user].[userid]",
            "COLUMN:[user].[*]",
            "TABLE:[location]",
            "COLUMN:[location].[country]",
            "COLUMN:[location].[state]",
            "COLUMN:[location].[city]",
            "COLUMN:[location].[locationid]",
            "COLUMN:[location].[statecode]",
            "COLUMN:[location].[*]"
        ],
        "schema": "'[location]':\n  '[city]': text\n  '[country]': text\n  '[locationid]':\n    primary_key: true\n    type: integer\n  '[state]': text\n  '[statecode]': text\n'[twitter]':\n  '[hour]': integer\n  '[text]': text\n  '[tweetid]':\n    primary_key: true\n    type: text\n  '[userid]':\n    foreign_key: '[user].[userid]'\n    type: text\n  '[weekday]': text\n'[user]':\n  '[gender]': text\n  '[userid]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "text": "COLUMN:[twitter].[text]",
            "tweets": "TABLE:[twitter]",
            "gender": "COLUMN:[user].[gender]",
            "unknown": "VALUE:[user].[gender]",
            "user": "TABLE:[user]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[location]",
                "[C1]": "[location].[city]",
                "[C2]": "[location].[country]",
                "[C3]": "[location].[locationid]",
                "[C4]": "[location].[state]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[C6]": "[twitter].[hour]",
                "[C7]": "[twitter].[text]",
                "[C8]": "[twitter].[tweetid]",
                "[C9]": "[twitter].[userid]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[C11]": "[user].[gender]",
                "[C12]": "[user].[userid]"
            },
            "to_symbol": {
                "[location]": "[T1]",
                "[location].[city]": "[C1]",
                "[location].[country]": "[C2]",
                "[location].[locationid]": "[C3]",
                "[location].[state]": "[C4]",
                "[location].[statecode]": "[C5]",
                "[twitter]": "[T2]",
                "[twitter].[hour]": "[C6]",
                "[twitter].[text]": "[C7]",
                "[twitter].[tweetid]": "[C8]",
                "[twitter].[userid]": "[C9]",
                "[twitter].[weekday]": "[C10]",
                "[user]": "[T3]",
                "[user].[gender]": "[C11]",
                "[user].[userid]": "[C12]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]': text\n  '[C8]':\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T3].[C12]'\n    type: text\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[location]",
                "[T1].[C1]": "[location].[city]",
                "[C1]": "[location].[city]",
                "[T1].[C2]": "[location].[country]",
                "[C2]": "[location].[country]",
                "[T1].[C3]": "[location].[locationid]",
                "[C3]": "[location].[locationid]",
                "[T1].[C4]": "[location].[state]",
                "[C4]": "[location].[state]",
                "[T1].[C5]": "[location].[statecode]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[T2].[C6]": "[twitter].[hour]",
                "[C6]": "[twitter].[hour]",
                "[T2].[C7]": "[twitter].[text]",
                "[C7]": "[twitter].[text]",
                "[T2].[C8]": "[twitter].[tweetid]",
                "[C8]": "[twitter].[tweetid]",
                "[T2].[C9]": "[twitter].[userid]",
                "[C9]": "[twitter].[userid]",
                "[T2].[C10]": "[twitter].[weekday]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[T3].[C11]": "[user].[gender]",
                "[C11]": "[user].[gender]",
                "[T3].[C12]": "[user].[userid]",
                "[C12]": "[user].[userid]"
            },
            "question": "List down the [C7] of tweets posted by [V1] [C11] users. [V1] [C11] user refers to [C11] = '[V1]'; [V1] is a value of the column [C11]",
            "to_value": {
                "[V1]": "Unknown"
            },
            "masked": 4,
            "masked_terms": [
                "Unknown",
                "text",
                "Gender",
                "Unknown"
            ],
            "sql": "SELECT [T2].[C7] FROM [T2] JOIN [T3] ON [T2].[C9] = [T3].[C12] WHERE [T3].[C11] = '[V1]'",
            "repaired_sql": "SELECT [T2].[C7] FROM [T2] JOIN [T3] ON [T2].[C9] = [T3].[C12] WHERE [T3].[C11] = '[V1]'"
        },
        "values": [
            "Unknown"
        ],
        "value_links": {
            "Unknown": "[user].[gender]"
        },
        "filtered_value_links": {
            "Unknown": "[user].[gender]"
        },
        "schema_links": {
            "text": "COLUMN:[twitter].[text]",
            "Gender": "COLUMN:[user].[gender]",
            "Unknown": "COLUMN:[user].[gender]"
        },
        "filtered_schema_links": {
            "text": "COLUMN:[twitter].[text]",
            "Gender": "COLUMN:[user].[gender]",
            "Unknown": "COLUMN:[user].[gender]"
        },
        "attack": "List down the text of tweets posted by verified status users. verified status user refers to status = 'verified'; verified is a value of the column status"
    },
    {
        "db_id": "social_media",
        "question": "Calculate the total number of male tweet IDs. \"Male\" is the Gender",
        "evidence": "\"Male\" is the Gender",
        "SQL": "SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Male'",
        "query": "SELECT COUNT(T1.TweetID) FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Male'",
        "evidence_added": true,
        "question_toks": [
            "Calculate",
            "the",
            "total",
            "number",
            "of",
            "male",
            "tweet",
            "IDs",
            ".",
            "\"Male\"",
            "is",
            "the",
            "Gender"
        ],
        "tc_original": [
            "user.userid",
            "user.gender",
            "user.*",
            "twitter.tweetid",
            "twitter.userid",
            "twitter.weekday",
            "twitter.hour",
            "twitter.day",
            "twitter.*",
            "location.country",
            "location.state",
            "location.city",
            "location.locationid",
            "location.statecode",
            "location.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[user]",
            "COLUMN:[user].[userid]",
            "COLUMN:[user].[gender]",
            "COLUMN:[user].[*]",
            "TABLE:[twitter]",
            "COLUMN:[twitter].[tweetid]",
            "COLUMN:[twitter].[userid]",
            "COLUMN:[twitter].[weekday]",
            "COLUMN:[twitter].[hour]",
            "COLUMN:[twitter].[day]",
            "COLUMN:[twitter].[*]",
            "TABLE:[location]",
            "COLUMN:[location].[country]",
            "COLUMN:[location].[state]",
            "COLUMN:[location].[city]",
            "COLUMN:[location].[locationid]",
            "COLUMN:[location].[statecode]",
            "COLUMN:[location].[*]"
        ],
        "schema": "'[location]':\n  '[city]': text\n  '[country]': text\n  '[locationid]':\n    primary_key: true\n    type: integer\n  '[state]': text\n  '[statecode]': text\n'[twitter]':\n  '[day]': integer\n  '[hour]': integer\n  '[tweetid]':\n    primary_key: true\n    type: text\n  '[userid]':\n    foreign_key: '[user].[userid]'\n    type: text\n  '[weekday]': text\n'[user]':\n  '[gender]': text\n  '[userid]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "male": "VALUE:[user].[gender]",
            "tweet IDs": "COLUMN:[twitter].[tweetid]",
            "gender": "COLUMN:[user].[gender]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[location]",
                "[C1]": "[location].[city]",
                "[C2]": "[location].[country]",
                "[C3]": "[location].[locationid]",
                "[C4]": "[location].[state]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[C6]": "[twitter].[day]",
                "[C7]": "[twitter].[hour]",
                "[C8]": "[twitter].[tweetid]",
                "[C9]": "[twitter].[userid]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[C11]": "[user].[gender]",
                "[C12]": "[user].[userid]"
            },
            "to_symbol": {
                "[location]": "[T1]",
                "[location].[city]": "[C1]",
                "[location].[country]": "[C2]",
                "[location].[locationid]": "[C3]",
                "[location].[state]": "[C4]",
                "[location].[statecode]": "[C5]",
                "[twitter]": "[T2]",
                "[twitter].[day]": "[C6]",
                "[twitter].[hour]": "[C7]",
                "[twitter].[tweetid]": "[C8]",
                "[twitter].[userid]": "[C9]",
                "[twitter].[weekday]": "[C10]",
                "[user]": "[T3]",
                "[user].[gender]": "[C11]",
                "[user].[userid]": "[C12]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]': integer\n  '[C8]':\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T3].[C12]'\n    type: text\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[location]",
                "[T1].[C1]": "[location].[city]",
                "[C1]": "[location].[city]",
                "[T1].[C2]": "[location].[country]",
                "[C2]": "[location].[country]",
                "[T1].[C3]": "[location].[locationid]",
                "[C3]": "[location].[locationid]",
                "[T1].[C4]": "[location].[state]",
                "[C4]": "[location].[state]",
                "[T1].[C5]": "[location].[statecode]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[T2].[C6]": "[twitter].[day]",
                "[C6]": "[twitter].[day]",
                "[T2].[C7]": "[twitter].[hour]",
                "[C7]": "[twitter].[hour]",
                "[T2].[C8]": "[twitter].[tweetid]",
                "[C8]": "[twitter].[tweetid]",
                "[T2].[C9]": "[twitter].[userid]",
                "[C9]": "[twitter].[userid]",
                "[T2].[C10]": "[twitter].[weekday]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[T3].[C11]": "[user].[gender]",
                "[C11]": "[user].[gender]",
                "[T3].[C12]": "[user].[userid]",
                "[C12]": "[user].[userid]"
            },
            "question": "Calculate the [C8] number of [V1] [C8]. \"[V1]\" is the Gender; [V1] is a value of the column [C11]",
            "to_value": {
                "[V1]": "male"
            },
            "masked": 4,
            "masked_terms": [
                "male",
                "male",
                "tweet ids",
                "total"
            ],
            "sql": "SELECT COUNT([T2].[C8]) FROM [T2] JOIN [T3] ON [T2].[C9] = [T3].[C12] WHERE [T3].[C11] = '[V1]'",
            "repaired_sql": "SELECT COUNT([T2].[C8]) FROM [T2] JOIN [T3] ON [T2].[C9] = [T3].[C12] WHERE [T3].[C11] = '[V1]'"
        },
        "values": [
            "male"
        ],
        "value_links": {
            "male": "[user].[gender]"
        },
        "filtered_value_links": {
            "male": "[user].[gender]"
        },
        "schema_links": {
            "male": "COLUMN:[user].[gender]",
            "tweet ids": "COLUMN:[twitter].[tweetid]",
            "total": "COLUMN:[twitter].[tweetid]"
        },
        "filtered_schema_links": {
            "male": "COLUMN:[user].[gender]",
            "tweet ids": "COLUMN:[twitter].[tweetid]",
            "total": "COLUMN:[twitter].[tweetid]"
        },
        "attack": "Calculate the total number of Male department. \"Male\" is the Gender; Male is a value of the column Gender."
    },
    {
        "db_id": "social_media",
        "question": "Tweet with ID tw-682723090279841798 was posted from which country? \"tw-682723090279841798\" is the TweetID",
        "evidence": "\"tw-682723090279841798\" is the TweetID",
        "SQL": "SELECT T2.Country FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.TweetID = 'tw-682723090279841798'",
        "query": "SELECT T2.Country FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T1.TweetID = 'tw-682723090279841798'",
        "evidence_added": true,
        "question_toks": [
            "Tweet",
            "with",
            "ID",
            "tw-682723090279841798",
            "was",
            "posted",
            "from",
            "which",
            "country",
            "?",
            "\"tw-682723090279841798\"",
            "is",
            "the",
            "TweetID"
        ],
        "tc_original": [
            "location.locationid",
            "location.country",
            "location.state",
            "location.city",
            "location.statecode",
            "location.*",
            "twitter.locationid",
            "twitter.tweetid",
            "twitter.userid",
            "twitter.weekday",
            "twitter.hour",
            "twitter.*",
            "user.userid",
            "user.gender",
            "user.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[location]",
            "COLUMN:[location].[locationid]",
            "COLUMN:[location].[country]",
            "COLUMN:[location].[state]",
            "COLUMN:[location].[city]",
            "COLUMN:[location].[statecode]",
            "COLUMN:[location].[*]",
            "TABLE:[twitter]",
            "COLUMN:[twitter].[locationid]",
            "COLUMN:[twitter].[tweetid]",
            "COLUMN:[twitter].[userid]",
            "COLUMN:[twitter].[weekday]",
            "COLUMN:[twitter].[hour]",
            "COLUMN:[twitter].[*]",
            "TABLE:[user]",
            "COLUMN:[user].[userid]",
            "COLUMN:[user].[gender]",
            "COLUMN:[user].[*]"
        ],
        "schema": "'[location]':\n  '[city]': text\n  '[country]': text\n  '[locationid]':\n    primary_key: true\n    type: integer\n  '[state]': text\n  '[statecode]': text\n'[twitter]':\n  '[hour]': integer\n  '[locationid]':\n    foreign_key: '[location].[locationid]'\n    type: integer\n  '[tweetid]':\n    primary_key: true\n    type: text\n  '[userid]':\n    foreign_key: '[user].[userid]'\n    type: text\n  '[weekday]': text\n'[user]':\n  '[gender]': text\n  '[userid]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "Tweet": "TABLE:[twitter]",
            "ID": "COLUMN:[twitter].[tweetid]",
            "tw-682723090279841798": "VALUE:[twitter].[tweetid]",
            "country": "COLUMN:[location].[country]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[location]",
                "[C1]": "[location].[city]",
                "[C2]": "[location].[country]",
                "[C3]": "[location].[locationid]",
                "[C4]": "[location].[state]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[C6]": "[twitter].[hour]",
                "[C7]": "[twitter].[locationid]",
                "[C8]": "[twitter].[tweetid]",
                "[C9]": "[twitter].[userid]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[C11]": "[user].[gender]",
                "[C12]": "[user].[userid]"
            },
            "to_symbol": {
                "[location]": "[T1]",
                "[location].[city]": "[C1]",
                "[location].[country]": "[C2]",
                "[location].[locationid]": "[C3]",
                "[location].[state]": "[C4]",
                "[location].[statecode]": "[C5]",
                "[twitter]": "[T2]",
                "[twitter].[hour]": "[C6]",
                "[twitter].[locationid]": "[C7]",
                "[twitter].[tweetid]": "[C8]",
                "[twitter].[userid]": "[C9]",
                "[twitter].[weekday]": "[C10]",
                "[user]": "[T3]",
                "[user].[gender]": "[C11]",
                "[user].[userid]": "[C12]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]':\n    foreign_key: '[T1].[C3]'\n    type: integer\n  '[C8]':\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T3].[C12]'\n    type: text\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[location]",
                "[T1].[C1]": "[location].[city]",
                "[C1]": "[location].[city]",
                "[T1].[C2]": "[location].[country]",
                "[C2]": "[location].[country]",
                "[T1].[C3]": "[location].[locationid]",
                "[C3]": "[location].[locationid]",
                "[T1].[C4]": "[location].[state]",
                "[C4]": "[location].[state]",
                "[T1].[C5]": "[location].[statecode]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[T2].[C6]": "[twitter].[hour]",
                "[C6]": "[twitter].[hour]",
                "[T2].[C7]": "[twitter].[locationid]",
                "[C7]": "[twitter].[locationid]",
                "[T2].[C8]": "[twitter].[tweetid]",
                "[C8]": "[twitter].[tweetid]",
                "[T2].[C9]": "[twitter].[userid]",
                "[C9]": "[twitter].[userid]",
                "[T2].[C10]": "[twitter].[weekday]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[T3].[C11]": "[user].[gender]",
                "[C11]": "[user].[gender]",
                "[T3].[C12]": "[user].[userid]",
                "[C12]": "[user].[userid]"
            },
            "question": "Tweet with [C8] [V1] was [C7] which [C2]? \"[V1]\" is the TweetID; [V1] is a value of the column [C7]",
            "to_value": {
                "[V1]": "tw-682723090279841798"
            },
            "masked": 4,
            "masked_terms": [
                "tw-682723090279841798",
                "id",
                "posted from",
                "country"
            ],
            "sql": "SELECT [T2].[C2] FROM [T2] INNER JOIN [T1] ON [T2].[C7] = [T1].[C3] WHERE [T2].[C8] = '[V1]'",
            "repaired_sql": "SELECT [T1].[C2] FROM [T2] JOIN [T1] ON [T2].[C7] = [T1].[C3] WHERE [T2].[C8] = '[V1]'"
        },
        "values": [
            "tw-682723090279841798"
        ],
        "value_links": {
            "tw-682723090279841798": "[twitter].[locationid]"
        },
        "filtered_value_links": {
            "tw-682723090279841798": "[twitter].[locationid]"
        },
        "schema_links": {
            "id": "COLUMN:[twitter].[tweetid]",
            "posted from": "COLUMN:[twitter].[locationid]",
            "country": "COLUMN:[location].[country]"
        },
        "filtered_schema_links": {
            "id": "COLUMN:[twitter].[tweetid]",
            "posted from": "COLUMN:[twitter].[locationid]",
            "country": "COLUMN:[location].[country]"
        },
        "attack": "Tweet with TweetID 12345 was posted by which user? \"12345\" is the TweetID; 12345 is a value of the column user_id"
    },
    {
        "db_id": "social_media",
        "question": "Tweets that were posted from Brazil are in what languague? \"Brazil\" is the Country; language refers to Lang",
        "evidence": "\"Brazil\" is the Country; language refers to Lang",
        "SQL": "SELECT DISTINCT T1.Lang FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.Country = 'Brazil'",
        "query": "SELECT DISTINCT T1.Lang FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE T2.Country = 'Brazil'",
        "evidence_added": true,
        "question_toks": [
            "Tweets",
            "that",
            "were",
            "posted",
            "from",
            "Brazil",
            "are",
            "in",
            "what",
            "languague",
            "?",
            "\"Brazil\"",
            "is",
            "the",
            "Country",
            ";",
            "language",
            "refers",
            "to",
            "Lang"
        ],
        "tc_original": [
            "twitter.lang",
            "twitter.locationid",
            "twitter.tweetid",
            "twitter.userid",
            "twitter.weekday",
            "twitter.*",
            "location.locationid",
            "location.country",
            "location.state",
            "location.city",
            "location.statecode",
            "location.*",
            "user.gender",
            "user.userid",
            "user.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[twitter]",
            "COLUMN:[twitter].[lang]",
            "COLUMN:[twitter].[locationid]",
            "COLUMN:[twitter].[tweetid]",
            "COLUMN:[twitter].[userid]",
            "COLUMN:[twitter].[weekday]",
            "COLUMN:[twitter].[*]",
            "TABLE:[location]",
            "COLUMN:[location].[locationid]",
            "COLUMN:[location].[country]",
            "COLUMN:[location].[state]",
            "COLUMN:[location].[city]",
            "COLUMN:[location].[statecode]",
            "COLUMN:[location].[*]",
            "TABLE:[user]",
            "COLUMN:[user].[gender]",
            "COLUMN:[user].[userid]",
            "COLUMN:[user].[*]"
        ],
        "schema": "'[location]':\n  '[city]': text\n  '[country]': text\n  '[locationid]':\n    primary_key: true\n    type: integer\n  '[state]': text\n  '[statecode]': text\n'[twitter]':\n  '[lang]': text\n  '[locationid]':\n    foreign_key: '[location].[locationid]'\n    type: integer\n  '[tweetid]':\n    primary_key: true\n    type: text\n  '[userid]':\n    foreign_key: '[user].[userid]'\n    type: text\n  '[weekday]': text\n'[user]':\n  '[gender]': text\n  '[userid]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "tweets": "TABLE:[twitter]",
            "posted": "TABLE:[twitter]",
            "Brazil": "VALUE:[location].[country]",
            "country": "COLUMN:[location].[country]",
            "language": "COLUMN:[twitter].[lang]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[location]",
                "[C1]": "[location].[city]",
                "[C2]": "[location].[country]",
                "[C3]": "[location].[locationid]",
                "[C4]": "[location].[state]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[C6]": "[twitter].[lang]",
                "[C7]": "[twitter].[locationid]",
                "[C8]": "[twitter].[tweetid]",
                "[C9]": "[twitter].[userid]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[C11]": "[user].[gender]",
                "[C12]": "[user].[userid]"
            },
            "to_symbol": {
                "[location]": "[T1]",
                "[location].[city]": "[C1]",
                "[location].[country]": "[C2]",
                "[location].[locationid]": "[C3]",
                "[location].[state]": "[C4]",
                "[location].[statecode]": "[C5]",
                "[twitter]": "[T2]",
                "[twitter].[lang]": "[C6]",
                "[twitter].[locationid]": "[C7]",
                "[twitter].[tweetid]": "[C8]",
                "[twitter].[userid]": "[C9]",
                "[twitter].[weekday]": "[C10]",
                "[user]": "[T3]",
                "[user].[gender]": "[C11]",
                "[user].[userid]": "[C12]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]': text\n  '[C7]':\n    foreign_key: '[T1].[C3]'\n    type: integer\n  '[C8]':\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T3].[C12]'\n    type: text\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[location]",
                "[T1].[C1]": "[location].[city]",
                "[C1]": "[location].[city]",
                "[T1].[C2]": "[location].[country]",
                "[C2]": "[location].[country]",
                "[T1].[C3]": "[location].[locationid]",
                "[C3]": "[location].[locationid]",
                "[T1].[C4]": "[location].[state]",
                "[C4]": "[location].[state]",
                "[T1].[C5]": "[location].[statecode]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[T2].[C6]": "[twitter].[lang]",
                "[C6]": "[twitter].[lang]",
                "[T2].[C7]": "[twitter].[locationid]",
                "[C7]": "[twitter].[locationid]",
                "[T2].[C8]": "[twitter].[tweetid]",
                "[C8]": "[twitter].[tweetid]",
                "[T2].[C9]": "[twitter].[userid]",
                "[C9]": "[twitter].[userid]",
                "[T2].[C10]": "[twitter].[weekday]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[T3].[C11]": "[user].[gender]",
                "[C11]": "[user].[gender]",
                "[T3].[C12]": "[user].[userid]",
                "[C12]": "[user].[userid]"
            },
            "question": "[T2] that were posted from [V1] are in what languague? \"[V1]\" is the Country; language refers to [V2]; [V1] is a value of the column [C2]; [V2] is a value of the column [C6]",
            "to_value": {
                "[V1]": "Brazil",
                "[V2]": "Lang"
            },
            "masked": 5,
            "masked_terms": [
                "Brazil",
                "Lang",
                "tweets",
                "lang",
                "Brazil"
            ],
            "sql": "SELECT DISTINCT [T2].[C6] FROM [T2] INNER JOIN [T1] ON [T2].[C7] = [T1].[C3] WHERE [T1].[C2] = '[V1]'",
            "repaired_sql": "SELECT DISTINCT [T2].[C6] FROM [T2] JOIN [T1] ON [T2].[C7] = [T1].[C3] WHERE [T1].[C2] = '[V1]';"
        },
        "values": [
            "Brazil",
            "Lang"
        ],
        "value_links": {
            "Brazil": "[location].[country]",
            "Lang": "[twitter].[lang]"
        },
        "filtered_value_links": {
            "Brazil": "[location].[country]",
            "Lang": "[twitter].[lang]"
        },
        "schema_links": {
            "tweets": "TABLE:[twitter]",
            "lang": "COLUMN:[twitter].[lang]",
            "Brazil": "COLUMN:[location].[country]"
        },
        "filtered_schema_links": {
            "tweets": "TABLE:[twitter]",
            "lang": "COLUMN:[twitter].[lang]",
            "Brazil": "COLUMN:[location].[country]"
        },
        "attack": "Posts that were posted from USA are in what language? \"USA\" is the Country; language refers to English; USA is a value of the column Country; English is a value of the column language"
    },
    {
        "db_id": "social_media",
        "question": "Please list the texts of all the tweets in French posted by male users. \"French\" is the language and refers to Lang = 'fr'; male user refers to Gender = 'Male'",
        "evidence": "\"French\" is the language and refers to Lang = 'fr'; male user refers to Gender = 'Male'",
        "SQL": "SELECT T1.text FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Male' AND T1.Lang = 'fr'",
        "query": "SELECT T1.text FROM twitter AS T1 INNER JOIN user AS T2 ON T1.UserID = T2.UserID WHERE T2.Gender = 'Male' AND T1.Lang = 'fr'",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "list",
            "the",
            "texts",
            "of",
            "all",
            "the",
            "tweets",
            "in",
            "French",
            "posted",
            "by",
            "male",
            "users",
            ".",
            "\"French\"",
            "is",
            "the",
            "language",
            "and",
            "refers",
            "to",
            "Lang",
            "=",
            "'fr'",
            ";",
            "male",
            "user",
            "refers",
            "to",
            "Gender",
            "=",
            "'Male'"
        ],
        "tc_original": [
            "twitter.text",
            "twitter.userid",
            "twitter.lang",
            "twitter.tweetid",
            "twitter.weekday",
            "twitter.*",
            "user.gender",
            "user.userid",
            "user.*",
            "location.country",
            "location.state",
            "location.city",
            "location.locationid",
            "location.statecode",
            "location.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[twitter]",
            "COLUMN:[twitter].[text]",
            "COLUMN:[twitter].[userid]",
            "COLUMN:[twitter].[lang]",
            "COLUMN:[twitter].[tweetid]",
            "COLUMN:[twitter].[weekday]",
            "COLUMN:[twitter].[*]",
            "TABLE:[user]",
            "COLUMN:[user].[gender]",
            "COLUMN:[user].[userid]",
            "COLUMN:[user].[*]",
            "TABLE:[location]",
            "COLUMN:[location].[country]",
            "COLUMN:[location].[state]",
            "COLUMN:[location].[city]",
            "COLUMN:[location].[locationid]",
            "COLUMN:[location].[statecode]",
            "COLUMN:[location].[*]"
        ],
        "schema": "'[location]':\n  '[city]': text\n  '[country]': text\n  '[locationid]':\n    primary_key: true\n    type: integer\n  '[state]': text\n  '[statecode]': text\n'[twitter]':\n  '[lang]': text\n  '[text]': text\n  '[tweetid]':\n    primary_key: true\n    type: text\n  '[userid]':\n    foreign_key: '[user].[userid]'\n    type: text\n  '[weekday]': text\n'[user]':\n  '[gender]': text\n  '[userid]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "texts": "COLUMN:[twitter].[text]",
            "tweets": "TABLE:[twitter]",
            "French": "VALUE:[twitter].[lang]",
            "language": "COLUMN:[twitter].[lang]",
            "male": "VALUE:[user].[gender]",
            "users": "TABLE:[user]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[location]",
                "[C1]": "[location].[city]",
                "[C2]": "[location].[country]",
                "[C3]": "[location].[locationid]",
                "[C4]": "[location].[state]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[C6]": "[twitter].[lang]",
                "[C7]": "[twitter].[text]",
                "[C8]": "[twitter].[tweetid]",
                "[C9]": "[twitter].[userid]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[C11]": "[user].[gender]",
                "[C12]": "[user].[userid]"
            },
            "to_symbol": {
                "[location]": "[T1]",
                "[location].[city]": "[C1]",
                "[location].[country]": "[C2]",
                "[location].[locationid]": "[C3]",
                "[location].[state]": "[C4]",
                "[location].[statecode]": "[C5]",
                "[twitter]": "[T2]",
                "[twitter].[lang]": "[C6]",
                "[twitter].[text]": "[C7]",
                "[twitter].[tweetid]": "[C8]",
                "[twitter].[userid]": "[C9]",
                "[twitter].[weekday]": "[C10]",
                "[user]": "[T3]",
                "[user].[gender]": "[C11]",
                "[user].[userid]": "[C12]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]': text\n  '[C7]': text\n  '[C8]':\n    primary_key: true\n    type: text\n  '[C9]':\n    foreign_key: '[T3].[C12]'\n    type: text\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[location]",
                "[T1].[C1]": "[location].[city]",
                "[C1]": "[location].[city]",
                "[T1].[C2]": "[location].[country]",
                "[C2]": "[location].[country]",
                "[T1].[C3]": "[location].[locationid]",
                "[C3]": "[location].[locationid]",
                "[T1].[C4]": "[location].[state]",
                "[C4]": "[location].[state]",
                "[T1].[C5]": "[location].[statecode]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[T2].[C6]": "[twitter].[lang]",
                "[C6]": "[twitter].[lang]",
                "[T2].[C7]": "[twitter].[text]",
                "[C7]": "[twitter].[text]",
                "[T2].[C8]": "[twitter].[tweetid]",
                "[C8]": "[twitter].[tweetid]",
                "[T2].[C9]": "[twitter].[userid]",
                "[C9]": "[twitter].[userid]",
                "[T2].[C10]": "[twitter].[weekday]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[T3].[C11]": "[user].[gender]",
                "[C11]": "[user].[gender]",
                "[T3].[C12]": "[user].[userid]",
                "[C12]": "[user].[userid]"
            },
            "question": "Please list the [C7] of all the [T2] in [V1] posted by [V2] users. \"[V1]\" is the language and refers to Lang = 'fr'; [V2] user refers to Gender = '[V2]'; [V1] is a value of the column [C6]; [V2] is a value of the column [C11]",
            "to_value": {
                "[V1]": "French",
                "[V2]": "Male"
            },
            "masked": 6,
            "masked_terms": [
                "French",
                "Male",
                "texts",
                "tweets",
                "French",
                "Male"
            ],
            "sql": "SELECT [T2].[C7] FROM [T2] INNER JOIN [T3] ON [T2].[C9] = [T3].[C12] WHERE [T2].[C6] = 'fr' AND [T3].[C11] = '[V2]'",
            "repaired_sql": "SELECT [T2].[C7] FROM [T2] JOIN [T3] ON [T2].[C9] = [T3].[C12] WHERE [T2].[C6] = 'fr' AND [T3].[C11] = '[V2]'"
        },
        "values": [
            "French",
            "Male"
        ],
        "value_links": {
            "French": "[twitter].[lang]",
            "Male": "[user].[gender]"
        },
        "filtered_value_links": {
            "French": "[twitter].[lang]",
            "Male": "[user].[gender]"
        },
        "schema_links": {
            "texts": "COLUMN:[twitter].[text]",
            "tweets": "TABLE:[twitter]",
            "French": "COLUMN:[twitter].[lang]",
            "Male": "COLUMN:[user].[gender]"
        },
        "filtered_schema_links": {
            "texts": "COLUMN:[twitter].[text]",
            "tweets": "TABLE:[twitter]",
            "French": "COLUMN:[twitter].[lang]",
            "Male": "COLUMN:[user].[gender]"
        },
        "attack": "Please list the title of all the posts in French posted by female users. \"French\" is the language and refers to Lang = 'fr'; female user refers to Gender = 'female'; French is a value of the column Lang; female is a value of the column Gender."
    },
    {
        "db_id": "social_media",
        "question": "Please list all the cities from where tweets with neutral sentiments were posted. neutral sentiment refers to Sentiment = 0",
        "evidence": "neutral sentiment refers to Sentiment = 0",
        "SQL": "SELECT DISTINCT T2.City FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE Sentiment = 0",
        "query": "SELECT DISTINCT T2.City FROM twitter AS T1 INNER JOIN location AS T2 ON T1.LocationID = T2.LocationID WHERE Sentiment = 0",
        "evidence_added": true,
        "question_toks": [
            "Please",
            "list",
            "all",
            "the",
            "cities",
            "from",
            "where",
            "tweets",
            "with",
            "neutral",
            "sentiments",
            "were",
            "posted",
            ".",
            "neutral",
            "sentiment",
            "refers",
            "to",
            "Sentiment",
            "=",
            "0"
        ],
        "tc_original": [
            "location.locationid",
            "location.city",
            "location.country",
            "location.state",
            "location.statecode",
            "location.*",
            "twitter.locationid",
            "twitter.sentiment",
            "twitter.tweetid",
            "twitter.weekday",
            "twitter.hour",
            "twitter.*",
            "user.gender",
            "user.userid",
            "user.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[location]",
            "COLUMN:[location].[locationid]",
            "COLUMN:[location].[city]",
            "COLUMN:[location].[country]",
            "COLUMN:[location].[state]",
            "COLUMN:[location].[statecode]",
            "COLUMN:[location].[*]",
            "TABLE:[twitter]",
            "COLUMN:[twitter].[locationid]",
            "COLUMN:[twitter].[sentiment]",
            "COLUMN:[twitter].[tweetid]",
            "COLUMN:[twitter].[weekday]",
            "COLUMN:[twitter].[hour]",
            "COLUMN:[twitter].[*]",
            "TABLE:[user]",
            "COLUMN:[user].[gender]",
            "COLUMN:[user].[userid]",
            "COLUMN:[user].[*]"
        ],
        "schema": "'[location]':\n  '[city]': text\n  '[country]': text\n  '[locationid]':\n    primary_key: true\n    type: integer\n  '[state]': text\n  '[statecode]': text\n'[twitter]':\n  '[hour]': integer\n  '[locationid]':\n    foreign_key: '[location].[locationid]'\n    type: integer\n  '[sentiment]': real\n  '[tweetid]':\n    primary_key: true\n    type: text\n  '[weekday]': text\n'[user]':\n  '[gender]': text\n  '[userid]':\n    primary_key: true\n    type: text\n",
        "gold_links": {
            "cities": "COLUMN:[location].[city]",
            "tweets": "TABLE:[twitter]",
            "neutral sentiment": "VALUE:[twitter].[sentiment]",
            "sentiment": "COLUMN:[twitter].[sentiment]",
            "0": "VALUE:[twitter].[sentiment]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[location]",
                "[C1]": "[location].[city]",
                "[C2]": "[location].[country]",
                "[C3]": "[location].[locationid]",
                "[C4]": "[location].[state]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[C6]": "[twitter].[hour]",
                "[C7]": "[twitter].[locationid]",
                "[C8]": "[twitter].[sentiment]",
                "[C9]": "[twitter].[tweetid]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[C11]": "[user].[gender]",
                "[C12]": "[user].[userid]"
            },
            "to_symbol": {
                "[location]": "[T1]",
                "[location].[city]": "[C1]",
                "[location].[country]": "[C2]",
                "[location].[locationid]": "[C3]",
                "[location].[state]": "[C4]",
                "[location].[statecode]": "[C5]",
                "[twitter]": "[T2]",
                "[twitter].[hour]": "[C6]",
                "[twitter].[locationid]": "[C7]",
                "[twitter].[sentiment]": "[C8]",
                "[twitter].[tweetid]": "[C9]",
                "[twitter].[weekday]": "[C10]",
                "[user]": "[T3]",
                "[user].[gender]": "[C11]",
                "[user].[userid]": "[C12]"
            },
            "schema": "'[T1]':\n  '[C1]': text\n  '[C2]': text\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n  '[C5]': text\n'[T2]':\n  '[C10]': text\n  '[C6]': integer\n  '[C7]':\n    foreign_key: '[T1].[C3]'\n    type: integer\n  '[C8]': real\n  '[C9]':\n    primary_key: true\n    type: text\n'[T3]':\n  '[C11]': text\n  '[C12]':\n    primary_key: true\n    type: text\n",
            "reverse_dict": {
                "[T1]": "[location]",
                "[T1].[C1]": "[location].[city]",
                "[C1]": "[location].[city]",
                "[T1].[C2]": "[location].[country]",
                "[C2]": "[location].[country]",
                "[T1].[C3]": "[location].[locationid]",
                "[C3]": "[location].[locationid]",
                "[T1].[C4]": "[location].[state]",
                "[C4]": "[location].[state]",
                "[T1].[C5]": "[location].[statecode]",
                "[C5]": "[location].[statecode]",
                "[T2]": "[twitter]",
                "[T2].[C6]": "[twitter].[hour]",
                "[C6]": "[twitter].[hour]",
                "[T2].[C7]": "[twitter].[locationid]",
                "[C7]": "[twitter].[locationid]",
                "[T2].[C8]": "[twitter].[sentiment]",
                "[C8]": "[twitter].[sentiment]",
                "[T2].[C9]": "[twitter].[tweetid]",
                "[C9]": "[twitter].[tweetid]",
                "[T2].[C10]": "[twitter].[weekday]",
                "[C10]": "[twitter].[weekday]",
                "[T3]": "[user]",
                "[T3].[C11]": "[user].[gender]",
                "[C11]": "[user].[gender]",
                "[T3].[C12]": "[user].[userid]",
                "[C12]": "[user].[userid]"
            },
            "question": "Please list all the [C1] from where tweets with [V1] sentiments were posted. [V1] [C8] refers to [C8] = [V2]; [V1] is a value of the column [C8]; [V2] is a value of the column [C8]",
            "to_value": {
                "[V1]": "neutral",
                "[V2]": "0"
            },
            "masked": 4,
            "masked_terms": [
                "neutral",
                "0",
                "cities",
                "sentiment"
            ],
            "sql": "SELECT [T1].[C1] FROM [T1] INNER JOIN [T2] ON [T1].[C3] = [T2].[C7] WHERE [T2].[C8] = [V2]",
            "repaired_sql": "SELECT DISTINCT [T1].[C1] FROM [T1] JOIN [T2] ON [T1].[C3] = [T2].[C7] WHERE [T2].[C8] = [V2];"
        },
        "values": [
            "neutral",
            "0"
        ],
        "value_links": {
            "neutral": "[twitter].[sentiment]",
            "0": "[twitter].[sentiment]"
        },
        "filtered_value_links": {
            "neutral": "[twitter].[sentiment]",
            "0": "[twitter].[sentiment]"
        },
        "schema_links": {
            "cities": "COLUMN:[location].[city]",
            "sentiment": "COLUMN:[twitter].[sentiment]"
        },
        "filtered_schema_links": {
            "cities": "COLUMN:[location].[city]",
            "sentiment": "COLUMN:[twitter].[sentiment]"
        },
        "attack": "Please list all the locations from where tweets with positive sentiments were posted. Positive sentiment refers to sentiment = 1; positive is a value of the column sentiment; 1 is a value of the column sentiment"
    },
    {
        "db_id": "cs_semester",
        "question": "What is the average gpa of Ogdon Zywicki's research assistants? research assistant refers to the student who serves for research where the abbreviation is RA; prof_id refers to professor\u2019s ID; GPA is an abbreviated name of Grade Point Average where average = AVG(gpa);",
        "evidence": "research assistant refers to the student who serves for research where the abbreviation is RA; prof_id refers to professor\u2019s ID; GPA is an abbreviated name of Grade Point Average where average = AVG(gpa);",
        "SQL": "SELECT SUM(T3.gpa) / COUNT(T1.student_id) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T1.student_id = T3.student_id WHERE T2.first_name = 'Ogdon' AND T2.last_name = 'Zywicki'",
        "query": "SELECT SUM(T3.gpa) / COUNT(T1.student_id) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T1.student_id = T3.student_id WHERE T2.first_name = 'Ogdon' AND T2.last_name = 'Zywicki'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "average",
            "gpa",
            "of",
            "Ogdon",
            "Zywicki's",
            "research",
            "assistants",
            "?",
            "research",
            "assistant",
            "refers",
            "to",
            "the",
            "student",
            "who",
            "serves",
            "for",
            "research",
            "where",
            "the",
            "abbreviation",
            "is",
            "RA",
            ";",
            "prof_id",
            "refers",
            "to",
            "professor\u2019s",
            "ID",
            ";",
            "GPA",
            "is",
            "an",
            "abbreviated",
            "name",
            "of",
            "Grade",
            "Point",
            "Average",
            "where",
            "average",
            "=",
            "AVG(gpa)",
            ";"
        ],
        "tc_original": [
            "prof.last_name",
            "prof.first_name",
            "prof.prof_id",
            "prof.gender",
            "prof.email",
            "prof.*",
            "student.gpa",
            "student.student_id",
            "student.email",
            "student.intelligence",
            "student.type",
            "student.*",
            "ra.prof_id",
            "ra.student_id",
            "ra.capability",
            "ra.salary",
            "ra.*",
            "course.name",
            "course.credit",
            "course.diff",
            "course.course_id",
            "course.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[prof]",
            "COLUMN:[prof].[last_name]",
            "COLUMN:[prof].[first_name]",
            "COLUMN:[prof].[prof_id]",
            "COLUMN:[prof].[gender]",
            "COLUMN:[prof].[email]",
            "COLUMN:[prof].[*]",
            "TABLE:[student]",
            "COLUMN:[student].[gpa]",
            "COLUMN:[student].[student_id]",
            "COLUMN:[student].[email]",
            "COLUMN:[student].[intelligence]",
            "COLUMN:[student].[type]",
            "COLUMN:[student].[*]",
            "TABLE:[ra]",
            "COLUMN:[ra].[prof_id]",
            "COLUMN:[ra].[student_id]",
            "COLUMN:[ra].[capability]",
            "COLUMN:[ra].[salary]",
            "COLUMN:[ra].[*]",
            "TABLE:[course]",
            "COLUMN:[course].[name]",
            "COLUMN:[course].[credit]",
            "COLUMN:[course].[diff]",
            "COLUMN:[course].[course_id]",
            "COLUMN:[course].[*]"
        ],
        "schema": "'[course]':\n  '[course_id]':\n    primary_key: true\n    type: integer\n  '[credit]': integer\n  '[diff]': integer\n  '[name]': text\n'[prof]':\n  '[email]': text\n  '[first_name]': text\n  '[gender]': text\n  '[last_name]': text\n  '[prof_id]':\n    primary_key: true\n    type: integer\n'[ra]':\n  '[capability]': integer\n  '[prof_id]':\n    foreign_key: '[prof].[prof_id]'\n    primary_key: true\n    type: integer\n  '[salary]': text\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[student]':\n  '[email]': text\n  '[gpa]': real\n  '[intelligence]': integer\n  '[student_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n",
        "gold_links": {
            "average gpa": "COLUMN:[student].[gpa]",
            "gpa": "COLUMN:[student].[gpa]",
            "Ogdon": "COLUMN:[prof].[first_name]",
            "Zywicki": "COLUMN:[prof].[last_name]",
            "research assistants": "TABLE:[ra]",
            "research assistant": "TABLE:[ra]",
            "prof_id": "COLUMN:[ra].[prof_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[course]",
                "[C1]": "[course].[course_id]",
                "[C2]": "[course].[credit]",
                "[C3]": "[course].[diff]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[C5]": "[prof].[email]",
                "[C6]": "[prof].[first_name]",
                "[C7]": "[prof].[gender]",
                "[C8]": "[prof].[last_name]",
                "[C9]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[C10]": "[ra].[capability]",
                "[C11]": "[ra].[prof_id]",
                "[C12]": "[ra].[salary]",
                "[C13]": "[ra].[student_id]",
                "[T4]": "[student]",
                "[C14]": "[student].[email]",
                "[C15]": "[student].[gpa]",
                "[C16]": "[student].[intelligence]",
                "[C17]": "[student].[student_id]",
                "[C18]": "[student].[type]"
            },
            "to_symbol": {
                "[course]": "[T1]",
                "[course].[course_id]": "[C1]",
                "[course].[credit]": "[C2]",
                "[course].[diff]": "[C3]",
                "[course].[name]": "[C4]",
                "[prof]": "[T2]",
                "[prof].[email]": "[C5]",
                "[prof].[first_name]": "[C6]",
                "[prof].[gender]": "[C7]",
                "[prof].[last_name]": "[C8]",
                "[prof].[prof_id]": "[C9]",
                "[ra]": "[T3]",
                "[ra].[capability]": "[C10]",
                "[ra].[prof_id]": "[C11]",
                "[ra].[salary]": "[C12]",
                "[ra].[student_id]": "[C13]",
                "[student]": "[T4]",
                "[student].[email]": "[C14]",
                "[student].[gpa]": "[C15]",
                "[student].[intelligence]": "[C16]",
                "[student].[student_id]": "[C17]",
                "[student].[type]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': integer\n  '[C4]': text\n'[T2]':\n  '[C5]': text\n  '[C6]': text\n  '[C7]': text\n  '[C8]': text\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    foreign_key: '[T2].[C9]'\n    primary_key: true\n    type: integer\n  '[C12]': text\n  '[C13]':\n    foreign_key: '[T4].[C17]'\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C14]': text\n  '[C15]': real\n  '[C16]': integer\n  '[C17]':\n    primary_key: true\n    type: integer\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[course]",
                "[T1].[C1]": "[course].[course_id]",
                "[C1]": "[course].[course_id]",
                "[T1].[C2]": "[course].[credit]",
                "[C2]": "[course].[credit]",
                "[T1].[C3]": "[course].[diff]",
                "[C3]": "[course].[diff]",
                "[T1].[C4]": "[course].[name]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[T2].[C5]": "[prof].[email]",
                "[C5]": "[prof].[email]",
                "[T2].[C6]": "[prof].[first_name]",
                "[C6]": "[prof].[first_name]",
                "[T2].[C7]": "[prof].[gender]",
                "[C7]": "[prof].[gender]",
                "[T2].[C8]": "[prof].[last_name]",
                "[C8]": "[prof].[last_name]",
                "[T2].[C9]": "[prof].[prof_id]",
                "[C9]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[T3].[C10]": "[ra].[capability]",
                "[C10]": "[ra].[capability]",
                "[T3].[C11]": "[ra].[prof_id]",
                "[C11]": "[ra].[prof_id]",
                "[T3].[C12]": "[ra].[salary]",
                "[C12]": "[ra].[salary]",
                "[T3].[C13]": "[ra].[student_id]",
                "[C13]": "[ra].[student_id]",
                "[T4]": "[student]",
                "[T4].[C14]": "[student].[email]",
                "[C14]": "[student].[email]",
                "[T4].[C15]": "[student].[gpa]",
                "[C15]": "[student].[gpa]",
                "[T4].[C16]": "[student].[intelligence]",
                "[C16]": "[student].[intelligence]",
                "[T4].[C17]": "[student].[student_id]",
                "[C17]": "[student].[student_id]",
                "[T4].[C18]": "[student].[type]",
                "[C18]": "[student].[type]"
            },
            "question": "What is the [C15] of [V1]'s [T3]? research assistant refers to the student who serves for research where the abbreviation is [V2]; prof_id refers to professor\u2019s ID; GPA is an abbreviated name of Grade Point Average where average = AVG(gpa);; [V1] is a value of the column [C9]; [V2] is a value of the column [T3]",
            "to_value": {
                "[V1]": "Ogdon Zywicki",
                "[V2]": "RA"
            },
            "masked": 6,
            "masked_terms": [
                "Ogdon Zywicki",
                "RA",
                "average gpa",
                "research assistants",
                "Ogdon Zywicki",
                "RA"
            ],
            "sql": "SELECT [T4].[C15] FROM [T3] JOIN [T2] ON [T3].[C11] = [T2].[C9] JOIN [T4] ON [T3].[C13] = [T4].[C17] WHERE [T2].[C9] = [V1] AND [T3].[C12] = '[V2]'",
            "repaired_sql": "SELECT AVG([T4].[C15]) FROM [T3] JOIN [T4] ON [T3].[C13] = [T4].[C17] WHERE [T3].[C12] = '[V2]' AND [T3].[C11] = [V1]"
        },
        "values": [
            "Ogdon Zywicki",
            "RA"
        ],
        "value_links": {
            "Ogdon Zywicki": "[prof].[prof_id]",
            "RA": "[ra]"
        },
        "filtered_value_links": {
            "Ogdon Zywicki": "[prof].[prof_id]",
            "RA": "[ra]"
        },
        "schema_links": {
            "average gpa": "COLUMN:[student].[gpa]",
            "research assistants": "TABLE:[ra]",
            "Ogdon Zywicki": "COLUMN:[prof].[last_name]",
            "RA": "COLUMN:[student].[type]"
        },
        "filtered_schema_links": {
            "average gpa": "COLUMN:[student].[gpa]",
            "research assistants": "TABLE:[ra]",
            "Ogdon Zywicki": "COLUMN:[prof].[last_name]",
            "RA": "COLUMN:[student].[type]"
        },
        "attack": "What is the GPA of Alice's research assistant?"
    },
    {
        "db_id": "cs_semester",
        "question": "What is the percentage of Professor Ogdon Zywicki's research assistants are taught postgraduate students? research assistant refers to the student who serves for research where the abbreviation is RA; taught postgraduate student refers to type = 'TPG'; DIVIDE(COUNT(student_id where type = 'TPG' and first_name = 'Ogdon', last_name = 'Zywicki'), COUNT(first_name = 'Ogdon', last_name = 'Zywicki')) as percentage;",
        "evidence": "research assistant refers to the student who serves for research where the abbreviation is RA; taught postgraduate student refers to type = 'TPG'; DIVIDE(COUNT(student_id where type = 'TPG' and first_name = 'Ogdon', last_name = 'Zywicki'), COUNT(first_name = 'Ogdon', last_name = 'Zywicki')) as percentage;",
        "SQL": "SELECT CAST(SUM(CASE WHEN T3.type = 'TPG' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.student_id) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T1.student_id = T3.student_id WHERE T2.first_name = 'Ogdon' AND T2.last_name = 'Zywicki'",
        "query": "SELECT CAST(SUM(CASE WHEN T3.type = 'TPG' THEN 1 ELSE 0 END) AS REAL) * 100 / COUNT(T1.student_id) FROM RA AS T1 INNER JOIN prof AS T2 ON T1.prof_id = T2.prof_id INNER JOIN student AS T3 ON T1.student_id = T3.student_id WHERE T2.first_name = 'Ogdon' AND T2.last_name = 'Zywicki'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "is",
            "the",
            "percentage",
            "of",
            "Professor",
            "Ogdon",
            "Zywicki's",
            "research",
            "assistants",
            "are",
            "taught",
            "postgraduate",
            "students",
            "?",
            "research",
            "assistant",
            "refers",
            "to",
            "the",
            "student",
            "who",
            "serves",
            "for",
            "research",
            "where",
            "the",
            "abbreviation",
            "is",
            "RA",
            ";",
            "taught",
            "postgraduate",
            "student",
            "refers",
            "to",
            "type",
            "=",
            "'TPG'",
            ";",
            "DIVIDE(COUNT(student_id",
            "where",
            "type",
            "=",
            "'TPG'",
            "and",
            "first_name",
            "=",
            "'Ogdon'",
            ",",
            "last_name",
            "=",
            "'Zywicki')",
            ",",
            "COUNT(first_name",
            "=",
            "'Ogdon'",
            ",",
            "last_name",
            "=",
            "'Zywicki'))",
            "as",
            "percentage",
            ";"
        ],
        "tc_original": [
            "prof.prof_id",
            "prof.last_name",
            "prof.first_name",
            "prof.gender",
            "prof.email",
            "prof.*",
            "student.type",
            "student.student_id",
            "student.email",
            "student.intelligence",
            "student.f_name",
            "student.*",
            "ra.prof_id",
            "ra.student_id",
            "ra.capability",
            "ra.salary",
            "ra.*",
            "course.name",
            "course.credit",
            "course.diff",
            "course.course_id",
            "course.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[prof]",
            "COLUMN:[prof].[prof_id]",
            "COLUMN:[prof].[last_name]",
            "COLUMN:[prof].[first_name]",
            "COLUMN:[prof].[gender]",
            "COLUMN:[prof].[email]",
            "COLUMN:[prof].[*]",
            "TABLE:[student]",
            "COLUMN:[student].[type]",
            "COLUMN:[student].[student_id]",
            "COLUMN:[student].[email]",
            "COLUMN:[student].[intelligence]",
            "COLUMN:[student].[f_name]",
            "COLUMN:[student].[*]",
            "TABLE:[ra]",
            "COLUMN:[ra].[prof_id]",
            "COLUMN:[ra].[student_id]",
            "COLUMN:[ra].[capability]",
            "COLUMN:[ra].[salary]",
            "COLUMN:[ra].[*]",
            "TABLE:[course]",
            "COLUMN:[course].[name]",
            "COLUMN:[course].[credit]",
            "COLUMN:[course].[diff]",
            "COLUMN:[course].[course_id]",
            "COLUMN:[course].[*]"
        ],
        "schema": "'[course]':\n  '[course_id]':\n    primary_key: true\n    type: integer\n  '[credit]': integer\n  '[diff]': integer\n  '[name]': text\n'[prof]':\n  '[email]': text\n  '[first_name]': text\n  '[gender]': text\n  '[last_name]': text\n  '[prof_id]':\n    primary_key: true\n    type: integer\n'[ra]':\n  '[capability]': integer\n  '[prof_id]':\n    foreign_key: '[prof].[prof_id]'\n    primary_key: true\n    type: integer\n  '[salary]': text\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[student]':\n  '[email]': text\n  '[f_name]': text\n  '[intelligence]': integer\n  '[student_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n",
        "gold_links": {
            "percentage": "COLUMN:[student].[type]",
            "Professor Ogdon Zywicki": "TABLE:[prof]",
            "Ogdon": "VALUE:[prof].[first_name]",
            "Zywicki": "VALUE:[prof].[last_name]",
            "research assistants": "TABLE:[ra]",
            "taught postgraduate": "VALUE:[student].[type]",
            "TPG": "VALUE:[student].[type]",
            "student": "TABLE:[student]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[course]",
                "[C1]": "[course].[course_id]",
                "[C2]": "[course].[credit]",
                "[C3]": "[course].[diff]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[C5]": "[prof].[email]",
                "[C6]": "[prof].[first_name]",
                "[C7]": "[prof].[gender]",
                "[C8]": "[prof].[last_name]",
                "[C9]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[C10]": "[ra].[capability]",
                "[C11]": "[ra].[prof_id]",
                "[C12]": "[ra].[salary]",
                "[C13]": "[ra].[student_id]",
                "[T4]": "[student]",
                "[C14]": "[student].[email]",
                "[C15]": "[student].[f_name]",
                "[C16]": "[student].[intelligence]",
                "[C17]": "[student].[student_id]",
                "[C18]": "[student].[type]"
            },
            "to_symbol": {
                "[course]": "[T1]",
                "[course].[course_id]": "[C1]",
                "[course].[credit]": "[C2]",
                "[course].[diff]": "[C3]",
                "[course].[name]": "[C4]",
                "[prof]": "[T2]",
                "[prof].[email]": "[C5]",
                "[prof].[first_name]": "[C6]",
                "[prof].[gender]": "[C7]",
                "[prof].[last_name]": "[C8]",
                "[prof].[prof_id]": "[C9]",
                "[ra]": "[T3]",
                "[ra].[capability]": "[C10]",
                "[ra].[prof_id]": "[C11]",
                "[ra].[salary]": "[C12]",
                "[ra].[student_id]": "[C13]",
                "[student]": "[T4]",
                "[student].[email]": "[C14]",
                "[student].[f_name]": "[C15]",
                "[student].[intelligence]": "[C16]",
                "[student].[student_id]": "[C17]",
                "[student].[type]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': integer\n  '[C4]': text\n'[T2]':\n  '[C5]': text\n  '[C6]': text\n  '[C7]': text\n  '[C8]': text\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    foreign_key: '[T2].[C9]'\n    primary_key: true\n    type: integer\n  '[C12]': text\n  '[C13]':\n    foreign_key: '[T4].[C17]'\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n  '[C17]':\n    primary_key: true\n    type: integer\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[course]",
                "[T1].[C1]": "[course].[course_id]",
                "[C1]": "[course].[course_id]",
                "[T1].[C2]": "[course].[credit]",
                "[C2]": "[course].[credit]",
                "[T1].[C3]": "[course].[diff]",
                "[C3]": "[course].[diff]",
                "[T1].[C4]": "[course].[name]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[T2].[C5]": "[prof].[email]",
                "[C5]": "[prof].[email]",
                "[T2].[C6]": "[prof].[first_name]",
                "[C6]": "[prof].[first_name]",
                "[T2].[C7]": "[prof].[gender]",
                "[C7]": "[prof].[gender]",
                "[T2].[C8]": "[prof].[last_name]",
                "[C8]": "[prof].[last_name]",
                "[T2].[C9]": "[prof].[prof_id]",
                "[C9]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[T3].[C10]": "[ra].[capability]",
                "[C10]": "[ra].[capability]",
                "[T3].[C11]": "[ra].[prof_id]",
                "[C11]": "[ra].[prof_id]",
                "[T3].[C12]": "[ra].[salary]",
                "[C12]": "[ra].[salary]",
                "[T3].[C13]": "[ra].[student_id]",
                "[C13]": "[ra].[student_id]",
                "[T4]": "[student]",
                "[T4].[C14]": "[student].[email]",
                "[C14]": "[student].[email]",
                "[T4].[C15]": "[student].[f_name]",
                "[C15]": "[student].[f_name]",
                "[T4].[C16]": "[student].[intelligence]",
                "[C16]": "[student].[intelligence]",
                "[T4].[C17]": "[student].[student_id]",
                "[C17]": "[student].[student_id]",
                "[T4].[C18]": "[student].[type]",
                "[C18]": "[student].[type]"
            },
            "question": "What is the [T2] of Professor [V1] [V2]'s research assistants are taught postgraduate students? [C11] refers to the [C15] who serves for research where the abbreviation is RA; taught postgraduate [C15] refers to type = '[C18]'; DIVIDE(COUNT([C17] where type = '[C18]' and first_name = '[V1]', last_name = '[V2]'), COUNT(first_name = '[V1]', last_name = '[V2]')) as [T2];; [V1] is a value of the column [C6]; [V2] is a value of the column [C8]",
            "to_value": {
                "[V1]": "Ogdon",
                "[V2]": "Zywicki"
            },
            "masked": 9,
            "masked_terms": [
                "Ogdon",
                "Zywicki",
                "percentage",
                "Ogdon",
                "Zywicki",
                "student_id",
                "TPG",
                "research assistant",
                "student"
            ],
            "sql": "SELECT CAST(SUM(CASE WHEN [T4].[C15] = [T4].[C18] AND [T2].[C6] = '[V1]' AND [T2].[C8] = '[V2]' THEN 1 ELSE 0 END) AS FLOAT) / NULLIF(SUM(CASE WHEN [T2].[C6] = '[V1]' AND [T2].[C8] = '[V2]' THEN 1 ELSE 0 END), 0) AS [T2] FROM [T2] LEFT JOIN [T3] ON [T2].[C9] = [T3].[C11] LEFT JOIN [T4] ON [T3].[C13] = [T4].[C17]",
            "repaired_sql": "SELECT (CAST(SUM(CASE WHEN [T4].[C18] = '[C18-value]' THEN 1 ELSE 0 END) AS FLOAT) / COUNT(*)) AS [T2] FROM [T3] JOIN [T2] ON [T3].[C11] = [T2].[C9] JOIN [T4] ON [T3].[C13] = [T4].[C17] WHERE [T2].[C6] = '[V1]' AND [T2].[C8] = '[V2]';"
        },
        "values": [
            "Ogdon",
            "Zywicki"
        ],
        "value_links": {
            "Ogdon": "[prof].[first_name]",
            "Zywicki": "[prof].[last_name]"
        },
        "filtered_value_links": {
            "Ogdon": "[prof].[first_name]",
            "Zywicki": "[prof].[last_name]"
        },
        "schema_links": {
            "percentage": "TABLE:[prof]",
            "Ogdon": "COLUMN:[prof].[first_name]",
            "Zywicki": "COLUMN:[prof].[last_name]",
            "student_id": "COLUMN:[student].[student_id]",
            "TPG": "COLUMN:[student].[type]",
            "research assistant": "COLUMN:[ra].[prof_id]",
            "student": "COLUMN:[student].[f_name]"
        },
        "filtered_schema_links": {
            "percentage": "TABLE:[prof]",
            "Ogdon": "COLUMN:[prof].[first_name]",
            "Zywicki": "COLUMN:[prof].[last_name]",
            "student_id": "COLUMN:[student].[student_id]",
            "TPG": "COLUMN:[student].[type]",
            "research assistant": "COLUMN:[ra].[prof_id]",
            "student": "COLUMN:[student].[f_name]"
        },
        "attack": "What is the proportion of Professor John Smith's research assistants who are taught postgraduate students? research assistants refers to the person who serves for research where the abbreviation is RA; taught postgraduate person refers to type = 'taught postgraduate'; DIVIDE(COUNT(type where type = 'taught postgraduate' and first_name = 'John', last_name = 'Smith'), COUNT(first_name = 'John', last_name = 'Smith')) as proportion;"
    },
    {
        "db_id": "cs_semester",
        "question": "How many students have the highest intelligence among those taking a bachelor's degree? bachelor's degree is an undergraduate degree in which type = 'UG'; the highest intelligence refers to MAX(intelligence);",
        "evidence": "bachelor's degree is an undergraduate degree in which type = 'UG'; the highest intelligence refers to MAX(intelligence);",
        "SQL": "SELECT COUNT(student_id) FROM student WHERE type = 'UG' AND intelligence = ( SELECT MAX(intelligence) FROM student )",
        "query": "SELECT COUNT(student_id) FROM student WHERE type = 'UG' AND intelligence = ( SELECT MAX(intelligence) FROM student )",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "students",
            "have",
            "the",
            "highest",
            "intelligence",
            "among",
            "those",
            "taking",
            "a",
            "bachelor's",
            "degree",
            "?",
            "bachelor's",
            "degree",
            "is",
            "an",
            "undergraduate",
            "degree",
            "in",
            "which",
            "type",
            "=",
            "'UG'",
            ";",
            "the",
            "highest",
            "intelligence",
            "refers",
            "to",
            "MAX(intelligence)",
            ";"
        ],
        "tc_original": [
            "student.type",
            "student.intelligence",
            "student.student_id",
            "student.email",
            "student.f_name",
            "student.*",
            "registration.student_id",
            "registration.course_id",
            "registration.grade",
            "registration.sat",
            "registration.*",
            "course.name",
            "course.credit",
            "course.diff",
            "course.course_id",
            "course.*",
            "ra.capability",
            "ra.salary",
            "ra.student_id",
            "ra.prof_id",
            "ra.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[student]",
            "COLUMN:[student].[type]",
            "COLUMN:[student].[intelligence]",
            "COLUMN:[student].[student_id]",
            "COLUMN:[student].[email]",
            "COLUMN:[student].[f_name]",
            "COLUMN:[student].[*]",
            "TABLE:[registration]",
            "COLUMN:[registration].[student_id]",
            "COLUMN:[registration].[course_id]",
            "COLUMN:[registration].[grade]",
            "COLUMN:[registration].[sat]",
            "COLUMN:[registration].[*]",
            "TABLE:[course]",
            "COLUMN:[course].[name]",
            "COLUMN:[course].[credit]",
            "COLUMN:[course].[diff]",
            "COLUMN:[course].[course_id]",
            "COLUMN:[course].[*]",
            "TABLE:[ra]",
            "COLUMN:[ra].[capability]",
            "COLUMN:[ra].[salary]",
            "COLUMN:[ra].[student_id]",
            "COLUMN:[ra].[prof_id]",
            "COLUMN:[ra].[*]"
        ],
        "schema": "'[course]':\n  '[course_id]':\n    primary_key: true\n    type: integer\n  '[credit]': integer\n  '[diff]': integer\n  '[name]': text\n'[prof]':\n  '[prof_id]':\n    primary_key: true\n    type: integer\n'[ra]':\n  '[capability]': integer\n  '[prof_id]':\n    foreign_key: '[prof].[prof_id]'\n    primary_key: true\n    type: integer\n  '[salary]': text\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[registration]':\n  '[course_id]':\n    foreign_key: '[course].[course_id]'\n    primary_key: true\n    type: integer\n  '[grade]': text\n  '[sat]': integer\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[student]':\n  '[email]': text\n  '[f_name]': text\n  '[intelligence]': integer\n  '[student_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n",
        "gold_links": {
            "students": "TABLE:[student]",
            "student": "TABLE:[student]",
            "intelligence": "COLUMN:[student].[intelligence]",
            "highest intelligence": "COLUMN:[student].[intelligence]",
            "bachelor's degree": "VALUE:[student].[type]",
            "UG": "VALUE:[student].[type]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[course]",
                "[C1]": "[course].[course_id]",
                "[C2]": "[course].[credit]",
                "[C3]": "[course].[diff]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[C6]": "[ra].[capability]",
                "[C7]": "[ra].[prof_id]",
                "[C8]": "[ra].[salary]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[C10]": "[registration].[course_id]",
                "[C11]": "[registration].[grade]",
                "[C12]": "[registration].[sat]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[C14]": "[student].[email]",
                "[C15]": "[student].[f_name]",
                "[C16]": "[student].[intelligence]",
                "[C17]": "[student].[student_id]",
                "[C18]": "[student].[type]"
            },
            "to_symbol": {
                "[course]": "[T1]",
                "[course].[course_id]": "[C1]",
                "[course].[credit]": "[C2]",
                "[course].[diff]": "[C3]",
                "[course].[name]": "[C4]",
                "[prof]": "[T2]",
                "[prof].[prof_id]": "[C5]",
                "[ra]": "[T3]",
                "[ra].[capability]": "[C6]",
                "[ra].[prof_id]": "[C7]",
                "[ra].[salary]": "[C8]",
                "[ra].[student_id]": "[C9]",
                "[registration]": "[T4]",
                "[registration].[course_id]": "[C10]",
                "[registration].[grade]": "[C11]",
                "[registration].[sat]": "[C12]",
                "[registration].[student_id]": "[C13]",
                "[student]": "[T5]",
                "[student].[email]": "[C14]",
                "[student].[f_name]": "[C15]",
                "[student].[intelligence]": "[C16]",
                "[student].[student_id]": "[C17]",
                "[student].[type]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C6]': integer\n  '[C7]':\n    foreign_key: '[T2].[C5]'\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]':\n    foreign_key: '[T5].[C17]'\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C11]': text\n  '[C12]': integer\n  '[C13]':\n    foreign_key: '[T5].[C17]'\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n  '[C17]':\n    primary_key: true\n    type: integer\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[course]",
                "[T1].[C1]": "[course].[course_id]",
                "[C1]": "[course].[course_id]",
                "[T1].[C2]": "[course].[credit]",
                "[C2]": "[course].[credit]",
                "[T1].[C3]": "[course].[diff]",
                "[C3]": "[course].[diff]",
                "[T1].[C4]": "[course].[name]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[T2].[C5]": "[prof].[prof_id]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[T3].[C6]": "[ra].[capability]",
                "[C6]": "[ra].[capability]",
                "[T3].[C7]": "[ra].[prof_id]",
                "[C7]": "[ra].[prof_id]",
                "[T3].[C8]": "[ra].[salary]",
                "[C8]": "[ra].[salary]",
                "[T3].[C9]": "[ra].[student_id]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[T4].[C10]": "[registration].[course_id]",
                "[C10]": "[registration].[course_id]",
                "[T4].[C11]": "[registration].[grade]",
                "[C11]": "[registration].[grade]",
                "[T4].[C12]": "[registration].[sat]",
                "[C12]": "[registration].[sat]",
                "[T4].[C13]": "[registration].[student_id]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[T5].[C14]": "[student].[email]",
                "[C14]": "[student].[email]",
                "[T5].[C15]": "[student].[f_name]",
                "[C15]": "[student].[f_name]",
                "[T5].[C16]": "[student].[intelligence]",
                "[C16]": "[student].[intelligence]",
                "[T5].[C17]": "[student].[student_id]",
                "[C17]": "[student].[student_id]",
                "[T5].[C18]": "[student].[type]",
                "[C18]": "[student].[type]"
            },
            "question": "How many [T5] have the [C16] among those taking a [T5]? [T5] is an undergraduate degree in which type = '[V1]'; the [C16] refers to MAX(intelligence);; [V1] is a value of the column [C18]",
            "to_value": {
                "[V1]": "UG"
            },
            "masked": 4,
            "masked_terms": [
                "UG",
                "bachelor's degree",
                "highest intelligence",
                "students"
            ],
            "sql": "SELECT COUNT(*) FROM [T5] WHERE [C16] = (SELECT MAX([C16]) FROM [T5] WHERE [C18] = '[V1]') AND [C18] = '[V1]'",
            "repaired_sql": "SELECT COUNT(*) FROM [T5] WHERE [C18] = '[V1]' AND [C16] = (SELECT MAX([C16]) FROM [T5] WHERE [C18] = '[V1]')"
        },
        "values": [
            "UG"
        ],
        "value_links": {
            "UG": "[student].[type]"
        },
        "filtered_value_links": {
            "UG": "[student].[type]"
        },
        "schema_links": {
            "bachelor's degree": "TABLE:[student]",
            "highest intelligence": "COLUMN:[student].[intelligence]",
            "students": "TABLE:[student]"
        },
        "filtered_schema_links": {
            "bachelor's degree": "TABLE:[student]",
            "highest intelligence": "COLUMN:[student].[intelligence]",
            "students": "TABLE:[student]"
        },
        "attack": "How many undergraduate degrees have the highest intelligence among those taking an undergraduate degree? Undergraduate degree is an undergraduate degree in which type = 'Science'; the highest intelligence refers to MAX(intelligence); 'Science' is a value of the column type."
    },
    {
        "db_id": "cs_semester",
        "question": "What are the GPAs of the unpaid Research Assistants? Unpaid Research Assistants undertake their work without payment in which salary = 'free';",
        "evidence": "Unpaid Research Assistants undertake their work without payment in which salary = 'free';",
        "SQL": "SELECT T2.gpa FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.salary = 'free'",
        "query": "SELECT T2.gpa FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.salary = 'free'",
        "evidence_added": true,
        "question_toks": [
            "What",
            "are",
            "the",
            "GPAs",
            "of",
            "the",
            "unpaid",
            "Research",
            "Assistants",
            "?",
            "Unpaid",
            "Research",
            "Assistants",
            "undertake",
            "their",
            "work",
            "without",
            "payment",
            "in",
            "which",
            "salary",
            "=",
            "'free'",
            ";"
        ],
        "tc_original": [
            "student.gpa",
            "student.student_id",
            "student.email",
            "student.intelligence",
            "student.type",
            "student.*",
            "ra.salary",
            "ra.student_id",
            "ra.capability",
            "ra.prof_id",
            "ra.*",
            "course.name",
            "course.credit",
            "course.diff",
            "course.course_id",
            "course.*",
            "prof.gender",
            "prof.email",
            "prof.popularity",
            "prof.prof_id",
            "prof.first_name",
            "prof.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[student]",
            "COLUMN:[student].[gpa]",
            "COLUMN:[student].[student_id]",
            "COLUMN:[student].[email]",
            "COLUMN:[student].[intelligence]",
            "COLUMN:[student].[type]",
            "COLUMN:[student].[*]",
            "TABLE:[ra]",
            "COLUMN:[ra].[salary]",
            "COLUMN:[ra].[student_id]",
            "COLUMN:[ra].[capability]",
            "COLUMN:[ra].[prof_id]",
            "COLUMN:[ra].[*]",
            "TABLE:[course]",
            "COLUMN:[course].[name]",
            "COLUMN:[course].[credit]",
            "COLUMN:[course].[diff]",
            "COLUMN:[course].[course_id]",
            "COLUMN:[course].[*]",
            "TABLE:[prof]",
            "COLUMN:[prof].[gender]",
            "COLUMN:[prof].[email]",
            "COLUMN:[prof].[popularity]",
            "COLUMN:[prof].[prof_id]",
            "COLUMN:[prof].[first_name]",
            "COLUMN:[prof].[*]"
        ],
        "schema": "'[course]':\n  '[course_id]':\n    primary_key: true\n    type: integer\n  '[credit]': integer\n  '[diff]': integer\n  '[name]': text\n'[prof]':\n  '[email]': text\n  '[first_name]': text\n  '[gender]': text\n  '[popularity]': integer\n  '[prof_id]':\n    primary_key: true\n    type: integer\n'[ra]':\n  '[capability]': integer\n  '[prof_id]':\n    foreign_key: '[prof].[prof_id]'\n    primary_key: true\n    type: integer\n  '[salary]': text\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[student]':\n  '[email]': text\n  '[gpa]': real\n  '[intelligence]': integer\n  '[student_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n",
        "gold_links": {
            "GPA": "COLUMN:[student].[gpa]",
            "GPAs": "COLUMN:[student].[gpa]",
            "Research Assistants": "TABLE:[ra]",
            "salary": "COLUMN:[ra].[salary]",
            "free": "VALUE:[ra].[salary]",
            "unpaid": "VALUE:[ra].[salary]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[course]",
                "[C1]": "[course].[course_id]",
                "[C2]": "[course].[credit]",
                "[C3]": "[course].[diff]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[C5]": "[prof].[email]",
                "[C6]": "[prof].[first_name]",
                "[C7]": "[prof].[gender]",
                "[C8]": "[prof].[popularity]",
                "[C9]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[C10]": "[ra].[capability]",
                "[C11]": "[ra].[prof_id]",
                "[C12]": "[ra].[salary]",
                "[C13]": "[ra].[student_id]",
                "[T4]": "[student]",
                "[C14]": "[student].[email]",
                "[C15]": "[student].[gpa]",
                "[C16]": "[student].[intelligence]",
                "[C17]": "[student].[student_id]",
                "[C18]": "[student].[type]"
            },
            "to_symbol": {
                "[course]": "[T1]",
                "[course].[course_id]": "[C1]",
                "[course].[credit]": "[C2]",
                "[course].[diff]": "[C3]",
                "[course].[name]": "[C4]",
                "[prof]": "[T2]",
                "[prof].[email]": "[C5]",
                "[prof].[first_name]": "[C6]",
                "[prof].[gender]": "[C7]",
                "[prof].[popularity]": "[C8]",
                "[prof].[prof_id]": "[C9]",
                "[ra]": "[T3]",
                "[ra].[capability]": "[C10]",
                "[ra].[prof_id]": "[C11]",
                "[ra].[salary]": "[C12]",
                "[ra].[student_id]": "[C13]",
                "[student]": "[T4]",
                "[student].[email]": "[C14]",
                "[student].[gpa]": "[C15]",
                "[student].[intelligence]": "[C16]",
                "[student].[student_id]": "[C17]",
                "[student].[type]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': integer\n  '[C4]': text\n'[T2]':\n  '[C5]': text\n  '[C6]': text\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    foreign_key: '[T2].[C9]'\n    primary_key: true\n    type: integer\n  '[C12]': text\n  '[C13]':\n    foreign_key: '[T4].[C17]'\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C14]': text\n  '[C15]': real\n  '[C16]': integer\n  '[C17]':\n    primary_key: true\n    type: integer\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[course]",
                "[T1].[C1]": "[course].[course_id]",
                "[C1]": "[course].[course_id]",
                "[T1].[C2]": "[course].[credit]",
                "[C2]": "[course].[credit]",
                "[T1].[C3]": "[course].[diff]",
                "[C3]": "[course].[diff]",
                "[T1].[C4]": "[course].[name]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[T2].[C5]": "[prof].[email]",
                "[C5]": "[prof].[email]",
                "[T2].[C6]": "[prof].[first_name]",
                "[C6]": "[prof].[first_name]",
                "[T2].[C7]": "[prof].[gender]",
                "[C7]": "[prof].[gender]",
                "[T2].[C8]": "[prof].[popularity]",
                "[C8]": "[prof].[popularity]",
                "[T2].[C9]": "[prof].[prof_id]",
                "[C9]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[T3].[C10]": "[ra].[capability]",
                "[C10]": "[ra].[capability]",
                "[T3].[C11]": "[ra].[prof_id]",
                "[C11]": "[ra].[prof_id]",
                "[T3].[C12]": "[ra].[salary]",
                "[C12]": "[ra].[salary]",
                "[T3].[C13]": "[ra].[student_id]",
                "[C13]": "[ra].[student_id]",
                "[T4]": "[student]",
                "[T4].[C14]": "[student].[email]",
                "[C14]": "[student].[email]",
                "[T4].[C15]": "[student].[gpa]",
                "[C15]": "[student].[gpa]",
                "[T4].[C16]": "[student].[intelligence]",
                "[C16]": "[student].[intelligence]",
                "[T4].[C17]": "[student].[student_id]",
                "[C17]": "[student].[student_id]",
                "[T4].[C18]": "[student].[type]",
                "[C18]": "[student].[type]"
            },
            "question": "What are the [C15] of the [C12] [T3]? [C12] [T3] undertake their work without payment in which [C12] = '[V1]';; [V1] is a value of the column [C12]",
            "to_value": {
                "[V1]": "free"
            },
            "masked": 5,
            "masked_terms": [
                "free",
                "GPAs",
                "unpaid",
                "Research Assistants",
                "salary"
            ],
            "sql": "SELECT [T4].[C15] FROM [T3] JOIN [T4] ON [T3].[C13] = [T4].[C17] WHERE [T3].[C12] = '[V1]'",
            "repaired_sql": "SELECT [T4].[C15] FROM [T3] JOIN [T4] ON [T3].[C13] = [T4].[C17] WHERE [T3].[C12] = '[V1]'"
        },
        "values": [
            "free"
        ],
        "value_links": {
            "free": "[ra].[salary]"
        },
        "filtered_value_links": {
            "free": "[ra].[salary]"
        },
        "schema_links": {
            "GPAs": "COLUMN:[student].[gpa]",
            "unpaid": "COLUMN:[ra].[salary]",
            "Research Assistants": "TABLE:[ra]",
            "salary": "COLUMN:[ra].[salary]"
        },
        "filtered_schema_links": {
            "GPAs": "COLUMN:[student].[gpa]",
            "unpaid": "COLUMN:[ra].[salary]",
            "Research Assistants": "TABLE:[ra]",
            "salary": "COLUMN:[ra].[salary]"
        },
        "attack": "What are the salaries of the volunteer workers? Volunteer workers undertake their work without payment in which worker_type = 'volunteer'; 'volunteer' is a value of the column worker_type."
    },
    {
        "db_id": "cs_semester",
        "question": "Among the easiest courses, what is the name of the course where most students got an A? diff refers to difficulty; the easiest courses refers to diff = 1; A refers to an excellent grade in which grade = 'A' for the course;",
        "evidence": "diff refers to difficulty; the easiest courses refers to diff = 1; A refers to an excellent grade in which grade = 'A' for the course;",
        "SQL": "SELECT T2.name FROM registration AS T1 INNER JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T1.grade = 'A' AND T2.diff = 1 GROUP BY T2.name ORDER BY COUNT(T1.student_id) DESC LIMIT 1",
        "query": "SELECT T2.name FROM registration AS T1 INNER JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T1.grade = 'A' AND T2.diff = 1 GROUP BY T2.name ORDER BY COUNT(T1.student_id) DESC LIMIT 1",
        "evidence_added": true,
        "question_toks": [
            "Among",
            "the",
            "easiest",
            "courses",
            ",",
            "what",
            "is",
            "the",
            "name",
            "of",
            "the",
            "course",
            "where",
            "most",
            "students",
            "got",
            "an",
            "A",
            "?",
            "diff",
            "refers",
            "to",
            "difficulty",
            ";",
            "the",
            "easiest",
            "courses",
            "refers",
            "to",
            "diff",
            "=",
            "1",
            ";",
            "A",
            "refers",
            "to",
            "an",
            "excellent",
            "grade",
            "in",
            "which",
            "grade",
            "=",
            "'A'",
            "for",
            "the",
            "course",
            ";"
        ],
        "tc_original": [
            "course.course_id",
            "course.name",
            "course.diff",
            "course.credit",
            "course.*",
            "registration.course_id",
            "registration.grade",
            "registration.student_id",
            "registration.sat",
            "registration.*",
            "student.email",
            "student.intelligence",
            "student.type",
            "student.student_id",
            "student.f_name",
            "student.*",
            "ra.capability",
            "ra.salary",
            "ra.student_id",
            "ra.prof_id",
            "ra.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[course]",
            "COLUMN:[course].[course_id]",
            "COLUMN:[course].[name]",
            "COLUMN:[course].[diff]",
            "COLUMN:[course].[credit]",
            "COLUMN:[course].[*]",
            "TABLE:[registration]",
            "COLUMN:[registration].[course_id]",
            "COLUMN:[registration].[grade]",
            "COLUMN:[registration].[student_id]",
            "COLUMN:[registration].[sat]",
            "COLUMN:[registration].[*]",
            "TABLE:[student]",
            "COLUMN:[student].[email]",
            "COLUMN:[student].[intelligence]",
            "COLUMN:[student].[type]",
            "COLUMN:[student].[student_id]",
            "COLUMN:[student].[f_name]",
            "COLUMN:[student].[*]",
            "TABLE:[ra]",
            "COLUMN:[ra].[capability]",
            "COLUMN:[ra].[salary]",
            "COLUMN:[ra].[student_id]",
            "COLUMN:[ra].[prof_id]",
            "COLUMN:[ra].[*]"
        ],
        "schema": "'[course]':\n  '[course_id]':\n    primary_key: true\n    type: integer\n  '[credit]': integer\n  '[diff]': integer\n  '[name]': text\n'[prof]':\n  '[prof_id]':\n    primary_key: true\n    type: integer\n'[ra]':\n  '[capability]': integer\n  '[prof_id]':\n    foreign_key: '[prof].[prof_id]'\n    primary_key: true\n    type: integer\n  '[salary]': text\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[registration]':\n  '[course_id]':\n    foreign_key: '[course].[course_id]'\n    primary_key: true\n    type: integer\n  '[grade]': text\n  '[sat]': integer\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[student]':\n  '[email]': text\n  '[f_name]': text\n  '[intelligence]': integer\n  '[student_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n",
        "gold_links": {
            "easiest courses": "COLUMN:[course].[diff]",
            "diff": "COLUMN:[course].[diff]",
            "name": "COLUMN:[course].[name]",
            "course": "TABLE:[course]",
            "grade": "COLUMN:[registration].[grade]",
            "A": "VALUE:[registration].[grade]",
            "students": "COLUMN:[registration].[student_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[course]",
                "[C1]": "[course].[course_id]",
                "[C2]": "[course].[credit]",
                "[C3]": "[course].[diff]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[C6]": "[ra].[capability]",
                "[C7]": "[ra].[prof_id]",
                "[C8]": "[ra].[salary]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[C10]": "[registration].[course_id]",
                "[C11]": "[registration].[grade]",
                "[C12]": "[registration].[sat]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[C14]": "[student].[email]",
                "[C15]": "[student].[f_name]",
                "[C16]": "[student].[intelligence]",
                "[C17]": "[student].[student_id]",
                "[C18]": "[student].[type]"
            },
            "to_symbol": {
                "[course]": "[T1]",
                "[course].[course_id]": "[C1]",
                "[course].[credit]": "[C2]",
                "[course].[diff]": "[C3]",
                "[course].[name]": "[C4]",
                "[prof]": "[T2]",
                "[prof].[prof_id]": "[C5]",
                "[ra]": "[T3]",
                "[ra].[capability]": "[C6]",
                "[ra].[prof_id]": "[C7]",
                "[ra].[salary]": "[C8]",
                "[ra].[student_id]": "[C9]",
                "[registration]": "[T4]",
                "[registration].[course_id]": "[C10]",
                "[registration].[grade]": "[C11]",
                "[registration].[sat]": "[C12]",
                "[registration].[student_id]": "[C13]",
                "[student]": "[T5]",
                "[student].[email]": "[C14]",
                "[student].[f_name]": "[C15]",
                "[student].[intelligence]": "[C16]",
                "[student].[student_id]": "[C17]",
                "[student].[type]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C6]': integer\n  '[C7]':\n    foreign_key: '[T2].[C5]'\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]':\n    foreign_key: '[T5].[C17]'\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C11]': text\n  '[C12]': integer\n  '[C13]':\n    foreign_key: '[T5].[C17]'\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n  '[C17]':\n    primary_key: true\n    type: integer\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[course]",
                "[T1].[C1]": "[course].[course_id]",
                "[C1]": "[course].[course_id]",
                "[T1].[C2]": "[course].[credit]",
                "[C2]": "[course].[credit]",
                "[T1].[C3]": "[course].[diff]",
                "[C3]": "[course].[diff]",
                "[T1].[C4]": "[course].[name]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[T2].[C5]": "[prof].[prof_id]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[T3].[C6]": "[ra].[capability]",
                "[C6]": "[ra].[capability]",
                "[T3].[C7]": "[ra].[prof_id]",
                "[C7]": "[ra].[prof_id]",
                "[T3].[C8]": "[ra].[salary]",
                "[C8]": "[ra].[salary]",
                "[T3].[C9]": "[ra].[student_id]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[T4].[C10]": "[registration].[course_id]",
                "[C10]": "[registration].[course_id]",
                "[T4].[C11]": "[registration].[grade]",
                "[C11]": "[registration].[grade]",
                "[T4].[C12]": "[registration].[sat]",
                "[C12]": "[registration].[sat]",
                "[T4].[C13]": "[registration].[student_id]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[T5].[C14]": "[student].[email]",
                "[C14]": "[student].[email]",
                "[T5].[C15]": "[student].[f_name]",
                "[C15]": "[student].[f_name]",
                "[T5].[C16]": "[student].[intelligence]",
                "[C16]": "[student].[intelligence]",
                "[T5].[C17]": "[student].[student_id]",
                "[C17]": "[student].[student_id]",
                "[T5].[C18]": "[student].[type]",
                "[C18]": "[student].[type]"
            },
            "question": "Among the [C3] courses, what is the [C4] of the [T1] where [C11] [T4] got an [V1]? diff refers to difficulty; the [C3] courses refers to diff = 1; [V1] refers to an [V2] in which grade = '[V1]' for the [T1];; [V1] is [C11] value of the column [C11]; [V2] is [C11] value of the column [C11]",
            "to_value": {
                "[V1]": "A",
                "[V2]": "excellent grade"
            },
            "masked": 8,
            "masked_terms": [
                "A",
                "excellent grade",
                "easiest",
                "name",
                "course",
                "A",
                "students",
                "most"
            ],
            "sql": "SELECT [T1].[C4] FROM [T1] INNER JOIN [T4] ON [T1].[C1] = [T4].[C10] WHERE [T1].[C3] = 1 AND [T4].[C11] = '[V1]'",
            "repaired_sql": "SELECT [T1].[C4] FROM [T1] JOIN [T4] ON [T1].[C1] = [T4].[C10] WHERE [T1].[C3] = 1 AND [T4].[C11] = '[V1]'"
        },
        "values": [
            "A",
            "excellent grade"
        ],
        "value_links": {
            "A": "[registration].[grade]",
            "excellent grade": "[registration].[grade]"
        },
        "filtered_value_links": {
            "A": "[registration].[grade]",
            "excellent grade": "[registration].[grade]"
        },
        "schema_links": {
            "easiest": "COLUMN:[course].[diff]",
            "name": "COLUMN:[course].[name]",
            "course": "TABLE:[course]",
            "A": "COLUMN:[registration].[grade]",
            "students": "TABLE:[registration]",
            "most": "COLUMN:[registration].[grade]"
        },
        "filtered_schema_links": {
            "easiest": "COLUMN:[course].[diff]",
            "name": "COLUMN:[course].[name]",
            "course": "TABLE:[course]",
            "A": "COLUMN:[registration].[grade]",
            "students": "TABLE:[registration]",
            "most": "COLUMN:[registration].[grade]"
        },
        "attack": "Among the easy courses, what is the name of the course where student X got an A?"
    },
    {
        "db_id": "cs_semester",
        "question": "How many courses does the student with the highest GPA this semester take? student with the highest GPA refers to student_id where MAX(gpa);",
        "evidence": "student with the highest GPA refers to student_id where MAX(gpa);",
        "SQL": "SELECT COUNT(course_id) FROM registration WHERE student_id IN ( SELECT student_id FROM student WHERE gpa = ( SELECT MAX(gpa) FROM student ) )",
        "query": "SELECT COUNT(course_id) FROM registration WHERE student_id IN ( SELECT student_id FROM student WHERE gpa = ( SELECT MAX(gpa) FROM student ) )",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "courses",
            "does",
            "the",
            "student",
            "with",
            "the",
            "highest",
            "GPA",
            "this",
            "semester",
            "take",
            "?",
            "student",
            "with",
            "the",
            "highest",
            "GPA",
            "refers",
            "to",
            "student_id",
            "where",
            "MAX(gpa)",
            ";"
        ],
        "tc_original": [
            "student.student_id",
            "student.gpa",
            "student.email",
            "student.intelligence",
            "student.type",
            "student.*",
            "registration.student_id",
            "registration.course_id",
            "registration.grade",
            "registration.sat",
            "registration.*",
            "course.course_id",
            "course.name",
            "course.credit",
            "course.diff",
            "course.*",
            "ra.capability",
            "ra.salary",
            "ra.student_id",
            "ra.prof_id",
            "ra.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[student]",
            "COLUMN:[student].[student_id]",
            "COLUMN:[student].[gpa]",
            "COLUMN:[student].[email]",
            "COLUMN:[student].[intelligence]",
            "COLUMN:[student].[type]",
            "COLUMN:[student].[*]",
            "TABLE:[registration]",
            "COLUMN:[registration].[student_id]",
            "COLUMN:[registration].[course_id]",
            "COLUMN:[registration].[grade]",
            "COLUMN:[registration].[sat]",
            "COLUMN:[registration].[*]",
            "TABLE:[course]",
            "COLUMN:[course].[course_id]",
            "COLUMN:[course].[name]",
            "COLUMN:[course].[credit]",
            "COLUMN:[course].[diff]",
            "COLUMN:[course].[*]",
            "TABLE:[ra]",
            "COLUMN:[ra].[capability]",
            "COLUMN:[ra].[salary]",
            "COLUMN:[ra].[student_id]",
            "COLUMN:[ra].[prof_id]",
            "COLUMN:[ra].[*]"
        ],
        "schema": "'[course]':\n  '[course_id]':\n    primary_key: true\n    type: integer\n  '[credit]': integer\n  '[diff]': integer\n  '[name]': text\n'[prof]':\n  '[prof_id]':\n    primary_key: true\n    type: integer\n'[ra]':\n  '[capability]': integer\n  '[prof_id]':\n    foreign_key: '[prof].[prof_id]'\n    primary_key: true\n    type: integer\n  '[salary]': text\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[registration]':\n  '[course_id]':\n    foreign_key: '[course].[course_id]'\n    primary_key: true\n    type: integer\n  '[grade]': text\n  '[sat]': integer\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[student]':\n  '[email]': text\n  '[gpa]': real\n  '[intelligence]': integer\n  '[student_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n",
        "gold_links": {
            "courses": "TABLE:[course]",
            "student": "TABLE:[student]",
            "highest GPA": "COLUMN:[student].[gpa]",
            "GPA": "COLUMN:[student].[gpa]",
            "semester": "COLUMN:[registration].[course_id]",
            "student_id": "COLUMN:[student].[student_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[course]",
                "[C1]": "[course].[course_id]",
                "[C2]": "[course].[credit]",
                "[C3]": "[course].[diff]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[C6]": "[ra].[capability]",
                "[C7]": "[ra].[prof_id]",
                "[C8]": "[ra].[salary]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[C10]": "[registration].[course_id]",
                "[C11]": "[registration].[grade]",
                "[C12]": "[registration].[sat]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[C14]": "[student].[email]",
                "[C15]": "[student].[gpa]",
                "[C16]": "[student].[intelligence]",
                "[C17]": "[student].[student_id]",
                "[C18]": "[student].[type]"
            },
            "to_symbol": {
                "[course]": "[T1]",
                "[course].[course_id]": "[C1]",
                "[course].[credit]": "[C2]",
                "[course].[diff]": "[C3]",
                "[course].[name]": "[C4]",
                "[prof]": "[T2]",
                "[prof].[prof_id]": "[C5]",
                "[ra]": "[T3]",
                "[ra].[capability]": "[C6]",
                "[ra].[prof_id]": "[C7]",
                "[ra].[salary]": "[C8]",
                "[ra].[student_id]": "[C9]",
                "[registration]": "[T4]",
                "[registration].[course_id]": "[C10]",
                "[registration].[grade]": "[C11]",
                "[registration].[sat]": "[C12]",
                "[registration].[student_id]": "[C13]",
                "[student]": "[T5]",
                "[student].[email]": "[C14]",
                "[student].[gpa]": "[C15]",
                "[student].[intelligence]": "[C16]",
                "[student].[student_id]": "[C17]",
                "[student].[type]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C6]': integer\n  '[C7]':\n    foreign_key: '[T2].[C5]'\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]':\n    foreign_key: '[T5].[C17]'\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C11]': text\n  '[C12]': integer\n  '[C13]':\n    foreign_key: '[T5].[C17]'\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C14]': text\n  '[C15]': real\n  '[C16]': integer\n  '[C17]':\n    primary_key: true\n    type: integer\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[course]",
                "[T1].[C1]": "[course].[course_id]",
                "[C1]": "[course].[course_id]",
                "[T1].[C2]": "[course].[credit]",
                "[C2]": "[course].[credit]",
                "[T1].[C3]": "[course].[diff]",
                "[C3]": "[course].[diff]",
                "[T1].[C4]": "[course].[name]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[T2].[C5]": "[prof].[prof_id]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[T3].[C6]": "[ra].[capability]",
                "[C6]": "[ra].[capability]",
                "[T3].[C7]": "[ra].[prof_id]",
                "[C7]": "[ra].[prof_id]",
                "[T3].[C8]": "[ra].[salary]",
                "[C8]": "[ra].[salary]",
                "[T3].[C9]": "[ra].[student_id]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[T4].[C10]": "[registration].[course_id]",
                "[C10]": "[registration].[course_id]",
                "[T4].[C11]": "[registration].[grade]",
                "[C11]": "[registration].[grade]",
                "[T4].[C12]": "[registration].[sat]",
                "[C12]": "[registration].[sat]",
                "[T4].[C13]": "[registration].[student_id]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[T5].[C14]": "[student].[email]",
                "[C14]": "[student].[email]",
                "[T5].[C15]": "[student].[gpa]",
                "[C15]": "[student].[gpa]",
                "[T5].[C16]": "[student].[intelligence]",
                "[C16]": "[student].[intelligence]",
                "[T5].[C17]": "[student].[student_id]",
                "[C17]": "[student].[student_id]",
                "[T5].[C18]": "[student].[type]",
                "[C18]": "[student].[type]"
            },
            "question": "How many courses does the [T5] with the highest [C15] [V1] take? [T5] with the highest [C15] refers to [C13] where MAX([C15]);; [V1] is a value of the column [C13]",
            "to_value": {
                "[V1]": "this semester"
            },
            "masked": 5,
            "masked_terms": [
                "this semester",
                "student",
                "gpa",
                "course",
                "student_id"
            ],
            "sql": "SELECT COUNT(*) FROM [T4] WHERE [C13] = (SELECT [C17] FROM [T5] WHERE [C15] = (SELECT MAX([C15]) FROM [T5]))",
            "repaired_sql": "SELECT COUNT(*) FROM [T4] WHERE [C13] = (SELECT [C17] FROM [T5] WHERE [C18] = '[V1]' AND [C15] = (SELECT MAX([C15]) FROM [T5] WHERE [C18] = '[V1]'))"
        },
        "values": [
            "this semester"
        ],
        "value_links": {
            "this semester": "[registration].[student_id]"
        },
        "filtered_value_links": {
            "this semester": "[registration].[student_id]"
        },
        "schema_links": {
            "student": "TABLE:[student]",
            "gpa": "COLUMN:[student].[gpa]",
            "course": "TABLE:[course]",
            "student_id": "COLUMN:[registration].[student_id]"
        },
        "filtered_schema_links": {
            "student": "TABLE:[student]",
            "gpa": "COLUMN:[student].[gpa]",
            "course": "TABLE:[course]",
            "student_id": "COLUMN:[registration].[student_id]"
        },
        "attack": "How many courses does the student with the highest GPA Alice take? Student with the highest GPA refers to student_name where MAX(GPA); Alice is a value of the column student_name"
    },
    {
        "db_id": "cs_semester",
        "question": "What are the names of the courses that the students with the lowest intelligence are least satisfied with? lower intelligence refers to intelligence = 1; sat refers to student's satisfaction degree with the course where least satisfaction refers to sat = 1;",
        "evidence": "lower intelligence refers to intelligence = 1; sat refers to student's satisfaction degree with the course where least satisfaction refers to sat = 1;",
        "SQL": "SELECT T3.name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T2.sat = 1 AND T1.intelligence = 1",
        "query": "SELECT T3.name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T2.sat = 1 AND T1.intelligence = 1",
        "evidence_added": true,
        "question_toks": [
            "What",
            "are",
            "the",
            "names",
            "of",
            "the",
            "courses",
            "that",
            "the",
            "students",
            "with",
            "the",
            "lowest",
            "intelligence",
            "are",
            "least",
            "satisfied",
            "with",
            "?",
            "lower",
            "intelligence",
            "refers",
            "to",
            "intelligence",
            "=",
            "1",
            ";",
            "sat",
            "refers",
            "to",
            "student's",
            "satisfaction",
            "degree",
            "with",
            "the",
            "course",
            "where",
            "least",
            "satisfaction",
            "refers",
            "to",
            "sat",
            "=",
            "1",
            ";"
        ],
        "tc_original": [
            "course.course_id",
            "course.name",
            "course.credit",
            "course.diff",
            "course.*",
            "student.student_id",
            "student.intelligence",
            "student.email",
            "student.type",
            "student.f_name",
            "student.*",
            "registration.course_id",
            "registration.student_id",
            "registration.sat",
            "registration.grade",
            "registration.*",
            "ra.capability",
            "ra.salary",
            "ra.student_id",
            "ra.prof_id",
            "ra.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[course]",
            "COLUMN:[course].[course_id]",
            "COLUMN:[course].[name]",
            "COLUMN:[course].[credit]",
            "COLUMN:[course].[diff]",
            "COLUMN:[course].[*]",
            "TABLE:[student]",
            "COLUMN:[student].[student_id]",
            "COLUMN:[student].[intelligence]",
            "COLUMN:[student].[email]",
            "COLUMN:[student].[type]",
            "COLUMN:[student].[f_name]",
            "COLUMN:[student].[*]",
            "TABLE:[registration]",
            "COLUMN:[registration].[course_id]",
            "COLUMN:[registration].[student_id]",
            "COLUMN:[registration].[sat]",
            "COLUMN:[registration].[grade]",
            "COLUMN:[registration].[*]",
            "TABLE:[ra]",
            "COLUMN:[ra].[capability]",
            "COLUMN:[ra].[salary]",
            "COLUMN:[ra].[student_id]",
            "COLUMN:[ra].[prof_id]",
            "COLUMN:[ra].[*]"
        ],
        "schema": "'[course]':\n  '[course_id]':\n    primary_key: true\n    type: integer\n  '[credit]': integer\n  '[diff]': integer\n  '[name]': text\n'[prof]':\n  '[prof_id]':\n    primary_key: true\n    type: integer\n'[ra]':\n  '[capability]': integer\n  '[prof_id]':\n    foreign_key: '[prof].[prof_id]'\n    primary_key: true\n    type: integer\n  '[salary]': text\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[registration]':\n  '[course_id]':\n    foreign_key: '[course].[course_id]'\n    primary_key: true\n    type: integer\n  '[grade]': text\n  '[sat]': integer\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[student]':\n  '[email]': text\n  '[f_name]': text\n  '[intelligence]': integer\n  '[student_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n",
        "gold_links": {
            "names": "COLUMN:[course].[name]",
            "courses": "TABLE:[course]",
            "students": "TABLE:[student]",
            "intelligence": "COLUMN:[student].[intelligence]",
            "lowest intelligence": "VALUE:[student].[intelligence]",
            "sat": "COLUMN:[registration].[sat]",
            "satisfaction": "COLUMN:[registration].[sat]",
            "least satisfaction": "VALUE:[registration].[sat]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[course]",
                "[C1]": "[course].[course_id]",
                "[C2]": "[course].[credit]",
                "[C3]": "[course].[diff]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[C6]": "[ra].[capability]",
                "[C7]": "[ra].[prof_id]",
                "[C8]": "[ra].[salary]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[C10]": "[registration].[course_id]",
                "[C11]": "[registration].[grade]",
                "[C12]": "[registration].[sat]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[C14]": "[student].[email]",
                "[C15]": "[student].[f_name]",
                "[C16]": "[student].[intelligence]",
                "[C17]": "[student].[student_id]",
                "[C18]": "[student].[type]"
            },
            "to_symbol": {
                "[course]": "[T1]",
                "[course].[course_id]": "[C1]",
                "[course].[credit]": "[C2]",
                "[course].[diff]": "[C3]",
                "[course].[name]": "[C4]",
                "[prof]": "[T2]",
                "[prof].[prof_id]": "[C5]",
                "[ra]": "[T3]",
                "[ra].[capability]": "[C6]",
                "[ra].[prof_id]": "[C7]",
                "[ra].[salary]": "[C8]",
                "[ra].[student_id]": "[C9]",
                "[registration]": "[T4]",
                "[registration].[course_id]": "[C10]",
                "[registration].[grade]": "[C11]",
                "[registration].[sat]": "[C12]",
                "[registration].[student_id]": "[C13]",
                "[student]": "[T5]",
                "[student].[email]": "[C14]",
                "[student].[f_name]": "[C15]",
                "[student].[intelligence]": "[C16]",
                "[student].[student_id]": "[C17]",
                "[student].[type]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C6]': integer\n  '[C7]':\n    foreign_key: '[T2].[C5]'\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]':\n    foreign_key: '[T5].[C17]'\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C11]': text\n  '[C12]': integer\n  '[C13]':\n    foreign_key: '[T5].[C17]'\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n  '[C17]':\n    primary_key: true\n    type: integer\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[course]",
                "[T1].[C1]": "[course].[course_id]",
                "[C1]": "[course].[course_id]",
                "[T1].[C2]": "[course].[credit]",
                "[C2]": "[course].[credit]",
                "[T1].[C3]": "[course].[diff]",
                "[C3]": "[course].[diff]",
                "[T1].[C4]": "[course].[name]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[T2].[C5]": "[prof].[prof_id]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[T3].[C6]": "[ra].[capability]",
                "[C6]": "[ra].[capability]",
                "[T3].[C7]": "[ra].[prof_id]",
                "[C7]": "[ra].[prof_id]",
                "[T3].[C8]": "[ra].[salary]",
                "[C8]": "[ra].[salary]",
                "[T3].[C9]": "[ra].[student_id]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[T4].[C10]": "[registration].[course_id]",
                "[C10]": "[registration].[course_id]",
                "[T4].[C11]": "[registration].[grade]",
                "[C11]": "[registration].[grade]",
                "[T4].[C12]": "[registration].[sat]",
                "[C12]": "[registration].[sat]",
                "[T4].[C13]": "[registration].[student_id]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[T5].[C14]": "[student].[email]",
                "[C14]": "[student].[email]",
                "[T5].[C15]": "[student].[f_name]",
                "[C15]": "[student].[f_name]",
                "[T5].[C16]": "[student].[intelligence]",
                "[C16]": "[student].[intelligence]",
                "[T5].[C17]": "[student].[student_id]",
                "[C17]": "[student].[student_id]",
                "[T5].[C18]": "[student].[type]",
                "[C18]": "[student].[type]"
            },
            "question": "What are the [C4] of the [T1] that the students with the [C16] [C16] are [C12] satisfied with? lower [C16] refers to [C16] = [V1]; sat refers to student's [C12] degree with the course where [C12] [C12] refers to sat = [V1];; [V1] is a value of the column [C12]",
            "to_value": {
                "[V1]": "1"
            },
            "masked": 7,
            "masked_terms": [
                "1",
                "names",
                "courses",
                "intelligence",
                "satisfaction",
                "lowest",
                "least"
            ],
            "sql": "SELECT [T1].[C4] FROM [T1] JOIN [T4] ON [T4].[C10] = [T1].[C1] JOIN [T5] ON [T4].[C13] = [T5].[C17] WHERE [T5].[C16] = [T5].[C16] AND [T4].[C12] = [T4].[C12]",
            "repaired_sql": "SELECT [T1].[C4] FROM [T4] JOIN [T1] ON [T4].[C10] = [T1].[C1] JOIN [T5] ON [T4].[C13] = [T5].[C17] WHERE [T4].[C12] = [V1] AND [T5].[C16] = [V1]"
        },
        "values": [
            "1",
            "1"
        ],
        "value_links": {
            "1": "[registration].[sat]"
        },
        "filtered_value_links": {
            "1": "[registration].[sat]"
        },
        "schema_links": {
            "names": "COLUMN:[course].[name]",
            "courses": "TABLE:[course]",
            "intelligence": "COLUMN:[student].[intelligence]",
            "satisfaction": "COLUMN:[registration].[sat]",
            "lowest": "COLUMN:[student].[intelligence]",
            "least": "COLUMN:[registration].[sat]"
        },
        "filtered_schema_links": {
            "names": "COLUMN:[course].[name]",
            "courses": "TABLE:[course]",
            "intelligence": "COLUMN:[student].[intelligence]",
            "satisfaction": "COLUMN:[registration].[sat]",
            "lowest": "COLUMN:[student].[intelligence]",
            "least": "COLUMN:[registration].[sat]"
        },
        "attack": "What are the names of the courses that the students with the lowest credits are most satisfied with?"
    },
    {
        "db_id": "cs_semester",
        "question": "Describe the names and credits of the least difficult courses. diff refers to difficulty; the least difficult courses refer to MIN(diff);",
        "evidence": "diff refers to difficulty; the least difficult courses refer to MIN(diff);",
        "SQL": "SELECT name, credit FROM course WHERE diff = ( SELECT MIN(diff) FROM course )",
        "query": "SELECT name, credit FROM course WHERE diff = ( SELECT MIN(diff) FROM course )",
        "evidence_added": true,
        "question_toks": [
            "Describe",
            "the",
            "names",
            "and",
            "credits",
            "of",
            "the",
            "least",
            "difficult",
            "courses",
            ".",
            "diff",
            "refers",
            "to",
            "difficulty",
            ";",
            "the",
            "least",
            "difficult",
            "courses",
            "refer",
            "to",
            "MIN(diff)",
            ";"
        ],
        "tc_original": [
            "course.credit",
            "course.name",
            "course.diff",
            "course.course_id",
            "course.*",
            "ra.capability",
            "ra.salary",
            "ra.student_id",
            "ra.prof_id",
            "ra.*",
            "prof.gender",
            "prof.email",
            "prof.popularity",
            "prof.prof_id",
            "prof.first_name",
            "prof.*",
            "student.email",
            "student.intelligence",
            "student.type",
            "student.student_id",
            "student.f_name",
            "student.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[course]",
            "COLUMN:[course].[credit]",
            "COLUMN:[course].[name]",
            "COLUMN:[course].[diff]",
            "COLUMN:[course].[course_id]",
            "COLUMN:[course].[*]",
            "TABLE:[ra]",
            "COLUMN:[ra].[capability]",
            "COLUMN:[ra].[salary]",
            "COLUMN:[ra].[student_id]",
            "COLUMN:[ra].[prof_id]",
            "COLUMN:[ra].[*]",
            "TABLE:[prof]",
            "COLUMN:[prof].[gender]",
            "COLUMN:[prof].[email]",
            "COLUMN:[prof].[popularity]",
            "COLUMN:[prof].[prof_id]",
            "COLUMN:[prof].[first_name]",
            "COLUMN:[prof].[*]",
            "TABLE:[student]",
            "COLUMN:[student].[email]",
            "COLUMN:[student].[intelligence]",
            "COLUMN:[student].[type]",
            "COLUMN:[student].[student_id]",
            "COLUMN:[student].[f_name]",
            "COLUMN:[student].[*]"
        ],
        "schema": "'[course]':\n  '[course_id]':\n    primary_key: true\n    type: integer\n  '[credit]': integer\n  '[diff]': integer\n  '[name]': text\n'[prof]':\n  '[email]': text\n  '[first_name]': text\n  '[gender]': text\n  '[popularity]': integer\n  '[prof_id]':\n    primary_key: true\n    type: integer\n'[ra]':\n  '[capability]': integer\n  '[prof_id]':\n    foreign_key: '[prof].[prof_id]'\n    primary_key: true\n    type: integer\n  '[salary]': text\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[student]':\n  '[email]': text\n  '[f_name]': text\n  '[intelligence]': integer\n  '[student_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n",
        "gold_links": {
            "names": "COLUMN:[course].[name]",
            "credits": "COLUMN:[course].[credit]",
            "least difficult": "COLUMN:[course].[diff]",
            "courses": "TABLE:[course]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[course]",
                "[C1]": "[course].[course_id]",
                "[C2]": "[course].[credit]",
                "[C3]": "[course].[diff]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[C5]": "[prof].[email]",
                "[C6]": "[prof].[first_name]",
                "[C7]": "[prof].[gender]",
                "[C8]": "[prof].[popularity]",
                "[C9]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[C10]": "[ra].[capability]",
                "[C11]": "[ra].[prof_id]",
                "[C12]": "[ra].[salary]",
                "[C13]": "[ra].[student_id]",
                "[T4]": "[student]",
                "[C14]": "[student].[email]",
                "[C15]": "[student].[f_name]",
                "[C16]": "[student].[intelligence]",
                "[C17]": "[student].[student_id]",
                "[C18]": "[student].[type]"
            },
            "to_symbol": {
                "[course]": "[T1]",
                "[course].[course_id]": "[C1]",
                "[course].[credit]": "[C2]",
                "[course].[diff]": "[C3]",
                "[course].[name]": "[C4]",
                "[prof]": "[T2]",
                "[prof].[email]": "[C5]",
                "[prof].[first_name]": "[C6]",
                "[prof].[gender]": "[C7]",
                "[prof].[popularity]": "[C8]",
                "[prof].[prof_id]": "[C9]",
                "[ra]": "[T3]",
                "[ra].[capability]": "[C10]",
                "[ra].[prof_id]": "[C11]",
                "[ra].[salary]": "[C12]",
                "[ra].[student_id]": "[C13]",
                "[student]": "[T4]",
                "[student].[email]": "[C14]",
                "[student].[f_name]": "[C15]",
                "[student].[intelligence]": "[C16]",
                "[student].[student_id]": "[C17]",
                "[student].[type]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': integer\n  '[C4]': text\n'[T2]':\n  '[C5]': text\n  '[C6]': text\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    foreign_key: '[T2].[C9]'\n    primary_key: true\n    type: integer\n  '[C12]': text\n  '[C13]':\n    foreign_key: '[T4].[C17]'\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n  '[C17]':\n    primary_key: true\n    type: integer\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[course]",
                "[T1].[C1]": "[course].[course_id]",
                "[C1]": "[course].[course_id]",
                "[T1].[C2]": "[course].[credit]",
                "[C2]": "[course].[credit]",
                "[T1].[C3]": "[course].[diff]",
                "[C3]": "[course].[diff]",
                "[T1].[C4]": "[course].[name]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[T2].[C5]": "[prof].[email]",
                "[C5]": "[prof].[email]",
                "[T2].[C6]": "[prof].[first_name]",
                "[C6]": "[prof].[first_name]",
                "[T2].[C7]": "[prof].[gender]",
                "[C7]": "[prof].[gender]",
                "[T2].[C8]": "[prof].[popularity]",
                "[C8]": "[prof].[popularity]",
                "[T2].[C9]": "[prof].[prof_id]",
                "[C9]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[T3].[C10]": "[ra].[capability]",
                "[C10]": "[ra].[capability]",
                "[T3].[C11]": "[ra].[prof_id]",
                "[C11]": "[ra].[prof_id]",
                "[T3].[C12]": "[ra].[salary]",
                "[C12]": "[ra].[salary]",
                "[T3].[C13]": "[ra].[student_id]",
                "[C13]": "[ra].[student_id]",
                "[T4]": "[student]",
                "[T4].[C14]": "[student].[email]",
                "[C14]": "[student].[email]",
                "[T4].[C15]": "[student].[f_name]",
                "[C15]": "[student].[f_name]",
                "[T4].[C16]": "[student].[intelligence]",
                "[C16]": "[student].[intelligence]",
                "[T4].[C17]": "[student].[student_id]",
                "[C17]": "[student].[student_id]",
                "[T4].[C18]": "[student].[type]",
                "[C18]": "[student].[type]"
            },
            "question": "Describe the [C4] and [C2] of the [C3] courses. [V1] refers to difficulty; the [C3] courses refer to MIN([V1]);; [V1] is a value of the column [C3]; [V2] is a value of the column [C4]",
            "to_value": {
                "[V1]": "diff",
                "[V2]": "MIN(diff)"
            },
            "masked": 6,
            "masked_terms": [
                "diff",
                "MIN(diff)",
                "names",
                "credits",
                "diff",
                "least difficult"
            ],
            "sql": "SELECT [T1].[C4], [T1].[C2] FROM [T1] WHERE [T1].[C3] = (SELECT MIN([T1].[C3]) FROM [T1])",
            "repaired_sql": "SELECT [C4], [C2] FROM [T1] WHERE [C3] = (SELECT MIN([C3]) FROM [T1])"
        },
        "values": [
            "diff",
            "MIN(diff)"
        ],
        "value_links": {
            "diff": "[course].[diff]",
            "MIN(diff)": "[course].[name]"
        },
        "filtered_value_links": {
            "diff": "[course].[diff]",
            "MIN(diff)": "[course].[name]"
        },
        "schema_links": {
            "names": "COLUMN:[course].[name]",
            "credits": "COLUMN:[course].[credit]",
            "diff": "COLUMN:[course].[diff]",
            "least difficult": "COLUMN:[course].[diff]"
        },
        "filtered_schema_links": {
            "names": "COLUMN:[course].[name]",
            "credits": "COLUMN:[course].[credit]",
            "diff": "COLUMN:[course].[diff]",
            "least difficult": "COLUMN:[course].[diff]"
        },
        "attack": "Describe the title and credits of the difficulty courses. MIN(difficulty) refers to difficulty; the difficulty courses refer to MIN(difficulty); difficulty is a value of the column difficulty; unknown is a value of the column title"
    },
    {
        "db_id": "cs_semester",
        "question": "In students with a grade of B, how many of them have an intellegence level of 3?",
        "evidence": "",
        "SQL": "SELECT COUNT(T1.student_id) FROM registration AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.grade = 'B' AND T2.intelligence = 3",
        "query": "SELECT COUNT(T1.student_id) FROM registration AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.grade = 'B' AND T2.intelligence = 3",
        "question_toks": [
            "In",
            "students",
            "with",
            "a",
            "grade",
            "of",
            "B",
            ",",
            "how",
            "many",
            "of",
            "them",
            "have",
            "an",
            "intellegence",
            "level",
            "of",
            "3",
            "?"
        ],
        "tc_original": [
            "student.student_id",
            "student.intelligence",
            "student.email",
            "student.type",
            "student.f_name",
            "student.*",
            "registration.student_id",
            "registration.grade",
            "registration.course_id",
            "registration.sat",
            "registration.*",
            "course.name",
            "course.credit",
            "course.diff",
            "course.course_id",
            "course.*",
            "ra.capability",
            "ra.salary",
            "ra.student_id",
            "ra.prof_id",
            "ra.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[student]",
            "COLUMN:[student].[student_id]",
            "COLUMN:[student].[intelligence]",
            "COLUMN:[student].[email]",
            "COLUMN:[student].[type]",
            "COLUMN:[student].[f_name]",
            "COLUMN:[student].[*]",
            "TABLE:[registration]",
            "COLUMN:[registration].[student_id]",
            "COLUMN:[registration].[grade]",
            "COLUMN:[registration].[course_id]",
            "COLUMN:[registration].[sat]",
            "COLUMN:[registration].[*]",
            "TABLE:[course]",
            "COLUMN:[course].[name]",
            "COLUMN:[course].[credit]",
            "COLUMN:[course].[diff]",
            "COLUMN:[course].[course_id]",
            "COLUMN:[course].[*]",
            "TABLE:[ra]",
            "COLUMN:[ra].[capability]",
            "COLUMN:[ra].[salary]",
            "COLUMN:[ra].[student_id]",
            "COLUMN:[ra].[prof_id]",
            "COLUMN:[ra].[*]"
        ],
        "schema": "'[course]':\n  '[course_id]':\n    primary_key: true\n    type: integer\n  '[credit]': integer\n  '[diff]': integer\n  '[name]': text\n'[prof]':\n  '[prof_id]':\n    primary_key: true\n    type: integer\n'[ra]':\n  '[capability]': integer\n  '[prof_id]':\n    foreign_key: '[prof].[prof_id]'\n    primary_key: true\n    type: integer\n  '[salary]': text\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[registration]':\n  '[course_id]':\n    foreign_key: '[course].[course_id]'\n    primary_key: true\n    type: integer\n  '[grade]': text\n  '[sat]': integer\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[student]':\n  '[email]': text\n  '[f_name]': text\n  '[intelligence]': integer\n  '[student_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n",
        "gold_links": {
            "students": "TABLE:[student]",
            "grade": "COLUMN:[registration].[grade]",
            "B": "VALUE:[registration].[grade]",
            "intellegence": "COLUMN:[student].[intelligence]",
            "3": "VALUE:[student].[intelligence]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[course]",
                "[C1]": "[course].[course_id]",
                "[C2]": "[course].[credit]",
                "[C3]": "[course].[diff]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[C6]": "[ra].[capability]",
                "[C7]": "[ra].[prof_id]",
                "[C8]": "[ra].[salary]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[C10]": "[registration].[course_id]",
                "[C11]": "[registration].[grade]",
                "[C12]": "[registration].[sat]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[C14]": "[student].[email]",
                "[C15]": "[student].[f_name]",
                "[C16]": "[student].[intelligence]",
                "[C17]": "[student].[student_id]",
                "[C18]": "[student].[type]"
            },
            "to_symbol": {
                "[course]": "[T1]",
                "[course].[course_id]": "[C1]",
                "[course].[credit]": "[C2]",
                "[course].[diff]": "[C3]",
                "[course].[name]": "[C4]",
                "[prof]": "[T2]",
                "[prof].[prof_id]": "[C5]",
                "[ra]": "[T3]",
                "[ra].[capability]": "[C6]",
                "[ra].[prof_id]": "[C7]",
                "[ra].[salary]": "[C8]",
                "[ra].[student_id]": "[C9]",
                "[registration]": "[T4]",
                "[registration].[course_id]": "[C10]",
                "[registration].[grade]": "[C11]",
                "[registration].[sat]": "[C12]",
                "[registration].[student_id]": "[C13]",
                "[student]": "[T5]",
                "[student].[email]": "[C14]",
                "[student].[f_name]": "[C15]",
                "[student].[intelligence]": "[C16]",
                "[student].[student_id]": "[C17]",
                "[student].[type]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C6]': integer\n  '[C7]':\n    foreign_key: '[T2].[C5]'\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]':\n    foreign_key: '[T5].[C17]'\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C11]': text\n  '[C12]': integer\n  '[C13]':\n    foreign_key: '[T5].[C17]'\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n  '[C17]':\n    primary_key: true\n    type: integer\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[course]",
                "[T1].[C1]": "[course].[course_id]",
                "[C1]": "[course].[course_id]",
                "[T1].[C2]": "[course].[credit]",
                "[C2]": "[course].[credit]",
                "[T1].[C3]": "[course].[diff]",
                "[C3]": "[course].[diff]",
                "[T1].[C4]": "[course].[name]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[T2].[C5]": "[prof].[prof_id]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[T3].[C6]": "[ra].[capability]",
                "[C6]": "[ra].[capability]",
                "[T3].[C7]": "[ra].[prof_id]",
                "[C7]": "[ra].[prof_id]",
                "[T3].[C8]": "[ra].[salary]",
                "[C8]": "[ra].[salary]",
                "[T3].[C9]": "[ra].[student_id]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[T4].[C10]": "[registration].[course_id]",
                "[C10]": "[registration].[course_id]",
                "[T4].[C11]": "[registration].[grade]",
                "[C11]": "[registration].[grade]",
                "[T4].[C12]": "[registration].[sat]",
                "[C12]": "[registration].[sat]",
                "[T4].[C13]": "[registration].[student_id]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[T5].[C14]": "[student].[email]",
                "[C14]": "[student].[email]",
                "[T5].[C15]": "[student].[f_name]",
                "[C15]": "[student].[f_name]",
                "[T5].[C16]": "[student].[intelligence]",
                "[C16]": "[student].[intelligence]",
                "[T5].[C17]": "[student].[student_id]",
                "[C17]": "[student].[student_id]",
                "[T5].[C18]": "[student].[type]",
                "[C18]": "[student].[type]"
            },
            "question": "In students with a [C11] of [V1], how many of them have an intellegence level of [V2]?; [V1] is a value of the column [C11]; [V2] is a value of the column [C16]",
            "to_value": {
                "[V1]": "B",
                "[V2]": "3"
            },
            "masked": 3,
            "masked_terms": [
                "B",
                "3",
                "grade"
            ],
            "sql": "SELECT COUNT(*) FROM [T4] INNER JOIN [T5] ON [T4].[C13] = [T5].[C17] WHERE [T4].[C11] = [V1] AND [T5].[C16] = [V2]",
            "repaired_sql": "SELECT COUNT(*) FROM [T4] JOIN [T5] ON [T4].[C13] = [T5].[C17] WHERE [T4].[C11] = '[V1]' AND [T5].[C16] = [V2]"
        },
        "values": [
            "B",
            "3"
        ],
        "value_links": {
            "B": "[registration].[grade]",
            "3": "[student].[intelligence]"
        },
        "filtered_value_links": {
            "B": "[registration].[grade]",
            "3": "[student].[intelligence]"
        },
        "schema_links": {
            "grade": "COLUMN:[registration].[grade]"
        },
        "filtered_schema_links": {
            "grade": "COLUMN:[registration].[grade]"
        },
        "attack": "In students with a major of Computer Science, how many of them have an intellegence level of 140?"
    },
    {
        "db_id": "cs_semester",
        "question": "List the course's name where students acquired a grade of D.",
        "evidence": "",
        "SQL": "SELECT T1.name FROM course AS T1 INNER JOIN registration AS T2 ON T1.course_id = T2.course_id WHERE T2.grade = 'D'",
        "query": "SELECT T1.name FROM course AS T1 INNER JOIN registration AS T2 ON T1.course_id = T2.course_id WHERE T2.grade = 'D'",
        "question_toks": [
            "List",
            "the",
            "course's",
            "name",
            "where",
            "students",
            "acquired",
            "a",
            "grade",
            "of",
            "D",
            "."
        ],
        "tc_original": [
            "course.course_id",
            "course.name",
            "course.credit",
            "course.diff",
            "course.*",
            "registration.course_id",
            "registration.grade",
            "registration.student_id",
            "registration.sat",
            "registration.*",
            "ra.capability",
            "ra.salary",
            "ra.student_id",
            "ra.prof_id",
            "ra.*",
            "student.email",
            "student.intelligence",
            "student.type",
            "student.student_id",
            "student.f_name",
            "student.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[course]",
            "COLUMN:[course].[course_id]",
            "COLUMN:[course].[name]",
            "COLUMN:[course].[credit]",
            "COLUMN:[course].[diff]",
            "COLUMN:[course].[*]",
            "TABLE:[registration]",
            "COLUMN:[registration].[course_id]",
            "COLUMN:[registration].[grade]",
            "COLUMN:[registration].[student_id]",
            "COLUMN:[registration].[sat]",
            "COLUMN:[registration].[*]",
            "TABLE:[ra]",
            "COLUMN:[ra].[capability]",
            "COLUMN:[ra].[salary]",
            "COLUMN:[ra].[student_id]",
            "COLUMN:[ra].[prof_id]",
            "COLUMN:[ra].[*]",
            "TABLE:[student]",
            "COLUMN:[student].[email]",
            "COLUMN:[student].[intelligence]",
            "COLUMN:[student].[type]",
            "COLUMN:[student].[student_id]",
            "COLUMN:[student].[f_name]",
            "COLUMN:[student].[*]"
        ],
        "schema": "'[course]':\n  '[course_id]':\n    primary_key: true\n    type: integer\n  '[credit]': integer\n  '[diff]': integer\n  '[name]': text\n'[prof]':\n  '[prof_id]':\n    primary_key: true\n    type: integer\n'[ra]':\n  '[capability]': integer\n  '[prof_id]':\n    foreign_key: '[prof].[prof_id]'\n    primary_key: true\n    type: integer\n  '[salary]': text\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[registration]':\n  '[course_id]':\n    foreign_key: '[course].[course_id]'\n    primary_key: true\n    type: integer\n  '[grade]': text\n  '[sat]': integer\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[student]':\n  '[email]': text\n  '[f_name]': text\n  '[intelligence]': integer\n  '[student_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n",
        "gold_links": {
            "course": "TABLE:[course]",
            "name": "COLUMN:[course].[name]",
            "grade": "COLUMN:[registration].[grade]",
            "D": "VALUE:[registration].[grade]",
            "students": "TABLE:[student]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[course]",
                "[C1]": "[course].[course_id]",
                "[C2]": "[course].[credit]",
                "[C3]": "[course].[diff]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[C6]": "[ra].[capability]",
                "[C7]": "[ra].[prof_id]",
                "[C8]": "[ra].[salary]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[C10]": "[registration].[course_id]",
                "[C11]": "[registration].[grade]",
                "[C12]": "[registration].[sat]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[C14]": "[student].[email]",
                "[C15]": "[student].[f_name]",
                "[C16]": "[student].[intelligence]",
                "[C17]": "[student].[student_id]",
                "[C18]": "[student].[type]"
            },
            "to_symbol": {
                "[course]": "[T1]",
                "[course].[course_id]": "[C1]",
                "[course].[credit]": "[C2]",
                "[course].[diff]": "[C3]",
                "[course].[name]": "[C4]",
                "[prof]": "[T2]",
                "[prof].[prof_id]": "[C5]",
                "[ra]": "[T3]",
                "[ra].[capability]": "[C6]",
                "[ra].[prof_id]": "[C7]",
                "[ra].[salary]": "[C8]",
                "[ra].[student_id]": "[C9]",
                "[registration]": "[T4]",
                "[registration].[course_id]": "[C10]",
                "[registration].[grade]": "[C11]",
                "[registration].[sat]": "[C12]",
                "[registration].[student_id]": "[C13]",
                "[student]": "[T5]",
                "[student].[email]": "[C14]",
                "[student].[f_name]": "[C15]",
                "[student].[intelligence]": "[C16]",
                "[student].[student_id]": "[C17]",
                "[student].[type]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C6]': integer\n  '[C7]':\n    foreign_key: '[T2].[C5]'\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]':\n    foreign_key: '[T5].[C17]'\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C11]': text\n  '[C12]': integer\n  '[C13]':\n    foreign_key: '[T5].[C17]'\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n  '[C17]':\n    primary_key: true\n    type: integer\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[course]",
                "[T1].[C1]": "[course].[course_id]",
                "[C1]": "[course].[course_id]",
                "[T1].[C2]": "[course].[credit]",
                "[C2]": "[course].[credit]",
                "[T1].[C3]": "[course].[diff]",
                "[C3]": "[course].[diff]",
                "[T1].[C4]": "[course].[name]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[T2].[C5]": "[prof].[prof_id]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[T3].[C6]": "[ra].[capability]",
                "[C6]": "[ra].[capability]",
                "[T3].[C7]": "[ra].[prof_id]",
                "[C7]": "[ra].[prof_id]",
                "[T3].[C8]": "[ra].[salary]",
                "[C8]": "[ra].[salary]",
                "[T3].[C9]": "[ra].[student_id]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[T4].[C10]": "[registration].[course_id]",
                "[C10]": "[registration].[course_id]",
                "[T4].[C11]": "[registration].[grade]",
                "[C11]": "[registration].[grade]",
                "[T4].[C12]": "[registration].[sat]",
                "[C12]": "[registration].[sat]",
                "[T4].[C13]": "[registration].[student_id]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[T5].[C14]": "[student].[email]",
                "[C14]": "[student].[email]",
                "[T5].[C15]": "[student].[f_name]",
                "[C15]": "[student].[f_name]",
                "[T5].[C16]": "[student].[intelligence]",
                "[C16]": "[student].[intelligence]",
                "[T5].[C17]": "[student].[student_id]",
                "[C17]": "[student].[student_id]",
                "[T5].[C18]": "[student].[type]",
                "[C18]": "[student].[type]"
            },
            "question": "List the [T1]'s [C4] where students acquired a [C11] of [V1].; [V1] is a value of the column [C11]",
            "to_value": {
                "[V1]": "D"
            },
            "masked": 4,
            "masked_terms": [
                "D",
                "course",
                "name",
                "grade"
            ],
            "sql": "SELECT [T1].[C4] FROM [T1] INNER JOIN [T4] ON [T1].[C1] = [T4].[C10] WHERE [T4].[C11] = '[V1]'",
            "repaired_sql": "SELECT [T1].[C4] FROM [T1] JOIN [T4] ON [T1].[C1] = [T4].[C10] WHERE [T4].[C11] = '[V1]'"
        },
        "values": [
            "D"
        ],
        "value_links": {
            "D": "[registration].[grade]"
        },
        "filtered_value_links": {
            "D": "[registration].[grade]"
        },
        "schema_links": {
            "course": "TABLE:[course]",
            "name": "COLUMN:[course].[name]",
            "grade": "COLUMN:[registration].[grade]"
        },
        "filtered_schema_links": {
            "course": "TABLE:[course]",
            "name": "COLUMN:[course].[name]",
            "grade": "COLUMN:[registration].[grade]"
        },
        "attack": "List the department's name where students acquired a grade of A."
    },
    {
        "db_id": "cs_semester",
        "question": "Among students with low salary, how many of them have a gpa of 3.5? low salary refers to salary = 'low';",
        "evidence": "low salary refers to salary = 'low';",
        "SQL": "SELECT COUNT(T1.student_id) FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T2.gpa = 3.5 AND T1.salary = 'low'",
        "query": "SELECT COUNT(T1.student_id) FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T2.gpa = 3.5 AND T1.salary = 'low'",
        "evidence_added": true,
        "question_toks": [
            "Among",
            "students",
            "with",
            "low",
            "salary",
            ",",
            "how",
            "many",
            "of",
            "them",
            "have",
            "a",
            "gpa",
            "of",
            "3.5",
            "?",
            "low",
            "salary",
            "refers",
            "to",
            "salary",
            "=",
            "'low'",
            ";"
        ],
        "tc_original": [
            "student.student_id",
            "student.gpa",
            "student.intelligence",
            "student.email",
            "student.type",
            "student.*",
            "ra.student_id",
            "ra.salary",
            "ra.capability",
            "ra.prof_id",
            "ra.*",
            "course.name",
            "course.credit",
            "course.diff",
            "course.course_id",
            "course.*",
            "prof.gender",
            "prof.email",
            "prof.popularity",
            "prof.prof_id",
            "prof.first_name",
            "prof.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[student]",
            "COLUMN:[student].[student_id]",
            "COLUMN:[student].[gpa]",
            "COLUMN:[student].[intelligence]",
            "COLUMN:[student].[email]",
            "COLUMN:[student].[type]",
            "COLUMN:[student].[*]",
            "TABLE:[ra]",
            "COLUMN:[ra].[student_id]",
            "COLUMN:[ra].[salary]",
            "COLUMN:[ra].[capability]",
            "COLUMN:[ra].[prof_id]",
            "COLUMN:[ra].[*]",
            "TABLE:[course]",
            "COLUMN:[course].[name]",
            "COLUMN:[course].[credit]",
            "COLUMN:[course].[diff]",
            "COLUMN:[course].[course_id]",
            "COLUMN:[course].[*]",
            "TABLE:[prof]",
            "COLUMN:[prof].[gender]",
            "COLUMN:[prof].[email]",
            "COLUMN:[prof].[popularity]",
            "COLUMN:[prof].[prof_id]",
            "COLUMN:[prof].[first_name]",
            "COLUMN:[prof].[*]"
        ],
        "schema": "'[course]':\n  '[course_id]':\n    primary_key: true\n    type: integer\n  '[credit]': integer\n  '[diff]': integer\n  '[name]': text\n'[prof]':\n  '[email]': text\n  '[first_name]': text\n  '[gender]': text\n  '[popularity]': integer\n  '[prof_id]':\n    primary_key: true\n    type: integer\n'[ra]':\n  '[capability]': integer\n  '[prof_id]':\n    foreign_key: '[prof].[prof_id]'\n    primary_key: true\n    type: integer\n  '[salary]': text\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[student]':\n  '[email]': text\n  '[gpa]': real\n  '[intelligence]': integer\n  '[student_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n",
        "gold_links": {
            "students": "TABLE:[student]",
            "salary": "COLUMN:[ra].[salary]",
            "low salary": "VALUE:[ra].[salary]",
            "gpa": "COLUMN:[student].[gpa]",
            "3.5": "VALUE:[student].[gpa]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[course]",
                "[C1]": "[course].[course_id]",
                "[C2]": "[course].[credit]",
                "[C3]": "[course].[diff]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[C5]": "[prof].[email]",
                "[C6]": "[prof].[first_name]",
                "[C7]": "[prof].[gender]",
                "[C8]": "[prof].[popularity]",
                "[C9]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[C10]": "[ra].[capability]",
                "[C11]": "[ra].[prof_id]",
                "[C12]": "[ra].[salary]",
                "[C13]": "[ra].[student_id]",
                "[T4]": "[student]",
                "[C14]": "[student].[email]",
                "[C15]": "[student].[gpa]",
                "[C16]": "[student].[intelligence]",
                "[C17]": "[student].[student_id]",
                "[C18]": "[student].[type]"
            },
            "to_symbol": {
                "[course]": "[T1]",
                "[course].[course_id]": "[C1]",
                "[course].[credit]": "[C2]",
                "[course].[diff]": "[C3]",
                "[course].[name]": "[C4]",
                "[prof]": "[T2]",
                "[prof].[email]": "[C5]",
                "[prof].[first_name]": "[C6]",
                "[prof].[gender]": "[C7]",
                "[prof].[popularity]": "[C8]",
                "[prof].[prof_id]": "[C9]",
                "[ra]": "[T3]",
                "[ra].[capability]": "[C10]",
                "[ra].[prof_id]": "[C11]",
                "[ra].[salary]": "[C12]",
                "[ra].[student_id]": "[C13]",
                "[student]": "[T4]",
                "[student].[email]": "[C14]",
                "[student].[gpa]": "[C15]",
                "[student].[intelligence]": "[C16]",
                "[student].[student_id]": "[C17]",
                "[student].[type]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': integer\n  '[C4]': text\n'[T2]':\n  '[C5]': text\n  '[C6]': text\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    foreign_key: '[T2].[C9]'\n    primary_key: true\n    type: integer\n  '[C12]': text\n  '[C13]':\n    foreign_key: '[T4].[C17]'\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C14]': text\n  '[C15]': real\n  '[C16]': integer\n  '[C17]':\n    primary_key: true\n    type: integer\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[course]",
                "[T1].[C1]": "[course].[course_id]",
                "[C1]": "[course].[course_id]",
                "[T1].[C2]": "[course].[credit]",
                "[C2]": "[course].[credit]",
                "[T1].[C3]": "[course].[diff]",
                "[C3]": "[course].[diff]",
                "[T1].[C4]": "[course].[name]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[T2].[C5]": "[prof].[email]",
                "[C5]": "[prof].[email]",
                "[T2].[C6]": "[prof].[first_name]",
                "[C6]": "[prof].[first_name]",
                "[T2].[C7]": "[prof].[gender]",
                "[C7]": "[prof].[gender]",
                "[T2].[C8]": "[prof].[popularity]",
                "[C8]": "[prof].[popularity]",
                "[T2].[C9]": "[prof].[prof_id]",
                "[C9]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[T3].[C10]": "[ra].[capability]",
                "[C10]": "[ra].[capability]",
                "[T3].[C11]": "[ra].[prof_id]",
                "[C11]": "[ra].[prof_id]",
                "[T3].[C12]": "[ra].[salary]",
                "[C12]": "[ra].[salary]",
                "[T3].[C13]": "[ra].[student_id]",
                "[C13]": "[ra].[student_id]",
                "[T4]": "[student]",
                "[T4].[C14]": "[student].[email]",
                "[C14]": "[student].[email]",
                "[T4].[C15]": "[student].[gpa]",
                "[C15]": "[student].[gpa]",
                "[T4].[C16]": "[student].[intelligence]",
                "[C16]": "[student].[intelligence]",
                "[T4].[C17]": "[student].[student_id]",
                "[C17]": "[student].[student_id]",
                "[T4].[C18]": "[student].[type]",
                "[C18]": "[student].[type]"
            },
            "question": "Among students with [V1] [C12], how many of them have a [C15] of [V2]? [V1] [C12] refers to [C12] = '[V1]';; [V1] is a value of the column [C12]; [V2] is a value of the column [C15]",
            "to_value": {
                "[V1]": "low",
                "[V2]": "3.5"
            },
            "masked": 6,
            "masked_terms": [
                "low",
                "3.5",
                "salary",
                "gpa",
                "student",
                "3.5"
            ],
            "sql": "SELECT COUNT(*) FROM [T3] JOIN [T4] ON [T3].[C13] = [T4].[C17] WHERE [T3].[C12] = '[V1]' AND [T4].[C15] = [V2]",
            "repaired_sql": "SELECT COUNT(*) FROM [T3] JOIN [T4] ON [T3].[C13] = [T4].[C17] WHERE [T3].[C12] = '[V1]' AND [T4].[C15] = [V2]"
        },
        "values": [
            "low",
            "3.5"
        ],
        "value_links": {
            "low": "[ra].[salary]",
            "3.5": "[student].[gpa]"
        },
        "filtered_value_links": {
            "low": "[ra].[salary]",
            "3.5": "[student].[gpa]"
        },
        "schema_links": {
            "salary": "COLUMN:[ra].[salary]",
            "gpa": "COLUMN:[student].[gpa]",
            "student": "TABLE:[student]",
            "3.5": "COLUMN:[student].[gpa]"
        },
        "filtered_schema_links": {
            "salary": "COLUMN:[ra].[salary]",
            "gpa": "COLUMN:[student].[gpa]",
            "student": "TABLE:[student]",
            "3.5": "COLUMN:[student].[gpa]"
        },
        "attack": "Among students with blue major, how many of them have a salary of 50000?"
    },
    {
        "db_id": "cs_semester",
        "question": "Calculate the average satisfaction of the good students with their courses. average satisfaction = DIVIDE(SUM(sat), COUNT(course_id)); satisfaction refers to sat; good student refers to grade = 'B';",
        "evidence": "average satisfaction = DIVIDE(SUM(sat), COUNT(course_id)); satisfaction refers to sat; good student refers to grade = 'B';",
        "SQL": "SELECT CAST(SUM(sat) AS REAL) / COUNT(course_id) FROM registration WHERE grade = 'B'",
        "query": "SELECT CAST(SUM(sat) AS REAL) / COUNT(course_id) FROM registration WHERE grade = 'B'",
        "evidence_added": true,
        "question_toks": [
            "Calculate",
            "the",
            "average",
            "satisfaction",
            "of",
            "the",
            "good",
            "students",
            "with",
            "their",
            "courses",
            ".",
            "average",
            "satisfaction",
            "=",
            "DIVIDE(SUM(sat)",
            ",",
            "COUNT(course_id))",
            ";",
            "satisfaction",
            "refers",
            "to",
            "sat",
            ";",
            "good",
            "student",
            "refers",
            "to",
            "grade",
            "=",
            "'B'",
            ";"
        ],
        "tc_original": [
            "registration.grade",
            "registration.student_id",
            "registration.course_id",
            "registration.sat",
            "registration.*",
            "course.course_id",
            "course.name",
            "course.credit",
            "course.diff",
            "course.*",
            "student.student_id",
            "student.email",
            "student.intelligence",
            "student.type",
            "student.f_name",
            "student.*",
            "ra.capability",
            "ra.salary",
            "ra.student_id",
            "ra.prof_id",
            "ra.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[registration]",
            "COLUMN:[registration].[grade]",
            "COLUMN:[registration].[student_id]",
            "COLUMN:[registration].[course_id]",
            "COLUMN:[registration].[sat]",
            "COLUMN:[registration].[*]",
            "TABLE:[course]",
            "COLUMN:[course].[course_id]",
            "COLUMN:[course].[name]",
            "COLUMN:[course].[credit]",
            "COLUMN:[course].[diff]",
            "COLUMN:[course].[*]",
            "TABLE:[student]",
            "COLUMN:[student].[student_id]",
            "COLUMN:[student].[email]",
            "COLUMN:[student].[intelligence]",
            "COLUMN:[student].[type]",
            "COLUMN:[student].[f_name]",
            "COLUMN:[student].[*]",
            "TABLE:[ra]",
            "COLUMN:[ra].[capability]",
            "COLUMN:[ra].[salary]",
            "COLUMN:[ra].[student_id]",
            "COLUMN:[ra].[prof_id]",
            "COLUMN:[ra].[*]"
        ],
        "schema": "'[course]':\n  '[course_id]':\n    primary_key: true\n    type: integer\n  '[credit]': integer\n  '[diff]': integer\n  '[name]': text\n'[prof]':\n  '[prof_id]':\n    primary_key: true\n    type: integer\n'[ra]':\n  '[capability]': integer\n  '[prof_id]':\n    foreign_key: '[prof].[prof_id]'\n    primary_key: true\n    type: integer\n  '[salary]': text\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[registration]':\n  '[course_id]':\n    foreign_key: '[course].[course_id]'\n    primary_key: true\n    type: integer\n  '[grade]': text\n  '[sat]': integer\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[student]':\n  '[email]': text\n  '[f_name]': text\n  '[intelligence]': integer\n  '[student_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n",
        "gold_links": {
            "average satisfaction": "COLUMN:[registration].[sat]",
            "satisfaction": "COLUMN:[registration].[sat]",
            "good student": "COLUMN:[registration].[grade]",
            "grade": "COLUMN:[registration].[grade]",
            "B": "VALUE:[registration].[grade]",
            "courses": "COLUMN:[registration].[course_id]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[course]",
                "[C1]": "[course].[course_id]",
                "[C2]": "[course].[credit]",
                "[C3]": "[course].[diff]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[C6]": "[ra].[capability]",
                "[C7]": "[ra].[prof_id]",
                "[C8]": "[ra].[salary]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[C10]": "[registration].[course_id]",
                "[C11]": "[registration].[grade]",
                "[C12]": "[registration].[sat]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[C14]": "[student].[email]",
                "[C15]": "[student].[f_name]",
                "[C16]": "[student].[intelligence]",
                "[C17]": "[student].[student_id]",
                "[C18]": "[student].[type]"
            },
            "to_symbol": {
                "[course]": "[T1]",
                "[course].[course_id]": "[C1]",
                "[course].[credit]": "[C2]",
                "[course].[diff]": "[C3]",
                "[course].[name]": "[C4]",
                "[prof]": "[T2]",
                "[prof].[prof_id]": "[C5]",
                "[ra]": "[T3]",
                "[ra].[capability]": "[C6]",
                "[ra].[prof_id]": "[C7]",
                "[ra].[salary]": "[C8]",
                "[ra].[student_id]": "[C9]",
                "[registration]": "[T4]",
                "[registration].[course_id]": "[C10]",
                "[registration].[grade]": "[C11]",
                "[registration].[sat]": "[C12]",
                "[registration].[student_id]": "[C13]",
                "[student]": "[T5]",
                "[student].[email]": "[C14]",
                "[student].[f_name]": "[C15]",
                "[student].[intelligence]": "[C16]",
                "[student].[student_id]": "[C17]",
                "[student].[type]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C6]': integer\n  '[C7]':\n    foreign_key: '[T2].[C5]'\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]':\n    foreign_key: '[T5].[C17]'\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C11]': text\n  '[C12]': integer\n  '[C13]':\n    foreign_key: '[T5].[C17]'\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n  '[C17]':\n    primary_key: true\n    type: integer\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[course]",
                "[T1].[C1]": "[course].[course_id]",
                "[C1]": "[course].[course_id]",
                "[T1].[C2]": "[course].[credit]",
                "[C2]": "[course].[credit]",
                "[T1].[C3]": "[course].[diff]",
                "[C3]": "[course].[diff]",
                "[T1].[C4]": "[course].[name]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[T2].[C5]": "[prof].[prof_id]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[T3].[C6]": "[ra].[capability]",
                "[C6]": "[ra].[capability]",
                "[T3].[C7]": "[ra].[prof_id]",
                "[C7]": "[ra].[prof_id]",
                "[T3].[C8]": "[ra].[salary]",
                "[C8]": "[ra].[salary]",
                "[T3].[C9]": "[ra].[student_id]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[T4].[C10]": "[registration].[course_id]",
                "[C10]": "[registration].[course_id]",
                "[T4].[C11]": "[registration].[grade]",
                "[C11]": "[registration].[grade]",
                "[T4].[C12]": "[registration].[sat]",
                "[C12]": "[registration].[sat]",
                "[T4].[C13]": "[registration].[student_id]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[T5].[C14]": "[student].[email]",
                "[C14]": "[student].[email]",
                "[T5].[C15]": "[student].[f_name]",
                "[C15]": "[student].[f_name]",
                "[T5].[C16]": "[student].[intelligence]",
                "[C16]": "[student].[intelligence]",
                "[T5].[C17]": "[student].[student_id]",
                "[C17]": "[student].[student_id]",
                "[T5].[C18]": "[student].[type]",
                "[C18]": "[student].[type]"
            },
            "question": "Calculate the average [C12] of the [V1] with their [V2]. average [C12] = DIVIDE(SUM([V3]), COUNT(course_id)); [C12] refers to [V3]; good student refers to [V4] = '[V5]';; [V1] is a value of the column [C11]; [V2] is a value of the column [C1]; [V3] is a value of the column [C12]; [V4] is a value of the column [C11]; [V5] is a value of the column [C11]",
            "to_value": {
                "[V1]": "good students",
                "[V2]": "courses",
                "[V3]": "sat",
                "[V4]": "grade",
                "[V5]": "B"
            },
            "masked": 11,
            "masked_terms": [
                "good students",
                "courses",
                "sat",
                "grade",
                "B",
                "satisfaction",
                "students",
                "courses",
                "sat",
                "grade",
                "B"
            ],
            "sql": "SELECT SUM([T4].[C12]) * 1.0 / COUNT([T4].[C10]) AS [average_C12] FROM [T4]",
            "repaired_sql": "SELECT AVG([T4].[C12]) FROM [T4] WHERE [T4].[C11] = '[V1]' AND [T4].[C10] = [V2] AND [T4].[C11] = '[V5]'"
        },
        "values": [
            "good students",
            "courses",
            "sat",
            "grade",
            "B"
        ],
        "value_links": {
            "good students": "[registration].[grade]",
            "courses": "[course].[course_id]",
            "sat": "[registration].[sat]",
            "grade": "[registration].[grade]",
            "B": "[registration].[grade]"
        },
        "filtered_value_links": {
            "good students": "[registration].[grade]",
            "courses": "[course].[course_id]",
            "sat": "[registration].[sat]",
            "grade": "[registration].[grade]",
            "B": "[registration].[grade]"
        },
        "schema_links": {
            "average": "COLUMN:[registration].[*]",
            "satisfaction": "COLUMN:[registration].[sat]",
            "students": "TABLE:[student]",
            "courses": "TABLE:[course]",
            "sat": "COLUMN:[registration].[sat]",
            "grade": "COLUMN:[registration].[grade]",
            "B": "COLUMN:[registration].[grade]"
        },
        "filtered_schema_links": {
            "average": "COLUMN:[registration].[*]",
            "satisfaction": "COLUMN:[registration].[sat]",
            "students": "TABLE:[student]",
            "courses": "TABLE:[course]",
            "sat": "COLUMN:[registration].[sat]",
            "grade": "COLUMN:[registration].[grade]",
            "B": "COLUMN:[registration].[grade]"
        },
        "attack": "Calculate the average grade of the students with their student_id. average grade = DIVIDE(SUM(value), COUNT(course_id)); grade refers to value; good student refers to name = 'name'; students is a value of the column name; student_id is a value of the column id; value is a value of the column grade; name is a value of the column name"
    },
    {
        "db_id": "cs_semester",
        "question": "Give the full name and capability of students who failed in any courses. full name of students = f_name, l_name; failed refers to grade IS NULL;",
        "evidence": "full name of students = f_name, l_name; failed refers to grade IS NULL;",
        "SQL": "SELECT T2.f_name, T2.l_name, T1.capability FROM RA AS T1 INNER JOIN student AS T2 ON T2.student_id = T1.student_id INNER JOIN registration AS T3 ON T2.student_id = T3.student_id WHERE T3.grade IS NULL OR T3.grade = ''",
        "query": "SELECT T2.f_name, T2.l_name, T1.capability FROM RA AS T1 INNER JOIN student AS T2 ON T2.student_id = T1.student_id INNER JOIN registration AS T3 ON T2.student_id = T3.student_id WHERE T3.grade IS NULL OR T3.grade = ''",
        "evidence_added": true,
        "question_toks": [
            "Give",
            "the",
            "full",
            "name",
            "and",
            "capability",
            "of",
            "students",
            "who",
            "failed",
            "in",
            "any",
            "courses",
            ".",
            "full",
            "name",
            "of",
            "students",
            "=",
            "f_name",
            ",",
            "l_name",
            ";",
            "failed",
            "refers",
            "to",
            "grade",
            "IS",
            "NULL",
            ";"
        ],
        "tc_original": [
            "student.student_id",
            "student.f_name",
            "student.l_name",
            "student.email",
            "student.intelligence",
            "student.*",
            "ra.student_id",
            "ra.capability",
            "ra.salary",
            "ra.prof_id",
            "ra.*",
            "registration.student_id",
            "registration.grade",
            "registration.course_id",
            "registration.sat",
            "registration.*",
            "course.name",
            "course.credit",
            "course.diff",
            "course.course_id",
            "course.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[student]",
            "COLUMN:[student].[student_id]",
            "COLUMN:[student].[f_name]",
            "COLUMN:[student].[l_name]",
            "COLUMN:[student].[email]",
            "COLUMN:[student].[intelligence]",
            "COLUMN:[student].[*]",
            "TABLE:[ra]",
            "COLUMN:[ra].[student_id]",
            "COLUMN:[ra].[capability]",
            "COLUMN:[ra].[salary]",
            "COLUMN:[ra].[prof_id]",
            "COLUMN:[ra].[*]",
            "TABLE:[registration]",
            "COLUMN:[registration].[student_id]",
            "COLUMN:[registration].[grade]",
            "COLUMN:[registration].[course_id]",
            "COLUMN:[registration].[sat]",
            "COLUMN:[registration].[*]",
            "TABLE:[course]",
            "COLUMN:[course].[name]",
            "COLUMN:[course].[credit]",
            "COLUMN:[course].[diff]",
            "COLUMN:[course].[course_id]",
            "COLUMN:[course].[*]"
        ],
        "schema": "'[course]':\n  '[course_id]':\n    primary_key: true\n    type: integer\n  '[credit]': integer\n  '[diff]': integer\n  '[name]': text\n'[prof]':\n  '[prof_id]':\n    primary_key: true\n    type: integer\n'[ra]':\n  '[capability]': integer\n  '[prof_id]':\n    foreign_key: '[prof].[prof_id]'\n    primary_key: true\n    type: integer\n  '[salary]': text\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[registration]':\n  '[course_id]':\n    foreign_key: '[course].[course_id]'\n    primary_key: true\n    type: integer\n  '[grade]': text\n  '[sat]': integer\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[student]':\n  '[email]': text\n  '[f_name]': text\n  '[intelligence]': integer\n  '[l_name]': text\n  '[student_id]':\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "full name": "COLUMN:[student].[f_name]",
            "capability": "COLUMN:[ra].[capability]",
            "students": "TABLE:[student]",
            "f_name": "COLUMN:[student].[f_name]",
            "l_name": "COLUMN:[student].[l_name]",
            "failed": "COLUMN:[registration].[grade]",
            "courses": "TABLE:[course]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[course]",
                "[C1]": "[course].[course_id]",
                "[C2]": "[course].[credit]",
                "[C3]": "[course].[diff]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[C6]": "[ra].[capability]",
                "[C7]": "[ra].[prof_id]",
                "[C8]": "[ra].[salary]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[C10]": "[registration].[course_id]",
                "[C11]": "[registration].[grade]",
                "[C12]": "[registration].[sat]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[C14]": "[student].[email]",
                "[C15]": "[student].[f_name]",
                "[C16]": "[student].[intelligence]",
                "[C17]": "[student].[l_name]",
                "[C18]": "[student].[student_id]"
            },
            "to_symbol": {
                "[course]": "[T1]",
                "[course].[course_id]": "[C1]",
                "[course].[credit]": "[C2]",
                "[course].[diff]": "[C3]",
                "[course].[name]": "[C4]",
                "[prof]": "[T2]",
                "[prof].[prof_id]": "[C5]",
                "[ra]": "[T3]",
                "[ra].[capability]": "[C6]",
                "[ra].[prof_id]": "[C7]",
                "[ra].[salary]": "[C8]",
                "[ra].[student_id]": "[C9]",
                "[registration]": "[T4]",
                "[registration].[course_id]": "[C10]",
                "[registration].[grade]": "[C11]",
                "[registration].[sat]": "[C12]",
                "[registration].[student_id]": "[C13]",
                "[student]": "[T5]",
                "[student].[email]": "[C14]",
                "[student].[f_name]": "[C15]",
                "[student].[intelligence]": "[C16]",
                "[student].[l_name]": "[C17]",
                "[student].[student_id]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C6]': integer\n  '[C7]':\n    foreign_key: '[T2].[C5]'\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]':\n    foreign_key: '[T5].[C18]'\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C11]': text\n  '[C12]': integer\n  '[C13]':\n    foreign_key: '[T5].[C18]'\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n  '[C17]': text\n  '[C18]':\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[course]",
                "[T1].[C1]": "[course].[course_id]",
                "[C1]": "[course].[course_id]",
                "[T1].[C2]": "[course].[credit]",
                "[C2]": "[course].[credit]",
                "[T1].[C3]": "[course].[diff]",
                "[C3]": "[course].[diff]",
                "[T1].[C4]": "[course].[name]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[T2].[C5]": "[prof].[prof_id]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[T3].[C6]": "[ra].[capability]",
                "[C6]": "[ra].[capability]",
                "[T3].[C7]": "[ra].[prof_id]",
                "[C7]": "[ra].[prof_id]",
                "[T3].[C8]": "[ra].[salary]",
                "[C8]": "[ra].[salary]",
                "[T3].[C9]": "[ra].[student_id]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[T4].[C10]": "[registration].[course_id]",
                "[C10]": "[registration].[course_id]",
                "[T4].[C11]": "[registration].[grade]",
                "[C11]": "[registration].[grade]",
                "[T4].[C12]": "[registration].[sat]",
                "[C12]": "[registration].[sat]",
                "[T4].[C13]": "[registration].[student_id]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[T5].[C14]": "[student].[email]",
                "[C14]": "[student].[email]",
                "[T5].[C15]": "[student].[f_name]",
                "[C15]": "[student].[f_name]",
                "[T5].[C16]": "[student].[intelligence]",
                "[C16]": "[student].[intelligence]",
                "[T5].[C17]": "[student].[l_name]",
                "[C17]": "[student].[l_name]",
                "[T5].[C18]": "[student].[student_id]",
                "[C18]": "[student].[student_id]"
            },
            "question": "Give the full [C4] and [C6] of students who failed in any courses. full [C4] of students = [V1], [V2]; failed refers to [C11] IS NULL;; [V1] is a value of the column [C15]; [V2] is a value of the column [C17]",
            "to_value": {
                "[V1]": "f_name",
                "[V2]": "l_name"
            },
            "masked": 7,
            "masked_terms": [
                "f_name",
                "l_name",
                "name",
                "capability",
                "student",
                "course",
                "grade"
            ],
            "sql": "SELECT [T5].[C15], [T5].[C17] FROM [T1] INNER JOIN [T4] ON [T1].[C1] = [T4].[C10] INNER JOIN [T5] ON [T5].[C15] = [T1].[C4] WHERE [T4].[C11] IS NULL",
            "repaired_sql": "SELECT [T1].[C4], [T3].[C6] FROM [T4] JOIN [T1] ON [T4].[C10] = [T1].[C1] JOIN [T3] ON [T4].[C13] = [T3].[C9] WHERE [T4].[C11] IS NULL;"
        },
        "values": [
            "f_name",
            "l_name"
        ],
        "value_links": {
            "f_name": "[student].[f_name]",
            "l_name": "[student].[l_name]"
        },
        "filtered_value_links": {
            "f_name": "[student].[f_name]",
            "l_name": "[student].[l_name]"
        },
        "schema_links": {
            "name": "COLUMN:[course].[name]",
            "capability": "COLUMN:[ra].[capability]",
            "student": "TABLE:[student]",
            "course": "TABLE:[course]",
            "grade": "COLUMN:[registration].[grade]"
        },
        "filtered_schema_links": {
            "name": "COLUMN:[course].[name]",
            "capability": "COLUMN:[ra].[capability]",
            "student": "TABLE:[student]",
            "course": "TABLE:[course]",
            "grade": "COLUMN:[registration].[grade]"
        },
        "attack": "Give the full name and roll number of students who failed in any courses. full name of students = Mathematics, Physics; failed refers to grade IS NULL; Mathematics is a value of the column subject_name; Physics is a value of the column subject_code"
    },
    {
        "db_id": "cs_semester",
        "question": "Among research postgraduate students, give the name of the course with the student satisfaction value of 1. research postgraduate students refers to type = 'RPG'; name of the course refers to name; satisfaction refers to sat; sat = 1;",
        "evidence": "research postgraduate students refers to type = 'RPG'; name of the course refers to name; satisfaction refers to sat; sat = 1;",
        "SQL": "SELECT T3.name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T2.sat = 1 AND T1.type = 'RPG'",
        "query": "SELECT T3.name FROM student AS T1 INNER JOIN registration AS T2 ON T1.student_id = T2.student_id INNER JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T2.sat = 1 AND T1.type = 'RPG'",
        "evidence_added": true,
        "question_toks": [
            "Among",
            "research",
            "postgraduate",
            "students",
            ",",
            "give",
            "the",
            "name",
            "of",
            "the",
            "course",
            "with",
            "the",
            "student",
            "satisfaction",
            "value",
            "of",
            "1",
            ".",
            "research",
            "postgraduate",
            "students",
            "refers",
            "to",
            "type",
            "=",
            "'RPG'",
            ";",
            "name",
            "of",
            "the",
            "course",
            "refers",
            "to",
            "name",
            ";",
            "satisfaction",
            "refers",
            "to",
            "sat",
            ";",
            "sat",
            "=",
            "1",
            ";"
        ],
        "tc_original": [
            "course.course_id",
            "course.name",
            "course.credit",
            "course.diff",
            "course.*",
            "student.type",
            "student.student_id",
            "student.email",
            "student.intelligence",
            "student.f_name",
            "student.*",
            "registration.course_id",
            "registration.student_id",
            "registration.sat",
            "registration.grade",
            "registration.*",
            "ra.capability",
            "ra.salary",
            "ra.student_id",
            "ra.prof_id",
            "ra.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[course]",
            "COLUMN:[course].[course_id]",
            "COLUMN:[course].[name]",
            "COLUMN:[course].[credit]",
            "COLUMN:[course].[diff]",
            "COLUMN:[course].[*]",
            "TABLE:[student]",
            "COLUMN:[student].[type]",
            "COLUMN:[student].[student_id]",
            "COLUMN:[student].[email]",
            "COLUMN:[student].[intelligence]",
            "COLUMN:[student].[f_name]",
            "COLUMN:[student].[*]",
            "TABLE:[registration]",
            "COLUMN:[registration].[course_id]",
            "COLUMN:[registration].[student_id]",
            "COLUMN:[registration].[sat]",
            "COLUMN:[registration].[grade]",
            "COLUMN:[registration].[*]",
            "TABLE:[ra]",
            "COLUMN:[ra].[capability]",
            "COLUMN:[ra].[salary]",
            "COLUMN:[ra].[student_id]",
            "COLUMN:[ra].[prof_id]",
            "COLUMN:[ra].[*]"
        ],
        "schema": "'[course]':\n  '[course_id]':\n    primary_key: true\n    type: integer\n  '[credit]': integer\n  '[diff]': integer\n  '[name]': text\n'[prof]':\n  '[prof_id]':\n    primary_key: true\n    type: integer\n'[ra]':\n  '[capability]': integer\n  '[prof_id]':\n    foreign_key: '[prof].[prof_id]'\n    primary_key: true\n    type: integer\n  '[salary]': text\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[registration]':\n  '[course_id]':\n    foreign_key: '[course].[course_id]'\n    primary_key: true\n    type: integer\n  '[grade]': text\n  '[sat]': integer\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[student]':\n  '[email]': text\n  '[f_name]': text\n  '[intelligence]': integer\n  '[student_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n",
        "gold_links": {
            "research postgraduate students": "VALUE:[student].[type]",
            "course": "TABLE:[course]",
            "name": "COLUMN:[course].[name]",
            "satisfaction": "COLUMN:[registration].[sat]",
            "1": "VALUE:[registration].[sat]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[course]",
                "[C1]": "[course].[course_id]",
                "[C2]": "[course].[credit]",
                "[C3]": "[course].[diff]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[C6]": "[ra].[capability]",
                "[C7]": "[ra].[prof_id]",
                "[C8]": "[ra].[salary]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[C10]": "[registration].[course_id]",
                "[C11]": "[registration].[grade]",
                "[C12]": "[registration].[sat]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[C14]": "[student].[email]",
                "[C15]": "[student].[f_name]",
                "[C16]": "[student].[intelligence]",
                "[C17]": "[student].[student_id]",
                "[C18]": "[student].[type]"
            },
            "to_symbol": {
                "[course]": "[T1]",
                "[course].[course_id]": "[C1]",
                "[course].[credit]": "[C2]",
                "[course].[diff]": "[C3]",
                "[course].[name]": "[C4]",
                "[prof]": "[T2]",
                "[prof].[prof_id]": "[C5]",
                "[ra]": "[T3]",
                "[ra].[capability]": "[C6]",
                "[ra].[prof_id]": "[C7]",
                "[ra].[salary]": "[C8]",
                "[ra].[student_id]": "[C9]",
                "[registration]": "[T4]",
                "[registration].[course_id]": "[C10]",
                "[registration].[grade]": "[C11]",
                "[registration].[sat]": "[C12]",
                "[registration].[student_id]": "[C13]",
                "[student]": "[T5]",
                "[student].[email]": "[C14]",
                "[student].[f_name]": "[C15]",
                "[student].[intelligence]": "[C16]",
                "[student].[student_id]": "[C17]",
                "[student].[type]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': integer\n  '[C4]': text\n'[T2]':\n  '[C5]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C6]': integer\n  '[C7]':\n    foreign_key: '[T2].[C5]'\n    primary_key: true\n    type: integer\n  '[C8]': text\n  '[C9]':\n    foreign_key: '[T5].[C17]'\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C10]':\n    foreign_key: '[T1].[C1]'\n    primary_key: true\n    type: integer\n  '[C11]': text\n  '[C12]': integer\n  '[C13]':\n    foreign_key: '[T5].[C17]'\n    primary_key: true\n    type: integer\n'[T5]':\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n  '[C17]':\n    primary_key: true\n    type: integer\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[course]",
                "[T1].[C1]": "[course].[course_id]",
                "[C1]": "[course].[course_id]",
                "[T1].[C2]": "[course].[credit]",
                "[C2]": "[course].[credit]",
                "[T1].[C3]": "[course].[diff]",
                "[C3]": "[course].[diff]",
                "[T1].[C4]": "[course].[name]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[T2].[C5]": "[prof].[prof_id]",
                "[C5]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[T3].[C6]": "[ra].[capability]",
                "[C6]": "[ra].[capability]",
                "[T3].[C7]": "[ra].[prof_id]",
                "[C7]": "[ra].[prof_id]",
                "[T3].[C8]": "[ra].[salary]",
                "[C8]": "[ra].[salary]",
                "[T3].[C9]": "[ra].[student_id]",
                "[C9]": "[ra].[student_id]",
                "[T4]": "[registration]",
                "[T4].[C10]": "[registration].[course_id]",
                "[C10]": "[registration].[course_id]",
                "[T4].[C11]": "[registration].[grade]",
                "[C11]": "[registration].[grade]",
                "[T4].[C12]": "[registration].[sat]",
                "[C12]": "[registration].[sat]",
                "[T4].[C13]": "[registration].[student_id]",
                "[C13]": "[registration].[student_id]",
                "[T5]": "[student]",
                "[T5].[C14]": "[student].[email]",
                "[C14]": "[student].[email]",
                "[T5].[C15]": "[student].[f_name]",
                "[C15]": "[student].[f_name]",
                "[T5].[C16]": "[student].[intelligence]",
                "[C16]": "[student].[intelligence]",
                "[T5].[C17]": "[student].[student_id]",
                "[C17]": "[student].[student_id]",
                "[T5].[C18]": "[student].[type]",
                "[C18]": "[student].[type]"
            },
            "question": "Among [C18], give the [C4] of the [T1] with the student [C12] value of [V1]. [C18] refers to type = 'RPG'; [C4] of the [T1] refers to [C4]; [C12] refers to [C12]; [C12] = [V1];; [V1] is a value of the column [C12]",
            "to_value": {
                "[V1]": "1"
            },
            "masked": 6,
            "masked_terms": [
                "1",
                "research postgraduate students",
                "course",
                "name",
                "satisfaction",
                "sat"
            ],
            "sql": "SELECT [T1].[C4] FROM [T1] JOIN [T4] ON [T1].[C1] = [T4].[C10] JOIN [T5] ON [T4].[C13] = [T5].[C17] WHERE [T5].[C18] = 'RPG' AND [T4].[C12] = [V1]",
            "repaired_sql": "SELECT [T1].[C4] FROM [T1] JOIN [T4] ON [T1].[C1] = [T4].[C10] JOIN [T5] ON [T4].[C13] = [T5].[C17] WHERE [T5].[C18] = 'RPG' AND [T4].[C12] = [V1]"
        },
        "values": [
            "1"
        ],
        "value_links": {
            "1": "[registration].[sat]"
        },
        "filtered_value_links": {
            "1": "[registration].[sat]"
        },
        "schema_links": {
            "research postgraduate students": "COLUMN:[student].[type]",
            "course": "TABLE:[course]",
            "name": "COLUMN:[course].[name]",
            "satisfaction": "COLUMN:[registration].[sat]",
            "sat": "COLUMN:[registration].[sat]"
        },
        "filtered_schema_links": {
            "research postgraduate students": "COLUMN:[student].[type]",
            "course": "TABLE:[course]",
            "name": "COLUMN:[course].[name]",
            "satisfaction": "COLUMN:[registration].[sat]",
            "sat": "COLUMN:[registration].[sat]"
        },
        "attack": "Among type = 'RPG', give the title of the game with the student id value of 12345."
    },
    {
        "db_id": "cs_semester",
        "question": "Among the students with a capability below 3, what is the difference of undergraduate students from research postgraduate students? capability < 3; difference = subtract(count(type = 'UG')), (count(type = 'RPG')); undergraduate students refers to type = 'UG'; research postgraduate students refers to type = 'RPG';",
        "evidence": "capability < 3; difference = subtract(count(type = 'UG')), (count(type = 'RPG')); undergraduate students refers to type = 'UG'; research postgraduate students refers to type = 'RPG';",
        "SQL": "SELECT SUM(CASE WHEN T2.type = 'UG' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.type = 'RPG' THEN 1 ELSE 0 END) FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.capability < 3",
        "query": "SELECT SUM(CASE WHEN T2.type = 'UG' THEN 1 ELSE 0 END) - SUM(CASE WHEN T2.type = 'RPG' THEN 1 ELSE 0 END) FROM RA AS T1 INNER JOIN student AS T2 ON T1.student_id = T2.student_id WHERE T1.capability < 3",
        "evidence_added": true,
        "question_toks": [
            "Among",
            "the",
            "students",
            "with",
            "a",
            "capability",
            "below",
            "3",
            ",",
            "what",
            "is",
            "the",
            "difference",
            "of",
            "undergraduate",
            "students",
            "from",
            "research",
            "postgraduate",
            "students",
            "?",
            "capability",
            "<",
            "3",
            ";",
            "difference",
            "=",
            "subtract(count(type",
            "=",
            "'UG'))",
            ",",
            "(count(type",
            "=",
            "'RPG'))",
            ";",
            "undergraduate",
            "students",
            "refers",
            "to",
            "type",
            "=",
            "'UG'",
            ";",
            "research",
            "postgraduate",
            "students",
            "refers",
            "to",
            "type",
            "=",
            "'RPG'",
            ";"
        ],
        "tc_original": [
            "ra.capability",
            "ra.student_id",
            "ra.salary",
            "ra.prof_id",
            "ra.*",
            "student.type",
            "student.student_id",
            "student.email",
            "student.intelligence",
            "student.f_name",
            "student.*",
            "course.name",
            "course.credit",
            "course.diff",
            "course.course_id",
            "course.*",
            "prof.gender",
            "prof.email",
            "prof.popularity",
            "prof.prof_id",
            "prof.first_name",
            "prof.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[ra]",
            "COLUMN:[ra].[capability]",
            "COLUMN:[ra].[student_id]",
            "COLUMN:[ra].[salary]",
            "COLUMN:[ra].[prof_id]",
            "COLUMN:[ra].[*]",
            "TABLE:[student]",
            "COLUMN:[student].[type]",
            "COLUMN:[student].[student_id]",
            "COLUMN:[student].[email]",
            "COLUMN:[student].[intelligence]",
            "COLUMN:[student].[f_name]",
            "COLUMN:[student].[*]",
            "TABLE:[course]",
            "COLUMN:[course].[name]",
            "COLUMN:[course].[credit]",
            "COLUMN:[course].[diff]",
            "COLUMN:[course].[course_id]",
            "COLUMN:[course].[*]",
            "TABLE:[prof]",
            "COLUMN:[prof].[gender]",
            "COLUMN:[prof].[email]",
            "COLUMN:[prof].[popularity]",
            "COLUMN:[prof].[prof_id]",
            "COLUMN:[prof].[first_name]",
            "COLUMN:[prof].[*]"
        ],
        "schema": "'[course]':\n  '[course_id]':\n    primary_key: true\n    type: integer\n  '[credit]': integer\n  '[diff]': integer\n  '[name]': text\n'[prof]':\n  '[email]': text\n  '[first_name]': text\n  '[gender]': text\n  '[popularity]': integer\n  '[prof_id]':\n    primary_key: true\n    type: integer\n'[ra]':\n  '[capability]': integer\n  '[prof_id]':\n    foreign_key: '[prof].[prof_id]'\n    primary_key: true\n    type: integer\n  '[salary]': text\n  '[student_id]':\n    foreign_key: '[student].[student_id]'\n    primary_key: true\n    type: integer\n'[student]':\n  '[email]': text\n  '[f_name]': text\n  '[intelligence]': integer\n  '[student_id]':\n    primary_key: true\n    type: integer\n  '[type]': text\n",
        "gold_links": {
            "students": "TABLE:[student]",
            "capability": "COLUMN:[ra].[capability]",
            "undergraduate students": "VALUE:[student].[type]",
            "research postgraduate students": "VALUE:[student].[type]",
            "type": "COLUMN:[student].[type]",
            "difference": "COLUMN:[student].[type]",
            "below 3": "VALUE:[ra].[capability]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[course]",
                "[C1]": "[course].[course_id]",
                "[C2]": "[course].[credit]",
                "[C3]": "[course].[diff]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[C5]": "[prof].[email]",
                "[C6]": "[prof].[first_name]",
                "[C7]": "[prof].[gender]",
                "[C8]": "[prof].[popularity]",
                "[C9]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[C10]": "[ra].[capability]",
                "[C11]": "[ra].[prof_id]",
                "[C12]": "[ra].[salary]",
                "[C13]": "[ra].[student_id]",
                "[T4]": "[student]",
                "[C14]": "[student].[email]",
                "[C15]": "[student].[f_name]",
                "[C16]": "[student].[intelligence]",
                "[C17]": "[student].[student_id]",
                "[C18]": "[student].[type]"
            },
            "to_symbol": {
                "[course]": "[T1]",
                "[course].[course_id]": "[C1]",
                "[course].[credit]": "[C2]",
                "[course].[diff]": "[C3]",
                "[course].[name]": "[C4]",
                "[prof]": "[T2]",
                "[prof].[email]": "[C5]",
                "[prof].[first_name]": "[C6]",
                "[prof].[gender]": "[C7]",
                "[prof].[popularity]": "[C8]",
                "[prof].[prof_id]": "[C9]",
                "[ra]": "[T3]",
                "[ra].[capability]": "[C10]",
                "[ra].[prof_id]": "[C11]",
                "[ra].[salary]": "[C12]",
                "[ra].[student_id]": "[C13]",
                "[student]": "[T4]",
                "[student].[email]": "[C14]",
                "[student].[f_name]": "[C15]",
                "[student].[intelligence]": "[C16]",
                "[student].[student_id]": "[C17]",
                "[student].[type]": "[C18]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    primary_key: true\n    type: integer\n  '[C2]': integer\n  '[C3]': integer\n  '[C4]': text\n'[T2]':\n  '[C5]': text\n  '[C6]': text\n  '[C7]': text\n  '[C8]': integer\n  '[C9]':\n    primary_key: true\n    type: integer\n'[T3]':\n  '[C10]': integer\n  '[C11]':\n    foreign_key: '[T2].[C9]'\n    primary_key: true\n    type: integer\n  '[C12]': text\n  '[C13]':\n    foreign_key: '[T4].[C17]'\n    primary_key: true\n    type: integer\n'[T4]':\n  '[C14]': text\n  '[C15]': text\n  '[C16]': integer\n  '[C17]':\n    primary_key: true\n    type: integer\n  '[C18]': text\n",
            "reverse_dict": {
                "[T1]": "[course]",
                "[T1].[C1]": "[course].[course_id]",
                "[C1]": "[course].[course_id]",
                "[T1].[C2]": "[course].[credit]",
                "[C2]": "[course].[credit]",
                "[T1].[C3]": "[course].[diff]",
                "[C3]": "[course].[diff]",
                "[T1].[C4]": "[course].[name]",
                "[C4]": "[course].[name]",
                "[T2]": "[prof]",
                "[T2].[C5]": "[prof].[email]",
                "[C5]": "[prof].[email]",
                "[T2].[C6]": "[prof].[first_name]",
                "[C6]": "[prof].[first_name]",
                "[T2].[C7]": "[prof].[gender]",
                "[C7]": "[prof].[gender]",
                "[T2].[C8]": "[prof].[popularity]",
                "[C8]": "[prof].[popularity]",
                "[T2].[C9]": "[prof].[prof_id]",
                "[C9]": "[prof].[prof_id]",
                "[T3]": "[ra]",
                "[T3].[C10]": "[ra].[capability]",
                "[C10]": "[ra].[capability]",
                "[T3].[C11]": "[ra].[prof_id]",
                "[C11]": "[ra].[prof_id]",
                "[T3].[C12]": "[ra].[salary]",
                "[C12]": "[ra].[salary]",
                "[T3].[C13]": "[ra].[student_id]",
                "[C13]": "[ra].[student_id]",
                "[T4]": "[student]",
                "[T4].[C14]": "[student].[email]",
                "[C14]": "[student].[email]",
                "[T4].[C15]": "[student].[f_name]",
                "[C15]": "[student].[f_name]",
                "[T4].[C16]": "[student].[intelligence]",
                "[C16]": "[student].[intelligence]",
                "[T4].[C17]": "[student].[student_id]",
                "[C17]": "[student].[student_id]",
                "[T4].[C18]": "[student].[type]",
                "[C18]": "[student].[type]"
            },
            "question": "Among the students with a [C10] below 3, what is the difference of undergraduate students from research postgraduate students? [C10] < 3; difference = [T4]([T4]([C18] = '[V1]')), ([T4]([C18] = '[V2]')); undergraduate students refers to [C18] = '[V1]'; research postgraduate students refers to [C18] = '[V2]';; [V1] is a value of the column [C18]; [V2] is a value of the column [C18]",
            "to_value": {
                "[V1]": "UG",
                "[V2]": "RPG"
            },
            "masked": 9,
            "masked_terms": [
                "UG",
                "RPG",
                "capability",
                "student",
                "type",
                "UG",
                "RPG",
                "subtract",
                "count"
            ],
            "sql": "SELECT     (SELECT COUNT(*) FROM [T3]         INNER JOIN [T4] ON [T3].[C13] = [T4].[C17]         WHERE [T3].[C10] < 3 AND [T4].[C18] = '[V1]')     -     (SELECT COUNT(*) FROM [T3]         INNER JOIN [T4] ON [T3].[C13] = [T4].[C17]         WHERE [T3].[C10] < 3 AND [T4].[C18] = '[V2]') AS [difference]",
            "repaired_sql": "SELECT (SELECT COUNT(*) FROM [T3] JOIN [T4] ON [T3].[C13] = [T4].[C17] WHERE [T3].[C10] < 3 AND [T4].[C18] = '[V1]') - (SELECT COUNT(*) FROM [T3] JOIN [T4] ON [T3].[C13] = [T4].[C17] WHERE [T3].[C10] < 3 AND [T4].[C18] = '[V2]')"
        },
        "values": [
            "UG",
            "RPG"
        ],
        "value_links": {
            "UG": "[student].[type]",
            "RPG": "[student].[type]"
        },
        "filtered_value_links": {
            "UG": "[student].[type]",
            "RPG": "[student].[type]"
        },
        "schema_links": {
            "capability": "COLUMN:[ra].[capability]",
            "student": "TABLE:[student]",
            "type": "COLUMN:[student].[type]",
            "UG": "COLUMN:[student].[type]",
            "RPG": "COLUMN:[student].[type]",
            "subtract": "TABLE:[student]",
            "count": "TABLE:[student]"
        },
        "filtered_schema_links": {
            "capability": "COLUMN:[ra].[capability]",
            "student": "TABLE:[student]",
            "type": "COLUMN:[student].[type]",
            "UG": "COLUMN:[student].[type]",
            "RPG": "COLUMN:[student].[type]",
            "subtract": "TABLE:[student]",
            "count": "TABLE:[student]"
        },
        "attack": "Among the students with a gpa below 3, what is the difference of undergraduate students from research postgraduate students? gpa < 3; difference = count(count(program = 'undergraduate')), (count(program = 'research postgraduate')) ; undergraduate students refers to program = 'undergraduate'; research postgraduate students refers to program = 'research postgraduate'; 'undergraduate' is a value of the column program; 'research postgraduate' is a value of the column program"
    },
    {
        "db_id": "computer_student",
        "question": "How many courses are there for basic or medium undergraduate courses? basic or medium undergraduate courses refers to courseLevel = 'Level_300'; courses refers to course.course_id",
        "evidence": "basic or medium undergraduate courses refers to courseLevel = 'Level_300'; courses refers to course.course_id",
        "SQL": "SELECT COUNT(course_id) FROM course WHERE courseLevel = 'Level_300'",
        "query": "SELECT COUNT(course_id) FROM course WHERE courseLevel = 'Level_300'",
        "evidence_added": true,
        "question_toks": [
            "How",
            "many",
            "courses",
            "are",
            "there",
            "for",
            "basic",
            "or",
            "medium",
            "undergraduate",
            "courses",
            "?",
            "basic",
            "or",
            "medium",
            "undergraduate",
            "courses",
            "refers",
            "to",
            "courseLevel",
            "=",
            "'Level_300'",
            ";",
            "courses",
            "refers",
            "to",
            "course.course_id"
        ],
        "tc_original": [
            "course.courselevel",
            "course.course_id",
            "course.*",
            "person.professor",
            "person.student",
            "person.p_id",
            "person.hasposition",
            "person.inphase",
            "person.*",
            "advisedby.p_id",
            "advisedby.p_id_dummy",
            "advisedby.*",
            "taughtby.course_id",
            "taughtby.p_id",
            "taughtby.*"
        ],
        "total_toks": 0,
        "schema_items": [
            "TABLE:[course]",
            "COLUMN:[course].[courselevel]",
            "COLUMN:[course].[course_id]",
            "COLUMN:[course].[*]",
            "TABLE:[person]",
            "COLUMN:[person].[professor]",
            "COLUMN:[person].[student]",
            "COLUMN:[person].[p_id]",
            "COLUMN:[person].[hasposition]",
            "COLUMN:[person].[inphase]",
            "COLUMN:[person].[*]",
            "TABLE:[advisedby]",
            "COLUMN:[advisedby].[p_id]",
            "COLUMN:[advisedby].[p_id_dummy]",
            "COLUMN:[advisedby].[*]",
            "TABLE:[taughtby]",
            "COLUMN:[taughtby].[course_id]",
            "COLUMN:[taughtby].[p_id]",
            "COLUMN:[taughtby].[*]"
        ],
        "schema": "'[advisedby]':\n  '[p_id]':\n    foreign_key: '[person].[p_id]'\n    primary_key: true\n    type: integer\n  '[p_id_dummy]':\n    foreign_key: '[person].[p_id]'\n    primary_key: true\n    type: integer\n'[course]':\n  '[course_id]':\n    primary_key: true\n    type: integer\n  '[courselevel]': text\n'[person]':\n  '[hasposition]': text\n  '[inphase]': text\n  '[p_id]':\n    primary_key: true\n    type: integer\n  '[professor]': integer\n  '[student]': integer\n'[taughtby]':\n  '[course_id]':\n    foreign_key: '[course].[course_id]'\n    primary_key: true\n    type: integer\n  '[p_id]':\n    foreign_key: '[person].[p_id]'\n    primary_key: true\n    type: integer\n",
        "gold_links": {
            "how many": "COLUMN:[course].[course_id]",
            "courses": "TABLE:[course]",
            "courselevel": "COLUMN:[course].[courselevel]",
            "Level_300": "VALUE:[course].[courselevel]"
        },
        "symbolic": {
            "to_name": {
                "[T1]": "[advisedby]",
                "[C1]": "[advisedby].[p_id]",
                "[C2]": "[advisedby].[p_id_dummy]",
                "[T2]": "[course]",
                "[C3]": "[course].[course_id]",
                "[C4]": "[course].[courselevel]",
                "[T3]": "[person]",
                "[C5]": "[person].[hasposition]",
                "[C6]": "[person].[inphase]",
                "[C7]": "[person].[p_id]",
                "[C8]": "[person].[professor]",
                "[C9]": "[person].[student]",
                "[T4]": "[taughtby]",
                "[C10]": "[taughtby].[course_id]",
                "[C11]": "[taughtby].[p_id]"
            },
            "to_symbol": {
                "[advisedby]": "[T1]",
                "[advisedby].[p_id]": "[C1]",
                "[advisedby].[p_id_dummy]": "[C2]",
                "[course]": "[T2]",
                "[course].[course_id]": "[C3]",
                "[course].[courselevel]": "[C4]",
                "[person]": "[T3]",
                "[person].[hasposition]": "[C5]",
                "[person].[inphase]": "[C6]",
                "[person].[p_id]": "[C7]",
                "[person].[professor]": "[C8]",
                "[person].[student]": "[C9]",
                "[taughtby]": "[T4]",
                "[taughtby].[course_id]": "[C10]",
                "[taughtby].[p_id]": "[C11]"
            },
            "schema": "'[T1]':\n  '[C1]':\n    foreign_key: '[T3].[C7]'\n    primary_key: true\n    type: integer\n  '[C2]':\n    foreign_key: '[T3].[C7]'\n    primary_key: true\n    type: integer\n'[T2]':\n  '[C3]':\n    primary_key: true\n    type: integer\n  '[C4]': text\n'[T3]':\n  '[C5]': text\n  '[C6]': text\n  '[C7]':\n    primary_key: true\n    type: integer\n  '[C8]': integer\n  '[C9]': integer\n'[T4]':\n  '[C10]':\n    foreign_key: '[T2].[C3]'\n    primary_key: true\n    type: integer\n  '[C11]':\n    foreign_key: '[T3].[C7]'\n    primary_key: true\n    type: integer\n",
            "reverse_dict": {
                "[T1]": "[advisedby]",
                "[T1].[C1]": "[advisedby].[p_id]",
                "[C1]": "[advisedby].[p_id]",
                "[T1].[C2]": "[advisedby].[p_id_dummy]",
                "[C2]": "[advisedby].[p_id_dummy]",
                "[T2]": "[course]",
                "[T2].[C3]": "[course].[course_id]",
                "[C3]": "[course].[course_id]",
                "[T2].[C4]": "[course].[courselevel]",
                "[C4]": "[course].[courselevel]",
                "[T3]": "[person]",
                "[T3].[C5]": "[person].[hasposition]",
                "[C5]": "[person].[hasposition]",
                "[T3].[C6]": "[person].[inphase]",
                "[C6]": "[person].[inphase]",
                "[T3].[C7]": "[person].[p_id]",
                "[C7]": "[person].[p_id]",
                "[T3].[C8]": "[person].[professor]",
                "[C8]": "[person].[professor]",
                "[T3].[C9]": "[person].[student]",
                "[C9]": "[person].[student]",
                "[T4]": "[taughtby]",
                "[T4].[C10]": "[taughtby].[course_id]",
                "[C10]": "[taughtby].[course_id]",
                "[T4].[C11]": "[taughtby].[p_id]",
                "[C11]": "[taughtby].[p_id]"
            },
            "question": "How many [T2] are there for [V1] or [V2] undergraduate [T2]? [V1] or [V2] undergraduate [T2] refers to [C4] = '[V3]'; [T2] refers to course.course_id; [V1] is a value of the column [C4]; [V2] is a value of the column [C4]; [V3] is a value of the column [C4]",
            "to_value": {
                "[V1]": "basic",
                "[V2]": "medium",
                "[V3]": "Level_300"
            },
            "masked": 6,
            "masked_terms": [
                "basic",
                "medium",
                "Level_300",
                "courses",
                "courseLevel",
                "Level_300"
            ],
            "sql": "SELECT COUNT([T2].[C3]) FROM [T2] WHERE [T2].[C4] = '[V1]' OR [T2].[C4] = '[V2]' OR [T2].[C4] = '[V3]'",
            "repaired_sql": "SELECT COUNT(*) FROM [T2] WHERE ([T2].[C4] = '[V1]' OR [T2].[C4] = '[V2]') AND [T2].[C4] = '[V3]';"
        },
        "values": [
            "basic",
            "medium",
            "Level_300"
        ],
        "value_links": {
            "basic": "[course].[courselevel]",
            "medium": "[course].[courselevel]",
            "Level_300": "[course].[courselevel]"
        },
        "filtered_value_links": {
            "basic": "[course].[courselevel]",
            "medium": "[course].[courselevel]",
            "Level_300": "[course].[courselevel]"
        },
        "schema_links": {
            "courses": "TABLE:[course]",
            "courseLevel": "COLUMN:[course].[courselevel]",
            "Level_300": "COLUMN:[course].[courselevel]"
        },
        "filtered_schema_links": {
            "courses": "TABLE:[course]",
            "courseLevel": "COLUMN:[course].[courselevel]",
            "Level_300": "COLUMN:[course].[courselevel]"
        },
        "attack": "How many courses are there for science or engineering undergraduate courses? Science or engineering undergraduate courses refers to department = 'undergraduate'; courses refers to course.course_id; science is a value of the column department; engineering is a value of the column department; undergraduate is a value of the column department."
    }
]