Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> select_statement
Rule 1     select_statement -> select_core
Rule 2     select_statement -> select_statement set_op select_core
Rule 3     select_statement -> with_clause select_statement
Rule 4     select_statement -> select_statement order_by
Rule 5     select_statement -> select_statement limit
Rule 6     select_core -> select_clause
Rule 7     select_core -> select_clause from_clause
Rule 8     select_core -> select_clause from_clause where_clause
Rule 9     select_core -> select_clause from_clause group_clause
Rule 10    select_core -> select_clause from_clause where_clause group_clause
Rule 11    select_clause -> SELECT result_column
Rule 12    select_clause -> SELECT DISTINCT result_column
Rule 13    select_clause -> select_clause COMMA result_column
Rule 14    column_list -> column
Rule 15    column_list -> column_list COMMA column
Rule 16    common_table_expression -> table_name LPAREN column_list RPAREN AS LPAREN select_statement RPAREN
Rule 17    common_table_expression -> table_name AS LPAREN select_statement RPAREN
Rule 18    with_clause -> WITH common_table_expression
Rule 19    with_clause -> WITH RECURSIVE common_table_expression
Rule 20    with_clause -> with_clause COMMA common_table_expression
Rule 21    result_column -> expr
Rule 22    result_column -> expr AS column_alias
Rule 23    result_column -> expr column_alias
Rule 24    order_by -> ORDER BY ordering_term
Rule 25    order_by -> order_by COMMA ordering_term
Rule 26    ordering_term -> expr
Rule 27    ordering_term -> expr sort_order
Rule 28    limit -> LIMIT expr
Rule 29    limit -> LIMIT expr COMMA expr
Rule 30    from_clause -> FROM table_or_subquery
Rule 31    from_clause -> from_clause COMMA table_or_subquery
Rule 32    from_clause -> FROM join_clause
Rule 33    table_or_subquery -> table_name
Rule 34    table_or_subquery -> table_name table_alias
Rule 35    table_or_subquery -> table_name DOT table_name
Rule 36    table_or_subquery -> table_name AS table_alias
Rule 37    table_or_subquery -> LPAREN select_statement RPAREN
Rule 38    table_or_subquery -> LPAREN join_clause RPAREN
Rule 39    table_or_subquery -> table_name DOT table_name table_alias
Rule 40    table_or_subquery -> LPAREN select_statement RPAREN table_alias
Rule 41    table_or_subquery -> LPAREN select_statement RPAREN AS table_alias
Rule 42    table_or_subquery -> table_name DOT table_name AS table_alias
Rule 43    table_or_subquery -> table_name DOT table_name DOT table_name
Rule 44    table_name -> ID
Rule 45    table_name -> STRING
Rule 46    table_alias -> ID
Rule 47    table_alias -> STRING
Rule 48    join_clause -> table_or_subquery join_op table_or_subquery join_constraint
Rule 49    join_clause -> table_or_subquery join_op table_or_subquery
Rule 50    join_clause -> join_clause join_op table_or_subquery join_constraint
Rule 51    join_clause -> join_clause join_op table_or_subquery
Rule 52    join_constraint -> ON expr
Rule 53    join_constraint -> USING expr
Rule 54    where_clause -> WHERE expr
Rule 55    group_clause -> GROUP BY expr
Rule 56    group_clause -> group_clause COMMA expr
Rule 57    group_clause -> group_clause HAVING expr
Rule 58    group_clause -> group_clause WITH ROLLUP
Rule 59    group_clause -> group_clause WITH ROLLUP HAVING expr
Rule 60    column -> column_name
Rule 61    column -> table_name DOT column_name
Rule 62    fun_expr -> fun_name LPAREN RPAREN
Rule 63    fun_expr -> EXISTS LPAREN select_statement RPAREN
Rule 64    fun_expr -> fun_name LPAREN expr RPAREN
Rule 65    fun_expr -> NOT EXISTS LPAREN select_statement RPAREN
Rule 66    fun_expr -> fun_name LPAREN DISTINCT expr RPAREN
Rule 67    fun_expr -> fun_name LPAREN expr COMMA expr RPAREN
Rule 68    fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN
Rule 69    bin_op_expr -> NOT expr
Rule 70    bin_op_expr -> expr AND expr
Rule 71    bin_op_expr -> expr OR expr
Rule 72    bin_op_expr -> expr MINUS expr
Rule 73    bin_op_expr -> expr ARITH_OP expr
Rule 74    bin_op_expr -> expr LIKE expr
Rule 75    bin_op_expr -> expr STAR expr
Rule 76    bin_op_expr -> expr REGEXP expr
Rule 77    bin_op_expr -> expr COMP_OP expr
Rule 78    bin_op_expr -> expr IS expr
Rule 79    bin_op_expr -> expr ORR expr
Rule 80    bin_op_expr -> expr NOT LIKE expr
Rule 81    bin_op_expr -> expr IS NOT expr
Rule 82    bin_op_expr -> expr IN LPAREN select_statement RPAREN
Rule 83    bin_op_expr -> expr IN LPAREN literal_list RPAREN
Rule 84    bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN
Rule 85    bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN
Rule 86    expr -> column
Rule 87    expr -> LPAREN select_statement RPAREN
Rule 88    expr -> LPAREN expr RPAREN
Rule 89    expr -> literal_value
Rule 90    expr -> bin_op_expr
Rule 91    expr -> fun_expr
Rule 92    expr -> between_expr
Rule 93    expr -> cast_expr
Rule 94    expr -> win_expr
Rule 95    expr -> case_expr
Rule 96    expr -> NULL
Rule 97    set_op -> UNION
Rule 98    set_op -> EXCEPT
Rule 99    set_op -> UNION ALL
Rule 100   set_op -> SET_MINUS
Rule 101   set_op -> INTERSECT
Rule 102   sort_order -> ASC
Rule 103   sort_order -> DESC
Rule 104   bin_op -> ARITH_OP
Rule 105   bin_op -> COMP_OP
Rule 106   bin_op -> AND
Rule 107   bin_op -> OR
Rule 108   bin_op -> LIKE
Rule 109   join_op -> JOIN
Rule 110   join_op -> INNER JOIN
Rule 111   join_op -> LEFT JOIN
Rule 112   join_op -> FULL JOIN
Rule 113   join_op -> LEFT OUTER JOIN
Rule 114   join_op -> RIGHT OUTER JOIN
Rule 115   join_op -> FULL OUTER JOIN
Rule 116   join_op -> RIGHT JOIN
Rule 117   join_op -> CROSS JOIN
Rule 118   type_name -> TYPE_NAME
Rule 119   type_name -> type_name LPAREN NUMBER RPAREN
Rule 120   cast_expr -> CAST LPAREN expr AS type_name RPAREN
Rule 121   between_expr -> expr BETWEEN expr bin_op expr
Rule 122   between_expr -> expr NOT BETWEEN expr bin_op expr
Rule 123   column_alias -> ID
Rule 124   column_alias -> STRING
Rule 125   column_alias -> END
Rule 126   column_alias -> RANK
Rule 127   column_alias -> TYPE_NAME
Rule 128   fun_name -> ID
Rule 129   fun_name -> LEFT
Rule 130   fun_name -> TYPE_NAME
Rule 131   literal_value -> NUMBER
Rule 132   literal_value -> STRING
Rule 133   literal_value -> MINUS NUMBER
Rule 134   literal_value -> DATE_LITERAL
Rule 135   literal_value -> NULL
Rule 136   column_name -> ID
Rule 137   column_name -> STRING
Rule 138   column_name -> STAR
Rule 139   column_name -> RANK
Rule 140   column_name -> END
Rule 141   column_name -> TYPE_NAME
Rule 142   win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
Rule 143   win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
Rule 144   win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
Rule 145   win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
Rule 146   win_def -> order_by
Rule 147   win_def -> PARTITION BY result_column
Rule 148   win_def -> win_def COMMA result_column
Rule 149   win_def -> win_def order_by
Rule 150   win_fun -> RANK
Rule 151   win_fun -> DENSE_RANK
Rule 152   win_fun -> ROW_NUMBER
Rule 153   case_expr -> CASE case_when_expr END
Rule 154   case_expr -> CASE expr case_when_expr END
Rule 155   case_when_expr -> WHEN expr THEN expr
Rule 156   case_when_expr -> WHEN expr THEN expr ELSE expr
Rule 157   case_when_expr -> WHEN expr THEN expr case_when_expr
Rule 158   literal_list -> literal_value
Rule 159   literal_list -> literal_list COMMA literal_value
Rule 160   literal_list -> literal_list OR literal_value

Terminals, with rules where they appear

ALL                  : 99
AND                  : 70 106
ARITH_OP             : 73 104
AS                   : 16 17 22 36 41 42 120
ASC                  : 102
BETWEEN              : 121 122
BY                   : 24 55 147
CASE                 : 153 154
CAST                 : 120
COMMA                : 13 15 20 25 29 31 56 67 68 68 145 148 159
COMP_OP              : 77 105
CROSS                : 117
DATE_LITERAL         : 134
DENSE_RANK           : 151
DESC                 : 103
DISTINCT             : 12 66 144
DOT                  : 35 39 42 43 43 61
ELSE                 : 156
END                  : 125 140 153 154
EXCEPT               : 98
EXISTS               : 63 65
FROM                 : 30 32
FULL                 : 112 115
GROUP                : 55
HAVING               : 57 59
ID                   : 44 46 123 128 136
IN                   : 82 83 84 85
INNER                : 110
INTERSECT            : 101
IS                   : 78 81
JOIN                 : 109 110 111 112 113 114 115 116 117
LEFT                 : 111 113 129
LIKE                 : 74 80 108
LIMIT                : 28 29
LPAREN               : 16 16 17 37 38 40 41 62 63 64 65 66 67 68 82 83 84 85 87 88 119 120 142 142 143 143 144 144 145 145
MINUS                : 72 133
NOT                  : 65 69 80 81 84 85 122
NULL                 : 96 135
NUMBER               : 119 131 133
ON                   : 52
OR                   : 71 107 160
ORDER                : 24
ORR                  : 79
OUTER                : 113 114 115
OVER                 : 142 143 144 145
PARTITION            : 147
RANK                 : 126 139 150
RECURSIVE            : 19
REGEXP               : 76
RIGHT                : 114 116
ROLLUP               : 58 59
ROW_NUMBER           : 152
RPAREN               : 16 16 17 37 38 40 41 62 63 64 65 66 67 68 82 83 84 85 87 88 119 120 142 142 143 143 144 144 145 145
SELECT               : 11 12
SET_MINUS            : 100
STAR                 : 75 138
STRING               : 45 47 124 132 137
THEN                 : 155 156 157
TYPE_NAME            : 118 127 130 141
UNION                : 97 99
USING                : 53
WHEN                 : 155 156 157
WHERE                : 54
WITH                 : 18 19 58 59
error                : 

Nonterminals, with rules where they appear

between_expr         : 92
bin_op               : 121 122
bin_op_expr          : 90
case_expr            : 95
case_when_expr       : 153 154 157
cast_expr            : 93
column               : 14 15 86
column_alias         : 22 23
column_list          : 15 16
column_name          : 60 61
common_table_expression : 18 19 20
expr                 : 21 22 23 26 27 28 29 29 52 53 54 55 56 57 59 64 66 67 67 68 68 68 69 70 70 71 71 72 72 73 73 74 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 83 84 85 88 120 121 121 121 122 122 122 143 144 145 145 154 155 155 156 156 156 157 157
from_clause          : 7 8 9 10 31
fun_expr             : 91
fun_name             : 62 64 66 67 68 143 144 145
group_clause         : 9 10 56 57 58 59
join_clause          : 32 38 50 51
join_constraint      : 48 50
join_op              : 48 49 50 51
limit                : 5
literal_list         : 83 84 159 160
literal_value        : 89 158 159 160
order_by             : 4 25 146 149
ordering_term        : 24 25
result_column        : 11 12 13 147 148
select_clause        : 6 7 8 9 10 13
select_core          : 1 2
select_statement     : 2 3 4 5 16 17 37 40 41 63 65 82 85 87 0
set_op               : 2
sort_order           : 27
table_alias          : 34 36 39 40 41 42
table_name           : 16 17 33 34 35 35 36 39 39 42 42 43 43 43 61
table_or_subquery    : 30 31 48 48 49 49 50 51
type_name            : 119 120
where_clause         : 8 10
win_def              : 142 143 144 145 148 149
win_expr             : 94
win_fun              : 142
with_clause          : 3 20

Parsing method: LALR

state 0

    (0) S' -> . select_statement
    (1) select_statement -> . select_core
    (2) select_statement -> . select_statement set_op select_core
    (3) select_statement -> . with_clause select_statement
    (4) select_statement -> . select_statement order_by
    (5) select_statement -> . select_statement limit
    (6) select_core -> . select_clause
    (7) select_core -> . select_clause from_clause
    (8) select_core -> . select_clause from_clause where_clause
    (9) select_core -> . select_clause from_clause group_clause
    (10) select_core -> . select_clause from_clause where_clause group_clause
    (18) with_clause -> . WITH common_table_expression
    (19) with_clause -> . WITH RECURSIVE common_table_expression
    (20) with_clause -> . with_clause COMMA common_table_expression
    (11) select_clause -> . SELECT result_column
    (12) select_clause -> . SELECT DISTINCT result_column
    (13) select_clause -> . select_clause COMMA result_column

    WITH            shift and go to state 5
    SELECT          shift and go to state 6

    select_statement               shift and go to state 1
    select_core                    shift and go to state 2
    with_clause                    shift and go to state 3
    select_clause                  shift and go to state 4

state 1

    (0) S' -> select_statement .
    (2) select_statement -> select_statement . set_op select_core
    (4) select_statement -> select_statement . order_by
    (5) select_statement -> select_statement . limit
    (97) set_op -> . UNION
    (98) set_op -> . EXCEPT
    (99) set_op -> . UNION ALL
    (100) set_op -> . SET_MINUS
    (101) set_op -> . INTERSECT
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term
    (28) limit -> . LIMIT expr
    (29) limit -> . LIMIT expr COMMA expr

    UNION           shift and go to state 10
    EXCEPT          shift and go to state 11
    SET_MINUS       shift and go to state 12
    INTERSECT       shift and go to state 13
    ORDER           shift and go to state 14
    LIMIT           shift and go to state 15

    set_op                         shift and go to state 7
    order_by                       shift and go to state 8
    limit                          shift and go to state 9

state 2

    (1) select_statement -> select_core .

    UNION           reduce using rule 1 (select_statement -> select_core .)
    EXCEPT          reduce using rule 1 (select_statement -> select_core .)
    SET_MINUS       reduce using rule 1 (select_statement -> select_core .)
    INTERSECT       reduce using rule 1 (select_statement -> select_core .)
    ORDER           reduce using rule 1 (select_statement -> select_core .)
    LIMIT           reduce using rule 1 (select_statement -> select_core .)
    $end            reduce using rule 1 (select_statement -> select_core .)
    RPAREN          reduce using rule 1 (select_statement -> select_core .)


state 3

    (3) select_statement -> with_clause . select_statement
    (20) with_clause -> with_clause . COMMA common_table_expression
    (1) select_statement -> . select_core
    (2) select_statement -> . select_statement set_op select_core
    (3) select_statement -> . with_clause select_statement
    (4) select_statement -> . select_statement order_by
    (5) select_statement -> . select_statement limit
    (6) select_core -> . select_clause
    (7) select_core -> . select_clause from_clause
    (8) select_core -> . select_clause from_clause where_clause
    (9) select_core -> . select_clause from_clause group_clause
    (10) select_core -> . select_clause from_clause where_clause group_clause
    (18) with_clause -> . WITH common_table_expression
    (19) with_clause -> . WITH RECURSIVE common_table_expression
    (20) with_clause -> . with_clause COMMA common_table_expression
    (11) select_clause -> . SELECT result_column
    (12) select_clause -> . SELECT DISTINCT result_column
    (13) select_clause -> . select_clause COMMA result_column

    COMMA           shift and go to state 17
    WITH            shift and go to state 5
    SELECT          shift and go to state 6

    with_clause                    shift and go to state 3
    select_statement               shift and go to state 16
    select_core                    shift and go to state 2
    select_clause                  shift and go to state 4

state 4

    (6) select_core -> select_clause .
    (7) select_core -> select_clause . from_clause
    (8) select_core -> select_clause . from_clause where_clause
    (9) select_core -> select_clause . from_clause group_clause
    (10) select_core -> select_clause . from_clause where_clause group_clause
    (13) select_clause -> select_clause . COMMA result_column
    (30) from_clause -> . FROM table_or_subquery
    (31) from_clause -> . from_clause COMMA table_or_subquery
    (32) from_clause -> . FROM join_clause

    UNION           reduce using rule 6 (select_core -> select_clause .)
    EXCEPT          reduce using rule 6 (select_core -> select_clause .)
    SET_MINUS       reduce using rule 6 (select_core -> select_clause .)
    INTERSECT       reduce using rule 6 (select_core -> select_clause .)
    ORDER           reduce using rule 6 (select_core -> select_clause .)
    LIMIT           reduce using rule 6 (select_core -> select_clause .)
    $end            reduce using rule 6 (select_core -> select_clause .)
    RPAREN          reduce using rule 6 (select_core -> select_clause .)
    COMMA           shift and go to state 19
    FROM            shift and go to state 20

    from_clause                    shift and go to state 18

state 5

    (18) with_clause -> WITH . common_table_expression
    (19) with_clause -> WITH . RECURSIVE common_table_expression
    (16) common_table_expression -> . table_name LPAREN column_list RPAREN AS LPAREN select_statement RPAREN
    (17) common_table_expression -> . table_name AS LPAREN select_statement RPAREN
    (44) table_name -> . ID
    (45) table_name -> . STRING

    RECURSIVE       shift and go to state 22
    ID              shift and go to state 24
    STRING          shift and go to state 25

    common_table_expression        shift and go to state 21
    table_name                     shift and go to state 23

state 6

    (11) select_clause -> SELECT . result_column
    (12) select_clause -> SELECT . DISTINCT result_column
    (21) result_column -> . expr
    (22) result_column -> . expr AS column_alias
    (23) result_column -> . expr column_alias
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    DISTINCT        shift and go to state 27
    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    result_column                  shift and go to state 26
    expr                           shift and go to state 28
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 7

    (2) select_statement -> select_statement set_op . select_core
    (6) select_core -> . select_clause
    (7) select_core -> . select_clause from_clause
    (8) select_core -> . select_clause from_clause where_clause
    (9) select_core -> . select_clause from_clause group_clause
    (10) select_core -> . select_clause from_clause where_clause group_clause
    (11) select_clause -> . SELECT result_column
    (12) select_clause -> . SELECT DISTINCT result_column
    (13) select_clause -> . select_clause COMMA result_column

    SELECT          shift and go to state 6

    select_core                    shift and go to state 59
    select_clause                  shift and go to state 4

state 8

    (4) select_statement -> select_statement order_by .
    (25) order_by -> order_by . COMMA ordering_term

    UNION           reduce using rule 4 (select_statement -> select_statement order_by .)
    EXCEPT          reduce using rule 4 (select_statement -> select_statement order_by .)
    SET_MINUS       reduce using rule 4 (select_statement -> select_statement order_by .)
    INTERSECT       reduce using rule 4 (select_statement -> select_statement order_by .)
    ORDER           reduce using rule 4 (select_statement -> select_statement order_by .)
    LIMIT           reduce using rule 4 (select_statement -> select_statement order_by .)
    $end            reduce using rule 4 (select_statement -> select_statement order_by .)
    RPAREN          reduce using rule 4 (select_statement -> select_statement order_by .)
    COMMA           shift and go to state 60


state 9

    (5) select_statement -> select_statement limit .

    UNION           reduce using rule 5 (select_statement -> select_statement limit .)
    EXCEPT          reduce using rule 5 (select_statement -> select_statement limit .)
    SET_MINUS       reduce using rule 5 (select_statement -> select_statement limit .)
    INTERSECT       reduce using rule 5 (select_statement -> select_statement limit .)
    ORDER           reduce using rule 5 (select_statement -> select_statement limit .)
    LIMIT           reduce using rule 5 (select_statement -> select_statement limit .)
    $end            reduce using rule 5 (select_statement -> select_statement limit .)
    RPAREN          reduce using rule 5 (select_statement -> select_statement limit .)


state 10

    (97) set_op -> UNION .
    (99) set_op -> UNION . ALL

    SELECT          reduce using rule 97 (set_op -> UNION .)
    ALL             shift and go to state 61


state 11

    (98) set_op -> EXCEPT .

    SELECT          reduce using rule 98 (set_op -> EXCEPT .)


state 12

    (100) set_op -> SET_MINUS .

    SELECT          reduce using rule 100 (set_op -> SET_MINUS .)


state 13

    (101) set_op -> INTERSECT .

    SELECT          reduce using rule 101 (set_op -> INTERSECT .)


state 14

    (24) order_by -> ORDER . BY ordering_term

    BY              shift and go to state 62


state 15

    (28) limit -> LIMIT . expr
    (29) limit -> LIMIT . expr COMMA expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 63
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 16

    (3) select_statement -> with_clause select_statement .
    (2) select_statement -> select_statement . set_op select_core
    (4) select_statement -> select_statement . order_by
    (5) select_statement -> select_statement . limit
    (97) set_op -> . UNION
    (98) set_op -> . EXCEPT
    (99) set_op -> . UNION ALL
    (100) set_op -> . SET_MINUS
    (101) set_op -> . INTERSECT
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term
    (28) limit -> . LIMIT expr
    (29) limit -> . LIMIT expr COMMA expr

  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for EXCEPT resolved as shift
  ! shift/reduce conflict for SET_MINUS resolved as shift
  ! shift/reduce conflict for INTERSECT resolved as shift
  ! shift/reduce conflict for ORDER resolved as shift
  ! shift/reduce conflict for LIMIT resolved as shift
    $end            reduce using rule 3 (select_statement -> with_clause select_statement .)
    RPAREN          reduce using rule 3 (select_statement -> with_clause select_statement .)
    UNION           shift and go to state 10
    EXCEPT          shift and go to state 11
    SET_MINUS       shift and go to state 12
    INTERSECT       shift and go to state 13
    ORDER           shift and go to state 14
    LIMIT           shift and go to state 15

  ! UNION           [ reduce using rule 3 (select_statement -> with_clause select_statement .) ]
  ! EXCEPT          [ reduce using rule 3 (select_statement -> with_clause select_statement .) ]
  ! SET_MINUS       [ reduce using rule 3 (select_statement -> with_clause select_statement .) ]
  ! INTERSECT       [ reduce using rule 3 (select_statement -> with_clause select_statement .) ]
  ! ORDER           [ reduce using rule 3 (select_statement -> with_clause select_statement .) ]
  ! LIMIT           [ reduce using rule 3 (select_statement -> with_clause select_statement .) ]

    set_op                         shift and go to state 7
    order_by                       shift and go to state 8
    limit                          shift and go to state 9

state 17

    (20) with_clause -> with_clause COMMA . common_table_expression
    (16) common_table_expression -> . table_name LPAREN column_list RPAREN AS LPAREN select_statement RPAREN
    (17) common_table_expression -> . table_name AS LPAREN select_statement RPAREN
    (44) table_name -> . ID
    (45) table_name -> . STRING

    ID              shift and go to state 24
    STRING          shift and go to state 25

    common_table_expression        shift and go to state 64
    table_name                     shift and go to state 23

state 18

    (7) select_core -> select_clause from_clause .
    (8) select_core -> select_clause from_clause . where_clause
    (9) select_core -> select_clause from_clause . group_clause
    (10) select_core -> select_clause from_clause . where_clause group_clause
    (31) from_clause -> from_clause . COMMA table_or_subquery
    (54) where_clause -> . WHERE expr
    (55) group_clause -> . GROUP BY expr
    (56) group_clause -> . group_clause COMMA expr
    (57) group_clause -> . group_clause HAVING expr
    (58) group_clause -> . group_clause WITH ROLLUP
    (59) group_clause -> . group_clause WITH ROLLUP HAVING expr

    UNION           reduce using rule 7 (select_core -> select_clause from_clause .)
    EXCEPT          reduce using rule 7 (select_core -> select_clause from_clause .)
    SET_MINUS       reduce using rule 7 (select_core -> select_clause from_clause .)
    INTERSECT       reduce using rule 7 (select_core -> select_clause from_clause .)
    ORDER           reduce using rule 7 (select_core -> select_clause from_clause .)
    LIMIT           reduce using rule 7 (select_core -> select_clause from_clause .)
    $end            reduce using rule 7 (select_core -> select_clause from_clause .)
    RPAREN          reduce using rule 7 (select_core -> select_clause from_clause .)
    COMMA           shift and go to state 67
    WHERE           shift and go to state 68
    GROUP           shift and go to state 69

    where_clause                   shift and go to state 65
    group_clause                   shift and go to state 66

state 19

    (13) select_clause -> select_clause COMMA . result_column
    (21) result_column -> . expr
    (22) result_column -> . expr AS column_alias
    (23) result_column -> . expr column_alias
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    result_column                  shift and go to state 70
    expr                           shift and go to state 28
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 20

    (30) from_clause -> FROM . table_or_subquery
    (32) from_clause -> FROM . join_clause
    (33) table_or_subquery -> . table_name
    (34) table_or_subquery -> . table_name table_alias
    (35) table_or_subquery -> . table_name DOT table_name
    (36) table_or_subquery -> . table_name AS table_alias
    (37) table_or_subquery -> . LPAREN select_statement RPAREN
    (38) table_or_subquery -> . LPAREN join_clause RPAREN
    (39) table_or_subquery -> . table_name DOT table_name table_alias
    (40) table_or_subquery -> . LPAREN select_statement RPAREN table_alias
    (41) table_or_subquery -> . LPAREN select_statement RPAREN AS table_alias
    (42) table_or_subquery -> . table_name DOT table_name AS table_alias
    (43) table_or_subquery -> . table_name DOT table_name DOT table_name
    (48) join_clause -> . table_or_subquery join_op table_or_subquery join_constraint
    (49) join_clause -> . table_or_subquery join_op table_or_subquery
    (50) join_clause -> . join_clause join_op table_or_subquery join_constraint
    (51) join_clause -> . join_clause join_op table_or_subquery
    (44) table_name -> . ID
    (45) table_name -> . STRING

    LPAREN          shift and go to state 74
    ID              shift and go to state 24
    STRING          shift and go to state 25

    table_or_subquery              shift and go to state 71
    join_clause                    shift and go to state 72
    table_name                     shift and go to state 73

state 21

    (18) with_clause -> WITH common_table_expression .

    COMMA           reduce using rule 18 (with_clause -> WITH common_table_expression .)
    WITH            reduce using rule 18 (with_clause -> WITH common_table_expression .)
    SELECT          reduce using rule 18 (with_clause -> WITH common_table_expression .)


state 22

    (19) with_clause -> WITH RECURSIVE . common_table_expression
    (16) common_table_expression -> . table_name LPAREN column_list RPAREN AS LPAREN select_statement RPAREN
    (17) common_table_expression -> . table_name AS LPAREN select_statement RPAREN
    (44) table_name -> . ID
    (45) table_name -> . STRING

    ID              shift and go to state 24
    STRING          shift and go to state 25

    common_table_expression        shift and go to state 75
    table_name                     shift and go to state 23

state 23

    (16) common_table_expression -> table_name . LPAREN column_list RPAREN AS LPAREN select_statement RPAREN
    (17) common_table_expression -> table_name . AS LPAREN select_statement RPAREN

    LPAREN          shift and go to state 76
    AS              shift and go to state 77


state 24

    (44) table_name -> ID .

    LPAREN          reduce using rule 44 (table_name -> ID .)
    AS              reduce using rule 44 (table_name -> ID .)
    DOT             reduce using rule 44 (table_name -> ID .)
    ID              reduce using rule 44 (table_name -> ID .)
    STRING          reduce using rule 44 (table_name -> ID .)
    JOIN            reduce using rule 44 (table_name -> ID .)
    INNER           reduce using rule 44 (table_name -> ID .)
    LEFT            reduce using rule 44 (table_name -> ID .)
    FULL            reduce using rule 44 (table_name -> ID .)
    RIGHT           reduce using rule 44 (table_name -> ID .)
    CROSS           reduce using rule 44 (table_name -> ID .)
    COMMA           reduce using rule 44 (table_name -> ID .)
    WHERE           reduce using rule 44 (table_name -> ID .)
    GROUP           reduce using rule 44 (table_name -> ID .)
    UNION           reduce using rule 44 (table_name -> ID .)
    EXCEPT          reduce using rule 44 (table_name -> ID .)
    SET_MINUS       reduce using rule 44 (table_name -> ID .)
    INTERSECT       reduce using rule 44 (table_name -> ID .)
    ORDER           reduce using rule 44 (table_name -> ID .)
    LIMIT           reduce using rule 44 (table_name -> ID .)
    $end            reduce using rule 44 (table_name -> ID .)
    RPAREN          reduce using rule 44 (table_name -> ID .)
    ON              reduce using rule 44 (table_name -> ID .)
    USING           reduce using rule 44 (table_name -> ID .)


state 25

    (45) table_name -> STRING .

    LPAREN          reduce using rule 45 (table_name -> STRING .)
    AS              reduce using rule 45 (table_name -> STRING .)
    DOT             reduce using rule 45 (table_name -> STRING .)
    ID              reduce using rule 45 (table_name -> STRING .)
    STRING          reduce using rule 45 (table_name -> STRING .)
    JOIN            reduce using rule 45 (table_name -> STRING .)
    INNER           reduce using rule 45 (table_name -> STRING .)
    LEFT            reduce using rule 45 (table_name -> STRING .)
    FULL            reduce using rule 45 (table_name -> STRING .)
    RIGHT           reduce using rule 45 (table_name -> STRING .)
    CROSS           reduce using rule 45 (table_name -> STRING .)
    COMMA           reduce using rule 45 (table_name -> STRING .)
    WHERE           reduce using rule 45 (table_name -> STRING .)
    GROUP           reduce using rule 45 (table_name -> STRING .)
    UNION           reduce using rule 45 (table_name -> STRING .)
    EXCEPT          reduce using rule 45 (table_name -> STRING .)
    SET_MINUS       reduce using rule 45 (table_name -> STRING .)
    INTERSECT       reduce using rule 45 (table_name -> STRING .)
    ORDER           reduce using rule 45 (table_name -> STRING .)
    LIMIT           reduce using rule 45 (table_name -> STRING .)
    $end            reduce using rule 45 (table_name -> STRING .)
    RPAREN          reduce using rule 45 (table_name -> STRING .)
    ON              reduce using rule 45 (table_name -> STRING .)
    USING           reduce using rule 45 (table_name -> STRING .)


state 26

    (11) select_clause -> SELECT result_column .

    COMMA           reduce using rule 11 (select_clause -> SELECT result_column .)
    FROM            reduce using rule 11 (select_clause -> SELECT result_column .)
    UNION           reduce using rule 11 (select_clause -> SELECT result_column .)
    EXCEPT          reduce using rule 11 (select_clause -> SELECT result_column .)
    SET_MINUS       reduce using rule 11 (select_clause -> SELECT result_column .)
    INTERSECT       reduce using rule 11 (select_clause -> SELECT result_column .)
    ORDER           reduce using rule 11 (select_clause -> SELECT result_column .)
    LIMIT           reduce using rule 11 (select_clause -> SELECT result_column .)
    $end            reduce using rule 11 (select_clause -> SELECT result_column .)
    RPAREN          reduce using rule 11 (select_clause -> SELECT result_column .)


state 27

    (12) select_clause -> SELECT DISTINCT . result_column
    (21) result_column -> . expr
    (22) result_column -> . expr AS column_alias
    (23) result_column -> . expr column_alias
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    result_column                  shift and go to state 78
    expr                           shift and go to state 28
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 28

    (21) result_column -> expr .
    (22) result_column -> expr . AS column_alias
    (23) result_column -> expr . column_alias
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr
    (123) column_alias -> . ID
    (124) column_alias -> . STRING
    (125) column_alias -> . END
    (126) column_alias -> . RANK
    (127) column_alias -> . TYPE_NAME

    COMMA           reduce using rule 21 (result_column -> expr .)
    FROM            reduce using rule 21 (result_column -> expr .)
    UNION           reduce using rule 21 (result_column -> expr .)
    EXCEPT          reduce using rule 21 (result_column -> expr .)
    SET_MINUS       reduce using rule 21 (result_column -> expr .)
    INTERSECT       reduce using rule 21 (result_column -> expr .)
    ORDER           reduce using rule 21 (result_column -> expr .)
    LIMIT           reduce using rule 21 (result_column -> expr .)
    $end            reduce using rule 21 (result_column -> expr .)
    RPAREN          reduce using rule 21 (result_column -> expr .)
    AS              shift and go to state 79
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93
    ID              shift and go to state 94
    STRING          shift and go to state 95
    END             shift and go to state 96
    RANK            shift and go to state 97
    TYPE_NAME       shift and go to state 98

    column_alias                   shift and go to state 80

state 29

    (86) expr -> column .

    AS              reduce using rule 86 (expr -> column .)
    AND             reduce using rule 86 (expr -> column .)
    OR              reduce using rule 86 (expr -> column .)
    MINUS           reduce using rule 86 (expr -> column .)
    ARITH_OP        reduce using rule 86 (expr -> column .)
    LIKE            reduce using rule 86 (expr -> column .)
    STAR            reduce using rule 86 (expr -> column .)
    REGEXP          reduce using rule 86 (expr -> column .)
    COMP_OP         reduce using rule 86 (expr -> column .)
    IS              reduce using rule 86 (expr -> column .)
    ORR             reduce using rule 86 (expr -> column .)
    NOT             reduce using rule 86 (expr -> column .)
    IN              reduce using rule 86 (expr -> column .)
    BETWEEN         reduce using rule 86 (expr -> column .)
    ID              reduce using rule 86 (expr -> column .)
    STRING          reduce using rule 86 (expr -> column .)
    END             reduce using rule 86 (expr -> column .)
    RANK            reduce using rule 86 (expr -> column .)
    TYPE_NAME       reduce using rule 86 (expr -> column .)
    COMMA           reduce using rule 86 (expr -> column .)
    FROM            reduce using rule 86 (expr -> column .)
    UNION           reduce using rule 86 (expr -> column .)
    EXCEPT          reduce using rule 86 (expr -> column .)
    SET_MINUS       reduce using rule 86 (expr -> column .)
    INTERSECT       reduce using rule 86 (expr -> column .)
    ORDER           reduce using rule 86 (expr -> column .)
    LIMIT           reduce using rule 86 (expr -> column .)
    $end            reduce using rule 86 (expr -> column .)
    RPAREN          reduce using rule 86 (expr -> column .)
    WHEN            reduce using rule 86 (expr -> column .)
    ASC             reduce using rule 86 (expr -> column .)
    DESC            reduce using rule 86 (expr -> column .)
    GROUP           reduce using rule 86 (expr -> column .)
    THEN            reduce using rule 86 (expr -> column .)
    HAVING          reduce using rule 86 (expr -> column .)
    WITH            reduce using rule 86 (expr -> column .)
    ELSE            reduce using rule 86 (expr -> column .)
    JOIN            reduce using rule 86 (expr -> column .)
    INNER           reduce using rule 86 (expr -> column .)
    LEFT            reduce using rule 86 (expr -> column .)
    FULL            reduce using rule 86 (expr -> column .)
    RIGHT           reduce using rule 86 (expr -> column .)
    CROSS           reduce using rule 86 (expr -> column .)
    WHERE           reduce using rule 86 (expr -> column .)


state 30

    (87) expr -> LPAREN . select_statement RPAREN
    (88) expr -> LPAREN . expr RPAREN
    (1) select_statement -> . select_core
    (2) select_statement -> . select_statement set_op select_core
    (3) select_statement -> . with_clause select_statement
    (4) select_statement -> . select_statement order_by
    (5) select_statement -> . select_statement limit
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (6) select_core -> . select_clause
    (7) select_core -> . select_clause from_clause
    (8) select_core -> . select_clause from_clause where_clause
    (9) select_core -> . select_clause from_clause group_clause
    (10) select_core -> . select_clause from_clause where_clause group_clause
    (18) with_clause -> . WITH common_table_expression
    (19) with_clause -> . WITH RECURSIVE common_table_expression
    (20) with_clause -> . with_clause COMMA common_table_expression
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (11) select_clause -> . SELECT result_column
    (12) select_clause -> . SELECT DISTINCT result_column
    (13) select_clause -> . select_clause COMMA result_column
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    WITH            shift and go to state 5
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    SELECT          shift and go to state 6
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    select_statement               shift and go to state 99
    expr                           shift and go to state 100
    select_core                    shift and go to state 2
    with_clause                    shift and go to state 3
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    select_clause                  shift and go to state 4
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 31

    (89) expr -> literal_value .

    AS              reduce using rule 89 (expr -> literal_value .)
    AND             reduce using rule 89 (expr -> literal_value .)
    OR              reduce using rule 89 (expr -> literal_value .)
    MINUS           reduce using rule 89 (expr -> literal_value .)
    ARITH_OP        reduce using rule 89 (expr -> literal_value .)
    LIKE            reduce using rule 89 (expr -> literal_value .)
    STAR            reduce using rule 89 (expr -> literal_value .)
    REGEXP          reduce using rule 89 (expr -> literal_value .)
    COMP_OP         reduce using rule 89 (expr -> literal_value .)
    IS              reduce using rule 89 (expr -> literal_value .)
    ORR             reduce using rule 89 (expr -> literal_value .)
    NOT             reduce using rule 89 (expr -> literal_value .)
    IN              reduce using rule 89 (expr -> literal_value .)
    BETWEEN         reduce using rule 89 (expr -> literal_value .)
    ID              reduce using rule 89 (expr -> literal_value .)
    STRING          reduce using rule 89 (expr -> literal_value .)
    END             reduce using rule 89 (expr -> literal_value .)
    RANK            reduce using rule 89 (expr -> literal_value .)
    TYPE_NAME       reduce using rule 89 (expr -> literal_value .)
    COMMA           reduce using rule 89 (expr -> literal_value .)
    FROM            reduce using rule 89 (expr -> literal_value .)
    UNION           reduce using rule 89 (expr -> literal_value .)
    EXCEPT          reduce using rule 89 (expr -> literal_value .)
    SET_MINUS       reduce using rule 89 (expr -> literal_value .)
    INTERSECT       reduce using rule 89 (expr -> literal_value .)
    ORDER           reduce using rule 89 (expr -> literal_value .)
    LIMIT           reduce using rule 89 (expr -> literal_value .)
    $end            reduce using rule 89 (expr -> literal_value .)
    RPAREN          reduce using rule 89 (expr -> literal_value .)
    WHEN            reduce using rule 89 (expr -> literal_value .)
    ASC             reduce using rule 89 (expr -> literal_value .)
    DESC            reduce using rule 89 (expr -> literal_value .)
    GROUP           reduce using rule 89 (expr -> literal_value .)
    THEN            reduce using rule 89 (expr -> literal_value .)
    HAVING          reduce using rule 89 (expr -> literal_value .)
    WITH            reduce using rule 89 (expr -> literal_value .)
    ELSE            reduce using rule 89 (expr -> literal_value .)
    JOIN            reduce using rule 89 (expr -> literal_value .)
    INNER           reduce using rule 89 (expr -> literal_value .)
    LEFT            reduce using rule 89 (expr -> literal_value .)
    FULL            reduce using rule 89 (expr -> literal_value .)
    RIGHT           reduce using rule 89 (expr -> literal_value .)
    CROSS           reduce using rule 89 (expr -> literal_value .)
    WHERE           reduce using rule 89 (expr -> literal_value .)


state 32

    (90) expr -> bin_op_expr .

    AS              reduce using rule 90 (expr -> bin_op_expr .)
    AND             reduce using rule 90 (expr -> bin_op_expr .)
    OR              reduce using rule 90 (expr -> bin_op_expr .)
    MINUS           reduce using rule 90 (expr -> bin_op_expr .)
    ARITH_OP        reduce using rule 90 (expr -> bin_op_expr .)
    LIKE            reduce using rule 90 (expr -> bin_op_expr .)
    STAR            reduce using rule 90 (expr -> bin_op_expr .)
    REGEXP          reduce using rule 90 (expr -> bin_op_expr .)
    COMP_OP         reduce using rule 90 (expr -> bin_op_expr .)
    IS              reduce using rule 90 (expr -> bin_op_expr .)
    ORR             reduce using rule 90 (expr -> bin_op_expr .)
    NOT             reduce using rule 90 (expr -> bin_op_expr .)
    IN              reduce using rule 90 (expr -> bin_op_expr .)
    BETWEEN         reduce using rule 90 (expr -> bin_op_expr .)
    ID              reduce using rule 90 (expr -> bin_op_expr .)
    STRING          reduce using rule 90 (expr -> bin_op_expr .)
    END             reduce using rule 90 (expr -> bin_op_expr .)
    RANK            reduce using rule 90 (expr -> bin_op_expr .)
    TYPE_NAME       reduce using rule 90 (expr -> bin_op_expr .)
    COMMA           reduce using rule 90 (expr -> bin_op_expr .)
    FROM            reduce using rule 90 (expr -> bin_op_expr .)
    UNION           reduce using rule 90 (expr -> bin_op_expr .)
    EXCEPT          reduce using rule 90 (expr -> bin_op_expr .)
    SET_MINUS       reduce using rule 90 (expr -> bin_op_expr .)
    INTERSECT       reduce using rule 90 (expr -> bin_op_expr .)
    ORDER           reduce using rule 90 (expr -> bin_op_expr .)
    LIMIT           reduce using rule 90 (expr -> bin_op_expr .)
    $end            reduce using rule 90 (expr -> bin_op_expr .)
    RPAREN          reduce using rule 90 (expr -> bin_op_expr .)
    WHEN            reduce using rule 90 (expr -> bin_op_expr .)
    ASC             reduce using rule 90 (expr -> bin_op_expr .)
    DESC            reduce using rule 90 (expr -> bin_op_expr .)
    GROUP           reduce using rule 90 (expr -> bin_op_expr .)
    THEN            reduce using rule 90 (expr -> bin_op_expr .)
    HAVING          reduce using rule 90 (expr -> bin_op_expr .)
    WITH            reduce using rule 90 (expr -> bin_op_expr .)
    ELSE            reduce using rule 90 (expr -> bin_op_expr .)
    JOIN            reduce using rule 90 (expr -> bin_op_expr .)
    INNER           reduce using rule 90 (expr -> bin_op_expr .)
    LEFT            reduce using rule 90 (expr -> bin_op_expr .)
    FULL            reduce using rule 90 (expr -> bin_op_expr .)
    RIGHT           reduce using rule 90 (expr -> bin_op_expr .)
    CROSS           reduce using rule 90 (expr -> bin_op_expr .)
    WHERE           reduce using rule 90 (expr -> bin_op_expr .)


state 33

    (91) expr -> fun_expr .

    AS              reduce using rule 91 (expr -> fun_expr .)
    AND             reduce using rule 91 (expr -> fun_expr .)
    OR              reduce using rule 91 (expr -> fun_expr .)
    MINUS           reduce using rule 91 (expr -> fun_expr .)
    ARITH_OP        reduce using rule 91 (expr -> fun_expr .)
    LIKE            reduce using rule 91 (expr -> fun_expr .)
    STAR            reduce using rule 91 (expr -> fun_expr .)
    REGEXP          reduce using rule 91 (expr -> fun_expr .)
    COMP_OP         reduce using rule 91 (expr -> fun_expr .)
    IS              reduce using rule 91 (expr -> fun_expr .)
    ORR             reduce using rule 91 (expr -> fun_expr .)
    NOT             reduce using rule 91 (expr -> fun_expr .)
    IN              reduce using rule 91 (expr -> fun_expr .)
    BETWEEN         reduce using rule 91 (expr -> fun_expr .)
    ID              reduce using rule 91 (expr -> fun_expr .)
    STRING          reduce using rule 91 (expr -> fun_expr .)
    END             reduce using rule 91 (expr -> fun_expr .)
    RANK            reduce using rule 91 (expr -> fun_expr .)
    TYPE_NAME       reduce using rule 91 (expr -> fun_expr .)
    COMMA           reduce using rule 91 (expr -> fun_expr .)
    FROM            reduce using rule 91 (expr -> fun_expr .)
    UNION           reduce using rule 91 (expr -> fun_expr .)
    EXCEPT          reduce using rule 91 (expr -> fun_expr .)
    SET_MINUS       reduce using rule 91 (expr -> fun_expr .)
    INTERSECT       reduce using rule 91 (expr -> fun_expr .)
    ORDER           reduce using rule 91 (expr -> fun_expr .)
    LIMIT           reduce using rule 91 (expr -> fun_expr .)
    $end            reduce using rule 91 (expr -> fun_expr .)
    RPAREN          reduce using rule 91 (expr -> fun_expr .)
    WHEN            reduce using rule 91 (expr -> fun_expr .)
    ASC             reduce using rule 91 (expr -> fun_expr .)
    DESC            reduce using rule 91 (expr -> fun_expr .)
    GROUP           reduce using rule 91 (expr -> fun_expr .)
    THEN            reduce using rule 91 (expr -> fun_expr .)
    HAVING          reduce using rule 91 (expr -> fun_expr .)
    WITH            reduce using rule 91 (expr -> fun_expr .)
    ELSE            reduce using rule 91 (expr -> fun_expr .)
    JOIN            reduce using rule 91 (expr -> fun_expr .)
    INNER           reduce using rule 91 (expr -> fun_expr .)
    LEFT            reduce using rule 91 (expr -> fun_expr .)
    FULL            reduce using rule 91 (expr -> fun_expr .)
    RIGHT           reduce using rule 91 (expr -> fun_expr .)
    CROSS           reduce using rule 91 (expr -> fun_expr .)
    WHERE           reduce using rule 91 (expr -> fun_expr .)


state 34

    (92) expr -> between_expr .

    AS              reduce using rule 92 (expr -> between_expr .)
    AND             reduce using rule 92 (expr -> between_expr .)
    OR              reduce using rule 92 (expr -> between_expr .)
    MINUS           reduce using rule 92 (expr -> between_expr .)
    ARITH_OP        reduce using rule 92 (expr -> between_expr .)
    LIKE            reduce using rule 92 (expr -> between_expr .)
    STAR            reduce using rule 92 (expr -> between_expr .)
    REGEXP          reduce using rule 92 (expr -> between_expr .)
    COMP_OP         reduce using rule 92 (expr -> between_expr .)
    IS              reduce using rule 92 (expr -> between_expr .)
    ORR             reduce using rule 92 (expr -> between_expr .)
    NOT             reduce using rule 92 (expr -> between_expr .)
    IN              reduce using rule 92 (expr -> between_expr .)
    BETWEEN         reduce using rule 92 (expr -> between_expr .)
    ID              reduce using rule 92 (expr -> between_expr .)
    STRING          reduce using rule 92 (expr -> between_expr .)
    END             reduce using rule 92 (expr -> between_expr .)
    RANK            reduce using rule 92 (expr -> between_expr .)
    TYPE_NAME       reduce using rule 92 (expr -> between_expr .)
    COMMA           reduce using rule 92 (expr -> between_expr .)
    FROM            reduce using rule 92 (expr -> between_expr .)
    UNION           reduce using rule 92 (expr -> between_expr .)
    EXCEPT          reduce using rule 92 (expr -> between_expr .)
    SET_MINUS       reduce using rule 92 (expr -> between_expr .)
    INTERSECT       reduce using rule 92 (expr -> between_expr .)
    ORDER           reduce using rule 92 (expr -> between_expr .)
    LIMIT           reduce using rule 92 (expr -> between_expr .)
    $end            reduce using rule 92 (expr -> between_expr .)
    RPAREN          reduce using rule 92 (expr -> between_expr .)
    WHEN            reduce using rule 92 (expr -> between_expr .)
    ASC             reduce using rule 92 (expr -> between_expr .)
    DESC            reduce using rule 92 (expr -> between_expr .)
    GROUP           reduce using rule 92 (expr -> between_expr .)
    THEN            reduce using rule 92 (expr -> between_expr .)
    HAVING          reduce using rule 92 (expr -> between_expr .)
    WITH            reduce using rule 92 (expr -> between_expr .)
    ELSE            reduce using rule 92 (expr -> between_expr .)
    JOIN            reduce using rule 92 (expr -> between_expr .)
    INNER           reduce using rule 92 (expr -> between_expr .)
    LEFT            reduce using rule 92 (expr -> between_expr .)
    FULL            reduce using rule 92 (expr -> between_expr .)
    RIGHT           reduce using rule 92 (expr -> between_expr .)
    CROSS           reduce using rule 92 (expr -> between_expr .)
    WHERE           reduce using rule 92 (expr -> between_expr .)


state 35

    (93) expr -> cast_expr .

    AS              reduce using rule 93 (expr -> cast_expr .)
    AND             reduce using rule 93 (expr -> cast_expr .)
    OR              reduce using rule 93 (expr -> cast_expr .)
    MINUS           reduce using rule 93 (expr -> cast_expr .)
    ARITH_OP        reduce using rule 93 (expr -> cast_expr .)
    LIKE            reduce using rule 93 (expr -> cast_expr .)
    STAR            reduce using rule 93 (expr -> cast_expr .)
    REGEXP          reduce using rule 93 (expr -> cast_expr .)
    COMP_OP         reduce using rule 93 (expr -> cast_expr .)
    IS              reduce using rule 93 (expr -> cast_expr .)
    ORR             reduce using rule 93 (expr -> cast_expr .)
    NOT             reduce using rule 93 (expr -> cast_expr .)
    IN              reduce using rule 93 (expr -> cast_expr .)
    BETWEEN         reduce using rule 93 (expr -> cast_expr .)
    ID              reduce using rule 93 (expr -> cast_expr .)
    STRING          reduce using rule 93 (expr -> cast_expr .)
    END             reduce using rule 93 (expr -> cast_expr .)
    RANK            reduce using rule 93 (expr -> cast_expr .)
    TYPE_NAME       reduce using rule 93 (expr -> cast_expr .)
    COMMA           reduce using rule 93 (expr -> cast_expr .)
    FROM            reduce using rule 93 (expr -> cast_expr .)
    UNION           reduce using rule 93 (expr -> cast_expr .)
    EXCEPT          reduce using rule 93 (expr -> cast_expr .)
    SET_MINUS       reduce using rule 93 (expr -> cast_expr .)
    INTERSECT       reduce using rule 93 (expr -> cast_expr .)
    ORDER           reduce using rule 93 (expr -> cast_expr .)
    LIMIT           reduce using rule 93 (expr -> cast_expr .)
    $end            reduce using rule 93 (expr -> cast_expr .)
    RPAREN          reduce using rule 93 (expr -> cast_expr .)
    WHEN            reduce using rule 93 (expr -> cast_expr .)
    ASC             reduce using rule 93 (expr -> cast_expr .)
    DESC            reduce using rule 93 (expr -> cast_expr .)
    GROUP           reduce using rule 93 (expr -> cast_expr .)
    THEN            reduce using rule 93 (expr -> cast_expr .)
    HAVING          reduce using rule 93 (expr -> cast_expr .)
    WITH            reduce using rule 93 (expr -> cast_expr .)
    ELSE            reduce using rule 93 (expr -> cast_expr .)
    JOIN            reduce using rule 93 (expr -> cast_expr .)
    INNER           reduce using rule 93 (expr -> cast_expr .)
    LEFT            reduce using rule 93 (expr -> cast_expr .)
    FULL            reduce using rule 93 (expr -> cast_expr .)
    RIGHT           reduce using rule 93 (expr -> cast_expr .)
    CROSS           reduce using rule 93 (expr -> cast_expr .)
    WHERE           reduce using rule 93 (expr -> cast_expr .)


state 36

    (94) expr -> win_expr .

    AS              reduce using rule 94 (expr -> win_expr .)
    AND             reduce using rule 94 (expr -> win_expr .)
    OR              reduce using rule 94 (expr -> win_expr .)
    MINUS           reduce using rule 94 (expr -> win_expr .)
    ARITH_OP        reduce using rule 94 (expr -> win_expr .)
    LIKE            reduce using rule 94 (expr -> win_expr .)
    STAR            reduce using rule 94 (expr -> win_expr .)
    REGEXP          reduce using rule 94 (expr -> win_expr .)
    COMP_OP         reduce using rule 94 (expr -> win_expr .)
    IS              reduce using rule 94 (expr -> win_expr .)
    ORR             reduce using rule 94 (expr -> win_expr .)
    NOT             reduce using rule 94 (expr -> win_expr .)
    IN              reduce using rule 94 (expr -> win_expr .)
    BETWEEN         reduce using rule 94 (expr -> win_expr .)
    ID              reduce using rule 94 (expr -> win_expr .)
    STRING          reduce using rule 94 (expr -> win_expr .)
    END             reduce using rule 94 (expr -> win_expr .)
    RANK            reduce using rule 94 (expr -> win_expr .)
    TYPE_NAME       reduce using rule 94 (expr -> win_expr .)
    COMMA           reduce using rule 94 (expr -> win_expr .)
    FROM            reduce using rule 94 (expr -> win_expr .)
    UNION           reduce using rule 94 (expr -> win_expr .)
    EXCEPT          reduce using rule 94 (expr -> win_expr .)
    SET_MINUS       reduce using rule 94 (expr -> win_expr .)
    INTERSECT       reduce using rule 94 (expr -> win_expr .)
    ORDER           reduce using rule 94 (expr -> win_expr .)
    LIMIT           reduce using rule 94 (expr -> win_expr .)
    $end            reduce using rule 94 (expr -> win_expr .)
    RPAREN          reduce using rule 94 (expr -> win_expr .)
    WHEN            reduce using rule 94 (expr -> win_expr .)
    ASC             reduce using rule 94 (expr -> win_expr .)
    DESC            reduce using rule 94 (expr -> win_expr .)
    GROUP           reduce using rule 94 (expr -> win_expr .)
    THEN            reduce using rule 94 (expr -> win_expr .)
    HAVING          reduce using rule 94 (expr -> win_expr .)
    WITH            reduce using rule 94 (expr -> win_expr .)
    ELSE            reduce using rule 94 (expr -> win_expr .)
    JOIN            reduce using rule 94 (expr -> win_expr .)
    INNER           reduce using rule 94 (expr -> win_expr .)
    LEFT            reduce using rule 94 (expr -> win_expr .)
    FULL            reduce using rule 94 (expr -> win_expr .)
    RIGHT           reduce using rule 94 (expr -> win_expr .)
    CROSS           reduce using rule 94 (expr -> win_expr .)
    WHERE           reduce using rule 94 (expr -> win_expr .)


state 37

    (95) expr -> case_expr .

    AS              reduce using rule 95 (expr -> case_expr .)
    AND             reduce using rule 95 (expr -> case_expr .)
    OR              reduce using rule 95 (expr -> case_expr .)
    MINUS           reduce using rule 95 (expr -> case_expr .)
    ARITH_OP        reduce using rule 95 (expr -> case_expr .)
    LIKE            reduce using rule 95 (expr -> case_expr .)
    STAR            reduce using rule 95 (expr -> case_expr .)
    REGEXP          reduce using rule 95 (expr -> case_expr .)
    COMP_OP         reduce using rule 95 (expr -> case_expr .)
    IS              reduce using rule 95 (expr -> case_expr .)
    ORR             reduce using rule 95 (expr -> case_expr .)
    NOT             reduce using rule 95 (expr -> case_expr .)
    IN              reduce using rule 95 (expr -> case_expr .)
    BETWEEN         reduce using rule 95 (expr -> case_expr .)
    ID              reduce using rule 95 (expr -> case_expr .)
    STRING          reduce using rule 95 (expr -> case_expr .)
    END             reduce using rule 95 (expr -> case_expr .)
    RANK            reduce using rule 95 (expr -> case_expr .)
    TYPE_NAME       reduce using rule 95 (expr -> case_expr .)
    COMMA           reduce using rule 95 (expr -> case_expr .)
    FROM            reduce using rule 95 (expr -> case_expr .)
    UNION           reduce using rule 95 (expr -> case_expr .)
    EXCEPT          reduce using rule 95 (expr -> case_expr .)
    SET_MINUS       reduce using rule 95 (expr -> case_expr .)
    INTERSECT       reduce using rule 95 (expr -> case_expr .)
    ORDER           reduce using rule 95 (expr -> case_expr .)
    LIMIT           reduce using rule 95 (expr -> case_expr .)
    $end            reduce using rule 95 (expr -> case_expr .)
    RPAREN          reduce using rule 95 (expr -> case_expr .)
    WHEN            reduce using rule 95 (expr -> case_expr .)
    ASC             reduce using rule 95 (expr -> case_expr .)
    DESC            reduce using rule 95 (expr -> case_expr .)
    GROUP           reduce using rule 95 (expr -> case_expr .)
    THEN            reduce using rule 95 (expr -> case_expr .)
    HAVING          reduce using rule 95 (expr -> case_expr .)
    WITH            reduce using rule 95 (expr -> case_expr .)
    ELSE            reduce using rule 95 (expr -> case_expr .)
    JOIN            reduce using rule 95 (expr -> case_expr .)
    INNER           reduce using rule 95 (expr -> case_expr .)
    LEFT            reduce using rule 95 (expr -> case_expr .)
    FULL            reduce using rule 95 (expr -> case_expr .)
    RIGHT           reduce using rule 95 (expr -> case_expr .)
    CROSS           reduce using rule 95 (expr -> case_expr .)
    WHERE           reduce using rule 95 (expr -> case_expr .)


state 38

    (96) expr -> NULL .
    (135) literal_value -> NULL .

  ! reduce/reduce conflict for AS resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for AND resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for OR resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for MINUS resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for ARITH_OP resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for LIKE resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for STAR resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for REGEXP resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for COMP_OP resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for IS resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for ORR resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for NOT resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for IN resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for BETWEEN resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for ID resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for STRING resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for END resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for RANK resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for TYPE_NAME resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for COMMA resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for FROM resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for UNION resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for EXCEPT resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for SET_MINUS resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for INTERSECT resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for ORDER resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for LIMIT resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for $end resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for RPAREN resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for WHEN resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for ASC resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for DESC resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for GROUP resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for THEN resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for HAVING resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for WITH resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for ELSE resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for JOIN resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for INNER resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for LEFT resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for FULL resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for RIGHT resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for CROSS resolved using rule 96 (expr -> NULL .)
  ! reduce/reduce conflict for WHERE resolved using rule 96 (expr -> NULL .)
    AS              reduce using rule 96 (expr -> NULL .)
    AND             reduce using rule 96 (expr -> NULL .)
    OR              reduce using rule 96 (expr -> NULL .)
    MINUS           reduce using rule 96 (expr -> NULL .)
    ARITH_OP        reduce using rule 96 (expr -> NULL .)
    LIKE            reduce using rule 96 (expr -> NULL .)
    STAR            reduce using rule 96 (expr -> NULL .)
    REGEXP          reduce using rule 96 (expr -> NULL .)
    COMP_OP         reduce using rule 96 (expr -> NULL .)
    IS              reduce using rule 96 (expr -> NULL .)
    ORR             reduce using rule 96 (expr -> NULL .)
    NOT             reduce using rule 96 (expr -> NULL .)
    IN              reduce using rule 96 (expr -> NULL .)
    BETWEEN         reduce using rule 96 (expr -> NULL .)
    ID              reduce using rule 96 (expr -> NULL .)
    STRING          reduce using rule 96 (expr -> NULL .)
    END             reduce using rule 96 (expr -> NULL .)
    RANK            reduce using rule 96 (expr -> NULL .)
    TYPE_NAME       reduce using rule 96 (expr -> NULL .)
    COMMA           reduce using rule 96 (expr -> NULL .)
    FROM            reduce using rule 96 (expr -> NULL .)
    UNION           reduce using rule 96 (expr -> NULL .)
    EXCEPT          reduce using rule 96 (expr -> NULL .)
    SET_MINUS       reduce using rule 96 (expr -> NULL .)
    INTERSECT       reduce using rule 96 (expr -> NULL .)
    ORDER           reduce using rule 96 (expr -> NULL .)
    LIMIT           reduce using rule 96 (expr -> NULL .)
    $end            reduce using rule 96 (expr -> NULL .)
    RPAREN          reduce using rule 96 (expr -> NULL .)
    WHEN            reduce using rule 96 (expr -> NULL .)
    ASC             reduce using rule 96 (expr -> NULL .)
    DESC            reduce using rule 96 (expr -> NULL .)
    GROUP           reduce using rule 96 (expr -> NULL .)
    THEN            reduce using rule 96 (expr -> NULL .)
    HAVING          reduce using rule 96 (expr -> NULL .)
    WITH            reduce using rule 96 (expr -> NULL .)
    ELSE            reduce using rule 96 (expr -> NULL .)
    JOIN            reduce using rule 96 (expr -> NULL .)
    INNER           reduce using rule 96 (expr -> NULL .)
    LEFT            reduce using rule 96 (expr -> NULL .)
    FULL            reduce using rule 96 (expr -> NULL .)
    RIGHT           reduce using rule 96 (expr -> NULL .)
    CROSS           reduce using rule 96 (expr -> NULL .)
    WHERE           reduce using rule 96 (expr -> NULL .)

  ! AS              [ reduce using rule 135 (literal_value -> NULL .) ]
  ! AND             [ reduce using rule 135 (literal_value -> NULL .) ]
  ! OR              [ reduce using rule 135 (literal_value -> NULL .) ]
  ! MINUS           [ reduce using rule 135 (literal_value -> NULL .) ]
  ! ARITH_OP        [ reduce using rule 135 (literal_value -> NULL .) ]
  ! LIKE            [ reduce using rule 135 (literal_value -> NULL .) ]
  ! STAR            [ reduce using rule 135 (literal_value -> NULL .) ]
  ! REGEXP          [ reduce using rule 135 (literal_value -> NULL .) ]
  ! COMP_OP         [ reduce using rule 135 (literal_value -> NULL .) ]
  ! IS              [ reduce using rule 135 (literal_value -> NULL .) ]
  ! ORR             [ reduce using rule 135 (literal_value -> NULL .) ]
  ! NOT             [ reduce using rule 135 (literal_value -> NULL .) ]
  ! IN              [ reduce using rule 135 (literal_value -> NULL .) ]
  ! BETWEEN         [ reduce using rule 135 (literal_value -> NULL .) ]
  ! ID              [ reduce using rule 135 (literal_value -> NULL .) ]
  ! STRING          [ reduce using rule 135 (literal_value -> NULL .) ]
  ! END             [ reduce using rule 135 (literal_value -> NULL .) ]
  ! RANK            [ reduce using rule 135 (literal_value -> NULL .) ]
  ! TYPE_NAME       [ reduce using rule 135 (literal_value -> NULL .) ]
  ! COMMA           [ reduce using rule 135 (literal_value -> NULL .) ]
  ! FROM            [ reduce using rule 135 (literal_value -> NULL .) ]
  ! UNION           [ reduce using rule 135 (literal_value -> NULL .) ]
  ! EXCEPT          [ reduce using rule 135 (literal_value -> NULL .) ]
  ! SET_MINUS       [ reduce using rule 135 (literal_value -> NULL .) ]
  ! INTERSECT       [ reduce using rule 135 (literal_value -> NULL .) ]
  ! ORDER           [ reduce using rule 135 (literal_value -> NULL .) ]
  ! LIMIT           [ reduce using rule 135 (literal_value -> NULL .) ]
  ! $end            [ reduce using rule 135 (literal_value -> NULL .) ]
  ! RPAREN          [ reduce using rule 135 (literal_value -> NULL .) ]
  ! WHEN            [ reduce using rule 135 (literal_value -> NULL .) ]
  ! ASC             [ reduce using rule 135 (literal_value -> NULL .) ]
  ! DESC            [ reduce using rule 135 (literal_value -> NULL .) ]
  ! GROUP           [ reduce using rule 135 (literal_value -> NULL .) ]
  ! THEN            [ reduce using rule 135 (literal_value -> NULL .) ]
  ! HAVING          [ reduce using rule 135 (literal_value -> NULL .) ]
  ! WITH            [ reduce using rule 135 (literal_value -> NULL .) ]
  ! ELSE            [ reduce using rule 135 (literal_value -> NULL .) ]
  ! JOIN            [ reduce using rule 135 (literal_value -> NULL .) ]
  ! INNER           [ reduce using rule 135 (literal_value -> NULL .) ]
  ! LEFT            [ reduce using rule 135 (literal_value -> NULL .) ]
  ! FULL            [ reduce using rule 135 (literal_value -> NULL .) ]
  ! RIGHT           [ reduce using rule 135 (literal_value -> NULL .) ]
  ! CROSS           [ reduce using rule 135 (literal_value -> NULL .) ]
  ! WHERE           [ reduce using rule 135 (literal_value -> NULL .) ]


state 39

    (60) column -> column_name .

    AS              reduce using rule 60 (column -> column_name .)
    AND             reduce using rule 60 (column -> column_name .)
    OR              reduce using rule 60 (column -> column_name .)
    MINUS           reduce using rule 60 (column -> column_name .)
    ARITH_OP        reduce using rule 60 (column -> column_name .)
    LIKE            reduce using rule 60 (column -> column_name .)
    STAR            reduce using rule 60 (column -> column_name .)
    REGEXP          reduce using rule 60 (column -> column_name .)
    COMP_OP         reduce using rule 60 (column -> column_name .)
    IS              reduce using rule 60 (column -> column_name .)
    ORR             reduce using rule 60 (column -> column_name .)
    NOT             reduce using rule 60 (column -> column_name .)
    IN              reduce using rule 60 (column -> column_name .)
    BETWEEN         reduce using rule 60 (column -> column_name .)
    ID              reduce using rule 60 (column -> column_name .)
    STRING          reduce using rule 60 (column -> column_name .)
    END             reduce using rule 60 (column -> column_name .)
    RANK            reduce using rule 60 (column -> column_name .)
    TYPE_NAME       reduce using rule 60 (column -> column_name .)
    COMMA           reduce using rule 60 (column -> column_name .)
    FROM            reduce using rule 60 (column -> column_name .)
    UNION           reduce using rule 60 (column -> column_name .)
    EXCEPT          reduce using rule 60 (column -> column_name .)
    SET_MINUS       reduce using rule 60 (column -> column_name .)
    INTERSECT       reduce using rule 60 (column -> column_name .)
    ORDER           reduce using rule 60 (column -> column_name .)
    LIMIT           reduce using rule 60 (column -> column_name .)
    $end            reduce using rule 60 (column -> column_name .)
    RPAREN          reduce using rule 60 (column -> column_name .)
    WHEN            reduce using rule 60 (column -> column_name .)
    ASC             reduce using rule 60 (column -> column_name .)
    DESC            reduce using rule 60 (column -> column_name .)
    GROUP           reduce using rule 60 (column -> column_name .)
    THEN            reduce using rule 60 (column -> column_name .)
    HAVING          reduce using rule 60 (column -> column_name .)
    WITH            reduce using rule 60 (column -> column_name .)
    ELSE            reduce using rule 60 (column -> column_name .)
    JOIN            reduce using rule 60 (column -> column_name .)
    INNER           reduce using rule 60 (column -> column_name .)
    LEFT            reduce using rule 60 (column -> column_name .)
    FULL            reduce using rule 60 (column -> column_name .)
    RIGHT           reduce using rule 60 (column -> column_name .)
    CROSS           reduce using rule 60 (column -> column_name .)
    WHERE           reduce using rule 60 (column -> column_name .)


state 40

    (61) column -> table_name . DOT column_name

    DOT             shift and go to state 101


state 41

    (131) literal_value -> NUMBER .

    AS              reduce using rule 131 (literal_value -> NUMBER .)
    AND             reduce using rule 131 (literal_value -> NUMBER .)
    OR              reduce using rule 131 (literal_value -> NUMBER .)
    MINUS           reduce using rule 131 (literal_value -> NUMBER .)
    ARITH_OP        reduce using rule 131 (literal_value -> NUMBER .)
    LIKE            reduce using rule 131 (literal_value -> NUMBER .)
    STAR            reduce using rule 131 (literal_value -> NUMBER .)
    REGEXP          reduce using rule 131 (literal_value -> NUMBER .)
    COMP_OP         reduce using rule 131 (literal_value -> NUMBER .)
    IS              reduce using rule 131 (literal_value -> NUMBER .)
    ORR             reduce using rule 131 (literal_value -> NUMBER .)
    NOT             reduce using rule 131 (literal_value -> NUMBER .)
    IN              reduce using rule 131 (literal_value -> NUMBER .)
    BETWEEN         reduce using rule 131 (literal_value -> NUMBER .)
    ID              reduce using rule 131 (literal_value -> NUMBER .)
    STRING          reduce using rule 131 (literal_value -> NUMBER .)
    END             reduce using rule 131 (literal_value -> NUMBER .)
    RANK            reduce using rule 131 (literal_value -> NUMBER .)
    TYPE_NAME       reduce using rule 131 (literal_value -> NUMBER .)
    COMMA           reduce using rule 131 (literal_value -> NUMBER .)
    FROM            reduce using rule 131 (literal_value -> NUMBER .)
    UNION           reduce using rule 131 (literal_value -> NUMBER .)
    EXCEPT          reduce using rule 131 (literal_value -> NUMBER .)
    SET_MINUS       reduce using rule 131 (literal_value -> NUMBER .)
    INTERSECT       reduce using rule 131 (literal_value -> NUMBER .)
    ORDER           reduce using rule 131 (literal_value -> NUMBER .)
    LIMIT           reduce using rule 131 (literal_value -> NUMBER .)
    $end            reduce using rule 131 (literal_value -> NUMBER .)
    RPAREN          reduce using rule 131 (literal_value -> NUMBER .)
    WHEN            reduce using rule 131 (literal_value -> NUMBER .)
    ASC             reduce using rule 131 (literal_value -> NUMBER .)
    DESC            reduce using rule 131 (literal_value -> NUMBER .)
    GROUP           reduce using rule 131 (literal_value -> NUMBER .)
    THEN            reduce using rule 131 (literal_value -> NUMBER .)
    HAVING          reduce using rule 131 (literal_value -> NUMBER .)
    WITH            reduce using rule 131 (literal_value -> NUMBER .)
    ELSE            reduce using rule 131 (literal_value -> NUMBER .)
    JOIN            reduce using rule 131 (literal_value -> NUMBER .)
    INNER           reduce using rule 131 (literal_value -> NUMBER .)
    LEFT            reduce using rule 131 (literal_value -> NUMBER .)
    FULL            reduce using rule 131 (literal_value -> NUMBER .)
    RIGHT           reduce using rule 131 (literal_value -> NUMBER .)
    CROSS           reduce using rule 131 (literal_value -> NUMBER .)
    WHERE           reduce using rule 131 (literal_value -> NUMBER .)


state 42

    (132) literal_value -> STRING .
    (137) column_name -> STRING .
    (45) table_name -> STRING .

  ! reduce/reduce conflict for AS resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for AND resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for OR resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for MINUS resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for ARITH_OP resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for LIKE resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for STAR resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for REGEXP resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for COMP_OP resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for IS resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for ORR resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for NOT resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for IN resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for BETWEEN resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for ID resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for STRING resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for END resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for RANK resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for TYPE_NAME resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for COMMA resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for FROM resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for UNION resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for EXCEPT resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for SET_MINUS resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for INTERSECT resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for ORDER resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for LIMIT resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for $end resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for RPAREN resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for WHEN resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for ASC resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for DESC resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for GROUP resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for THEN resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for HAVING resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for WITH resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for ELSE resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for JOIN resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for INNER resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for LEFT resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for FULL resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for RIGHT resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for CROSS resolved using rule 132 (literal_value -> STRING .)
  ! reduce/reduce conflict for WHERE resolved using rule 132 (literal_value -> STRING .)
    AS              reduce using rule 132 (literal_value -> STRING .)
    AND             reduce using rule 132 (literal_value -> STRING .)
    OR              reduce using rule 132 (literal_value -> STRING .)
    MINUS           reduce using rule 132 (literal_value -> STRING .)
    ARITH_OP        reduce using rule 132 (literal_value -> STRING .)
    LIKE            reduce using rule 132 (literal_value -> STRING .)
    STAR            reduce using rule 132 (literal_value -> STRING .)
    REGEXP          reduce using rule 132 (literal_value -> STRING .)
    COMP_OP         reduce using rule 132 (literal_value -> STRING .)
    IS              reduce using rule 132 (literal_value -> STRING .)
    ORR             reduce using rule 132 (literal_value -> STRING .)
    NOT             reduce using rule 132 (literal_value -> STRING .)
    IN              reduce using rule 132 (literal_value -> STRING .)
    BETWEEN         reduce using rule 132 (literal_value -> STRING .)
    ID              reduce using rule 132 (literal_value -> STRING .)
    STRING          reduce using rule 132 (literal_value -> STRING .)
    END             reduce using rule 132 (literal_value -> STRING .)
    RANK            reduce using rule 132 (literal_value -> STRING .)
    TYPE_NAME       reduce using rule 132 (literal_value -> STRING .)
    COMMA           reduce using rule 132 (literal_value -> STRING .)
    FROM            reduce using rule 132 (literal_value -> STRING .)
    UNION           reduce using rule 132 (literal_value -> STRING .)
    EXCEPT          reduce using rule 132 (literal_value -> STRING .)
    SET_MINUS       reduce using rule 132 (literal_value -> STRING .)
    INTERSECT       reduce using rule 132 (literal_value -> STRING .)
    ORDER           reduce using rule 132 (literal_value -> STRING .)
    LIMIT           reduce using rule 132 (literal_value -> STRING .)
    $end            reduce using rule 132 (literal_value -> STRING .)
    RPAREN          reduce using rule 132 (literal_value -> STRING .)
    WHEN            reduce using rule 132 (literal_value -> STRING .)
    ASC             reduce using rule 132 (literal_value -> STRING .)
    DESC            reduce using rule 132 (literal_value -> STRING .)
    GROUP           reduce using rule 132 (literal_value -> STRING .)
    THEN            reduce using rule 132 (literal_value -> STRING .)
    HAVING          reduce using rule 132 (literal_value -> STRING .)
    WITH            reduce using rule 132 (literal_value -> STRING .)
    ELSE            reduce using rule 132 (literal_value -> STRING .)
    JOIN            reduce using rule 132 (literal_value -> STRING .)
    INNER           reduce using rule 132 (literal_value -> STRING .)
    LEFT            reduce using rule 132 (literal_value -> STRING .)
    FULL            reduce using rule 132 (literal_value -> STRING .)
    RIGHT           reduce using rule 132 (literal_value -> STRING .)
    CROSS           reduce using rule 132 (literal_value -> STRING .)
    WHERE           reduce using rule 132 (literal_value -> STRING .)
    DOT             reduce using rule 45 (table_name -> STRING .)

  ! AS              [ reduce using rule 137 (column_name -> STRING .) ]
  ! AND             [ reduce using rule 137 (column_name -> STRING .) ]
  ! OR              [ reduce using rule 137 (column_name -> STRING .) ]
  ! MINUS           [ reduce using rule 137 (column_name -> STRING .) ]
  ! ARITH_OP        [ reduce using rule 137 (column_name -> STRING .) ]
  ! LIKE            [ reduce using rule 137 (column_name -> STRING .) ]
  ! STAR            [ reduce using rule 137 (column_name -> STRING .) ]
  ! REGEXP          [ reduce using rule 137 (column_name -> STRING .) ]
  ! COMP_OP         [ reduce using rule 137 (column_name -> STRING .) ]
  ! IS              [ reduce using rule 137 (column_name -> STRING .) ]
  ! ORR             [ reduce using rule 137 (column_name -> STRING .) ]
  ! NOT             [ reduce using rule 137 (column_name -> STRING .) ]
  ! IN              [ reduce using rule 137 (column_name -> STRING .) ]
  ! BETWEEN         [ reduce using rule 137 (column_name -> STRING .) ]
  ! ID              [ reduce using rule 137 (column_name -> STRING .) ]
  ! STRING          [ reduce using rule 137 (column_name -> STRING .) ]
  ! END             [ reduce using rule 137 (column_name -> STRING .) ]
  ! RANK            [ reduce using rule 137 (column_name -> STRING .) ]
  ! TYPE_NAME       [ reduce using rule 137 (column_name -> STRING .) ]
  ! COMMA           [ reduce using rule 137 (column_name -> STRING .) ]
  ! FROM            [ reduce using rule 137 (column_name -> STRING .) ]
  ! UNION           [ reduce using rule 137 (column_name -> STRING .) ]
  ! EXCEPT          [ reduce using rule 137 (column_name -> STRING .) ]
  ! SET_MINUS       [ reduce using rule 137 (column_name -> STRING .) ]
  ! INTERSECT       [ reduce using rule 137 (column_name -> STRING .) ]
  ! ORDER           [ reduce using rule 137 (column_name -> STRING .) ]
  ! LIMIT           [ reduce using rule 137 (column_name -> STRING .) ]
  ! $end            [ reduce using rule 137 (column_name -> STRING .) ]
  ! RPAREN          [ reduce using rule 137 (column_name -> STRING .) ]
  ! WHEN            [ reduce using rule 137 (column_name -> STRING .) ]
  ! ASC             [ reduce using rule 137 (column_name -> STRING .) ]
  ! DESC            [ reduce using rule 137 (column_name -> STRING .) ]
  ! GROUP           [ reduce using rule 137 (column_name -> STRING .) ]
  ! THEN            [ reduce using rule 137 (column_name -> STRING .) ]
  ! HAVING          [ reduce using rule 137 (column_name -> STRING .) ]
  ! WITH            [ reduce using rule 137 (column_name -> STRING .) ]
  ! ELSE            [ reduce using rule 137 (column_name -> STRING .) ]
  ! JOIN            [ reduce using rule 137 (column_name -> STRING .) ]
  ! INNER           [ reduce using rule 137 (column_name -> STRING .) ]
  ! LEFT            [ reduce using rule 137 (column_name -> STRING .) ]
  ! FULL            [ reduce using rule 137 (column_name -> STRING .) ]
  ! RIGHT           [ reduce using rule 137 (column_name -> STRING .) ]
  ! CROSS           [ reduce using rule 137 (column_name -> STRING .) ]
  ! WHERE           [ reduce using rule 137 (column_name -> STRING .) ]


state 43

    (133) literal_value -> MINUS . NUMBER

    NUMBER          shift and go to state 102


state 44

    (134) literal_value -> DATE_LITERAL .

    AS              reduce using rule 134 (literal_value -> DATE_LITERAL .)
    AND             reduce using rule 134 (literal_value -> DATE_LITERAL .)
    OR              reduce using rule 134 (literal_value -> DATE_LITERAL .)
    MINUS           reduce using rule 134 (literal_value -> DATE_LITERAL .)
    ARITH_OP        reduce using rule 134 (literal_value -> DATE_LITERAL .)
    LIKE            reduce using rule 134 (literal_value -> DATE_LITERAL .)
    STAR            reduce using rule 134 (literal_value -> DATE_LITERAL .)
    REGEXP          reduce using rule 134 (literal_value -> DATE_LITERAL .)
    COMP_OP         reduce using rule 134 (literal_value -> DATE_LITERAL .)
    IS              reduce using rule 134 (literal_value -> DATE_LITERAL .)
    ORR             reduce using rule 134 (literal_value -> DATE_LITERAL .)
    NOT             reduce using rule 134 (literal_value -> DATE_LITERAL .)
    IN              reduce using rule 134 (literal_value -> DATE_LITERAL .)
    BETWEEN         reduce using rule 134 (literal_value -> DATE_LITERAL .)
    ID              reduce using rule 134 (literal_value -> DATE_LITERAL .)
    STRING          reduce using rule 134 (literal_value -> DATE_LITERAL .)
    END             reduce using rule 134 (literal_value -> DATE_LITERAL .)
    RANK            reduce using rule 134 (literal_value -> DATE_LITERAL .)
    TYPE_NAME       reduce using rule 134 (literal_value -> DATE_LITERAL .)
    COMMA           reduce using rule 134 (literal_value -> DATE_LITERAL .)
    FROM            reduce using rule 134 (literal_value -> DATE_LITERAL .)
    UNION           reduce using rule 134 (literal_value -> DATE_LITERAL .)
    EXCEPT          reduce using rule 134 (literal_value -> DATE_LITERAL .)
    SET_MINUS       reduce using rule 134 (literal_value -> DATE_LITERAL .)
    INTERSECT       reduce using rule 134 (literal_value -> DATE_LITERAL .)
    ORDER           reduce using rule 134 (literal_value -> DATE_LITERAL .)
    LIMIT           reduce using rule 134 (literal_value -> DATE_LITERAL .)
    $end            reduce using rule 134 (literal_value -> DATE_LITERAL .)
    RPAREN          reduce using rule 134 (literal_value -> DATE_LITERAL .)
    WHEN            reduce using rule 134 (literal_value -> DATE_LITERAL .)
    ASC             reduce using rule 134 (literal_value -> DATE_LITERAL .)
    DESC            reduce using rule 134 (literal_value -> DATE_LITERAL .)
    GROUP           reduce using rule 134 (literal_value -> DATE_LITERAL .)
    THEN            reduce using rule 134 (literal_value -> DATE_LITERAL .)
    HAVING          reduce using rule 134 (literal_value -> DATE_LITERAL .)
    WITH            reduce using rule 134 (literal_value -> DATE_LITERAL .)
    ELSE            reduce using rule 134 (literal_value -> DATE_LITERAL .)
    JOIN            reduce using rule 134 (literal_value -> DATE_LITERAL .)
    INNER           reduce using rule 134 (literal_value -> DATE_LITERAL .)
    LEFT            reduce using rule 134 (literal_value -> DATE_LITERAL .)
    FULL            reduce using rule 134 (literal_value -> DATE_LITERAL .)
    RIGHT           reduce using rule 134 (literal_value -> DATE_LITERAL .)
    CROSS           reduce using rule 134 (literal_value -> DATE_LITERAL .)
    WHERE           reduce using rule 134 (literal_value -> DATE_LITERAL .)


state 45

    (69) bin_op_expr -> NOT . expr
    (65) fun_expr -> NOT . EXISTS LPAREN select_statement RPAREN
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    EXISTS          shift and go to state 104
    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 103
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 46

    (138) column_name -> STAR .

    AS              reduce using rule 138 (column_name -> STAR .)
    AND             reduce using rule 138 (column_name -> STAR .)
    OR              reduce using rule 138 (column_name -> STAR .)
    MINUS           reduce using rule 138 (column_name -> STAR .)
    ARITH_OP        reduce using rule 138 (column_name -> STAR .)
    LIKE            reduce using rule 138 (column_name -> STAR .)
    STAR            reduce using rule 138 (column_name -> STAR .)
    REGEXP          reduce using rule 138 (column_name -> STAR .)
    COMP_OP         reduce using rule 138 (column_name -> STAR .)
    IS              reduce using rule 138 (column_name -> STAR .)
    ORR             reduce using rule 138 (column_name -> STAR .)
    NOT             reduce using rule 138 (column_name -> STAR .)
    IN              reduce using rule 138 (column_name -> STAR .)
    BETWEEN         reduce using rule 138 (column_name -> STAR .)
    ID              reduce using rule 138 (column_name -> STAR .)
    STRING          reduce using rule 138 (column_name -> STAR .)
    END             reduce using rule 138 (column_name -> STAR .)
    RANK            reduce using rule 138 (column_name -> STAR .)
    TYPE_NAME       reduce using rule 138 (column_name -> STAR .)
    COMMA           reduce using rule 138 (column_name -> STAR .)
    FROM            reduce using rule 138 (column_name -> STAR .)
    UNION           reduce using rule 138 (column_name -> STAR .)
    EXCEPT          reduce using rule 138 (column_name -> STAR .)
    SET_MINUS       reduce using rule 138 (column_name -> STAR .)
    INTERSECT       reduce using rule 138 (column_name -> STAR .)
    ORDER           reduce using rule 138 (column_name -> STAR .)
    LIMIT           reduce using rule 138 (column_name -> STAR .)
    $end            reduce using rule 138 (column_name -> STAR .)
    RPAREN          reduce using rule 138 (column_name -> STAR .)
    WHEN            reduce using rule 138 (column_name -> STAR .)
    ASC             reduce using rule 138 (column_name -> STAR .)
    DESC            reduce using rule 138 (column_name -> STAR .)
    GROUP           reduce using rule 138 (column_name -> STAR .)
    THEN            reduce using rule 138 (column_name -> STAR .)
    HAVING          reduce using rule 138 (column_name -> STAR .)
    WITH            reduce using rule 138 (column_name -> STAR .)
    ELSE            reduce using rule 138 (column_name -> STAR .)
    JOIN            reduce using rule 138 (column_name -> STAR .)
    INNER           reduce using rule 138 (column_name -> STAR .)
    LEFT            reduce using rule 138 (column_name -> STAR .)
    FULL            reduce using rule 138 (column_name -> STAR .)
    RIGHT           reduce using rule 138 (column_name -> STAR .)
    CROSS           reduce using rule 138 (column_name -> STAR .)
    WHERE           reduce using rule 138 (column_name -> STAR .)


state 47

    (62) fun_expr -> fun_name . LPAREN RPAREN
    (64) fun_expr -> fun_name . LPAREN expr RPAREN
    (66) fun_expr -> fun_name . LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> fun_name . LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> fun_name . LPAREN expr COMMA expr COMMA expr RPAREN
    (143) win_expr -> fun_name . LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> fun_name . LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> fun_name . LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN

    LPAREN          shift and go to state 105


state 48

    (63) fun_expr -> EXISTS . LPAREN select_statement RPAREN

    LPAREN          shift and go to state 106


state 49

    (120) cast_expr -> CAST . LPAREN expr AS type_name RPAREN

    LPAREN          shift and go to state 107


state 50

    (142) win_expr -> win_fun . LPAREN RPAREN OVER LPAREN win_def RPAREN

    LPAREN          shift and go to state 108


state 51

    (153) case_expr -> CASE . case_when_expr END
    (154) case_expr -> CASE . expr case_when_expr END
    (155) case_when_expr -> . WHEN expr THEN expr
    (156) case_when_expr -> . WHEN expr THEN expr ELSE expr
    (157) case_when_expr -> . WHEN expr THEN expr case_when_expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    WHEN            shift and go to state 111
    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    case_when_expr                 shift and go to state 109
    expr                           shift and go to state 110
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 52

    (140) column_name -> END .

    AS              reduce using rule 140 (column_name -> END .)
    AND             reduce using rule 140 (column_name -> END .)
    OR              reduce using rule 140 (column_name -> END .)
    MINUS           reduce using rule 140 (column_name -> END .)
    ARITH_OP        reduce using rule 140 (column_name -> END .)
    LIKE            reduce using rule 140 (column_name -> END .)
    STAR            reduce using rule 140 (column_name -> END .)
    REGEXP          reduce using rule 140 (column_name -> END .)
    COMP_OP         reduce using rule 140 (column_name -> END .)
    IS              reduce using rule 140 (column_name -> END .)
    ORR             reduce using rule 140 (column_name -> END .)
    NOT             reduce using rule 140 (column_name -> END .)
    IN              reduce using rule 140 (column_name -> END .)
    BETWEEN         reduce using rule 140 (column_name -> END .)
    ID              reduce using rule 140 (column_name -> END .)
    STRING          reduce using rule 140 (column_name -> END .)
    END             reduce using rule 140 (column_name -> END .)
    RANK            reduce using rule 140 (column_name -> END .)
    TYPE_NAME       reduce using rule 140 (column_name -> END .)
    COMMA           reduce using rule 140 (column_name -> END .)
    FROM            reduce using rule 140 (column_name -> END .)
    UNION           reduce using rule 140 (column_name -> END .)
    EXCEPT          reduce using rule 140 (column_name -> END .)
    SET_MINUS       reduce using rule 140 (column_name -> END .)
    INTERSECT       reduce using rule 140 (column_name -> END .)
    ORDER           reduce using rule 140 (column_name -> END .)
    LIMIT           reduce using rule 140 (column_name -> END .)
    $end            reduce using rule 140 (column_name -> END .)
    RPAREN          reduce using rule 140 (column_name -> END .)
    WHEN            reduce using rule 140 (column_name -> END .)
    ASC             reduce using rule 140 (column_name -> END .)
    DESC            reduce using rule 140 (column_name -> END .)
    GROUP           reduce using rule 140 (column_name -> END .)
    THEN            reduce using rule 140 (column_name -> END .)
    HAVING          reduce using rule 140 (column_name -> END .)
    WITH            reduce using rule 140 (column_name -> END .)
    ELSE            reduce using rule 140 (column_name -> END .)
    JOIN            reduce using rule 140 (column_name -> END .)
    INNER           reduce using rule 140 (column_name -> END .)
    LEFT            reduce using rule 140 (column_name -> END .)
    FULL            reduce using rule 140 (column_name -> END .)
    RIGHT           reduce using rule 140 (column_name -> END .)
    CROSS           reduce using rule 140 (column_name -> END .)
    WHERE           reduce using rule 140 (column_name -> END .)


state 53

    (136) column_name -> ID .
    (44) table_name -> ID .
    (128) fun_name -> ID .

    AS              reduce using rule 136 (column_name -> ID .)
    AND             reduce using rule 136 (column_name -> ID .)
    OR              reduce using rule 136 (column_name -> ID .)
    MINUS           reduce using rule 136 (column_name -> ID .)
    ARITH_OP        reduce using rule 136 (column_name -> ID .)
    LIKE            reduce using rule 136 (column_name -> ID .)
    STAR            reduce using rule 136 (column_name -> ID .)
    REGEXP          reduce using rule 136 (column_name -> ID .)
    COMP_OP         reduce using rule 136 (column_name -> ID .)
    IS              reduce using rule 136 (column_name -> ID .)
    ORR             reduce using rule 136 (column_name -> ID .)
    NOT             reduce using rule 136 (column_name -> ID .)
    IN              reduce using rule 136 (column_name -> ID .)
    BETWEEN         reduce using rule 136 (column_name -> ID .)
    ID              reduce using rule 136 (column_name -> ID .)
    STRING          reduce using rule 136 (column_name -> ID .)
    END             reduce using rule 136 (column_name -> ID .)
    RANK            reduce using rule 136 (column_name -> ID .)
    TYPE_NAME       reduce using rule 136 (column_name -> ID .)
    COMMA           reduce using rule 136 (column_name -> ID .)
    FROM            reduce using rule 136 (column_name -> ID .)
    UNION           reduce using rule 136 (column_name -> ID .)
    EXCEPT          reduce using rule 136 (column_name -> ID .)
    SET_MINUS       reduce using rule 136 (column_name -> ID .)
    INTERSECT       reduce using rule 136 (column_name -> ID .)
    ORDER           reduce using rule 136 (column_name -> ID .)
    LIMIT           reduce using rule 136 (column_name -> ID .)
    $end            reduce using rule 136 (column_name -> ID .)
    RPAREN          reduce using rule 136 (column_name -> ID .)
    WHEN            reduce using rule 136 (column_name -> ID .)
    ASC             reduce using rule 136 (column_name -> ID .)
    DESC            reduce using rule 136 (column_name -> ID .)
    GROUP           reduce using rule 136 (column_name -> ID .)
    THEN            reduce using rule 136 (column_name -> ID .)
    HAVING          reduce using rule 136 (column_name -> ID .)
    WITH            reduce using rule 136 (column_name -> ID .)
    ELSE            reduce using rule 136 (column_name -> ID .)
    JOIN            reduce using rule 136 (column_name -> ID .)
    INNER           reduce using rule 136 (column_name -> ID .)
    LEFT            reduce using rule 136 (column_name -> ID .)
    FULL            reduce using rule 136 (column_name -> ID .)
    RIGHT           reduce using rule 136 (column_name -> ID .)
    CROSS           reduce using rule 136 (column_name -> ID .)
    WHERE           reduce using rule 136 (column_name -> ID .)
    DOT             reduce using rule 44 (table_name -> ID .)
    LPAREN          reduce using rule 128 (fun_name -> ID .)


state 54

    (139) column_name -> RANK .
    (150) win_fun -> RANK .

    AS              reduce using rule 139 (column_name -> RANK .)
    AND             reduce using rule 139 (column_name -> RANK .)
    OR              reduce using rule 139 (column_name -> RANK .)
    MINUS           reduce using rule 139 (column_name -> RANK .)
    ARITH_OP        reduce using rule 139 (column_name -> RANK .)
    LIKE            reduce using rule 139 (column_name -> RANK .)
    STAR            reduce using rule 139 (column_name -> RANK .)
    REGEXP          reduce using rule 139 (column_name -> RANK .)
    COMP_OP         reduce using rule 139 (column_name -> RANK .)
    IS              reduce using rule 139 (column_name -> RANK .)
    ORR             reduce using rule 139 (column_name -> RANK .)
    NOT             reduce using rule 139 (column_name -> RANK .)
    IN              reduce using rule 139 (column_name -> RANK .)
    BETWEEN         reduce using rule 139 (column_name -> RANK .)
    ID              reduce using rule 139 (column_name -> RANK .)
    STRING          reduce using rule 139 (column_name -> RANK .)
    END             reduce using rule 139 (column_name -> RANK .)
    RANK            reduce using rule 139 (column_name -> RANK .)
    TYPE_NAME       reduce using rule 139 (column_name -> RANK .)
    COMMA           reduce using rule 139 (column_name -> RANK .)
    FROM            reduce using rule 139 (column_name -> RANK .)
    UNION           reduce using rule 139 (column_name -> RANK .)
    EXCEPT          reduce using rule 139 (column_name -> RANK .)
    SET_MINUS       reduce using rule 139 (column_name -> RANK .)
    INTERSECT       reduce using rule 139 (column_name -> RANK .)
    ORDER           reduce using rule 139 (column_name -> RANK .)
    LIMIT           reduce using rule 139 (column_name -> RANK .)
    $end            reduce using rule 139 (column_name -> RANK .)
    RPAREN          reduce using rule 139 (column_name -> RANK .)
    WHEN            reduce using rule 139 (column_name -> RANK .)
    ASC             reduce using rule 139 (column_name -> RANK .)
    DESC            reduce using rule 139 (column_name -> RANK .)
    GROUP           reduce using rule 139 (column_name -> RANK .)
    THEN            reduce using rule 139 (column_name -> RANK .)
    HAVING          reduce using rule 139 (column_name -> RANK .)
    WITH            reduce using rule 139 (column_name -> RANK .)
    ELSE            reduce using rule 139 (column_name -> RANK .)
    JOIN            reduce using rule 139 (column_name -> RANK .)
    INNER           reduce using rule 139 (column_name -> RANK .)
    LEFT            reduce using rule 139 (column_name -> RANK .)
    FULL            reduce using rule 139 (column_name -> RANK .)
    RIGHT           reduce using rule 139 (column_name -> RANK .)
    CROSS           reduce using rule 139 (column_name -> RANK .)
    WHERE           reduce using rule 139 (column_name -> RANK .)
    LPAREN          reduce using rule 150 (win_fun -> RANK .)


state 55

    (141) column_name -> TYPE_NAME .
    (130) fun_name -> TYPE_NAME .

    AS              reduce using rule 141 (column_name -> TYPE_NAME .)
    AND             reduce using rule 141 (column_name -> TYPE_NAME .)
    OR              reduce using rule 141 (column_name -> TYPE_NAME .)
    MINUS           reduce using rule 141 (column_name -> TYPE_NAME .)
    ARITH_OP        reduce using rule 141 (column_name -> TYPE_NAME .)
    LIKE            reduce using rule 141 (column_name -> TYPE_NAME .)
    STAR            reduce using rule 141 (column_name -> TYPE_NAME .)
    REGEXP          reduce using rule 141 (column_name -> TYPE_NAME .)
    COMP_OP         reduce using rule 141 (column_name -> TYPE_NAME .)
    IS              reduce using rule 141 (column_name -> TYPE_NAME .)
    ORR             reduce using rule 141 (column_name -> TYPE_NAME .)
    NOT             reduce using rule 141 (column_name -> TYPE_NAME .)
    IN              reduce using rule 141 (column_name -> TYPE_NAME .)
    BETWEEN         reduce using rule 141 (column_name -> TYPE_NAME .)
    ID              reduce using rule 141 (column_name -> TYPE_NAME .)
    STRING          reduce using rule 141 (column_name -> TYPE_NAME .)
    END             reduce using rule 141 (column_name -> TYPE_NAME .)
    RANK            reduce using rule 141 (column_name -> TYPE_NAME .)
    TYPE_NAME       reduce using rule 141 (column_name -> TYPE_NAME .)
    COMMA           reduce using rule 141 (column_name -> TYPE_NAME .)
    FROM            reduce using rule 141 (column_name -> TYPE_NAME .)
    UNION           reduce using rule 141 (column_name -> TYPE_NAME .)
    EXCEPT          reduce using rule 141 (column_name -> TYPE_NAME .)
    SET_MINUS       reduce using rule 141 (column_name -> TYPE_NAME .)
    INTERSECT       reduce using rule 141 (column_name -> TYPE_NAME .)
    ORDER           reduce using rule 141 (column_name -> TYPE_NAME .)
    LIMIT           reduce using rule 141 (column_name -> TYPE_NAME .)
    $end            reduce using rule 141 (column_name -> TYPE_NAME .)
    RPAREN          reduce using rule 141 (column_name -> TYPE_NAME .)
    WHEN            reduce using rule 141 (column_name -> TYPE_NAME .)
    ASC             reduce using rule 141 (column_name -> TYPE_NAME .)
    DESC            reduce using rule 141 (column_name -> TYPE_NAME .)
    GROUP           reduce using rule 141 (column_name -> TYPE_NAME .)
    THEN            reduce using rule 141 (column_name -> TYPE_NAME .)
    HAVING          reduce using rule 141 (column_name -> TYPE_NAME .)
    WITH            reduce using rule 141 (column_name -> TYPE_NAME .)
    ELSE            reduce using rule 141 (column_name -> TYPE_NAME .)
    JOIN            reduce using rule 141 (column_name -> TYPE_NAME .)
    INNER           reduce using rule 141 (column_name -> TYPE_NAME .)
    LEFT            reduce using rule 141 (column_name -> TYPE_NAME .)
    FULL            reduce using rule 141 (column_name -> TYPE_NAME .)
    RIGHT           reduce using rule 141 (column_name -> TYPE_NAME .)
    CROSS           reduce using rule 141 (column_name -> TYPE_NAME .)
    WHERE           reduce using rule 141 (column_name -> TYPE_NAME .)
    LPAREN          reduce using rule 130 (fun_name -> TYPE_NAME .)


state 56

    (129) fun_name -> LEFT .

    LPAREN          reduce using rule 129 (fun_name -> LEFT .)


state 57

    (151) win_fun -> DENSE_RANK .

    LPAREN          reduce using rule 151 (win_fun -> DENSE_RANK .)


state 58

    (152) win_fun -> ROW_NUMBER .

    LPAREN          reduce using rule 152 (win_fun -> ROW_NUMBER .)


state 59

    (2) select_statement -> select_statement set_op select_core .

    UNION           reduce using rule 2 (select_statement -> select_statement set_op select_core .)
    EXCEPT          reduce using rule 2 (select_statement -> select_statement set_op select_core .)
    SET_MINUS       reduce using rule 2 (select_statement -> select_statement set_op select_core .)
    INTERSECT       reduce using rule 2 (select_statement -> select_statement set_op select_core .)
    ORDER           reduce using rule 2 (select_statement -> select_statement set_op select_core .)
    LIMIT           reduce using rule 2 (select_statement -> select_statement set_op select_core .)
    $end            reduce using rule 2 (select_statement -> select_statement set_op select_core .)
    RPAREN          reduce using rule 2 (select_statement -> select_statement set_op select_core .)


state 60

    (25) order_by -> order_by COMMA . ordering_term
    (26) ordering_term -> . expr
    (27) ordering_term -> . expr sort_order
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    ordering_term                  shift and go to state 112
    expr                           shift and go to state 113
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 61

    (99) set_op -> UNION ALL .

    SELECT          reduce using rule 99 (set_op -> UNION ALL .)


state 62

    (24) order_by -> ORDER BY . ordering_term
    (26) ordering_term -> . expr
    (27) ordering_term -> . expr sort_order
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    ordering_term                  shift and go to state 114
    expr                           shift and go to state 113
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 63

    (28) limit -> LIMIT expr .
    (29) limit -> LIMIT expr . COMMA expr
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    UNION           reduce using rule 28 (limit -> LIMIT expr .)
    EXCEPT          reduce using rule 28 (limit -> LIMIT expr .)
    SET_MINUS       reduce using rule 28 (limit -> LIMIT expr .)
    INTERSECT       reduce using rule 28 (limit -> LIMIT expr .)
    ORDER           reduce using rule 28 (limit -> LIMIT expr .)
    LIMIT           reduce using rule 28 (limit -> LIMIT expr .)
    $end            reduce using rule 28 (limit -> LIMIT expr .)
    RPAREN          reduce using rule 28 (limit -> LIMIT expr .)
    COMMA           shift and go to state 115
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 64

    (20) with_clause -> with_clause COMMA common_table_expression .

    COMMA           reduce using rule 20 (with_clause -> with_clause COMMA common_table_expression .)
    WITH            reduce using rule 20 (with_clause -> with_clause COMMA common_table_expression .)
    SELECT          reduce using rule 20 (with_clause -> with_clause COMMA common_table_expression .)


state 65

    (8) select_core -> select_clause from_clause where_clause .
    (10) select_core -> select_clause from_clause where_clause . group_clause
    (55) group_clause -> . GROUP BY expr
    (56) group_clause -> . group_clause COMMA expr
    (57) group_clause -> . group_clause HAVING expr
    (58) group_clause -> . group_clause WITH ROLLUP
    (59) group_clause -> . group_clause WITH ROLLUP HAVING expr

    UNION           reduce using rule 8 (select_core -> select_clause from_clause where_clause .)
    EXCEPT          reduce using rule 8 (select_core -> select_clause from_clause where_clause .)
    SET_MINUS       reduce using rule 8 (select_core -> select_clause from_clause where_clause .)
    INTERSECT       reduce using rule 8 (select_core -> select_clause from_clause where_clause .)
    ORDER           reduce using rule 8 (select_core -> select_clause from_clause where_clause .)
    LIMIT           reduce using rule 8 (select_core -> select_clause from_clause where_clause .)
    $end            reduce using rule 8 (select_core -> select_clause from_clause where_clause .)
    RPAREN          reduce using rule 8 (select_core -> select_clause from_clause where_clause .)
    GROUP           shift and go to state 69

    group_clause                   shift and go to state 116

state 66

    (9) select_core -> select_clause from_clause group_clause .
    (56) group_clause -> group_clause . COMMA expr
    (57) group_clause -> group_clause . HAVING expr
    (58) group_clause -> group_clause . WITH ROLLUP
    (59) group_clause -> group_clause . WITH ROLLUP HAVING expr

    UNION           reduce using rule 9 (select_core -> select_clause from_clause group_clause .)
    EXCEPT          reduce using rule 9 (select_core -> select_clause from_clause group_clause .)
    SET_MINUS       reduce using rule 9 (select_core -> select_clause from_clause group_clause .)
    INTERSECT       reduce using rule 9 (select_core -> select_clause from_clause group_clause .)
    ORDER           reduce using rule 9 (select_core -> select_clause from_clause group_clause .)
    LIMIT           reduce using rule 9 (select_core -> select_clause from_clause group_clause .)
    $end            reduce using rule 9 (select_core -> select_clause from_clause group_clause .)
    RPAREN          reduce using rule 9 (select_core -> select_clause from_clause group_clause .)
    COMMA           shift and go to state 117
    HAVING          shift and go to state 118
    WITH            shift and go to state 119


state 67

    (31) from_clause -> from_clause COMMA . table_or_subquery
    (33) table_or_subquery -> . table_name
    (34) table_or_subquery -> . table_name table_alias
    (35) table_or_subquery -> . table_name DOT table_name
    (36) table_or_subquery -> . table_name AS table_alias
    (37) table_or_subquery -> . LPAREN select_statement RPAREN
    (38) table_or_subquery -> . LPAREN join_clause RPAREN
    (39) table_or_subquery -> . table_name DOT table_name table_alias
    (40) table_or_subquery -> . LPAREN select_statement RPAREN table_alias
    (41) table_or_subquery -> . LPAREN select_statement RPAREN AS table_alias
    (42) table_or_subquery -> . table_name DOT table_name AS table_alias
    (43) table_or_subquery -> . table_name DOT table_name DOT table_name
    (44) table_name -> . ID
    (45) table_name -> . STRING

    LPAREN          shift and go to state 74
    ID              shift and go to state 24
    STRING          shift and go to state 25

    table_or_subquery              shift and go to state 120
    table_name                     shift and go to state 73

state 68

    (54) where_clause -> WHERE . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 121
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 69

    (55) group_clause -> GROUP . BY expr

    BY              shift and go to state 122


state 70

    (13) select_clause -> select_clause COMMA result_column .

    COMMA           reduce using rule 13 (select_clause -> select_clause COMMA result_column .)
    FROM            reduce using rule 13 (select_clause -> select_clause COMMA result_column .)
    UNION           reduce using rule 13 (select_clause -> select_clause COMMA result_column .)
    EXCEPT          reduce using rule 13 (select_clause -> select_clause COMMA result_column .)
    SET_MINUS       reduce using rule 13 (select_clause -> select_clause COMMA result_column .)
    INTERSECT       reduce using rule 13 (select_clause -> select_clause COMMA result_column .)
    ORDER           reduce using rule 13 (select_clause -> select_clause COMMA result_column .)
    LIMIT           reduce using rule 13 (select_clause -> select_clause COMMA result_column .)
    $end            reduce using rule 13 (select_clause -> select_clause COMMA result_column .)
    RPAREN          reduce using rule 13 (select_clause -> select_clause COMMA result_column .)


state 71

    (30) from_clause -> FROM table_or_subquery .
    (48) join_clause -> table_or_subquery . join_op table_or_subquery join_constraint
    (49) join_clause -> table_or_subquery . join_op table_or_subquery
    (109) join_op -> . JOIN
    (110) join_op -> . INNER JOIN
    (111) join_op -> . LEFT JOIN
    (112) join_op -> . FULL JOIN
    (113) join_op -> . LEFT OUTER JOIN
    (114) join_op -> . RIGHT OUTER JOIN
    (115) join_op -> . FULL OUTER JOIN
    (116) join_op -> . RIGHT JOIN
    (117) join_op -> . CROSS JOIN

    COMMA           reduce using rule 30 (from_clause -> FROM table_or_subquery .)
    WHERE           reduce using rule 30 (from_clause -> FROM table_or_subquery .)
    GROUP           reduce using rule 30 (from_clause -> FROM table_or_subquery .)
    UNION           reduce using rule 30 (from_clause -> FROM table_or_subquery .)
    EXCEPT          reduce using rule 30 (from_clause -> FROM table_or_subquery .)
    SET_MINUS       reduce using rule 30 (from_clause -> FROM table_or_subquery .)
    INTERSECT       reduce using rule 30 (from_clause -> FROM table_or_subquery .)
    ORDER           reduce using rule 30 (from_clause -> FROM table_or_subquery .)
    LIMIT           reduce using rule 30 (from_clause -> FROM table_or_subquery .)
    $end            reduce using rule 30 (from_clause -> FROM table_or_subquery .)
    RPAREN          reduce using rule 30 (from_clause -> FROM table_or_subquery .)
    JOIN            shift and go to state 124
    INNER           shift and go to state 125
    LEFT            shift and go to state 126
    FULL            shift and go to state 127
    RIGHT           shift and go to state 128
    CROSS           shift and go to state 129

    join_op                        shift and go to state 123

state 72

    (32) from_clause -> FROM join_clause .
    (50) join_clause -> join_clause . join_op table_or_subquery join_constraint
    (51) join_clause -> join_clause . join_op table_or_subquery
    (109) join_op -> . JOIN
    (110) join_op -> . INNER JOIN
    (111) join_op -> . LEFT JOIN
    (112) join_op -> . FULL JOIN
    (113) join_op -> . LEFT OUTER JOIN
    (114) join_op -> . RIGHT OUTER JOIN
    (115) join_op -> . FULL OUTER JOIN
    (116) join_op -> . RIGHT JOIN
    (117) join_op -> . CROSS JOIN

    COMMA           reduce using rule 32 (from_clause -> FROM join_clause .)
    WHERE           reduce using rule 32 (from_clause -> FROM join_clause .)
    GROUP           reduce using rule 32 (from_clause -> FROM join_clause .)
    UNION           reduce using rule 32 (from_clause -> FROM join_clause .)
    EXCEPT          reduce using rule 32 (from_clause -> FROM join_clause .)
    SET_MINUS       reduce using rule 32 (from_clause -> FROM join_clause .)
    INTERSECT       reduce using rule 32 (from_clause -> FROM join_clause .)
    ORDER           reduce using rule 32 (from_clause -> FROM join_clause .)
    LIMIT           reduce using rule 32 (from_clause -> FROM join_clause .)
    $end            reduce using rule 32 (from_clause -> FROM join_clause .)
    RPAREN          reduce using rule 32 (from_clause -> FROM join_clause .)
    JOIN            shift and go to state 124
    INNER           shift and go to state 125
    LEFT            shift and go to state 126
    FULL            shift and go to state 127
    RIGHT           shift and go to state 128
    CROSS           shift and go to state 129

    join_op                        shift and go to state 130

state 73

    (33) table_or_subquery -> table_name .
    (34) table_or_subquery -> table_name . table_alias
    (35) table_or_subquery -> table_name . DOT table_name
    (36) table_or_subquery -> table_name . AS table_alias
    (39) table_or_subquery -> table_name . DOT table_name table_alias
    (42) table_or_subquery -> table_name . DOT table_name AS table_alias
    (43) table_or_subquery -> table_name . DOT table_name DOT table_name
    (46) table_alias -> . ID
    (47) table_alias -> . STRING

    JOIN            reduce using rule 33 (table_or_subquery -> table_name .)
    INNER           reduce using rule 33 (table_or_subquery -> table_name .)
    LEFT            reduce using rule 33 (table_or_subquery -> table_name .)
    FULL            reduce using rule 33 (table_or_subquery -> table_name .)
    RIGHT           reduce using rule 33 (table_or_subquery -> table_name .)
    CROSS           reduce using rule 33 (table_or_subquery -> table_name .)
    COMMA           reduce using rule 33 (table_or_subquery -> table_name .)
    WHERE           reduce using rule 33 (table_or_subquery -> table_name .)
    GROUP           reduce using rule 33 (table_or_subquery -> table_name .)
    UNION           reduce using rule 33 (table_or_subquery -> table_name .)
    EXCEPT          reduce using rule 33 (table_or_subquery -> table_name .)
    SET_MINUS       reduce using rule 33 (table_or_subquery -> table_name .)
    INTERSECT       reduce using rule 33 (table_or_subquery -> table_name .)
    ORDER           reduce using rule 33 (table_or_subquery -> table_name .)
    LIMIT           reduce using rule 33 (table_or_subquery -> table_name .)
    $end            reduce using rule 33 (table_or_subquery -> table_name .)
    RPAREN          reduce using rule 33 (table_or_subquery -> table_name .)
    ON              reduce using rule 33 (table_or_subquery -> table_name .)
    USING           reduce using rule 33 (table_or_subquery -> table_name .)
    DOT             shift and go to state 132
    AS              shift and go to state 133
    ID              shift and go to state 134
    STRING          shift and go to state 135

    table_alias                    shift and go to state 131

state 74

    (37) table_or_subquery -> LPAREN . select_statement RPAREN
    (38) table_or_subquery -> LPAREN . join_clause RPAREN
    (40) table_or_subquery -> LPAREN . select_statement RPAREN table_alias
    (41) table_or_subquery -> LPAREN . select_statement RPAREN AS table_alias
    (1) select_statement -> . select_core
    (2) select_statement -> . select_statement set_op select_core
    (3) select_statement -> . with_clause select_statement
    (4) select_statement -> . select_statement order_by
    (5) select_statement -> . select_statement limit
    (48) join_clause -> . table_or_subquery join_op table_or_subquery join_constraint
    (49) join_clause -> . table_or_subquery join_op table_or_subquery
    (50) join_clause -> . join_clause join_op table_or_subquery join_constraint
    (51) join_clause -> . join_clause join_op table_or_subquery
    (6) select_core -> . select_clause
    (7) select_core -> . select_clause from_clause
    (8) select_core -> . select_clause from_clause where_clause
    (9) select_core -> . select_clause from_clause group_clause
    (10) select_core -> . select_clause from_clause where_clause group_clause
    (18) with_clause -> . WITH common_table_expression
    (19) with_clause -> . WITH RECURSIVE common_table_expression
    (20) with_clause -> . with_clause COMMA common_table_expression
    (33) table_or_subquery -> . table_name
    (34) table_or_subquery -> . table_name table_alias
    (35) table_or_subquery -> . table_name DOT table_name
    (36) table_or_subquery -> . table_name AS table_alias
    (37) table_or_subquery -> . LPAREN select_statement RPAREN
    (38) table_or_subquery -> . LPAREN join_clause RPAREN
    (39) table_or_subquery -> . table_name DOT table_name table_alias
    (40) table_or_subquery -> . LPAREN select_statement RPAREN table_alias
    (41) table_or_subquery -> . LPAREN select_statement RPAREN AS table_alias
    (42) table_or_subquery -> . table_name DOT table_name AS table_alias
    (43) table_or_subquery -> . table_name DOT table_name DOT table_name
    (11) select_clause -> . SELECT result_column
    (12) select_clause -> . SELECT DISTINCT result_column
    (13) select_clause -> . select_clause COMMA result_column
    (44) table_name -> . ID
    (45) table_name -> . STRING

    WITH            shift and go to state 5
    LPAREN          shift and go to state 74
    SELECT          shift and go to state 6
    ID              shift and go to state 24
    STRING          shift and go to state 25

    select_statement               shift and go to state 136
    join_clause                    shift and go to state 137
    select_core                    shift and go to state 2
    with_clause                    shift and go to state 3
    table_or_subquery              shift and go to state 138
    select_clause                  shift and go to state 4
    table_name                     shift and go to state 73

state 75

    (19) with_clause -> WITH RECURSIVE common_table_expression .

    COMMA           reduce using rule 19 (with_clause -> WITH RECURSIVE common_table_expression .)
    WITH            reduce using rule 19 (with_clause -> WITH RECURSIVE common_table_expression .)
    SELECT          reduce using rule 19 (with_clause -> WITH RECURSIVE common_table_expression .)


state 76

    (16) common_table_expression -> table_name LPAREN . column_list RPAREN AS LPAREN select_statement RPAREN
    (14) column_list -> . column
    (15) column_list -> . column_list COMMA column
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING

    ID              shift and go to state 141
    STRING          shift and go to state 142
    STAR            shift and go to state 46
    RANK            shift and go to state 143
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 144

    table_name                     shift and go to state 40
    column_list                    shift and go to state 139
    column                         shift and go to state 140
    column_name                    shift and go to state 39

state 77

    (17) common_table_expression -> table_name AS . LPAREN select_statement RPAREN

    LPAREN          shift and go to state 145


state 78

    (12) select_clause -> SELECT DISTINCT result_column .

    COMMA           reduce using rule 12 (select_clause -> SELECT DISTINCT result_column .)
    FROM            reduce using rule 12 (select_clause -> SELECT DISTINCT result_column .)
    UNION           reduce using rule 12 (select_clause -> SELECT DISTINCT result_column .)
    EXCEPT          reduce using rule 12 (select_clause -> SELECT DISTINCT result_column .)
    SET_MINUS       reduce using rule 12 (select_clause -> SELECT DISTINCT result_column .)
    INTERSECT       reduce using rule 12 (select_clause -> SELECT DISTINCT result_column .)
    ORDER           reduce using rule 12 (select_clause -> SELECT DISTINCT result_column .)
    LIMIT           reduce using rule 12 (select_clause -> SELECT DISTINCT result_column .)
    $end            reduce using rule 12 (select_clause -> SELECT DISTINCT result_column .)
    RPAREN          reduce using rule 12 (select_clause -> SELECT DISTINCT result_column .)


state 79

    (22) result_column -> expr AS . column_alias
    (123) column_alias -> . ID
    (124) column_alias -> . STRING
    (125) column_alias -> . END
    (126) column_alias -> . RANK
    (127) column_alias -> . TYPE_NAME

    ID              shift and go to state 94
    STRING          shift and go to state 95
    END             shift and go to state 96
    RANK            shift and go to state 97
    TYPE_NAME       shift and go to state 98

    column_alias                   shift and go to state 146

state 80

    (23) result_column -> expr column_alias .

    COMMA           reduce using rule 23 (result_column -> expr column_alias .)
    FROM            reduce using rule 23 (result_column -> expr column_alias .)
    UNION           reduce using rule 23 (result_column -> expr column_alias .)
    EXCEPT          reduce using rule 23 (result_column -> expr column_alias .)
    SET_MINUS       reduce using rule 23 (result_column -> expr column_alias .)
    INTERSECT       reduce using rule 23 (result_column -> expr column_alias .)
    ORDER           reduce using rule 23 (result_column -> expr column_alias .)
    LIMIT           reduce using rule 23 (result_column -> expr column_alias .)
    $end            reduce using rule 23 (result_column -> expr column_alias .)
    RPAREN          reduce using rule 23 (result_column -> expr column_alias .)


state 81

    (70) bin_op_expr -> expr AND . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 147
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 82

    (71) bin_op_expr -> expr OR . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 148
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 83

    (72) bin_op_expr -> expr MINUS . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 149
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 84

    (73) bin_op_expr -> expr ARITH_OP . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 150
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 85

    (74) bin_op_expr -> expr LIKE . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 151
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 86

    (75) bin_op_expr -> expr STAR . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 152
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 87

    (76) bin_op_expr -> expr REGEXP . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 153
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 88

    (77) bin_op_expr -> expr COMP_OP . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 154
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 89

    (78) bin_op_expr -> expr IS . expr
    (81) bin_op_expr -> expr IS . NOT expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    NOT             shift and go to state 156
    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 155
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 90

    (79) bin_op_expr -> expr ORR . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 157
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 91

    (80) bin_op_expr -> expr NOT . LIKE expr
    (84) bin_op_expr -> expr NOT . IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr NOT . IN LPAREN select_statement RPAREN
    (122) between_expr -> expr NOT . BETWEEN expr bin_op expr

    LIKE            shift and go to state 158
    IN              shift and go to state 159
    BETWEEN         shift and go to state 160


state 92

    (82) bin_op_expr -> expr IN . LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr IN . LPAREN literal_list RPAREN

    LPAREN          shift and go to state 161


state 93

    (121) between_expr -> expr BETWEEN . expr bin_op expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 162
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 94

    (123) column_alias -> ID .

    COMMA           reduce using rule 123 (column_alias -> ID .)
    FROM            reduce using rule 123 (column_alias -> ID .)
    UNION           reduce using rule 123 (column_alias -> ID .)
    EXCEPT          reduce using rule 123 (column_alias -> ID .)
    SET_MINUS       reduce using rule 123 (column_alias -> ID .)
    INTERSECT       reduce using rule 123 (column_alias -> ID .)
    ORDER           reduce using rule 123 (column_alias -> ID .)
    LIMIT           reduce using rule 123 (column_alias -> ID .)
    $end            reduce using rule 123 (column_alias -> ID .)
    RPAREN          reduce using rule 123 (column_alias -> ID .)


state 95

    (124) column_alias -> STRING .

    COMMA           reduce using rule 124 (column_alias -> STRING .)
    FROM            reduce using rule 124 (column_alias -> STRING .)
    UNION           reduce using rule 124 (column_alias -> STRING .)
    EXCEPT          reduce using rule 124 (column_alias -> STRING .)
    SET_MINUS       reduce using rule 124 (column_alias -> STRING .)
    INTERSECT       reduce using rule 124 (column_alias -> STRING .)
    ORDER           reduce using rule 124 (column_alias -> STRING .)
    LIMIT           reduce using rule 124 (column_alias -> STRING .)
    $end            reduce using rule 124 (column_alias -> STRING .)
    RPAREN          reduce using rule 124 (column_alias -> STRING .)


state 96

    (125) column_alias -> END .

    COMMA           reduce using rule 125 (column_alias -> END .)
    FROM            reduce using rule 125 (column_alias -> END .)
    UNION           reduce using rule 125 (column_alias -> END .)
    EXCEPT          reduce using rule 125 (column_alias -> END .)
    SET_MINUS       reduce using rule 125 (column_alias -> END .)
    INTERSECT       reduce using rule 125 (column_alias -> END .)
    ORDER           reduce using rule 125 (column_alias -> END .)
    LIMIT           reduce using rule 125 (column_alias -> END .)
    $end            reduce using rule 125 (column_alias -> END .)
    RPAREN          reduce using rule 125 (column_alias -> END .)


state 97

    (126) column_alias -> RANK .

    COMMA           reduce using rule 126 (column_alias -> RANK .)
    FROM            reduce using rule 126 (column_alias -> RANK .)
    UNION           reduce using rule 126 (column_alias -> RANK .)
    EXCEPT          reduce using rule 126 (column_alias -> RANK .)
    SET_MINUS       reduce using rule 126 (column_alias -> RANK .)
    INTERSECT       reduce using rule 126 (column_alias -> RANK .)
    ORDER           reduce using rule 126 (column_alias -> RANK .)
    LIMIT           reduce using rule 126 (column_alias -> RANK .)
    $end            reduce using rule 126 (column_alias -> RANK .)
    RPAREN          reduce using rule 126 (column_alias -> RANK .)


state 98

    (127) column_alias -> TYPE_NAME .

    COMMA           reduce using rule 127 (column_alias -> TYPE_NAME .)
    FROM            reduce using rule 127 (column_alias -> TYPE_NAME .)
    UNION           reduce using rule 127 (column_alias -> TYPE_NAME .)
    EXCEPT          reduce using rule 127 (column_alias -> TYPE_NAME .)
    SET_MINUS       reduce using rule 127 (column_alias -> TYPE_NAME .)
    INTERSECT       reduce using rule 127 (column_alias -> TYPE_NAME .)
    ORDER           reduce using rule 127 (column_alias -> TYPE_NAME .)
    LIMIT           reduce using rule 127 (column_alias -> TYPE_NAME .)
    $end            reduce using rule 127 (column_alias -> TYPE_NAME .)
    RPAREN          reduce using rule 127 (column_alias -> TYPE_NAME .)


state 99

    (87) expr -> LPAREN select_statement . RPAREN
    (2) select_statement -> select_statement . set_op select_core
    (4) select_statement -> select_statement . order_by
    (5) select_statement -> select_statement . limit
    (97) set_op -> . UNION
    (98) set_op -> . EXCEPT
    (99) set_op -> . UNION ALL
    (100) set_op -> . SET_MINUS
    (101) set_op -> . INTERSECT
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term
    (28) limit -> . LIMIT expr
    (29) limit -> . LIMIT expr COMMA expr

    RPAREN          shift and go to state 163
    UNION           shift and go to state 10
    EXCEPT          shift and go to state 11
    SET_MINUS       shift and go to state 12
    INTERSECT       shift and go to state 13
    ORDER           shift and go to state 14
    LIMIT           shift and go to state 15

    set_op                         shift and go to state 7
    order_by                       shift and go to state 8
    limit                          shift and go to state 9

state 100

    (88) expr -> LPAREN expr . RPAREN
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    RPAREN          shift and go to state 164
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 101

    (61) column -> table_name DOT . column_name
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME

    ID              shift and go to state 166
    STRING          shift and go to state 167
    STAR            shift and go to state 46
    RANK            shift and go to state 143
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 144

    column_name                    shift and go to state 165

state 102

    (133) literal_value -> MINUS NUMBER .

    AS              reduce using rule 133 (literal_value -> MINUS NUMBER .)
    AND             reduce using rule 133 (literal_value -> MINUS NUMBER .)
    OR              reduce using rule 133 (literal_value -> MINUS NUMBER .)
    MINUS           reduce using rule 133 (literal_value -> MINUS NUMBER .)
    ARITH_OP        reduce using rule 133 (literal_value -> MINUS NUMBER .)
    LIKE            reduce using rule 133 (literal_value -> MINUS NUMBER .)
    STAR            reduce using rule 133 (literal_value -> MINUS NUMBER .)
    REGEXP          reduce using rule 133 (literal_value -> MINUS NUMBER .)
    COMP_OP         reduce using rule 133 (literal_value -> MINUS NUMBER .)
    IS              reduce using rule 133 (literal_value -> MINUS NUMBER .)
    ORR             reduce using rule 133 (literal_value -> MINUS NUMBER .)
    NOT             reduce using rule 133 (literal_value -> MINUS NUMBER .)
    IN              reduce using rule 133 (literal_value -> MINUS NUMBER .)
    BETWEEN         reduce using rule 133 (literal_value -> MINUS NUMBER .)
    ID              reduce using rule 133 (literal_value -> MINUS NUMBER .)
    STRING          reduce using rule 133 (literal_value -> MINUS NUMBER .)
    END             reduce using rule 133 (literal_value -> MINUS NUMBER .)
    RANK            reduce using rule 133 (literal_value -> MINUS NUMBER .)
    TYPE_NAME       reduce using rule 133 (literal_value -> MINUS NUMBER .)
    COMMA           reduce using rule 133 (literal_value -> MINUS NUMBER .)
    FROM            reduce using rule 133 (literal_value -> MINUS NUMBER .)
    UNION           reduce using rule 133 (literal_value -> MINUS NUMBER .)
    EXCEPT          reduce using rule 133 (literal_value -> MINUS NUMBER .)
    SET_MINUS       reduce using rule 133 (literal_value -> MINUS NUMBER .)
    INTERSECT       reduce using rule 133 (literal_value -> MINUS NUMBER .)
    ORDER           reduce using rule 133 (literal_value -> MINUS NUMBER .)
    LIMIT           reduce using rule 133 (literal_value -> MINUS NUMBER .)
    $end            reduce using rule 133 (literal_value -> MINUS NUMBER .)
    RPAREN          reduce using rule 133 (literal_value -> MINUS NUMBER .)
    WHEN            reduce using rule 133 (literal_value -> MINUS NUMBER .)
    ASC             reduce using rule 133 (literal_value -> MINUS NUMBER .)
    DESC            reduce using rule 133 (literal_value -> MINUS NUMBER .)
    GROUP           reduce using rule 133 (literal_value -> MINUS NUMBER .)
    THEN            reduce using rule 133 (literal_value -> MINUS NUMBER .)
    HAVING          reduce using rule 133 (literal_value -> MINUS NUMBER .)
    WITH            reduce using rule 133 (literal_value -> MINUS NUMBER .)
    ELSE            reduce using rule 133 (literal_value -> MINUS NUMBER .)
    JOIN            reduce using rule 133 (literal_value -> MINUS NUMBER .)
    INNER           reduce using rule 133 (literal_value -> MINUS NUMBER .)
    LEFT            reduce using rule 133 (literal_value -> MINUS NUMBER .)
    FULL            reduce using rule 133 (literal_value -> MINUS NUMBER .)
    RIGHT           reduce using rule 133 (literal_value -> MINUS NUMBER .)
    CROSS           reduce using rule 133 (literal_value -> MINUS NUMBER .)
    WHERE           reduce using rule 133 (literal_value -> MINUS NUMBER .)


state 103

    (69) bin_op_expr -> NOT expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for ARITH_OP resolved as shift
  ! shift/reduce conflict for LIKE resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for REGEXP resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for ORR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
    AS              reduce using rule 69 (bin_op_expr -> NOT expr .)
    ID              reduce using rule 69 (bin_op_expr -> NOT expr .)
    STRING          reduce using rule 69 (bin_op_expr -> NOT expr .)
    END             reduce using rule 69 (bin_op_expr -> NOT expr .)
    RANK            reduce using rule 69 (bin_op_expr -> NOT expr .)
    TYPE_NAME       reduce using rule 69 (bin_op_expr -> NOT expr .)
    COMMA           reduce using rule 69 (bin_op_expr -> NOT expr .)
    FROM            reduce using rule 69 (bin_op_expr -> NOT expr .)
    UNION           reduce using rule 69 (bin_op_expr -> NOT expr .)
    EXCEPT          reduce using rule 69 (bin_op_expr -> NOT expr .)
    SET_MINUS       reduce using rule 69 (bin_op_expr -> NOT expr .)
    INTERSECT       reduce using rule 69 (bin_op_expr -> NOT expr .)
    ORDER           reduce using rule 69 (bin_op_expr -> NOT expr .)
    LIMIT           reduce using rule 69 (bin_op_expr -> NOT expr .)
    $end            reduce using rule 69 (bin_op_expr -> NOT expr .)
    RPAREN          reduce using rule 69 (bin_op_expr -> NOT expr .)
    WHEN            reduce using rule 69 (bin_op_expr -> NOT expr .)
    ASC             reduce using rule 69 (bin_op_expr -> NOT expr .)
    DESC            reduce using rule 69 (bin_op_expr -> NOT expr .)
    GROUP           reduce using rule 69 (bin_op_expr -> NOT expr .)
    THEN            reduce using rule 69 (bin_op_expr -> NOT expr .)
    HAVING          reduce using rule 69 (bin_op_expr -> NOT expr .)
    WITH            reduce using rule 69 (bin_op_expr -> NOT expr .)
    ELSE            reduce using rule 69 (bin_op_expr -> NOT expr .)
    JOIN            reduce using rule 69 (bin_op_expr -> NOT expr .)
    INNER           reduce using rule 69 (bin_op_expr -> NOT expr .)
    LEFT            reduce using rule 69 (bin_op_expr -> NOT expr .)
    FULL            reduce using rule 69 (bin_op_expr -> NOT expr .)
    RIGHT           reduce using rule 69 (bin_op_expr -> NOT expr .)
    CROSS           reduce using rule 69 (bin_op_expr -> NOT expr .)
    WHERE           reduce using rule 69 (bin_op_expr -> NOT expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93

  ! AND             [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! OR              [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! MINUS           [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! ARITH_OP        [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! LIKE            [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! STAR            [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! REGEXP          [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! COMP_OP         [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! IS              [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! ORR             [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! NOT             [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! IN              [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! BETWEEN         [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]


state 104

    (65) fun_expr -> NOT EXISTS . LPAREN select_statement RPAREN
    (63) fun_expr -> EXISTS . LPAREN select_statement RPAREN

    LPAREN          shift and go to state 168


state 105

    (62) fun_expr -> fun_name LPAREN . RPAREN
    (64) fun_expr -> fun_name LPAREN . expr RPAREN
    (66) fun_expr -> fun_name LPAREN . DISTINCT expr RPAREN
    (67) fun_expr -> fun_name LPAREN . expr COMMA expr RPAREN
    (68) fun_expr -> fun_name LPAREN . expr COMMA expr COMMA expr RPAREN
    (143) win_expr -> fun_name LPAREN . expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> fun_name LPAREN . DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> fun_name LPAREN . expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    RPAREN          shift and go to state 169
    DISTINCT        shift and go to state 171
    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    fun_name                       shift and go to state 47
    expr                           shift and go to state 170
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    win_fun                        shift and go to state 50

state 106

    (63) fun_expr -> EXISTS LPAREN . select_statement RPAREN
    (1) select_statement -> . select_core
    (2) select_statement -> . select_statement set_op select_core
    (3) select_statement -> . with_clause select_statement
    (4) select_statement -> . select_statement order_by
    (5) select_statement -> . select_statement limit
    (6) select_core -> . select_clause
    (7) select_core -> . select_clause from_clause
    (8) select_core -> . select_clause from_clause where_clause
    (9) select_core -> . select_clause from_clause group_clause
    (10) select_core -> . select_clause from_clause where_clause group_clause
    (18) with_clause -> . WITH common_table_expression
    (19) with_clause -> . WITH RECURSIVE common_table_expression
    (20) with_clause -> . with_clause COMMA common_table_expression
    (11) select_clause -> . SELECT result_column
    (12) select_clause -> . SELECT DISTINCT result_column
    (13) select_clause -> . select_clause COMMA result_column

    WITH            shift and go to state 5
    SELECT          shift and go to state 6

    select_statement               shift and go to state 172
    select_core                    shift and go to state 2
    with_clause                    shift and go to state 3
    select_clause                  shift and go to state 4

state 107

    (120) cast_expr -> CAST LPAREN . expr AS type_name RPAREN
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 173
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 108

    (142) win_expr -> win_fun LPAREN . RPAREN OVER LPAREN win_def RPAREN

    RPAREN          shift and go to state 174


state 109

    (153) case_expr -> CASE case_when_expr . END

    END             shift and go to state 175


state 110

    (154) case_expr -> CASE expr . case_when_expr END
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr
    (155) case_when_expr -> . WHEN expr THEN expr
    (156) case_when_expr -> . WHEN expr THEN expr ELSE expr
    (157) case_when_expr -> . WHEN expr THEN expr case_when_expr

    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93
    WHEN            shift and go to state 111

    case_when_expr                 shift and go to state 176

state 111

    (155) case_when_expr -> WHEN . expr THEN expr
    (156) case_when_expr -> WHEN . expr THEN expr ELSE expr
    (157) case_when_expr -> WHEN . expr THEN expr case_when_expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 177
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 112

    (25) order_by -> order_by COMMA ordering_term .

    COMMA           reduce using rule 25 (order_by -> order_by COMMA ordering_term .)
    UNION           reduce using rule 25 (order_by -> order_by COMMA ordering_term .)
    EXCEPT          reduce using rule 25 (order_by -> order_by COMMA ordering_term .)
    SET_MINUS       reduce using rule 25 (order_by -> order_by COMMA ordering_term .)
    INTERSECT       reduce using rule 25 (order_by -> order_by COMMA ordering_term .)
    ORDER           reduce using rule 25 (order_by -> order_by COMMA ordering_term .)
    LIMIT           reduce using rule 25 (order_by -> order_by COMMA ordering_term .)
    $end            reduce using rule 25 (order_by -> order_by COMMA ordering_term .)
    RPAREN          reduce using rule 25 (order_by -> order_by COMMA ordering_term .)


state 113

    (26) ordering_term -> expr .
    (27) ordering_term -> expr . sort_order
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr
    (102) sort_order -> . ASC
    (103) sort_order -> . DESC

    COMMA           reduce using rule 26 (ordering_term -> expr .)
    UNION           reduce using rule 26 (ordering_term -> expr .)
    EXCEPT          reduce using rule 26 (ordering_term -> expr .)
    SET_MINUS       reduce using rule 26 (ordering_term -> expr .)
    INTERSECT       reduce using rule 26 (ordering_term -> expr .)
    ORDER           reduce using rule 26 (ordering_term -> expr .)
    LIMIT           reduce using rule 26 (ordering_term -> expr .)
    $end            reduce using rule 26 (ordering_term -> expr .)
    RPAREN          reduce using rule 26 (ordering_term -> expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93
    ASC             shift and go to state 179
    DESC            shift and go to state 180

    sort_order                     shift and go to state 178

state 114

    (24) order_by -> ORDER BY ordering_term .

    COMMA           reduce using rule 24 (order_by -> ORDER BY ordering_term .)
    UNION           reduce using rule 24 (order_by -> ORDER BY ordering_term .)
    EXCEPT          reduce using rule 24 (order_by -> ORDER BY ordering_term .)
    SET_MINUS       reduce using rule 24 (order_by -> ORDER BY ordering_term .)
    INTERSECT       reduce using rule 24 (order_by -> ORDER BY ordering_term .)
    ORDER           reduce using rule 24 (order_by -> ORDER BY ordering_term .)
    LIMIT           reduce using rule 24 (order_by -> ORDER BY ordering_term .)
    $end            reduce using rule 24 (order_by -> ORDER BY ordering_term .)
    RPAREN          reduce using rule 24 (order_by -> ORDER BY ordering_term .)


state 115

    (29) limit -> LIMIT expr COMMA . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 181
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 116

    (10) select_core -> select_clause from_clause where_clause group_clause .
    (56) group_clause -> group_clause . COMMA expr
    (57) group_clause -> group_clause . HAVING expr
    (58) group_clause -> group_clause . WITH ROLLUP
    (59) group_clause -> group_clause . WITH ROLLUP HAVING expr

    UNION           reduce using rule 10 (select_core -> select_clause from_clause where_clause group_clause .)
    EXCEPT          reduce using rule 10 (select_core -> select_clause from_clause where_clause group_clause .)
    SET_MINUS       reduce using rule 10 (select_core -> select_clause from_clause where_clause group_clause .)
    INTERSECT       reduce using rule 10 (select_core -> select_clause from_clause where_clause group_clause .)
    ORDER           reduce using rule 10 (select_core -> select_clause from_clause where_clause group_clause .)
    LIMIT           reduce using rule 10 (select_core -> select_clause from_clause where_clause group_clause .)
    $end            reduce using rule 10 (select_core -> select_clause from_clause where_clause group_clause .)
    RPAREN          reduce using rule 10 (select_core -> select_clause from_clause where_clause group_clause .)
    COMMA           shift and go to state 117
    HAVING          shift and go to state 118
    WITH            shift and go to state 119


state 117

    (56) group_clause -> group_clause COMMA . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 182
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 118

    (57) group_clause -> group_clause HAVING . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 183
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 119

    (58) group_clause -> group_clause WITH . ROLLUP
    (59) group_clause -> group_clause WITH . ROLLUP HAVING expr

    ROLLUP          shift and go to state 184


state 120

    (31) from_clause -> from_clause COMMA table_or_subquery .

    COMMA           reduce using rule 31 (from_clause -> from_clause COMMA table_or_subquery .)
    WHERE           reduce using rule 31 (from_clause -> from_clause COMMA table_or_subquery .)
    GROUP           reduce using rule 31 (from_clause -> from_clause COMMA table_or_subquery .)
    UNION           reduce using rule 31 (from_clause -> from_clause COMMA table_or_subquery .)
    EXCEPT          reduce using rule 31 (from_clause -> from_clause COMMA table_or_subquery .)
    SET_MINUS       reduce using rule 31 (from_clause -> from_clause COMMA table_or_subquery .)
    INTERSECT       reduce using rule 31 (from_clause -> from_clause COMMA table_or_subquery .)
    ORDER           reduce using rule 31 (from_clause -> from_clause COMMA table_or_subquery .)
    LIMIT           reduce using rule 31 (from_clause -> from_clause COMMA table_or_subquery .)
    $end            reduce using rule 31 (from_clause -> from_clause COMMA table_or_subquery .)
    RPAREN          reduce using rule 31 (from_clause -> from_clause COMMA table_or_subquery .)


state 121

    (54) where_clause -> WHERE expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    GROUP           reduce using rule 54 (where_clause -> WHERE expr .)
    UNION           reduce using rule 54 (where_clause -> WHERE expr .)
    EXCEPT          reduce using rule 54 (where_clause -> WHERE expr .)
    SET_MINUS       reduce using rule 54 (where_clause -> WHERE expr .)
    INTERSECT       reduce using rule 54 (where_clause -> WHERE expr .)
    ORDER           reduce using rule 54 (where_clause -> WHERE expr .)
    LIMIT           reduce using rule 54 (where_clause -> WHERE expr .)
    $end            reduce using rule 54 (where_clause -> WHERE expr .)
    RPAREN          reduce using rule 54 (where_clause -> WHERE expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 122

    (55) group_clause -> GROUP BY . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 185
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 123

    (48) join_clause -> table_or_subquery join_op . table_or_subquery join_constraint
    (49) join_clause -> table_or_subquery join_op . table_or_subquery
    (33) table_or_subquery -> . table_name
    (34) table_or_subquery -> . table_name table_alias
    (35) table_or_subquery -> . table_name DOT table_name
    (36) table_or_subquery -> . table_name AS table_alias
    (37) table_or_subquery -> . LPAREN select_statement RPAREN
    (38) table_or_subquery -> . LPAREN join_clause RPAREN
    (39) table_or_subquery -> . table_name DOT table_name table_alias
    (40) table_or_subquery -> . LPAREN select_statement RPAREN table_alias
    (41) table_or_subquery -> . LPAREN select_statement RPAREN AS table_alias
    (42) table_or_subquery -> . table_name DOT table_name AS table_alias
    (43) table_or_subquery -> . table_name DOT table_name DOT table_name
    (44) table_name -> . ID
    (45) table_name -> . STRING

    LPAREN          shift and go to state 74
    ID              shift and go to state 24
    STRING          shift and go to state 25

    table_or_subquery              shift and go to state 186
    table_name                     shift and go to state 73

state 124

    (109) join_op -> JOIN .

    LPAREN          reduce using rule 109 (join_op -> JOIN .)
    ID              reduce using rule 109 (join_op -> JOIN .)
    STRING          reduce using rule 109 (join_op -> JOIN .)


state 125

    (110) join_op -> INNER . JOIN

    JOIN            shift and go to state 187


state 126

    (111) join_op -> LEFT . JOIN
    (113) join_op -> LEFT . OUTER JOIN

    JOIN            shift and go to state 188
    OUTER           shift and go to state 189


state 127

    (112) join_op -> FULL . JOIN
    (115) join_op -> FULL . OUTER JOIN

    JOIN            shift and go to state 190
    OUTER           shift and go to state 191


state 128

    (114) join_op -> RIGHT . OUTER JOIN
    (116) join_op -> RIGHT . JOIN

    OUTER           shift and go to state 192
    JOIN            shift and go to state 193


state 129

    (117) join_op -> CROSS . JOIN

    JOIN            shift and go to state 194


state 130

    (50) join_clause -> join_clause join_op . table_or_subquery join_constraint
    (51) join_clause -> join_clause join_op . table_or_subquery
    (33) table_or_subquery -> . table_name
    (34) table_or_subquery -> . table_name table_alias
    (35) table_or_subquery -> . table_name DOT table_name
    (36) table_or_subquery -> . table_name AS table_alias
    (37) table_or_subquery -> . LPAREN select_statement RPAREN
    (38) table_or_subquery -> . LPAREN join_clause RPAREN
    (39) table_or_subquery -> . table_name DOT table_name table_alias
    (40) table_or_subquery -> . LPAREN select_statement RPAREN table_alias
    (41) table_or_subquery -> . LPAREN select_statement RPAREN AS table_alias
    (42) table_or_subquery -> . table_name DOT table_name AS table_alias
    (43) table_or_subquery -> . table_name DOT table_name DOT table_name
    (44) table_name -> . ID
    (45) table_name -> . STRING

    LPAREN          shift and go to state 74
    ID              shift and go to state 24
    STRING          shift and go to state 25

    table_or_subquery              shift and go to state 195
    table_name                     shift and go to state 73

state 131

    (34) table_or_subquery -> table_name table_alias .

    JOIN            reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    INNER           reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    LEFT            reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    FULL            reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    RIGHT           reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    CROSS           reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    COMMA           reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    WHERE           reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    GROUP           reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    UNION           reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    EXCEPT          reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    SET_MINUS       reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    INTERSECT       reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    ORDER           reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    LIMIT           reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    $end            reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    RPAREN          reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    ON              reduce using rule 34 (table_or_subquery -> table_name table_alias .)
    USING           reduce using rule 34 (table_or_subquery -> table_name table_alias .)


state 132

    (35) table_or_subquery -> table_name DOT . table_name
    (39) table_or_subquery -> table_name DOT . table_name table_alias
    (42) table_or_subquery -> table_name DOT . table_name AS table_alias
    (43) table_or_subquery -> table_name DOT . table_name DOT table_name
    (44) table_name -> . ID
    (45) table_name -> . STRING

    ID              shift and go to state 24
    STRING          shift and go to state 25

    table_name                     shift and go to state 196

state 133

    (36) table_or_subquery -> table_name AS . table_alias
    (46) table_alias -> . ID
    (47) table_alias -> . STRING

    ID              shift and go to state 134
    STRING          shift and go to state 135

    table_alias                    shift and go to state 197

state 134

    (46) table_alias -> ID .

    JOIN            reduce using rule 46 (table_alias -> ID .)
    INNER           reduce using rule 46 (table_alias -> ID .)
    LEFT            reduce using rule 46 (table_alias -> ID .)
    FULL            reduce using rule 46 (table_alias -> ID .)
    RIGHT           reduce using rule 46 (table_alias -> ID .)
    CROSS           reduce using rule 46 (table_alias -> ID .)
    COMMA           reduce using rule 46 (table_alias -> ID .)
    WHERE           reduce using rule 46 (table_alias -> ID .)
    GROUP           reduce using rule 46 (table_alias -> ID .)
    UNION           reduce using rule 46 (table_alias -> ID .)
    EXCEPT          reduce using rule 46 (table_alias -> ID .)
    SET_MINUS       reduce using rule 46 (table_alias -> ID .)
    INTERSECT       reduce using rule 46 (table_alias -> ID .)
    ORDER           reduce using rule 46 (table_alias -> ID .)
    LIMIT           reduce using rule 46 (table_alias -> ID .)
    $end            reduce using rule 46 (table_alias -> ID .)
    RPAREN          reduce using rule 46 (table_alias -> ID .)
    ON              reduce using rule 46 (table_alias -> ID .)
    USING           reduce using rule 46 (table_alias -> ID .)


state 135

    (47) table_alias -> STRING .

    JOIN            reduce using rule 47 (table_alias -> STRING .)
    INNER           reduce using rule 47 (table_alias -> STRING .)
    LEFT            reduce using rule 47 (table_alias -> STRING .)
    FULL            reduce using rule 47 (table_alias -> STRING .)
    RIGHT           reduce using rule 47 (table_alias -> STRING .)
    CROSS           reduce using rule 47 (table_alias -> STRING .)
    COMMA           reduce using rule 47 (table_alias -> STRING .)
    WHERE           reduce using rule 47 (table_alias -> STRING .)
    GROUP           reduce using rule 47 (table_alias -> STRING .)
    UNION           reduce using rule 47 (table_alias -> STRING .)
    EXCEPT          reduce using rule 47 (table_alias -> STRING .)
    SET_MINUS       reduce using rule 47 (table_alias -> STRING .)
    INTERSECT       reduce using rule 47 (table_alias -> STRING .)
    ORDER           reduce using rule 47 (table_alias -> STRING .)
    LIMIT           reduce using rule 47 (table_alias -> STRING .)
    $end            reduce using rule 47 (table_alias -> STRING .)
    RPAREN          reduce using rule 47 (table_alias -> STRING .)
    ON              reduce using rule 47 (table_alias -> STRING .)
    USING           reduce using rule 47 (table_alias -> STRING .)


state 136

    (37) table_or_subquery -> LPAREN select_statement . RPAREN
    (40) table_or_subquery -> LPAREN select_statement . RPAREN table_alias
    (41) table_or_subquery -> LPAREN select_statement . RPAREN AS table_alias
    (2) select_statement -> select_statement . set_op select_core
    (4) select_statement -> select_statement . order_by
    (5) select_statement -> select_statement . limit
    (97) set_op -> . UNION
    (98) set_op -> . EXCEPT
    (99) set_op -> . UNION ALL
    (100) set_op -> . SET_MINUS
    (101) set_op -> . INTERSECT
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term
    (28) limit -> . LIMIT expr
    (29) limit -> . LIMIT expr COMMA expr

    RPAREN          shift and go to state 198
    UNION           shift and go to state 10
    EXCEPT          shift and go to state 11
    SET_MINUS       shift and go to state 12
    INTERSECT       shift and go to state 13
    ORDER           shift and go to state 14
    LIMIT           shift and go to state 15

    set_op                         shift and go to state 7
    order_by                       shift and go to state 8
    limit                          shift and go to state 9

state 137

    (38) table_or_subquery -> LPAREN join_clause . RPAREN
    (50) join_clause -> join_clause . join_op table_or_subquery join_constraint
    (51) join_clause -> join_clause . join_op table_or_subquery
    (109) join_op -> . JOIN
    (110) join_op -> . INNER JOIN
    (111) join_op -> . LEFT JOIN
    (112) join_op -> . FULL JOIN
    (113) join_op -> . LEFT OUTER JOIN
    (114) join_op -> . RIGHT OUTER JOIN
    (115) join_op -> . FULL OUTER JOIN
    (116) join_op -> . RIGHT JOIN
    (117) join_op -> . CROSS JOIN

    RPAREN          shift and go to state 199
    JOIN            shift and go to state 124
    INNER           shift and go to state 125
    LEFT            shift and go to state 126
    FULL            shift and go to state 127
    RIGHT           shift and go to state 128
    CROSS           shift and go to state 129

    join_op                        shift and go to state 130

state 138

    (48) join_clause -> table_or_subquery . join_op table_or_subquery join_constraint
    (49) join_clause -> table_or_subquery . join_op table_or_subquery
    (109) join_op -> . JOIN
    (110) join_op -> . INNER JOIN
    (111) join_op -> . LEFT JOIN
    (112) join_op -> . FULL JOIN
    (113) join_op -> . LEFT OUTER JOIN
    (114) join_op -> . RIGHT OUTER JOIN
    (115) join_op -> . FULL OUTER JOIN
    (116) join_op -> . RIGHT JOIN
    (117) join_op -> . CROSS JOIN

    JOIN            shift and go to state 124
    INNER           shift and go to state 125
    LEFT            shift and go to state 126
    FULL            shift and go to state 127
    RIGHT           shift and go to state 128
    CROSS           shift and go to state 129

    join_op                        shift and go to state 123

state 139

    (16) common_table_expression -> table_name LPAREN column_list . RPAREN AS LPAREN select_statement RPAREN
    (15) column_list -> column_list . COMMA column

    RPAREN          shift and go to state 200
    COMMA           shift and go to state 201


state 140

    (14) column_list -> column .

    RPAREN          reduce using rule 14 (column_list -> column .)
    COMMA           reduce using rule 14 (column_list -> column .)


state 141

    (136) column_name -> ID .
    (44) table_name -> ID .

    RPAREN          reduce using rule 136 (column_name -> ID .)
    COMMA           reduce using rule 136 (column_name -> ID .)
    DOT             reduce using rule 44 (table_name -> ID .)


state 142

    (137) column_name -> STRING .
    (45) table_name -> STRING .

    RPAREN          reduce using rule 137 (column_name -> STRING .)
    COMMA           reduce using rule 137 (column_name -> STRING .)
    DOT             reduce using rule 45 (table_name -> STRING .)


state 143

    (139) column_name -> RANK .

    RPAREN          reduce using rule 139 (column_name -> RANK .)
    COMMA           reduce using rule 139 (column_name -> RANK .)
    AS              reduce using rule 139 (column_name -> RANK .)
    AND             reduce using rule 139 (column_name -> RANK .)
    OR              reduce using rule 139 (column_name -> RANK .)
    MINUS           reduce using rule 139 (column_name -> RANK .)
    ARITH_OP        reduce using rule 139 (column_name -> RANK .)
    LIKE            reduce using rule 139 (column_name -> RANK .)
    STAR            reduce using rule 139 (column_name -> RANK .)
    REGEXP          reduce using rule 139 (column_name -> RANK .)
    COMP_OP         reduce using rule 139 (column_name -> RANK .)
    IS              reduce using rule 139 (column_name -> RANK .)
    ORR             reduce using rule 139 (column_name -> RANK .)
    NOT             reduce using rule 139 (column_name -> RANK .)
    IN              reduce using rule 139 (column_name -> RANK .)
    BETWEEN         reduce using rule 139 (column_name -> RANK .)
    ID              reduce using rule 139 (column_name -> RANK .)
    STRING          reduce using rule 139 (column_name -> RANK .)
    END             reduce using rule 139 (column_name -> RANK .)
    RANK            reduce using rule 139 (column_name -> RANK .)
    TYPE_NAME       reduce using rule 139 (column_name -> RANK .)
    FROM            reduce using rule 139 (column_name -> RANK .)
    UNION           reduce using rule 139 (column_name -> RANK .)
    EXCEPT          reduce using rule 139 (column_name -> RANK .)
    SET_MINUS       reduce using rule 139 (column_name -> RANK .)
    INTERSECT       reduce using rule 139 (column_name -> RANK .)
    ORDER           reduce using rule 139 (column_name -> RANK .)
    LIMIT           reduce using rule 139 (column_name -> RANK .)
    $end            reduce using rule 139 (column_name -> RANK .)
    WHEN            reduce using rule 139 (column_name -> RANK .)
    ASC             reduce using rule 139 (column_name -> RANK .)
    DESC            reduce using rule 139 (column_name -> RANK .)
    GROUP           reduce using rule 139 (column_name -> RANK .)
    THEN            reduce using rule 139 (column_name -> RANK .)
    HAVING          reduce using rule 139 (column_name -> RANK .)
    WITH            reduce using rule 139 (column_name -> RANK .)
    ELSE            reduce using rule 139 (column_name -> RANK .)
    JOIN            reduce using rule 139 (column_name -> RANK .)
    INNER           reduce using rule 139 (column_name -> RANK .)
    LEFT            reduce using rule 139 (column_name -> RANK .)
    FULL            reduce using rule 139 (column_name -> RANK .)
    RIGHT           reduce using rule 139 (column_name -> RANK .)
    CROSS           reduce using rule 139 (column_name -> RANK .)
    WHERE           reduce using rule 139 (column_name -> RANK .)


state 144

    (141) column_name -> TYPE_NAME .

    RPAREN          reduce using rule 141 (column_name -> TYPE_NAME .)
    COMMA           reduce using rule 141 (column_name -> TYPE_NAME .)
    AS              reduce using rule 141 (column_name -> TYPE_NAME .)
    AND             reduce using rule 141 (column_name -> TYPE_NAME .)
    OR              reduce using rule 141 (column_name -> TYPE_NAME .)
    MINUS           reduce using rule 141 (column_name -> TYPE_NAME .)
    ARITH_OP        reduce using rule 141 (column_name -> TYPE_NAME .)
    LIKE            reduce using rule 141 (column_name -> TYPE_NAME .)
    STAR            reduce using rule 141 (column_name -> TYPE_NAME .)
    REGEXP          reduce using rule 141 (column_name -> TYPE_NAME .)
    COMP_OP         reduce using rule 141 (column_name -> TYPE_NAME .)
    IS              reduce using rule 141 (column_name -> TYPE_NAME .)
    ORR             reduce using rule 141 (column_name -> TYPE_NAME .)
    NOT             reduce using rule 141 (column_name -> TYPE_NAME .)
    IN              reduce using rule 141 (column_name -> TYPE_NAME .)
    BETWEEN         reduce using rule 141 (column_name -> TYPE_NAME .)
    ID              reduce using rule 141 (column_name -> TYPE_NAME .)
    STRING          reduce using rule 141 (column_name -> TYPE_NAME .)
    END             reduce using rule 141 (column_name -> TYPE_NAME .)
    RANK            reduce using rule 141 (column_name -> TYPE_NAME .)
    TYPE_NAME       reduce using rule 141 (column_name -> TYPE_NAME .)
    FROM            reduce using rule 141 (column_name -> TYPE_NAME .)
    UNION           reduce using rule 141 (column_name -> TYPE_NAME .)
    EXCEPT          reduce using rule 141 (column_name -> TYPE_NAME .)
    SET_MINUS       reduce using rule 141 (column_name -> TYPE_NAME .)
    INTERSECT       reduce using rule 141 (column_name -> TYPE_NAME .)
    ORDER           reduce using rule 141 (column_name -> TYPE_NAME .)
    LIMIT           reduce using rule 141 (column_name -> TYPE_NAME .)
    $end            reduce using rule 141 (column_name -> TYPE_NAME .)
    WHEN            reduce using rule 141 (column_name -> TYPE_NAME .)
    ASC             reduce using rule 141 (column_name -> TYPE_NAME .)
    DESC            reduce using rule 141 (column_name -> TYPE_NAME .)
    GROUP           reduce using rule 141 (column_name -> TYPE_NAME .)
    THEN            reduce using rule 141 (column_name -> TYPE_NAME .)
    HAVING          reduce using rule 141 (column_name -> TYPE_NAME .)
    WITH            reduce using rule 141 (column_name -> TYPE_NAME .)
    ELSE            reduce using rule 141 (column_name -> TYPE_NAME .)
    JOIN            reduce using rule 141 (column_name -> TYPE_NAME .)
    INNER           reduce using rule 141 (column_name -> TYPE_NAME .)
    LEFT            reduce using rule 141 (column_name -> TYPE_NAME .)
    FULL            reduce using rule 141 (column_name -> TYPE_NAME .)
    RIGHT           reduce using rule 141 (column_name -> TYPE_NAME .)
    CROSS           reduce using rule 141 (column_name -> TYPE_NAME .)
    WHERE           reduce using rule 141 (column_name -> TYPE_NAME .)


state 145

    (17) common_table_expression -> table_name AS LPAREN . select_statement RPAREN
    (1) select_statement -> . select_core
    (2) select_statement -> . select_statement set_op select_core
    (3) select_statement -> . with_clause select_statement
    (4) select_statement -> . select_statement order_by
    (5) select_statement -> . select_statement limit
    (6) select_core -> . select_clause
    (7) select_core -> . select_clause from_clause
    (8) select_core -> . select_clause from_clause where_clause
    (9) select_core -> . select_clause from_clause group_clause
    (10) select_core -> . select_clause from_clause where_clause group_clause
    (18) with_clause -> . WITH common_table_expression
    (19) with_clause -> . WITH RECURSIVE common_table_expression
    (20) with_clause -> . with_clause COMMA common_table_expression
    (11) select_clause -> . SELECT result_column
    (12) select_clause -> . SELECT DISTINCT result_column
    (13) select_clause -> . select_clause COMMA result_column

    WITH            shift and go to state 5
    SELECT          shift and go to state 6

    select_statement               shift and go to state 202
    select_core                    shift and go to state 2
    with_clause                    shift and go to state 3
    select_clause                  shift and go to state 4

state 146

    (22) result_column -> expr AS column_alias .

    COMMA           reduce using rule 22 (result_column -> expr AS column_alias .)
    FROM            reduce using rule 22 (result_column -> expr AS column_alias .)
    UNION           reduce using rule 22 (result_column -> expr AS column_alias .)
    EXCEPT          reduce using rule 22 (result_column -> expr AS column_alias .)
    SET_MINUS       reduce using rule 22 (result_column -> expr AS column_alias .)
    INTERSECT       reduce using rule 22 (result_column -> expr AS column_alias .)
    ORDER           reduce using rule 22 (result_column -> expr AS column_alias .)
    LIMIT           reduce using rule 22 (result_column -> expr AS column_alias .)
    $end            reduce using rule 22 (result_column -> expr AS column_alias .)
    RPAREN          reduce using rule 22 (result_column -> expr AS column_alias .)


state 147

    (70) bin_op_expr -> expr AND expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    AS              reduce using rule 70 (bin_op_expr -> expr AND expr .)
    AND             reduce using rule 70 (bin_op_expr -> expr AND expr .)
    OR              reduce using rule 70 (bin_op_expr -> expr AND expr .)
    MINUS           reduce using rule 70 (bin_op_expr -> expr AND expr .)
    LIKE            reduce using rule 70 (bin_op_expr -> expr AND expr .)
    STAR            reduce using rule 70 (bin_op_expr -> expr AND expr .)
    REGEXP          reduce using rule 70 (bin_op_expr -> expr AND expr .)
    IS              reduce using rule 70 (bin_op_expr -> expr AND expr .)
    ORR             reduce using rule 70 (bin_op_expr -> expr AND expr .)
    NOT             reduce using rule 70 (bin_op_expr -> expr AND expr .)
    IN              reduce using rule 70 (bin_op_expr -> expr AND expr .)
    BETWEEN         reduce using rule 70 (bin_op_expr -> expr AND expr .)
    ID              reduce using rule 70 (bin_op_expr -> expr AND expr .)
    STRING          reduce using rule 70 (bin_op_expr -> expr AND expr .)
    END             reduce using rule 70 (bin_op_expr -> expr AND expr .)
    RANK            reduce using rule 70 (bin_op_expr -> expr AND expr .)
    TYPE_NAME       reduce using rule 70 (bin_op_expr -> expr AND expr .)
    COMMA           reduce using rule 70 (bin_op_expr -> expr AND expr .)
    FROM            reduce using rule 70 (bin_op_expr -> expr AND expr .)
    UNION           reduce using rule 70 (bin_op_expr -> expr AND expr .)
    EXCEPT          reduce using rule 70 (bin_op_expr -> expr AND expr .)
    SET_MINUS       reduce using rule 70 (bin_op_expr -> expr AND expr .)
    INTERSECT       reduce using rule 70 (bin_op_expr -> expr AND expr .)
    ORDER           reduce using rule 70 (bin_op_expr -> expr AND expr .)
    LIMIT           reduce using rule 70 (bin_op_expr -> expr AND expr .)
    $end            reduce using rule 70 (bin_op_expr -> expr AND expr .)
    RPAREN          reduce using rule 70 (bin_op_expr -> expr AND expr .)
    WHEN            reduce using rule 70 (bin_op_expr -> expr AND expr .)
    ASC             reduce using rule 70 (bin_op_expr -> expr AND expr .)
    DESC            reduce using rule 70 (bin_op_expr -> expr AND expr .)
    GROUP           reduce using rule 70 (bin_op_expr -> expr AND expr .)
    THEN            reduce using rule 70 (bin_op_expr -> expr AND expr .)
    HAVING          reduce using rule 70 (bin_op_expr -> expr AND expr .)
    WITH            reduce using rule 70 (bin_op_expr -> expr AND expr .)
    ELSE            reduce using rule 70 (bin_op_expr -> expr AND expr .)
    JOIN            reduce using rule 70 (bin_op_expr -> expr AND expr .)
    INNER           reduce using rule 70 (bin_op_expr -> expr AND expr .)
    LEFT            reduce using rule 70 (bin_op_expr -> expr AND expr .)
    FULL            reduce using rule 70 (bin_op_expr -> expr AND expr .)
    RIGHT           reduce using rule 70 (bin_op_expr -> expr AND expr .)
    CROSS           reduce using rule 70 (bin_op_expr -> expr AND expr .)
    WHERE           reduce using rule 70 (bin_op_expr -> expr AND expr .)
    ARITH_OP        shift and go to state 84
    COMP_OP         shift and go to state 88

  ! ARITH_OP        [ reduce using rule 70 (bin_op_expr -> expr AND expr .) ]
  ! COMP_OP         [ reduce using rule 70 (bin_op_expr -> expr AND expr .) ]
  ! AND             [ shift and go to state 81 ]
  ! OR              [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 83 ]
  ! LIKE            [ shift and go to state 85 ]
  ! STAR            [ shift and go to state 86 ]
  ! REGEXP          [ shift and go to state 87 ]
  ! IS              [ shift and go to state 89 ]
  ! ORR             [ shift and go to state 90 ]
  ! NOT             [ shift and go to state 91 ]
  ! IN              [ shift and go to state 92 ]
  ! BETWEEN         [ shift and go to state 93 ]


state 148

    (71) bin_op_expr -> expr OR expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    AS              reduce using rule 71 (bin_op_expr -> expr OR expr .)
    AND             reduce using rule 71 (bin_op_expr -> expr OR expr .)
    OR              reduce using rule 71 (bin_op_expr -> expr OR expr .)
    MINUS           reduce using rule 71 (bin_op_expr -> expr OR expr .)
    LIKE            reduce using rule 71 (bin_op_expr -> expr OR expr .)
    STAR            reduce using rule 71 (bin_op_expr -> expr OR expr .)
    REGEXP          reduce using rule 71 (bin_op_expr -> expr OR expr .)
    IS              reduce using rule 71 (bin_op_expr -> expr OR expr .)
    ORR             reduce using rule 71 (bin_op_expr -> expr OR expr .)
    NOT             reduce using rule 71 (bin_op_expr -> expr OR expr .)
    IN              reduce using rule 71 (bin_op_expr -> expr OR expr .)
    BETWEEN         reduce using rule 71 (bin_op_expr -> expr OR expr .)
    ID              reduce using rule 71 (bin_op_expr -> expr OR expr .)
    STRING          reduce using rule 71 (bin_op_expr -> expr OR expr .)
    END             reduce using rule 71 (bin_op_expr -> expr OR expr .)
    RANK            reduce using rule 71 (bin_op_expr -> expr OR expr .)
    TYPE_NAME       reduce using rule 71 (bin_op_expr -> expr OR expr .)
    COMMA           reduce using rule 71 (bin_op_expr -> expr OR expr .)
    FROM            reduce using rule 71 (bin_op_expr -> expr OR expr .)
    UNION           reduce using rule 71 (bin_op_expr -> expr OR expr .)
    EXCEPT          reduce using rule 71 (bin_op_expr -> expr OR expr .)
    SET_MINUS       reduce using rule 71 (bin_op_expr -> expr OR expr .)
    INTERSECT       reduce using rule 71 (bin_op_expr -> expr OR expr .)
    ORDER           reduce using rule 71 (bin_op_expr -> expr OR expr .)
    LIMIT           reduce using rule 71 (bin_op_expr -> expr OR expr .)
    $end            reduce using rule 71 (bin_op_expr -> expr OR expr .)
    RPAREN          reduce using rule 71 (bin_op_expr -> expr OR expr .)
    WHEN            reduce using rule 71 (bin_op_expr -> expr OR expr .)
    ASC             reduce using rule 71 (bin_op_expr -> expr OR expr .)
    DESC            reduce using rule 71 (bin_op_expr -> expr OR expr .)
    GROUP           reduce using rule 71 (bin_op_expr -> expr OR expr .)
    THEN            reduce using rule 71 (bin_op_expr -> expr OR expr .)
    HAVING          reduce using rule 71 (bin_op_expr -> expr OR expr .)
    WITH            reduce using rule 71 (bin_op_expr -> expr OR expr .)
    ELSE            reduce using rule 71 (bin_op_expr -> expr OR expr .)
    JOIN            reduce using rule 71 (bin_op_expr -> expr OR expr .)
    INNER           reduce using rule 71 (bin_op_expr -> expr OR expr .)
    LEFT            reduce using rule 71 (bin_op_expr -> expr OR expr .)
    FULL            reduce using rule 71 (bin_op_expr -> expr OR expr .)
    RIGHT           reduce using rule 71 (bin_op_expr -> expr OR expr .)
    CROSS           reduce using rule 71 (bin_op_expr -> expr OR expr .)
    WHERE           reduce using rule 71 (bin_op_expr -> expr OR expr .)
    ARITH_OP        shift and go to state 84
    COMP_OP         shift and go to state 88

  ! ARITH_OP        [ reduce using rule 71 (bin_op_expr -> expr OR expr .) ]
  ! COMP_OP         [ reduce using rule 71 (bin_op_expr -> expr OR expr .) ]
  ! AND             [ shift and go to state 81 ]
  ! OR              [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 83 ]
  ! LIKE            [ shift and go to state 85 ]
  ! STAR            [ shift and go to state 86 ]
  ! REGEXP          [ shift and go to state 87 ]
  ! IS              [ shift and go to state 89 ]
  ! ORR             [ shift and go to state 90 ]
  ! NOT             [ shift and go to state 91 ]
  ! IN              [ shift and go to state 92 ]
  ! BETWEEN         [ shift and go to state 93 ]


state 149

    (72) bin_op_expr -> expr MINUS expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for ARITH_OP resolved as shift
  ! shift/reduce conflict for LIKE resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for REGEXP resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for ORR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
    AS              reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    ID              reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    STRING          reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    END             reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    RANK            reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    TYPE_NAME       reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    COMMA           reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    FROM            reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    UNION           reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    EXCEPT          reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    SET_MINUS       reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    INTERSECT       reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    ORDER           reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    LIMIT           reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    $end            reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    RPAREN          reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    WHEN            reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    ASC             reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    DESC            reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    GROUP           reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    THEN            reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    HAVING          reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    WITH            reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    ELSE            reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    JOIN            reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    INNER           reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    LEFT            reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    FULL            reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    RIGHT           reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    CROSS           reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    WHERE           reduce using rule 72 (bin_op_expr -> expr MINUS expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93

  ! AND             [ reduce using rule 72 (bin_op_expr -> expr MINUS expr .) ]
  ! OR              [ reduce using rule 72 (bin_op_expr -> expr MINUS expr .) ]
  ! MINUS           [ reduce using rule 72 (bin_op_expr -> expr MINUS expr .) ]
  ! ARITH_OP        [ reduce using rule 72 (bin_op_expr -> expr MINUS expr .) ]
  ! LIKE            [ reduce using rule 72 (bin_op_expr -> expr MINUS expr .) ]
  ! STAR            [ reduce using rule 72 (bin_op_expr -> expr MINUS expr .) ]
  ! REGEXP          [ reduce using rule 72 (bin_op_expr -> expr MINUS expr .) ]
  ! COMP_OP         [ reduce using rule 72 (bin_op_expr -> expr MINUS expr .) ]
  ! IS              [ reduce using rule 72 (bin_op_expr -> expr MINUS expr .) ]
  ! ORR             [ reduce using rule 72 (bin_op_expr -> expr MINUS expr .) ]
  ! NOT             [ reduce using rule 72 (bin_op_expr -> expr MINUS expr .) ]
  ! IN              [ reduce using rule 72 (bin_op_expr -> expr MINUS expr .) ]
  ! BETWEEN         [ reduce using rule 72 (bin_op_expr -> expr MINUS expr .) ]


state 150

    (73) bin_op_expr -> expr ARITH_OP expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    AS              reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    AND             reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    OR              reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    MINUS           reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    ARITH_OP        reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    LIKE            reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    STAR            reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    REGEXP          reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    COMP_OP         reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    IS              reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    ORR             reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    NOT             reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    IN              reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    BETWEEN         reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    ID              reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    STRING          reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    END             reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    RANK            reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    TYPE_NAME       reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    COMMA           reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    FROM            reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    UNION           reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    EXCEPT          reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    SET_MINUS       reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    INTERSECT       reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    ORDER           reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    LIMIT           reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    $end            reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    RPAREN          reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    WHEN            reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    ASC             reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    DESC            reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    GROUP           reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    THEN            reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    HAVING          reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    WITH            reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    ELSE            reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    JOIN            reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    INNER           reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    LEFT            reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    FULL            reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    RIGHT           reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    CROSS           reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)
    WHERE           reduce using rule 73 (bin_op_expr -> expr ARITH_OP expr .)

  ! AND             [ shift and go to state 81 ]
  ! OR              [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 83 ]
  ! ARITH_OP        [ shift and go to state 84 ]
  ! LIKE            [ shift and go to state 85 ]
  ! STAR            [ shift and go to state 86 ]
  ! REGEXP          [ shift and go to state 87 ]
  ! COMP_OP         [ shift and go to state 88 ]
  ! IS              [ shift and go to state 89 ]
  ! ORR             [ shift and go to state 90 ]
  ! NOT             [ shift and go to state 91 ]
  ! IN              [ shift and go to state 92 ]
  ! BETWEEN         [ shift and go to state 93 ]


state 151

    (74) bin_op_expr -> expr LIKE expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for ARITH_OP resolved as shift
  ! shift/reduce conflict for LIKE resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for REGEXP resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for ORR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
    AS              reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    ID              reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    STRING          reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    END             reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    RANK            reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    TYPE_NAME       reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    COMMA           reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    FROM            reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    UNION           reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    EXCEPT          reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    SET_MINUS       reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    INTERSECT       reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    ORDER           reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    LIMIT           reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    $end            reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    RPAREN          reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    WHEN            reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    ASC             reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    DESC            reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    GROUP           reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    THEN            reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    HAVING          reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    WITH            reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    ELSE            reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    JOIN            reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    INNER           reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    LEFT            reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    FULL            reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    RIGHT           reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    CROSS           reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    WHERE           reduce using rule 74 (bin_op_expr -> expr LIKE expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93

  ! AND             [ reduce using rule 74 (bin_op_expr -> expr LIKE expr .) ]
  ! OR              [ reduce using rule 74 (bin_op_expr -> expr LIKE expr .) ]
  ! MINUS           [ reduce using rule 74 (bin_op_expr -> expr LIKE expr .) ]
  ! ARITH_OP        [ reduce using rule 74 (bin_op_expr -> expr LIKE expr .) ]
  ! LIKE            [ reduce using rule 74 (bin_op_expr -> expr LIKE expr .) ]
  ! STAR            [ reduce using rule 74 (bin_op_expr -> expr LIKE expr .) ]
  ! REGEXP          [ reduce using rule 74 (bin_op_expr -> expr LIKE expr .) ]
  ! COMP_OP         [ reduce using rule 74 (bin_op_expr -> expr LIKE expr .) ]
  ! IS              [ reduce using rule 74 (bin_op_expr -> expr LIKE expr .) ]
  ! ORR             [ reduce using rule 74 (bin_op_expr -> expr LIKE expr .) ]
  ! NOT             [ reduce using rule 74 (bin_op_expr -> expr LIKE expr .) ]
  ! IN              [ reduce using rule 74 (bin_op_expr -> expr LIKE expr .) ]
  ! BETWEEN         [ reduce using rule 74 (bin_op_expr -> expr LIKE expr .) ]


state 152

    (75) bin_op_expr -> expr STAR expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for ARITH_OP resolved as shift
  ! shift/reduce conflict for LIKE resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for REGEXP resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for ORR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
    AS              reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    ID              reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    STRING          reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    END             reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    RANK            reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    TYPE_NAME       reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    COMMA           reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    FROM            reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    UNION           reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    EXCEPT          reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    SET_MINUS       reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    INTERSECT       reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    ORDER           reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    LIMIT           reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    $end            reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    RPAREN          reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    WHEN            reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    ASC             reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    DESC            reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    GROUP           reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    THEN            reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    HAVING          reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    WITH            reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    ELSE            reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    JOIN            reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    INNER           reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    LEFT            reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    FULL            reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    RIGHT           reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    CROSS           reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    WHERE           reduce using rule 75 (bin_op_expr -> expr STAR expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93

  ! AND             [ reduce using rule 75 (bin_op_expr -> expr STAR expr .) ]
  ! OR              [ reduce using rule 75 (bin_op_expr -> expr STAR expr .) ]
  ! MINUS           [ reduce using rule 75 (bin_op_expr -> expr STAR expr .) ]
  ! ARITH_OP        [ reduce using rule 75 (bin_op_expr -> expr STAR expr .) ]
  ! LIKE            [ reduce using rule 75 (bin_op_expr -> expr STAR expr .) ]
  ! STAR            [ reduce using rule 75 (bin_op_expr -> expr STAR expr .) ]
  ! REGEXP          [ reduce using rule 75 (bin_op_expr -> expr STAR expr .) ]
  ! COMP_OP         [ reduce using rule 75 (bin_op_expr -> expr STAR expr .) ]
  ! IS              [ reduce using rule 75 (bin_op_expr -> expr STAR expr .) ]
  ! ORR             [ reduce using rule 75 (bin_op_expr -> expr STAR expr .) ]
  ! NOT             [ reduce using rule 75 (bin_op_expr -> expr STAR expr .) ]
  ! IN              [ reduce using rule 75 (bin_op_expr -> expr STAR expr .) ]
  ! BETWEEN         [ reduce using rule 75 (bin_op_expr -> expr STAR expr .) ]


state 153

    (76) bin_op_expr -> expr REGEXP expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for ARITH_OP resolved as shift
  ! shift/reduce conflict for LIKE resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for REGEXP resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for ORR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
    AS              reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    ID              reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    STRING          reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    END             reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    RANK            reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    TYPE_NAME       reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    COMMA           reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    FROM            reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    UNION           reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    EXCEPT          reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    SET_MINUS       reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    INTERSECT       reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    ORDER           reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    LIMIT           reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    $end            reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    RPAREN          reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    WHEN            reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    ASC             reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    DESC            reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    GROUP           reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    THEN            reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    HAVING          reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    WITH            reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    ELSE            reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    JOIN            reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    INNER           reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    LEFT            reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    FULL            reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    RIGHT           reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    CROSS           reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    WHERE           reduce using rule 76 (bin_op_expr -> expr REGEXP expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93

  ! AND             [ reduce using rule 76 (bin_op_expr -> expr REGEXP expr .) ]
  ! OR              [ reduce using rule 76 (bin_op_expr -> expr REGEXP expr .) ]
  ! MINUS           [ reduce using rule 76 (bin_op_expr -> expr REGEXP expr .) ]
  ! ARITH_OP        [ reduce using rule 76 (bin_op_expr -> expr REGEXP expr .) ]
  ! LIKE            [ reduce using rule 76 (bin_op_expr -> expr REGEXP expr .) ]
  ! STAR            [ reduce using rule 76 (bin_op_expr -> expr REGEXP expr .) ]
  ! REGEXP          [ reduce using rule 76 (bin_op_expr -> expr REGEXP expr .) ]
  ! COMP_OP         [ reduce using rule 76 (bin_op_expr -> expr REGEXP expr .) ]
  ! IS              [ reduce using rule 76 (bin_op_expr -> expr REGEXP expr .) ]
  ! ORR             [ reduce using rule 76 (bin_op_expr -> expr REGEXP expr .) ]
  ! NOT             [ reduce using rule 76 (bin_op_expr -> expr REGEXP expr .) ]
  ! IN              [ reduce using rule 76 (bin_op_expr -> expr REGEXP expr .) ]
  ! BETWEEN         [ reduce using rule 76 (bin_op_expr -> expr REGEXP expr .) ]


state 154

    (77) bin_op_expr -> expr COMP_OP expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    AS              reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    AND             reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    OR              reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    MINUS           reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    ARITH_OP        reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    LIKE            reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    STAR            reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    REGEXP          reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    COMP_OP         reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    IS              reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    ORR             reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    NOT             reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    IN              reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    BETWEEN         reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    ID              reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    STRING          reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    END             reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    RANK            reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    TYPE_NAME       reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    COMMA           reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    FROM            reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    UNION           reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    EXCEPT          reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    SET_MINUS       reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    INTERSECT       reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    ORDER           reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    LIMIT           reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    $end            reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    RPAREN          reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    WHEN            reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    ASC             reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    DESC            reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    GROUP           reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    THEN            reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    HAVING          reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    WITH            reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    ELSE            reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    JOIN            reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    INNER           reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    LEFT            reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    FULL            reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    RIGHT           reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    CROSS           reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)
    WHERE           reduce using rule 77 (bin_op_expr -> expr COMP_OP expr .)

  ! AND             [ shift and go to state 81 ]
  ! OR              [ shift and go to state 82 ]
  ! MINUS           [ shift and go to state 83 ]
  ! ARITH_OP        [ shift and go to state 84 ]
  ! LIKE            [ shift and go to state 85 ]
  ! STAR            [ shift and go to state 86 ]
  ! REGEXP          [ shift and go to state 87 ]
  ! COMP_OP         [ shift and go to state 88 ]
  ! IS              [ shift and go to state 89 ]
  ! ORR             [ shift and go to state 90 ]
  ! NOT             [ shift and go to state 91 ]
  ! IN              [ shift and go to state 92 ]
  ! BETWEEN         [ shift and go to state 93 ]


state 155

    (78) bin_op_expr -> expr IS expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for ARITH_OP resolved as shift
  ! shift/reduce conflict for LIKE resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for REGEXP resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for ORR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
    AS              reduce using rule 78 (bin_op_expr -> expr IS expr .)
    ID              reduce using rule 78 (bin_op_expr -> expr IS expr .)
    STRING          reduce using rule 78 (bin_op_expr -> expr IS expr .)
    END             reduce using rule 78 (bin_op_expr -> expr IS expr .)
    RANK            reduce using rule 78 (bin_op_expr -> expr IS expr .)
    TYPE_NAME       reduce using rule 78 (bin_op_expr -> expr IS expr .)
    COMMA           reduce using rule 78 (bin_op_expr -> expr IS expr .)
    FROM            reduce using rule 78 (bin_op_expr -> expr IS expr .)
    UNION           reduce using rule 78 (bin_op_expr -> expr IS expr .)
    EXCEPT          reduce using rule 78 (bin_op_expr -> expr IS expr .)
    SET_MINUS       reduce using rule 78 (bin_op_expr -> expr IS expr .)
    INTERSECT       reduce using rule 78 (bin_op_expr -> expr IS expr .)
    ORDER           reduce using rule 78 (bin_op_expr -> expr IS expr .)
    LIMIT           reduce using rule 78 (bin_op_expr -> expr IS expr .)
    $end            reduce using rule 78 (bin_op_expr -> expr IS expr .)
    RPAREN          reduce using rule 78 (bin_op_expr -> expr IS expr .)
    WHEN            reduce using rule 78 (bin_op_expr -> expr IS expr .)
    ASC             reduce using rule 78 (bin_op_expr -> expr IS expr .)
    DESC            reduce using rule 78 (bin_op_expr -> expr IS expr .)
    GROUP           reduce using rule 78 (bin_op_expr -> expr IS expr .)
    THEN            reduce using rule 78 (bin_op_expr -> expr IS expr .)
    HAVING          reduce using rule 78 (bin_op_expr -> expr IS expr .)
    WITH            reduce using rule 78 (bin_op_expr -> expr IS expr .)
    ELSE            reduce using rule 78 (bin_op_expr -> expr IS expr .)
    JOIN            reduce using rule 78 (bin_op_expr -> expr IS expr .)
    INNER           reduce using rule 78 (bin_op_expr -> expr IS expr .)
    LEFT            reduce using rule 78 (bin_op_expr -> expr IS expr .)
    FULL            reduce using rule 78 (bin_op_expr -> expr IS expr .)
    RIGHT           reduce using rule 78 (bin_op_expr -> expr IS expr .)
    CROSS           reduce using rule 78 (bin_op_expr -> expr IS expr .)
    WHERE           reduce using rule 78 (bin_op_expr -> expr IS expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93

  ! AND             [ reduce using rule 78 (bin_op_expr -> expr IS expr .) ]
  ! OR              [ reduce using rule 78 (bin_op_expr -> expr IS expr .) ]
  ! MINUS           [ reduce using rule 78 (bin_op_expr -> expr IS expr .) ]
  ! ARITH_OP        [ reduce using rule 78 (bin_op_expr -> expr IS expr .) ]
  ! LIKE            [ reduce using rule 78 (bin_op_expr -> expr IS expr .) ]
  ! STAR            [ reduce using rule 78 (bin_op_expr -> expr IS expr .) ]
  ! REGEXP          [ reduce using rule 78 (bin_op_expr -> expr IS expr .) ]
  ! COMP_OP         [ reduce using rule 78 (bin_op_expr -> expr IS expr .) ]
  ! IS              [ reduce using rule 78 (bin_op_expr -> expr IS expr .) ]
  ! ORR             [ reduce using rule 78 (bin_op_expr -> expr IS expr .) ]
  ! NOT             [ reduce using rule 78 (bin_op_expr -> expr IS expr .) ]
  ! IN              [ reduce using rule 78 (bin_op_expr -> expr IS expr .) ]
  ! BETWEEN         [ reduce using rule 78 (bin_op_expr -> expr IS expr .) ]


state 156

    (81) bin_op_expr -> expr IS NOT . expr
    (69) bin_op_expr -> NOT . expr
    (65) fun_expr -> NOT . EXISTS LPAREN select_statement RPAREN
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    EXISTS          shift and go to state 104
    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 203
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 157

    (79) bin_op_expr -> expr ORR expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for ARITH_OP resolved as shift
  ! shift/reduce conflict for LIKE resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for REGEXP resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for ORR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
    AS              reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    ID              reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    STRING          reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    END             reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    RANK            reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    TYPE_NAME       reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    COMMA           reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    FROM            reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    UNION           reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    EXCEPT          reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    SET_MINUS       reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    INTERSECT       reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    ORDER           reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    LIMIT           reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    $end            reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    RPAREN          reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    WHEN            reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    ASC             reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    DESC            reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    GROUP           reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    THEN            reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    HAVING          reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    WITH            reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    ELSE            reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    JOIN            reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    INNER           reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    LEFT            reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    FULL            reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    RIGHT           reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    CROSS           reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    WHERE           reduce using rule 79 (bin_op_expr -> expr ORR expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93

  ! AND             [ reduce using rule 79 (bin_op_expr -> expr ORR expr .) ]
  ! OR              [ reduce using rule 79 (bin_op_expr -> expr ORR expr .) ]
  ! MINUS           [ reduce using rule 79 (bin_op_expr -> expr ORR expr .) ]
  ! ARITH_OP        [ reduce using rule 79 (bin_op_expr -> expr ORR expr .) ]
  ! LIKE            [ reduce using rule 79 (bin_op_expr -> expr ORR expr .) ]
  ! STAR            [ reduce using rule 79 (bin_op_expr -> expr ORR expr .) ]
  ! REGEXP          [ reduce using rule 79 (bin_op_expr -> expr ORR expr .) ]
  ! COMP_OP         [ reduce using rule 79 (bin_op_expr -> expr ORR expr .) ]
  ! IS              [ reduce using rule 79 (bin_op_expr -> expr ORR expr .) ]
  ! ORR             [ reduce using rule 79 (bin_op_expr -> expr ORR expr .) ]
  ! NOT             [ reduce using rule 79 (bin_op_expr -> expr ORR expr .) ]
  ! IN              [ reduce using rule 79 (bin_op_expr -> expr ORR expr .) ]
  ! BETWEEN         [ reduce using rule 79 (bin_op_expr -> expr ORR expr .) ]


state 158

    (80) bin_op_expr -> expr NOT LIKE . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 204
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 159

    (84) bin_op_expr -> expr NOT IN . LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr NOT IN . LPAREN select_statement RPAREN

    LPAREN          shift and go to state 205


state 160

    (122) between_expr -> expr NOT BETWEEN . expr bin_op expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 206
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 161

    (82) bin_op_expr -> expr IN LPAREN . select_statement RPAREN
    (83) bin_op_expr -> expr IN LPAREN . literal_list RPAREN
    (1) select_statement -> . select_core
    (2) select_statement -> . select_statement set_op select_core
    (3) select_statement -> . with_clause select_statement
    (4) select_statement -> . select_statement order_by
    (5) select_statement -> . select_statement limit
    (158) literal_list -> . literal_value
    (159) literal_list -> . literal_list COMMA literal_value
    (160) literal_list -> . literal_list OR literal_value
    (6) select_core -> . select_clause
    (7) select_core -> . select_clause from_clause
    (8) select_core -> . select_clause from_clause where_clause
    (9) select_core -> . select_clause from_clause group_clause
    (10) select_core -> . select_clause from_clause where_clause group_clause
    (18) with_clause -> . WITH common_table_expression
    (19) with_clause -> . WITH RECURSIVE common_table_expression
    (20) with_clause -> . with_clause COMMA common_table_expression
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (11) select_clause -> . SELECT result_column
    (12) select_clause -> . SELECT DISTINCT result_column
    (13) select_clause -> . select_clause COMMA result_column

    WITH            shift and go to state 5
    NUMBER          shift and go to state 41
    STRING          shift and go to state 210
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NULL            shift and go to state 211
    SELECT          shift and go to state 6

    select_statement               shift and go to state 207
    literal_list                   shift and go to state 208
    select_core                    shift and go to state 2
    with_clause                    shift and go to state 3
    literal_value                  shift and go to state 209
    select_clause                  shift and go to state 4

state 162

    (121) between_expr -> expr BETWEEN expr . bin_op expr
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr
    (104) bin_op -> . ARITH_OP
    (105) bin_op -> . COMP_OP
    (106) bin_op -> . AND
    (107) bin_op -> . OR
    (108) bin_op -> . LIKE

    AND             shift and go to state 213
    OR              shift and go to state 214
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 215
    LIKE            shift and go to state 216
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 217
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93

    bin_op                         shift and go to state 212

state 163

    (87) expr -> LPAREN select_statement RPAREN .

    AS              reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    AND             reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    OR              reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    MINUS           reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    ARITH_OP        reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    LIKE            reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    STAR            reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    REGEXP          reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    COMP_OP         reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    IS              reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    ORR             reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    NOT             reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    IN              reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    BETWEEN         reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    ID              reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    STRING          reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    END             reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    RANK            reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    TYPE_NAME       reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    COMMA           reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    FROM            reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    UNION           reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    EXCEPT          reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    SET_MINUS       reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    INTERSECT       reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    ORDER           reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    LIMIT           reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    $end            reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    RPAREN          reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    WHEN            reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    ASC             reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    DESC            reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    GROUP           reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    THEN            reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    HAVING          reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    WITH            reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    ELSE            reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    JOIN            reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    INNER           reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    LEFT            reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    FULL            reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    RIGHT           reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    CROSS           reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)
    WHERE           reduce using rule 87 (expr -> LPAREN select_statement RPAREN .)


state 164

    (88) expr -> LPAREN expr RPAREN .

    AS              reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    AND             reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    OR              reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    ARITH_OP        reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    LIKE            reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    STAR            reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    REGEXP          reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    COMP_OP         reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    IS              reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    ORR             reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    NOT             reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    IN              reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    BETWEEN         reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    ID              reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    STRING          reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    END             reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    RANK            reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    TYPE_NAME       reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    COMMA           reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    FROM            reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    UNION           reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    EXCEPT          reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    SET_MINUS       reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    INTERSECT       reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    ORDER           reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    LIMIT           reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    $end            reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    WHEN            reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    ASC             reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    DESC            reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    GROUP           reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    THEN            reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    HAVING          reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    WITH            reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    ELSE            reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    JOIN            reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    INNER           reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    LEFT            reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    FULL            reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    RIGHT           reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    CROSS           reduce using rule 88 (expr -> LPAREN expr RPAREN .)
    WHERE           reduce using rule 88 (expr -> LPAREN expr RPAREN .)


state 165

    (61) column -> table_name DOT column_name .

    AS              reduce using rule 61 (column -> table_name DOT column_name .)
    AND             reduce using rule 61 (column -> table_name DOT column_name .)
    OR              reduce using rule 61 (column -> table_name DOT column_name .)
    MINUS           reduce using rule 61 (column -> table_name DOT column_name .)
    ARITH_OP        reduce using rule 61 (column -> table_name DOT column_name .)
    LIKE            reduce using rule 61 (column -> table_name DOT column_name .)
    STAR            reduce using rule 61 (column -> table_name DOT column_name .)
    REGEXP          reduce using rule 61 (column -> table_name DOT column_name .)
    COMP_OP         reduce using rule 61 (column -> table_name DOT column_name .)
    IS              reduce using rule 61 (column -> table_name DOT column_name .)
    ORR             reduce using rule 61 (column -> table_name DOT column_name .)
    NOT             reduce using rule 61 (column -> table_name DOT column_name .)
    IN              reduce using rule 61 (column -> table_name DOT column_name .)
    BETWEEN         reduce using rule 61 (column -> table_name DOT column_name .)
    ID              reduce using rule 61 (column -> table_name DOT column_name .)
    STRING          reduce using rule 61 (column -> table_name DOT column_name .)
    END             reduce using rule 61 (column -> table_name DOT column_name .)
    RANK            reduce using rule 61 (column -> table_name DOT column_name .)
    TYPE_NAME       reduce using rule 61 (column -> table_name DOT column_name .)
    COMMA           reduce using rule 61 (column -> table_name DOT column_name .)
    FROM            reduce using rule 61 (column -> table_name DOT column_name .)
    UNION           reduce using rule 61 (column -> table_name DOT column_name .)
    EXCEPT          reduce using rule 61 (column -> table_name DOT column_name .)
    SET_MINUS       reduce using rule 61 (column -> table_name DOT column_name .)
    INTERSECT       reduce using rule 61 (column -> table_name DOT column_name .)
    ORDER           reduce using rule 61 (column -> table_name DOT column_name .)
    LIMIT           reduce using rule 61 (column -> table_name DOT column_name .)
    $end            reduce using rule 61 (column -> table_name DOT column_name .)
    RPAREN          reduce using rule 61 (column -> table_name DOT column_name .)
    WHEN            reduce using rule 61 (column -> table_name DOT column_name .)
    ASC             reduce using rule 61 (column -> table_name DOT column_name .)
    DESC            reduce using rule 61 (column -> table_name DOT column_name .)
    GROUP           reduce using rule 61 (column -> table_name DOT column_name .)
    THEN            reduce using rule 61 (column -> table_name DOT column_name .)
    HAVING          reduce using rule 61 (column -> table_name DOT column_name .)
    WITH            reduce using rule 61 (column -> table_name DOT column_name .)
    ELSE            reduce using rule 61 (column -> table_name DOT column_name .)
    JOIN            reduce using rule 61 (column -> table_name DOT column_name .)
    INNER           reduce using rule 61 (column -> table_name DOT column_name .)
    LEFT            reduce using rule 61 (column -> table_name DOT column_name .)
    FULL            reduce using rule 61 (column -> table_name DOT column_name .)
    RIGHT           reduce using rule 61 (column -> table_name DOT column_name .)
    CROSS           reduce using rule 61 (column -> table_name DOT column_name .)
    WHERE           reduce using rule 61 (column -> table_name DOT column_name .)


state 166

    (136) column_name -> ID .

    AS              reduce using rule 136 (column_name -> ID .)
    AND             reduce using rule 136 (column_name -> ID .)
    OR              reduce using rule 136 (column_name -> ID .)
    MINUS           reduce using rule 136 (column_name -> ID .)
    ARITH_OP        reduce using rule 136 (column_name -> ID .)
    LIKE            reduce using rule 136 (column_name -> ID .)
    STAR            reduce using rule 136 (column_name -> ID .)
    REGEXP          reduce using rule 136 (column_name -> ID .)
    COMP_OP         reduce using rule 136 (column_name -> ID .)
    IS              reduce using rule 136 (column_name -> ID .)
    ORR             reduce using rule 136 (column_name -> ID .)
    NOT             reduce using rule 136 (column_name -> ID .)
    IN              reduce using rule 136 (column_name -> ID .)
    BETWEEN         reduce using rule 136 (column_name -> ID .)
    ID              reduce using rule 136 (column_name -> ID .)
    STRING          reduce using rule 136 (column_name -> ID .)
    END             reduce using rule 136 (column_name -> ID .)
    RANK            reduce using rule 136 (column_name -> ID .)
    TYPE_NAME       reduce using rule 136 (column_name -> ID .)
    COMMA           reduce using rule 136 (column_name -> ID .)
    FROM            reduce using rule 136 (column_name -> ID .)
    UNION           reduce using rule 136 (column_name -> ID .)
    EXCEPT          reduce using rule 136 (column_name -> ID .)
    SET_MINUS       reduce using rule 136 (column_name -> ID .)
    INTERSECT       reduce using rule 136 (column_name -> ID .)
    ORDER           reduce using rule 136 (column_name -> ID .)
    LIMIT           reduce using rule 136 (column_name -> ID .)
    $end            reduce using rule 136 (column_name -> ID .)
    RPAREN          reduce using rule 136 (column_name -> ID .)
    WHEN            reduce using rule 136 (column_name -> ID .)
    ASC             reduce using rule 136 (column_name -> ID .)
    DESC            reduce using rule 136 (column_name -> ID .)
    GROUP           reduce using rule 136 (column_name -> ID .)
    THEN            reduce using rule 136 (column_name -> ID .)
    HAVING          reduce using rule 136 (column_name -> ID .)
    WITH            reduce using rule 136 (column_name -> ID .)
    ELSE            reduce using rule 136 (column_name -> ID .)
    JOIN            reduce using rule 136 (column_name -> ID .)
    INNER           reduce using rule 136 (column_name -> ID .)
    LEFT            reduce using rule 136 (column_name -> ID .)
    FULL            reduce using rule 136 (column_name -> ID .)
    RIGHT           reduce using rule 136 (column_name -> ID .)
    CROSS           reduce using rule 136 (column_name -> ID .)
    WHERE           reduce using rule 136 (column_name -> ID .)


state 167

    (137) column_name -> STRING .

    AS              reduce using rule 137 (column_name -> STRING .)
    AND             reduce using rule 137 (column_name -> STRING .)
    OR              reduce using rule 137 (column_name -> STRING .)
    MINUS           reduce using rule 137 (column_name -> STRING .)
    ARITH_OP        reduce using rule 137 (column_name -> STRING .)
    LIKE            reduce using rule 137 (column_name -> STRING .)
    STAR            reduce using rule 137 (column_name -> STRING .)
    REGEXP          reduce using rule 137 (column_name -> STRING .)
    COMP_OP         reduce using rule 137 (column_name -> STRING .)
    IS              reduce using rule 137 (column_name -> STRING .)
    ORR             reduce using rule 137 (column_name -> STRING .)
    NOT             reduce using rule 137 (column_name -> STRING .)
    IN              reduce using rule 137 (column_name -> STRING .)
    BETWEEN         reduce using rule 137 (column_name -> STRING .)
    ID              reduce using rule 137 (column_name -> STRING .)
    STRING          reduce using rule 137 (column_name -> STRING .)
    END             reduce using rule 137 (column_name -> STRING .)
    RANK            reduce using rule 137 (column_name -> STRING .)
    TYPE_NAME       reduce using rule 137 (column_name -> STRING .)
    COMMA           reduce using rule 137 (column_name -> STRING .)
    FROM            reduce using rule 137 (column_name -> STRING .)
    UNION           reduce using rule 137 (column_name -> STRING .)
    EXCEPT          reduce using rule 137 (column_name -> STRING .)
    SET_MINUS       reduce using rule 137 (column_name -> STRING .)
    INTERSECT       reduce using rule 137 (column_name -> STRING .)
    ORDER           reduce using rule 137 (column_name -> STRING .)
    LIMIT           reduce using rule 137 (column_name -> STRING .)
    $end            reduce using rule 137 (column_name -> STRING .)
    RPAREN          reduce using rule 137 (column_name -> STRING .)
    WHEN            reduce using rule 137 (column_name -> STRING .)
    ASC             reduce using rule 137 (column_name -> STRING .)
    DESC            reduce using rule 137 (column_name -> STRING .)
    GROUP           reduce using rule 137 (column_name -> STRING .)
    THEN            reduce using rule 137 (column_name -> STRING .)
    HAVING          reduce using rule 137 (column_name -> STRING .)
    WITH            reduce using rule 137 (column_name -> STRING .)
    ELSE            reduce using rule 137 (column_name -> STRING .)
    JOIN            reduce using rule 137 (column_name -> STRING .)
    INNER           reduce using rule 137 (column_name -> STRING .)
    LEFT            reduce using rule 137 (column_name -> STRING .)
    FULL            reduce using rule 137 (column_name -> STRING .)
    RIGHT           reduce using rule 137 (column_name -> STRING .)
    CROSS           reduce using rule 137 (column_name -> STRING .)
    WHERE           reduce using rule 137 (column_name -> STRING .)


state 168

    (65) fun_expr -> NOT EXISTS LPAREN . select_statement RPAREN
    (63) fun_expr -> EXISTS LPAREN . select_statement RPAREN
    (1) select_statement -> . select_core
    (2) select_statement -> . select_statement set_op select_core
    (3) select_statement -> . with_clause select_statement
    (4) select_statement -> . select_statement order_by
    (5) select_statement -> . select_statement limit
    (6) select_core -> . select_clause
    (7) select_core -> . select_clause from_clause
    (8) select_core -> . select_clause from_clause where_clause
    (9) select_core -> . select_clause from_clause group_clause
    (10) select_core -> . select_clause from_clause where_clause group_clause
    (18) with_clause -> . WITH common_table_expression
    (19) with_clause -> . WITH RECURSIVE common_table_expression
    (20) with_clause -> . with_clause COMMA common_table_expression
    (11) select_clause -> . SELECT result_column
    (12) select_clause -> . SELECT DISTINCT result_column
    (13) select_clause -> . select_clause COMMA result_column

    WITH            shift and go to state 5
    SELECT          shift and go to state 6

    select_statement               shift and go to state 218
    select_core                    shift and go to state 2
    with_clause                    shift and go to state 3
    select_clause                  shift and go to state 4

state 169

    (62) fun_expr -> fun_name LPAREN RPAREN .

    AS              reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    AND             reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    OR              reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    MINUS           reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    ARITH_OP        reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    LIKE            reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    STAR            reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    REGEXP          reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    COMP_OP         reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    IS              reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    ORR             reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    NOT             reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    IN              reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    BETWEEN         reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    ID              reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    STRING          reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    END             reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    RANK            reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    TYPE_NAME       reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    COMMA           reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    FROM            reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    UNION           reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    EXCEPT          reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    SET_MINUS       reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    INTERSECT       reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    ORDER           reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    LIMIT           reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    $end            reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    RPAREN          reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    WHEN            reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    ASC             reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    DESC            reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    GROUP           reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    THEN            reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    HAVING          reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    WITH            reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    ELSE            reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    JOIN            reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    INNER           reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    LEFT            reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    FULL            reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    RIGHT           reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    CROSS           reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)
    WHERE           reduce using rule 62 (fun_expr -> fun_name LPAREN RPAREN .)


state 170

    (64) fun_expr -> fun_name LPAREN expr . RPAREN
    (67) fun_expr -> fun_name LPAREN expr . COMMA expr RPAREN
    (68) fun_expr -> fun_name LPAREN expr . COMMA expr COMMA expr RPAREN
    (143) win_expr -> fun_name LPAREN expr . RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> fun_name LPAREN expr . COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    RPAREN          shift and go to state 219
    COMMA           shift and go to state 220
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 171

    (66) fun_expr -> fun_name LPAREN DISTINCT . expr RPAREN
    (144) win_expr -> fun_name LPAREN DISTINCT . expr RPAREN OVER LPAREN win_def RPAREN
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    fun_name                       shift and go to state 47
    expr                           shift and go to state 221
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    win_fun                        shift and go to state 50

state 172

    (63) fun_expr -> EXISTS LPAREN select_statement . RPAREN
    (2) select_statement -> select_statement . set_op select_core
    (4) select_statement -> select_statement . order_by
    (5) select_statement -> select_statement . limit
    (97) set_op -> . UNION
    (98) set_op -> . EXCEPT
    (99) set_op -> . UNION ALL
    (100) set_op -> . SET_MINUS
    (101) set_op -> . INTERSECT
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term
    (28) limit -> . LIMIT expr
    (29) limit -> . LIMIT expr COMMA expr

    RPAREN          shift and go to state 222
    UNION           shift and go to state 10
    EXCEPT          shift and go to state 11
    SET_MINUS       shift and go to state 12
    INTERSECT       shift and go to state 13
    ORDER           shift and go to state 14
    LIMIT           shift and go to state 15

    set_op                         shift and go to state 7
    order_by                       shift and go to state 8
    limit                          shift and go to state 9

state 173

    (120) cast_expr -> CAST LPAREN expr . AS type_name RPAREN
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    AS              shift and go to state 223
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 174

    (142) win_expr -> win_fun LPAREN RPAREN . OVER LPAREN win_def RPAREN

    OVER            shift and go to state 224


state 175

    (153) case_expr -> CASE case_when_expr END .

    AS              reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    AND             reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    OR              reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    MINUS           reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    ARITH_OP        reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    LIKE            reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    STAR            reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    REGEXP          reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    COMP_OP         reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    IS              reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    ORR             reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    NOT             reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    IN              reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    BETWEEN         reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    ID              reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    STRING          reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    END             reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    RANK            reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    TYPE_NAME       reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    COMMA           reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    FROM            reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    UNION           reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    EXCEPT          reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    SET_MINUS       reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    INTERSECT       reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    ORDER           reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    LIMIT           reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    $end            reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    RPAREN          reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    WHEN            reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    ASC             reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    DESC            reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    GROUP           reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    THEN            reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    HAVING          reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    WITH            reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    ELSE            reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    JOIN            reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    INNER           reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    LEFT            reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    FULL            reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    RIGHT           reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    CROSS           reduce using rule 153 (case_expr -> CASE case_when_expr END .)
    WHERE           reduce using rule 153 (case_expr -> CASE case_when_expr END .)


state 176

    (154) case_expr -> CASE expr case_when_expr . END

    END             shift and go to state 225


state 177

    (155) case_when_expr -> WHEN expr . THEN expr
    (156) case_when_expr -> WHEN expr . THEN expr ELSE expr
    (157) case_when_expr -> WHEN expr . THEN expr case_when_expr
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    THEN            shift and go to state 226
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 178

    (27) ordering_term -> expr sort_order .

    COMMA           reduce using rule 27 (ordering_term -> expr sort_order .)
    UNION           reduce using rule 27 (ordering_term -> expr sort_order .)
    EXCEPT          reduce using rule 27 (ordering_term -> expr sort_order .)
    SET_MINUS       reduce using rule 27 (ordering_term -> expr sort_order .)
    INTERSECT       reduce using rule 27 (ordering_term -> expr sort_order .)
    ORDER           reduce using rule 27 (ordering_term -> expr sort_order .)
    LIMIT           reduce using rule 27 (ordering_term -> expr sort_order .)
    $end            reduce using rule 27 (ordering_term -> expr sort_order .)
    RPAREN          reduce using rule 27 (ordering_term -> expr sort_order .)


state 179

    (102) sort_order -> ASC .

    COMMA           reduce using rule 102 (sort_order -> ASC .)
    UNION           reduce using rule 102 (sort_order -> ASC .)
    EXCEPT          reduce using rule 102 (sort_order -> ASC .)
    SET_MINUS       reduce using rule 102 (sort_order -> ASC .)
    INTERSECT       reduce using rule 102 (sort_order -> ASC .)
    ORDER           reduce using rule 102 (sort_order -> ASC .)
    LIMIT           reduce using rule 102 (sort_order -> ASC .)
    $end            reduce using rule 102 (sort_order -> ASC .)
    RPAREN          reduce using rule 102 (sort_order -> ASC .)


state 180

    (103) sort_order -> DESC .

    COMMA           reduce using rule 103 (sort_order -> DESC .)
    UNION           reduce using rule 103 (sort_order -> DESC .)
    EXCEPT          reduce using rule 103 (sort_order -> DESC .)
    SET_MINUS       reduce using rule 103 (sort_order -> DESC .)
    INTERSECT       reduce using rule 103 (sort_order -> DESC .)
    ORDER           reduce using rule 103 (sort_order -> DESC .)
    LIMIT           reduce using rule 103 (sort_order -> DESC .)
    $end            reduce using rule 103 (sort_order -> DESC .)
    RPAREN          reduce using rule 103 (sort_order -> DESC .)


state 181

    (29) limit -> LIMIT expr COMMA expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    UNION           reduce using rule 29 (limit -> LIMIT expr COMMA expr .)
    EXCEPT          reduce using rule 29 (limit -> LIMIT expr COMMA expr .)
    SET_MINUS       reduce using rule 29 (limit -> LIMIT expr COMMA expr .)
    INTERSECT       reduce using rule 29 (limit -> LIMIT expr COMMA expr .)
    ORDER           reduce using rule 29 (limit -> LIMIT expr COMMA expr .)
    LIMIT           reduce using rule 29 (limit -> LIMIT expr COMMA expr .)
    $end            reduce using rule 29 (limit -> LIMIT expr COMMA expr .)
    RPAREN          reduce using rule 29 (limit -> LIMIT expr COMMA expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 182

    (56) group_clause -> group_clause COMMA expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    COMMA           reduce using rule 56 (group_clause -> group_clause COMMA expr .)
    HAVING          reduce using rule 56 (group_clause -> group_clause COMMA expr .)
    WITH            reduce using rule 56 (group_clause -> group_clause COMMA expr .)
    UNION           reduce using rule 56 (group_clause -> group_clause COMMA expr .)
    EXCEPT          reduce using rule 56 (group_clause -> group_clause COMMA expr .)
    SET_MINUS       reduce using rule 56 (group_clause -> group_clause COMMA expr .)
    INTERSECT       reduce using rule 56 (group_clause -> group_clause COMMA expr .)
    ORDER           reduce using rule 56 (group_clause -> group_clause COMMA expr .)
    LIMIT           reduce using rule 56 (group_clause -> group_clause COMMA expr .)
    $end            reduce using rule 56 (group_clause -> group_clause COMMA expr .)
    RPAREN          reduce using rule 56 (group_clause -> group_clause COMMA expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 183

    (57) group_clause -> group_clause HAVING expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    COMMA           reduce using rule 57 (group_clause -> group_clause HAVING expr .)
    HAVING          reduce using rule 57 (group_clause -> group_clause HAVING expr .)
    WITH            reduce using rule 57 (group_clause -> group_clause HAVING expr .)
    UNION           reduce using rule 57 (group_clause -> group_clause HAVING expr .)
    EXCEPT          reduce using rule 57 (group_clause -> group_clause HAVING expr .)
    SET_MINUS       reduce using rule 57 (group_clause -> group_clause HAVING expr .)
    INTERSECT       reduce using rule 57 (group_clause -> group_clause HAVING expr .)
    ORDER           reduce using rule 57 (group_clause -> group_clause HAVING expr .)
    LIMIT           reduce using rule 57 (group_clause -> group_clause HAVING expr .)
    $end            reduce using rule 57 (group_clause -> group_clause HAVING expr .)
    RPAREN          reduce using rule 57 (group_clause -> group_clause HAVING expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 184

    (58) group_clause -> group_clause WITH ROLLUP .
    (59) group_clause -> group_clause WITH ROLLUP . HAVING expr

  ! shift/reduce conflict for HAVING resolved as shift
    COMMA           reduce using rule 58 (group_clause -> group_clause WITH ROLLUP .)
    WITH            reduce using rule 58 (group_clause -> group_clause WITH ROLLUP .)
    UNION           reduce using rule 58 (group_clause -> group_clause WITH ROLLUP .)
    EXCEPT          reduce using rule 58 (group_clause -> group_clause WITH ROLLUP .)
    SET_MINUS       reduce using rule 58 (group_clause -> group_clause WITH ROLLUP .)
    INTERSECT       reduce using rule 58 (group_clause -> group_clause WITH ROLLUP .)
    ORDER           reduce using rule 58 (group_clause -> group_clause WITH ROLLUP .)
    LIMIT           reduce using rule 58 (group_clause -> group_clause WITH ROLLUP .)
    $end            reduce using rule 58 (group_clause -> group_clause WITH ROLLUP .)
    RPAREN          reduce using rule 58 (group_clause -> group_clause WITH ROLLUP .)
    HAVING          shift and go to state 227

  ! HAVING          [ reduce using rule 58 (group_clause -> group_clause WITH ROLLUP .) ]


state 185

    (55) group_clause -> GROUP BY expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    COMMA           reduce using rule 55 (group_clause -> GROUP BY expr .)
    HAVING          reduce using rule 55 (group_clause -> GROUP BY expr .)
    WITH            reduce using rule 55 (group_clause -> GROUP BY expr .)
    UNION           reduce using rule 55 (group_clause -> GROUP BY expr .)
    EXCEPT          reduce using rule 55 (group_clause -> GROUP BY expr .)
    SET_MINUS       reduce using rule 55 (group_clause -> GROUP BY expr .)
    INTERSECT       reduce using rule 55 (group_clause -> GROUP BY expr .)
    ORDER           reduce using rule 55 (group_clause -> GROUP BY expr .)
    LIMIT           reduce using rule 55 (group_clause -> GROUP BY expr .)
    $end            reduce using rule 55 (group_clause -> GROUP BY expr .)
    RPAREN          reduce using rule 55 (group_clause -> GROUP BY expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 186

    (48) join_clause -> table_or_subquery join_op table_or_subquery . join_constraint
    (49) join_clause -> table_or_subquery join_op table_or_subquery .
    (52) join_constraint -> . ON expr
    (53) join_constraint -> . USING expr

    JOIN            reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    INNER           reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    LEFT            reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    FULL            reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    RIGHT           reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    CROSS           reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    COMMA           reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    WHERE           reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    GROUP           reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    UNION           reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    EXCEPT          reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    SET_MINUS       reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    INTERSECT       reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    ORDER           reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    LIMIT           reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    $end            reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    RPAREN          reduce using rule 49 (join_clause -> table_or_subquery join_op table_or_subquery .)
    ON              shift and go to state 229
    USING           shift and go to state 230

    join_constraint                shift and go to state 228

state 187

    (110) join_op -> INNER JOIN .

    LPAREN          reduce using rule 110 (join_op -> INNER JOIN .)
    ID              reduce using rule 110 (join_op -> INNER JOIN .)
    STRING          reduce using rule 110 (join_op -> INNER JOIN .)


state 188

    (111) join_op -> LEFT JOIN .

    LPAREN          reduce using rule 111 (join_op -> LEFT JOIN .)
    ID              reduce using rule 111 (join_op -> LEFT JOIN .)
    STRING          reduce using rule 111 (join_op -> LEFT JOIN .)


state 189

    (113) join_op -> LEFT OUTER . JOIN

    JOIN            shift and go to state 231


state 190

    (112) join_op -> FULL JOIN .

    LPAREN          reduce using rule 112 (join_op -> FULL JOIN .)
    ID              reduce using rule 112 (join_op -> FULL JOIN .)
    STRING          reduce using rule 112 (join_op -> FULL JOIN .)


state 191

    (115) join_op -> FULL OUTER . JOIN

    JOIN            shift and go to state 232


state 192

    (114) join_op -> RIGHT OUTER . JOIN

    JOIN            shift and go to state 233


state 193

    (116) join_op -> RIGHT JOIN .

    LPAREN          reduce using rule 116 (join_op -> RIGHT JOIN .)
    ID              reduce using rule 116 (join_op -> RIGHT JOIN .)
    STRING          reduce using rule 116 (join_op -> RIGHT JOIN .)


state 194

    (117) join_op -> CROSS JOIN .

    LPAREN          reduce using rule 117 (join_op -> CROSS JOIN .)
    ID              reduce using rule 117 (join_op -> CROSS JOIN .)
    STRING          reduce using rule 117 (join_op -> CROSS JOIN .)


state 195

    (50) join_clause -> join_clause join_op table_or_subquery . join_constraint
    (51) join_clause -> join_clause join_op table_or_subquery .
    (52) join_constraint -> . ON expr
    (53) join_constraint -> . USING expr

    JOIN            reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    INNER           reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    LEFT            reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    FULL            reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    RIGHT           reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    CROSS           reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    COMMA           reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    WHERE           reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    GROUP           reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    UNION           reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    EXCEPT          reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    SET_MINUS       reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    INTERSECT       reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    ORDER           reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    LIMIT           reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    $end            reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    RPAREN          reduce using rule 51 (join_clause -> join_clause join_op table_or_subquery .)
    ON              shift and go to state 229
    USING           shift and go to state 230

    join_constraint                shift and go to state 234

state 196

    (35) table_or_subquery -> table_name DOT table_name .
    (39) table_or_subquery -> table_name DOT table_name . table_alias
    (42) table_or_subquery -> table_name DOT table_name . AS table_alias
    (43) table_or_subquery -> table_name DOT table_name . DOT table_name
    (46) table_alias -> . ID
    (47) table_alias -> . STRING

    JOIN            reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    INNER           reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    LEFT            reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    FULL            reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    RIGHT           reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    CROSS           reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    COMMA           reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    WHERE           reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    GROUP           reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    UNION           reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    EXCEPT          reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    SET_MINUS       reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    INTERSECT       reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    ORDER           reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    LIMIT           reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    $end            reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    RPAREN          reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    ON              reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    USING           reduce using rule 35 (table_or_subquery -> table_name DOT table_name .)
    AS              shift and go to state 237
    DOT             shift and go to state 235
    ID              shift and go to state 134
    STRING          shift and go to state 135

    table_alias                    shift and go to state 236

state 197

    (36) table_or_subquery -> table_name AS table_alias .

    JOIN            reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    INNER           reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    LEFT            reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    FULL            reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    RIGHT           reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    CROSS           reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    COMMA           reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    WHERE           reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    GROUP           reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    UNION           reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    EXCEPT          reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    SET_MINUS       reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    INTERSECT       reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    ORDER           reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    LIMIT           reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    $end            reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    RPAREN          reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    ON              reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)
    USING           reduce using rule 36 (table_or_subquery -> table_name AS table_alias .)


state 198

    (37) table_or_subquery -> LPAREN select_statement RPAREN .
    (40) table_or_subquery -> LPAREN select_statement RPAREN . table_alias
    (41) table_or_subquery -> LPAREN select_statement RPAREN . AS table_alias
    (46) table_alias -> . ID
    (47) table_alias -> . STRING

    JOIN            reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    INNER           reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    LEFT            reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    FULL            reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    RIGHT           reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    CROSS           reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    COMMA           reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    WHERE           reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    GROUP           reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    UNION           reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    EXCEPT          reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    SET_MINUS       reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    INTERSECT       reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    ORDER           reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    LIMIT           reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    $end            reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    RPAREN          reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    ON              reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    USING           reduce using rule 37 (table_or_subquery -> LPAREN select_statement RPAREN .)
    AS              shift and go to state 239
    ID              shift and go to state 134
    STRING          shift and go to state 135

    table_alias                    shift and go to state 238

state 199

    (38) table_or_subquery -> LPAREN join_clause RPAREN .

    JOIN            reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    INNER           reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    LEFT            reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    FULL            reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    RIGHT           reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    CROSS           reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    COMMA           reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    WHERE           reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    GROUP           reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    UNION           reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    EXCEPT          reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    SET_MINUS       reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    INTERSECT       reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    ORDER           reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    LIMIT           reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    $end            reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    RPAREN          reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    ON              reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)
    USING           reduce using rule 38 (table_or_subquery -> LPAREN join_clause RPAREN .)


state 200

    (16) common_table_expression -> table_name LPAREN column_list RPAREN . AS LPAREN select_statement RPAREN

    AS              shift and go to state 240


state 201

    (15) column_list -> column_list COMMA . column
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING

    ID              shift and go to state 141
    STRING          shift and go to state 142
    STAR            shift and go to state 46
    RANK            shift and go to state 143
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 144

    column                         shift and go to state 241
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40

state 202

    (17) common_table_expression -> table_name AS LPAREN select_statement . RPAREN
    (2) select_statement -> select_statement . set_op select_core
    (4) select_statement -> select_statement . order_by
    (5) select_statement -> select_statement . limit
    (97) set_op -> . UNION
    (98) set_op -> . EXCEPT
    (99) set_op -> . UNION ALL
    (100) set_op -> . SET_MINUS
    (101) set_op -> . INTERSECT
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term
    (28) limit -> . LIMIT expr
    (29) limit -> . LIMIT expr COMMA expr

    RPAREN          shift and go to state 242
    UNION           shift and go to state 10
    EXCEPT          shift and go to state 11
    SET_MINUS       shift and go to state 12
    INTERSECT       shift and go to state 13
    ORDER           shift and go to state 14
    LIMIT           shift and go to state 15

    set_op                         shift and go to state 7
    order_by                       shift and go to state 8
    limit                          shift and go to state 9

state 203

    (81) bin_op_expr -> expr IS NOT expr .
    (69) bin_op_expr -> NOT expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

  ! reduce/reduce conflict for AND resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for OR resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for MINUS resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for ARITH_OP resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for LIKE resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for STAR resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for REGEXP resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for COMP_OP resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for IS resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for ORR resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for NOT resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for IN resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for BETWEEN resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for AS resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for ID resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for STRING resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for END resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for RANK resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for TYPE_NAME resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for COMMA resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for FROM resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for UNION resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for EXCEPT resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for SET_MINUS resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for INTERSECT resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for ORDER resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for LIMIT resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for $end resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for RPAREN resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for WHEN resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for ASC resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for DESC resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for GROUP resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for THEN resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for HAVING resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for WITH resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for ELSE resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for JOIN resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for INNER resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for LEFT resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for FULL resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for RIGHT resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for CROSS resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! reduce/reduce conflict for WHERE resolved using rule 69 (bin_op_expr -> NOT expr .)
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for ARITH_OP resolved as shift
  ! shift/reduce conflict for LIKE resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for REGEXP resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for ORR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
    AS              reduce using rule 69 (bin_op_expr -> NOT expr .)
    ID              reduce using rule 69 (bin_op_expr -> NOT expr .)
    STRING          reduce using rule 69 (bin_op_expr -> NOT expr .)
    END             reduce using rule 69 (bin_op_expr -> NOT expr .)
    RANK            reduce using rule 69 (bin_op_expr -> NOT expr .)
    TYPE_NAME       reduce using rule 69 (bin_op_expr -> NOT expr .)
    COMMA           reduce using rule 69 (bin_op_expr -> NOT expr .)
    FROM            reduce using rule 69 (bin_op_expr -> NOT expr .)
    UNION           reduce using rule 69 (bin_op_expr -> NOT expr .)
    EXCEPT          reduce using rule 69 (bin_op_expr -> NOT expr .)
    SET_MINUS       reduce using rule 69 (bin_op_expr -> NOT expr .)
    INTERSECT       reduce using rule 69 (bin_op_expr -> NOT expr .)
    ORDER           reduce using rule 69 (bin_op_expr -> NOT expr .)
    LIMIT           reduce using rule 69 (bin_op_expr -> NOT expr .)
    $end            reduce using rule 69 (bin_op_expr -> NOT expr .)
    RPAREN          reduce using rule 69 (bin_op_expr -> NOT expr .)
    WHEN            reduce using rule 69 (bin_op_expr -> NOT expr .)
    ASC             reduce using rule 69 (bin_op_expr -> NOT expr .)
    DESC            reduce using rule 69 (bin_op_expr -> NOT expr .)
    GROUP           reduce using rule 69 (bin_op_expr -> NOT expr .)
    THEN            reduce using rule 69 (bin_op_expr -> NOT expr .)
    HAVING          reduce using rule 69 (bin_op_expr -> NOT expr .)
    WITH            reduce using rule 69 (bin_op_expr -> NOT expr .)
    ELSE            reduce using rule 69 (bin_op_expr -> NOT expr .)
    JOIN            reduce using rule 69 (bin_op_expr -> NOT expr .)
    INNER           reduce using rule 69 (bin_op_expr -> NOT expr .)
    LEFT            reduce using rule 69 (bin_op_expr -> NOT expr .)
    FULL            reduce using rule 69 (bin_op_expr -> NOT expr .)
    RIGHT           reduce using rule 69 (bin_op_expr -> NOT expr .)
    CROSS           reduce using rule 69 (bin_op_expr -> NOT expr .)
    WHERE           reduce using rule 69 (bin_op_expr -> NOT expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93

  ! AS              [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! AND             [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! OR              [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! MINUS           [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! ARITH_OP        [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! LIKE            [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! STAR            [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! REGEXP          [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! COMP_OP         [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! IS              [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! ORR             [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! NOT             [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! IN              [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! BETWEEN         [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! ID              [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! STRING          [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! END             [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! RANK            [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! TYPE_NAME       [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! COMMA           [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! FROM            [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! UNION           [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! EXCEPT          [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! SET_MINUS       [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! INTERSECT       [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! ORDER           [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! LIMIT           [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! $end            [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! RPAREN          [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! WHEN            [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! ASC             [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! DESC            [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! GROUP           [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! THEN            [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! HAVING          [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! WITH            [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! ELSE            [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! JOIN            [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! INNER           [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! LEFT            [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! FULL            [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! RIGHT           [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! CROSS           [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! WHERE           [ reduce using rule 81 (bin_op_expr -> expr IS NOT expr .) ]
  ! AND             [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! OR              [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! MINUS           [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! ARITH_OP        [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! LIKE            [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! STAR            [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! REGEXP          [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! COMP_OP         [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! IS              [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! ORR             [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! NOT             [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! IN              [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]
  ! BETWEEN         [ reduce using rule 69 (bin_op_expr -> NOT expr .) ]


state 204

    (80) bin_op_expr -> expr NOT LIKE expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for ARITH_OP resolved as shift
  ! shift/reduce conflict for LIKE resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for REGEXP resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for ORR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
    AS              reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    ID              reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    STRING          reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    END             reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    RANK            reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    TYPE_NAME       reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    COMMA           reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    FROM            reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    UNION           reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    EXCEPT          reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    SET_MINUS       reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    INTERSECT       reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    ORDER           reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    LIMIT           reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    $end            reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    RPAREN          reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    WHEN            reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    ASC             reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    DESC            reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    GROUP           reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    THEN            reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    HAVING          reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    WITH            reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    ELSE            reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    JOIN            reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    INNER           reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    LEFT            reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    FULL            reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    RIGHT           reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    CROSS           reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    WHERE           reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93

  ! AND             [ reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .) ]
  ! OR              [ reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .) ]
  ! MINUS           [ reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .) ]
  ! ARITH_OP        [ reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .) ]
  ! LIKE            [ reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .) ]
  ! STAR            [ reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .) ]
  ! REGEXP          [ reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .) ]
  ! COMP_OP         [ reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .) ]
  ! IS              [ reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .) ]
  ! ORR             [ reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .) ]
  ! NOT             [ reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .) ]
  ! IN              [ reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .) ]
  ! BETWEEN         [ reduce using rule 80 (bin_op_expr -> expr NOT LIKE expr .) ]


state 205

    (84) bin_op_expr -> expr NOT IN LPAREN . literal_list RPAREN
    (85) bin_op_expr -> expr NOT IN LPAREN . select_statement RPAREN
    (158) literal_list -> . literal_value
    (159) literal_list -> . literal_list COMMA literal_value
    (160) literal_list -> . literal_list OR literal_value
    (1) select_statement -> . select_core
    (2) select_statement -> . select_statement set_op select_core
    (3) select_statement -> . with_clause select_statement
    (4) select_statement -> . select_statement order_by
    (5) select_statement -> . select_statement limit
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (6) select_core -> . select_clause
    (7) select_core -> . select_clause from_clause
    (8) select_core -> . select_clause from_clause where_clause
    (9) select_core -> . select_clause from_clause group_clause
    (10) select_core -> . select_clause from_clause where_clause group_clause
    (18) with_clause -> . WITH common_table_expression
    (19) with_clause -> . WITH RECURSIVE common_table_expression
    (20) with_clause -> . with_clause COMMA common_table_expression
    (11) select_clause -> . SELECT result_column
    (12) select_clause -> . SELECT DISTINCT result_column
    (13) select_clause -> . select_clause COMMA result_column

    NUMBER          shift and go to state 41
    STRING          shift and go to state 210
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NULL            shift and go to state 211
    WITH            shift and go to state 5
    SELECT          shift and go to state 6

    literal_list                   shift and go to state 243
    select_statement               shift and go to state 244
    literal_value                  shift and go to state 209
    select_core                    shift and go to state 2
    with_clause                    shift and go to state 3
    select_clause                  shift and go to state 4

state 206

    (122) between_expr -> expr NOT BETWEEN expr . bin_op expr
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr
    (104) bin_op -> . ARITH_OP
    (105) bin_op -> . COMP_OP
    (106) bin_op -> . AND
    (107) bin_op -> . OR
    (108) bin_op -> . LIKE

    AND             shift and go to state 213
    OR              shift and go to state 214
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 215
    LIKE            shift and go to state 216
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 217
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93

    bin_op                         shift and go to state 245

state 207

    (82) bin_op_expr -> expr IN LPAREN select_statement . RPAREN
    (2) select_statement -> select_statement . set_op select_core
    (4) select_statement -> select_statement . order_by
    (5) select_statement -> select_statement . limit
    (97) set_op -> . UNION
    (98) set_op -> . EXCEPT
    (99) set_op -> . UNION ALL
    (100) set_op -> . SET_MINUS
    (101) set_op -> . INTERSECT
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term
    (28) limit -> . LIMIT expr
    (29) limit -> . LIMIT expr COMMA expr

    RPAREN          shift and go to state 246
    UNION           shift and go to state 10
    EXCEPT          shift and go to state 11
    SET_MINUS       shift and go to state 12
    INTERSECT       shift and go to state 13
    ORDER           shift and go to state 14
    LIMIT           shift and go to state 15

    set_op                         shift and go to state 7
    order_by                       shift and go to state 8
    limit                          shift and go to state 9

state 208

    (83) bin_op_expr -> expr IN LPAREN literal_list . RPAREN
    (159) literal_list -> literal_list . COMMA literal_value
    (160) literal_list -> literal_list . OR literal_value

    RPAREN          shift and go to state 247
    COMMA           shift and go to state 248
    OR              shift and go to state 249


state 209

    (158) literal_list -> literal_value .

    RPAREN          reduce using rule 158 (literal_list -> literal_value .)
    COMMA           reduce using rule 158 (literal_list -> literal_value .)
    OR              reduce using rule 158 (literal_list -> literal_value .)


state 210

    (132) literal_value -> STRING .

    RPAREN          reduce using rule 132 (literal_value -> STRING .)
    COMMA           reduce using rule 132 (literal_value -> STRING .)
    OR              reduce using rule 132 (literal_value -> STRING .)


state 211

    (135) literal_value -> NULL .

    RPAREN          reduce using rule 135 (literal_value -> NULL .)
    COMMA           reduce using rule 135 (literal_value -> NULL .)
    OR              reduce using rule 135 (literal_value -> NULL .)


state 212

    (121) between_expr -> expr BETWEEN expr bin_op . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 250
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 213

    (70) bin_op_expr -> expr AND . expr
    (106) bin_op -> AND .
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          reduce using rule 106 (bin_op -> AND .)
    NULL            reduce using rule 106 (bin_op -> AND .)
    NUMBER          reduce using rule 106 (bin_op -> AND .)
    STRING          reduce using rule 106 (bin_op -> AND .)
    MINUS           reduce using rule 106 (bin_op -> AND .)
    DATE_LITERAL    reduce using rule 106 (bin_op -> AND .)
    NOT             reduce using rule 106 (bin_op -> AND .)
    EXISTS          reduce using rule 106 (bin_op -> AND .)
    CAST            reduce using rule 106 (bin_op -> AND .)
    CASE            reduce using rule 106 (bin_op -> AND .)
    ID              reduce using rule 106 (bin_op -> AND .)
    STAR            reduce using rule 106 (bin_op -> AND .)
    RANK            reduce using rule 106 (bin_op -> AND .)
    END             reduce using rule 106 (bin_op -> AND .)
    TYPE_NAME       reduce using rule 106 (bin_op -> AND .)
    LEFT            reduce using rule 106 (bin_op -> AND .)
    DENSE_RANK      reduce using rule 106 (bin_op -> AND .)
    ROW_NUMBER      reduce using rule 106 (bin_op -> AND .)

  ! LPAREN          [ shift and go to state 30 ]
  ! NULL            [ shift and go to state 38 ]
  ! NUMBER          [ shift and go to state 41 ]
  ! STRING          [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! DATE_LITERAL    [ shift and go to state 44 ]
  ! NOT             [ shift and go to state 45 ]
  ! EXISTS          [ shift and go to state 48 ]
  ! CAST            [ shift and go to state 49 ]
  ! CASE            [ shift and go to state 51 ]
  ! ID              [ shift and go to state 53 ]
  ! STAR            [ shift and go to state 46 ]
  ! RANK            [ shift and go to state 54 ]
  ! END             [ shift and go to state 52 ]
  ! TYPE_NAME       [ shift and go to state 55 ]
  ! LEFT            [ shift and go to state 56 ]
  ! DENSE_RANK      [ shift and go to state 57 ]
  ! ROW_NUMBER      [ shift and go to state 58 ]

    expr                           shift and go to state 147
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 214

    (71) bin_op_expr -> expr OR . expr
    (107) bin_op -> OR .
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          reduce using rule 107 (bin_op -> OR .)
    NULL            reduce using rule 107 (bin_op -> OR .)
    NUMBER          reduce using rule 107 (bin_op -> OR .)
    STRING          reduce using rule 107 (bin_op -> OR .)
    MINUS           reduce using rule 107 (bin_op -> OR .)
    DATE_LITERAL    reduce using rule 107 (bin_op -> OR .)
    NOT             reduce using rule 107 (bin_op -> OR .)
    EXISTS          reduce using rule 107 (bin_op -> OR .)
    CAST            reduce using rule 107 (bin_op -> OR .)
    CASE            reduce using rule 107 (bin_op -> OR .)
    ID              reduce using rule 107 (bin_op -> OR .)
    STAR            reduce using rule 107 (bin_op -> OR .)
    RANK            reduce using rule 107 (bin_op -> OR .)
    END             reduce using rule 107 (bin_op -> OR .)
    TYPE_NAME       reduce using rule 107 (bin_op -> OR .)
    LEFT            reduce using rule 107 (bin_op -> OR .)
    DENSE_RANK      reduce using rule 107 (bin_op -> OR .)
    ROW_NUMBER      reduce using rule 107 (bin_op -> OR .)

  ! LPAREN          [ shift and go to state 30 ]
  ! NULL            [ shift and go to state 38 ]
  ! NUMBER          [ shift and go to state 41 ]
  ! STRING          [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! DATE_LITERAL    [ shift and go to state 44 ]
  ! NOT             [ shift and go to state 45 ]
  ! EXISTS          [ shift and go to state 48 ]
  ! CAST            [ shift and go to state 49 ]
  ! CASE            [ shift and go to state 51 ]
  ! ID              [ shift and go to state 53 ]
  ! STAR            [ shift and go to state 46 ]
  ! RANK            [ shift and go to state 54 ]
  ! END             [ shift and go to state 52 ]
  ! TYPE_NAME       [ shift and go to state 55 ]
  ! LEFT            [ shift and go to state 56 ]
  ! DENSE_RANK      [ shift and go to state 57 ]
  ! ROW_NUMBER      [ shift and go to state 58 ]

    expr                           shift and go to state 148
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 215

    (73) bin_op_expr -> expr ARITH_OP . expr
    (104) bin_op -> ARITH_OP .
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          reduce using rule 104 (bin_op -> ARITH_OP .)
    NULL            reduce using rule 104 (bin_op -> ARITH_OP .)
    NUMBER          reduce using rule 104 (bin_op -> ARITH_OP .)
    STRING          reduce using rule 104 (bin_op -> ARITH_OP .)
    MINUS           reduce using rule 104 (bin_op -> ARITH_OP .)
    DATE_LITERAL    reduce using rule 104 (bin_op -> ARITH_OP .)
    NOT             reduce using rule 104 (bin_op -> ARITH_OP .)
    EXISTS          reduce using rule 104 (bin_op -> ARITH_OP .)
    CAST            reduce using rule 104 (bin_op -> ARITH_OP .)
    CASE            reduce using rule 104 (bin_op -> ARITH_OP .)
    ID              reduce using rule 104 (bin_op -> ARITH_OP .)
    STAR            reduce using rule 104 (bin_op -> ARITH_OP .)
    RANK            reduce using rule 104 (bin_op -> ARITH_OP .)
    END             reduce using rule 104 (bin_op -> ARITH_OP .)
    TYPE_NAME       reduce using rule 104 (bin_op -> ARITH_OP .)
    LEFT            reduce using rule 104 (bin_op -> ARITH_OP .)
    DENSE_RANK      reduce using rule 104 (bin_op -> ARITH_OP .)
    ROW_NUMBER      reduce using rule 104 (bin_op -> ARITH_OP .)

  ! LPAREN          [ shift and go to state 30 ]
  ! NULL            [ shift and go to state 38 ]
  ! NUMBER          [ shift and go to state 41 ]
  ! STRING          [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! DATE_LITERAL    [ shift and go to state 44 ]
  ! NOT             [ shift and go to state 45 ]
  ! EXISTS          [ shift and go to state 48 ]
  ! CAST            [ shift and go to state 49 ]
  ! CASE            [ shift and go to state 51 ]
  ! ID              [ shift and go to state 53 ]
  ! STAR            [ shift and go to state 46 ]
  ! RANK            [ shift and go to state 54 ]
  ! END             [ shift and go to state 52 ]
  ! TYPE_NAME       [ shift and go to state 55 ]
  ! LEFT            [ shift and go to state 56 ]
  ! DENSE_RANK      [ shift and go to state 57 ]
  ! ROW_NUMBER      [ shift and go to state 58 ]

    expr                           shift and go to state 150
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 216

    (74) bin_op_expr -> expr LIKE . expr
    (108) bin_op -> LIKE .
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NULL resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for DATE_LITERAL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for EXISTS resolved as shift
  ! shift/reduce conflict for CAST resolved as shift
  ! shift/reduce conflict for CASE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for RANK resolved as shift
  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for TYPE_NAME resolved as shift
  ! shift/reduce conflict for LEFT resolved as shift
  ! shift/reduce conflict for DENSE_RANK resolved as shift
  ! shift/reduce conflict for ROW_NUMBER resolved as shift
    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

  ! LPAREN          [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! NULL            [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! NUMBER          [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! STRING          [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! MINUS           [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! DATE_LITERAL    [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! NOT             [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! EXISTS          [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! CAST            [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! CASE            [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! ID              [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! STAR            [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! RANK            [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! END             [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! TYPE_NAME       [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! LEFT            [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! DENSE_RANK      [ reduce using rule 108 (bin_op -> LIKE .) ]
  ! ROW_NUMBER      [ reduce using rule 108 (bin_op -> LIKE .) ]

    expr                           shift and go to state 151
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 217

    (77) bin_op_expr -> expr COMP_OP . expr
    (105) bin_op -> COMP_OP .
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          reduce using rule 105 (bin_op -> COMP_OP .)
    NULL            reduce using rule 105 (bin_op -> COMP_OP .)
    NUMBER          reduce using rule 105 (bin_op -> COMP_OP .)
    STRING          reduce using rule 105 (bin_op -> COMP_OP .)
    MINUS           reduce using rule 105 (bin_op -> COMP_OP .)
    DATE_LITERAL    reduce using rule 105 (bin_op -> COMP_OP .)
    NOT             reduce using rule 105 (bin_op -> COMP_OP .)
    EXISTS          reduce using rule 105 (bin_op -> COMP_OP .)
    CAST            reduce using rule 105 (bin_op -> COMP_OP .)
    CASE            reduce using rule 105 (bin_op -> COMP_OP .)
    ID              reduce using rule 105 (bin_op -> COMP_OP .)
    STAR            reduce using rule 105 (bin_op -> COMP_OP .)
    RANK            reduce using rule 105 (bin_op -> COMP_OP .)
    END             reduce using rule 105 (bin_op -> COMP_OP .)
    TYPE_NAME       reduce using rule 105 (bin_op -> COMP_OP .)
    LEFT            reduce using rule 105 (bin_op -> COMP_OP .)
    DENSE_RANK      reduce using rule 105 (bin_op -> COMP_OP .)
    ROW_NUMBER      reduce using rule 105 (bin_op -> COMP_OP .)

  ! LPAREN          [ shift and go to state 30 ]
  ! NULL            [ shift and go to state 38 ]
  ! NUMBER          [ shift and go to state 41 ]
  ! STRING          [ shift and go to state 42 ]
  ! MINUS           [ shift and go to state 43 ]
  ! DATE_LITERAL    [ shift and go to state 44 ]
  ! NOT             [ shift and go to state 45 ]
  ! EXISTS          [ shift and go to state 48 ]
  ! CAST            [ shift and go to state 49 ]
  ! CASE            [ shift and go to state 51 ]
  ! ID              [ shift and go to state 53 ]
  ! STAR            [ shift and go to state 46 ]
  ! RANK            [ shift and go to state 54 ]
  ! END             [ shift and go to state 52 ]
  ! TYPE_NAME       [ shift and go to state 55 ]
  ! LEFT            [ shift and go to state 56 ]
  ! DENSE_RANK      [ shift and go to state 57 ]
  ! ROW_NUMBER      [ shift and go to state 58 ]

    expr                           shift and go to state 154
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 218

    (65) fun_expr -> NOT EXISTS LPAREN select_statement . RPAREN
    (63) fun_expr -> EXISTS LPAREN select_statement . RPAREN
    (2) select_statement -> select_statement . set_op select_core
    (4) select_statement -> select_statement . order_by
    (5) select_statement -> select_statement . limit
    (97) set_op -> . UNION
    (98) set_op -> . EXCEPT
    (99) set_op -> . UNION ALL
    (100) set_op -> . SET_MINUS
    (101) set_op -> . INTERSECT
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term
    (28) limit -> . LIMIT expr
    (29) limit -> . LIMIT expr COMMA expr

    RPAREN          shift and go to state 251
    UNION           shift and go to state 10
    EXCEPT          shift and go to state 11
    SET_MINUS       shift and go to state 12
    INTERSECT       shift and go to state 13
    ORDER           shift and go to state 14
    LIMIT           shift and go to state 15

    set_op                         shift and go to state 7
    order_by                       shift and go to state 8
    limit                          shift and go to state 9

state 219

    (64) fun_expr -> fun_name LPAREN expr RPAREN .
    (143) win_expr -> fun_name LPAREN expr RPAREN . OVER LPAREN win_def RPAREN

    AS              reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    AND             reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    OR              reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    MINUS           reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    ARITH_OP        reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    LIKE            reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    STAR            reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    REGEXP          reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    COMP_OP         reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    IS              reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    ORR             reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    NOT             reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    IN              reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    BETWEEN         reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    ID              reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    STRING          reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    END             reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    RANK            reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    TYPE_NAME       reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    COMMA           reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    FROM            reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    UNION           reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    EXCEPT          reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    SET_MINUS       reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    INTERSECT       reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    ORDER           reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    LIMIT           reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    $end            reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    RPAREN          reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    WHEN            reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    ASC             reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    DESC            reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    GROUP           reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    THEN            reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    HAVING          reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    WITH            reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    ELSE            reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    JOIN            reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    INNER           reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    LEFT            reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    FULL            reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    RIGHT           reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    CROSS           reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    WHERE           reduce using rule 64 (fun_expr -> fun_name LPAREN expr RPAREN .)
    OVER            shift and go to state 252


state 220

    (67) fun_expr -> fun_name LPAREN expr COMMA . expr RPAREN
    (68) fun_expr -> fun_name LPAREN expr COMMA . expr COMMA expr RPAREN
    (145) win_expr -> fun_name LPAREN expr COMMA . expr RPAREN OVER LPAREN win_def RPAREN
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    fun_name                       shift and go to state 47
    expr                           shift and go to state 253
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    win_fun                        shift and go to state 50

state 221

    (66) fun_expr -> fun_name LPAREN DISTINCT expr . RPAREN
    (144) win_expr -> fun_name LPAREN DISTINCT expr . RPAREN OVER LPAREN win_def RPAREN
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    RPAREN          shift and go to state 254
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 222

    (63) fun_expr -> EXISTS LPAREN select_statement RPAREN .

    AS              reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    AND             reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    OR              reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    MINUS           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    ARITH_OP        reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    LIKE            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    STAR            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    REGEXP          reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    COMP_OP         reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    IS              reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    ORR             reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    NOT             reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    IN              reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    BETWEEN         reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    ID              reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    STRING          reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    END             reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    RANK            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    TYPE_NAME       reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    COMMA           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    FROM            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    UNION           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    EXCEPT          reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    SET_MINUS       reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    INTERSECT       reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    ORDER           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    LIMIT           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    $end            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    RPAREN          reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    WHEN            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    ASC             reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    DESC            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    GROUP           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    THEN            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    HAVING          reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    WITH            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    ELSE            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    JOIN            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    INNER           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    LEFT            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    FULL            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    RIGHT           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    CROSS           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    WHERE           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)


state 223

    (120) cast_expr -> CAST LPAREN expr AS . type_name RPAREN
    (118) type_name -> . TYPE_NAME
    (119) type_name -> . type_name LPAREN NUMBER RPAREN

    TYPE_NAME       shift and go to state 256

    type_name                      shift and go to state 255

state 224

    (142) win_expr -> win_fun LPAREN RPAREN OVER . LPAREN win_def RPAREN

    LPAREN          shift and go to state 257


state 225

    (154) case_expr -> CASE expr case_when_expr END .

    AS              reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    AND             reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    OR              reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    MINUS           reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    ARITH_OP        reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    LIKE            reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    STAR            reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    REGEXP          reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    COMP_OP         reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    IS              reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    ORR             reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    NOT             reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    IN              reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    BETWEEN         reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    ID              reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    STRING          reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    END             reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    RANK            reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    TYPE_NAME       reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    COMMA           reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    FROM            reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    UNION           reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    EXCEPT          reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    SET_MINUS       reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    INTERSECT       reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    ORDER           reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    LIMIT           reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    $end            reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    RPAREN          reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    WHEN            reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    ASC             reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    DESC            reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    GROUP           reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    THEN            reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    HAVING          reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    WITH            reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    ELSE            reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    JOIN            reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    INNER           reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    LEFT            reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    FULL            reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    RIGHT           reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    CROSS           reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)
    WHERE           reduce using rule 154 (case_expr -> CASE expr case_when_expr END .)


state 226

    (155) case_when_expr -> WHEN expr THEN . expr
    (156) case_when_expr -> WHEN expr THEN . expr ELSE expr
    (157) case_when_expr -> WHEN expr THEN . expr case_when_expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 258
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 227

    (59) group_clause -> group_clause WITH ROLLUP HAVING . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 259
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 228

    (48) join_clause -> table_or_subquery join_op table_or_subquery join_constraint .

    JOIN            reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)
    INNER           reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)
    LEFT            reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)
    FULL            reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)
    RIGHT           reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)
    CROSS           reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)
    COMMA           reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)
    WHERE           reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)
    GROUP           reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)
    UNION           reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)
    EXCEPT          reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)
    SET_MINUS       reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)
    INTERSECT       reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)
    ORDER           reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)
    LIMIT           reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)
    $end            reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)
    RPAREN          reduce using rule 48 (join_clause -> table_or_subquery join_op table_or_subquery join_constraint .)


state 229

    (52) join_constraint -> ON . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 260
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 230

    (53) join_constraint -> USING . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 261
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 231

    (113) join_op -> LEFT OUTER JOIN .

    LPAREN          reduce using rule 113 (join_op -> LEFT OUTER JOIN .)
    ID              reduce using rule 113 (join_op -> LEFT OUTER JOIN .)
    STRING          reduce using rule 113 (join_op -> LEFT OUTER JOIN .)


state 232

    (115) join_op -> FULL OUTER JOIN .

    LPAREN          reduce using rule 115 (join_op -> FULL OUTER JOIN .)
    ID              reduce using rule 115 (join_op -> FULL OUTER JOIN .)
    STRING          reduce using rule 115 (join_op -> FULL OUTER JOIN .)


state 233

    (114) join_op -> RIGHT OUTER JOIN .

    LPAREN          reduce using rule 114 (join_op -> RIGHT OUTER JOIN .)
    ID              reduce using rule 114 (join_op -> RIGHT OUTER JOIN .)
    STRING          reduce using rule 114 (join_op -> RIGHT OUTER JOIN .)


state 234

    (50) join_clause -> join_clause join_op table_or_subquery join_constraint .

    JOIN            reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)
    INNER           reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)
    LEFT            reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)
    FULL            reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)
    RIGHT           reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)
    CROSS           reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)
    COMMA           reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)
    WHERE           reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)
    GROUP           reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)
    UNION           reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)
    EXCEPT          reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)
    SET_MINUS       reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)
    INTERSECT       reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)
    ORDER           reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)
    LIMIT           reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)
    $end            reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)
    RPAREN          reduce using rule 50 (join_clause -> join_clause join_op table_or_subquery join_constraint .)


state 235

    (43) table_or_subquery -> table_name DOT table_name DOT . table_name
    (44) table_name -> . ID
    (45) table_name -> . STRING

    ID              shift and go to state 24
    STRING          shift and go to state 25

    table_name                     shift and go to state 262

state 236

    (39) table_or_subquery -> table_name DOT table_name table_alias .

    JOIN            reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    INNER           reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    LEFT            reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    FULL            reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    RIGHT           reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    CROSS           reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    COMMA           reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    WHERE           reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    GROUP           reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    UNION           reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    EXCEPT          reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    SET_MINUS       reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    INTERSECT       reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    ORDER           reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    LIMIT           reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    $end            reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    RPAREN          reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    ON              reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)
    USING           reduce using rule 39 (table_or_subquery -> table_name DOT table_name table_alias .)


state 237

    (42) table_or_subquery -> table_name DOT table_name AS . table_alias
    (46) table_alias -> . ID
    (47) table_alias -> . STRING

    ID              shift and go to state 134
    STRING          shift and go to state 135

    table_alias                    shift and go to state 263

state 238

    (40) table_or_subquery -> LPAREN select_statement RPAREN table_alias .

    JOIN            reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    INNER           reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    LEFT            reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    FULL            reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    RIGHT           reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    CROSS           reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    COMMA           reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    WHERE           reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    GROUP           reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    UNION           reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    EXCEPT          reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    SET_MINUS       reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    INTERSECT       reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    ORDER           reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    LIMIT           reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    $end            reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    RPAREN          reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    ON              reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)
    USING           reduce using rule 40 (table_or_subquery -> LPAREN select_statement RPAREN table_alias .)


state 239

    (41) table_or_subquery -> LPAREN select_statement RPAREN AS . table_alias
    (46) table_alias -> . ID
    (47) table_alias -> . STRING

    ID              shift and go to state 134
    STRING          shift and go to state 135

    table_alias                    shift and go to state 264

state 240

    (16) common_table_expression -> table_name LPAREN column_list RPAREN AS . LPAREN select_statement RPAREN

    LPAREN          shift and go to state 265


state 241

    (15) column_list -> column_list COMMA column .

    RPAREN          reduce using rule 15 (column_list -> column_list COMMA column .)
    COMMA           reduce using rule 15 (column_list -> column_list COMMA column .)


state 242

    (17) common_table_expression -> table_name AS LPAREN select_statement RPAREN .

    COMMA           reduce using rule 17 (common_table_expression -> table_name AS LPAREN select_statement RPAREN .)
    WITH            reduce using rule 17 (common_table_expression -> table_name AS LPAREN select_statement RPAREN .)
    SELECT          reduce using rule 17 (common_table_expression -> table_name AS LPAREN select_statement RPAREN .)


state 243

    (84) bin_op_expr -> expr NOT IN LPAREN literal_list . RPAREN
    (159) literal_list -> literal_list . COMMA literal_value
    (160) literal_list -> literal_list . OR literal_value

    RPAREN          shift and go to state 266
    COMMA           shift and go to state 248
    OR              shift and go to state 249


state 244

    (85) bin_op_expr -> expr NOT IN LPAREN select_statement . RPAREN
    (2) select_statement -> select_statement . set_op select_core
    (4) select_statement -> select_statement . order_by
    (5) select_statement -> select_statement . limit
    (97) set_op -> . UNION
    (98) set_op -> . EXCEPT
    (99) set_op -> . UNION ALL
    (100) set_op -> . SET_MINUS
    (101) set_op -> . INTERSECT
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term
    (28) limit -> . LIMIT expr
    (29) limit -> . LIMIT expr COMMA expr

    RPAREN          shift and go to state 267
    UNION           shift and go to state 10
    EXCEPT          shift and go to state 11
    SET_MINUS       shift and go to state 12
    INTERSECT       shift and go to state 13
    ORDER           shift and go to state 14
    LIMIT           shift and go to state 15

    set_op                         shift and go to state 7
    order_by                       shift and go to state 8
    limit                          shift and go to state 9

state 245

    (122) between_expr -> expr NOT BETWEEN expr bin_op . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 268
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 246

    (82) bin_op_expr -> expr IN LPAREN select_statement RPAREN .

    AS              reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    AND             reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    OR              reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    MINUS           reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    ARITH_OP        reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    LIKE            reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    STAR            reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    REGEXP          reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    COMP_OP         reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    IS              reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    ORR             reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    NOT             reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    IN              reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    BETWEEN         reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    ID              reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    STRING          reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    END             reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    RANK            reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    TYPE_NAME       reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    COMMA           reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    FROM            reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    UNION           reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    EXCEPT          reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    SET_MINUS       reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    INTERSECT       reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    ORDER           reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    LIMIT           reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    $end            reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    RPAREN          reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    WHEN            reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    ASC             reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    DESC            reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    GROUP           reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    THEN            reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    HAVING          reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    WITH            reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    ELSE            reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    JOIN            reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    INNER           reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    LEFT            reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    FULL            reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    RIGHT           reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    CROSS           reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)
    WHERE           reduce using rule 82 (bin_op_expr -> expr IN LPAREN select_statement RPAREN .)


state 247

    (83) bin_op_expr -> expr IN LPAREN literal_list RPAREN .

    AS              reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    AND             reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    OR              reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    MINUS           reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    ARITH_OP        reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    LIKE            reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    STAR            reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    REGEXP          reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    COMP_OP         reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    IS              reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    ORR             reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    NOT             reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    IN              reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    BETWEEN         reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    ID              reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    STRING          reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    END             reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    RANK            reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    TYPE_NAME       reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    COMMA           reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    FROM            reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    UNION           reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    EXCEPT          reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    SET_MINUS       reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    INTERSECT       reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    ORDER           reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    LIMIT           reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    $end            reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    RPAREN          reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    WHEN            reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    ASC             reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    DESC            reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    GROUP           reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    THEN            reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    HAVING          reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    WITH            reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    ELSE            reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    JOIN            reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    INNER           reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    LEFT            reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    FULL            reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    RIGHT           reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    CROSS           reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)
    WHERE           reduce using rule 83 (bin_op_expr -> expr IN LPAREN literal_list RPAREN .)


state 248

    (159) literal_list -> literal_list COMMA . literal_value
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL

    NUMBER          shift and go to state 41
    STRING          shift and go to state 210
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NULL            shift and go to state 211

    literal_value                  shift and go to state 269

state 249

    (160) literal_list -> literal_list OR . literal_value
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL

    NUMBER          shift and go to state 41
    STRING          shift and go to state 210
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NULL            shift and go to state 211

    literal_value                  shift and go to state 270

state 250

    (121) between_expr -> expr BETWEEN expr bin_op expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for ARITH_OP resolved as shift
  ! shift/reduce conflict for LIKE resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for REGEXP resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for ORR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
    AS              reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    ID              reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    STRING          reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    END             reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    RANK            reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    TYPE_NAME       reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    COMMA           reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    FROM            reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    UNION           reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    EXCEPT          reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    SET_MINUS       reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    INTERSECT       reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    ORDER           reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    LIMIT           reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    $end            reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    RPAREN          reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    WHEN            reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    ASC             reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    DESC            reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    GROUP           reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    THEN            reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    HAVING          reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    WITH            reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    ELSE            reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    JOIN            reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    INNER           reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    LEFT            reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    FULL            reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    RIGHT           reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    CROSS           reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    WHERE           reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93

  ! AND             [ reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .) ]
  ! OR              [ reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .) ]
  ! MINUS           [ reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .) ]
  ! ARITH_OP        [ reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .) ]
  ! LIKE            [ reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .) ]
  ! STAR            [ reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .) ]
  ! REGEXP          [ reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .) ]
  ! COMP_OP         [ reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .) ]
  ! IS              [ reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .) ]
  ! ORR             [ reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .) ]
  ! NOT             [ reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .) ]
  ! IN              [ reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .) ]
  ! BETWEEN         [ reduce using rule 121 (between_expr -> expr BETWEEN expr bin_op expr .) ]


state 251

    (65) fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .
    (63) fun_expr -> EXISTS LPAREN select_statement RPAREN .

  ! reduce/reduce conflict for AND resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for OR resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for MINUS resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for ARITH_OP resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for LIKE resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for STAR resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for REGEXP resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for COMP_OP resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for IS resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for ORR resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for NOT resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for IN resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for BETWEEN resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for AS resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for ID resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for STRING resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for END resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for RANK resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for TYPE_NAME resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for COMMA resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for FROM resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for UNION resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for EXCEPT resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for SET_MINUS resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for INTERSECT resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for ORDER resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for LIMIT resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for $end resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for RPAREN resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for WHEN resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for ASC resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for DESC resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for GROUP resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for THEN resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for HAVING resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for WITH resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for ELSE resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for JOIN resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for INNER resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for LEFT resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for FULL resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for RIGHT resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for CROSS resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
  ! reduce/reduce conflict for WHERE resolved using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    AND             reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    OR              reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    MINUS           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    ARITH_OP        reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    LIKE            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    STAR            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    REGEXP          reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    COMP_OP         reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    IS              reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    ORR             reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    NOT             reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    IN              reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    BETWEEN         reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    AS              reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    ID              reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    STRING          reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    END             reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    RANK            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    TYPE_NAME       reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    COMMA           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    FROM            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    UNION           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    EXCEPT          reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    SET_MINUS       reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    INTERSECT       reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    ORDER           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    LIMIT           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    $end            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    RPAREN          reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    WHEN            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    ASC             reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    DESC            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    GROUP           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    THEN            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    HAVING          reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    WITH            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    ELSE            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    JOIN            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    INNER           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    LEFT            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    FULL            reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    RIGHT           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    CROSS           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)
    WHERE           reduce using rule 63 (fun_expr -> EXISTS LPAREN select_statement RPAREN .)

  ! AS              [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! AND             [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! OR              [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! MINUS           [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! ARITH_OP        [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! LIKE            [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! STAR            [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! REGEXP          [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! COMP_OP         [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! IS              [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! ORR             [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! NOT             [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! IN              [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! BETWEEN         [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! ID              [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! STRING          [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! END             [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! RANK            [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! TYPE_NAME       [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! COMMA           [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! FROM            [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! UNION           [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! EXCEPT          [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! SET_MINUS       [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! INTERSECT       [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! ORDER           [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! LIMIT           [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! $end            [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! RPAREN          [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! WHEN            [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! ASC             [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! DESC            [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! GROUP           [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! THEN            [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! HAVING          [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! WITH            [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! ELSE            [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! JOIN            [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! INNER           [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! LEFT            [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! FULL            [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! RIGHT           [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! CROSS           [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]
  ! WHERE           [ reduce using rule 65 (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN .) ]


state 252

    (143) win_expr -> fun_name LPAREN expr RPAREN OVER . LPAREN win_def RPAREN

    LPAREN          shift and go to state 271


state 253

    (67) fun_expr -> fun_name LPAREN expr COMMA expr . RPAREN
    (68) fun_expr -> fun_name LPAREN expr COMMA expr . COMMA expr RPAREN
    (145) win_expr -> fun_name LPAREN expr COMMA expr . RPAREN OVER LPAREN win_def RPAREN
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    RPAREN          shift and go to state 273
    COMMA           shift and go to state 272
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 254

    (66) fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .
    (144) win_expr -> fun_name LPAREN DISTINCT expr RPAREN . OVER LPAREN win_def RPAREN

    AS              reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    AND             reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    OR              reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    MINUS           reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    ARITH_OP        reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    LIKE            reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    STAR            reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    REGEXP          reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    COMP_OP         reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    IS              reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    ORR             reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    NOT             reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    IN              reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    BETWEEN         reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    ID              reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    STRING          reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    END             reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    RANK            reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    TYPE_NAME       reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    COMMA           reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    FROM            reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    UNION           reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    EXCEPT          reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    SET_MINUS       reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    INTERSECT       reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    ORDER           reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    LIMIT           reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    $end            reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    RPAREN          reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    WHEN            reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    ASC             reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    DESC            reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    GROUP           reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    THEN            reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    HAVING          reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    WITH            reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    ELSE            reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    JOIN            reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    INNER           reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    LEFT            reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    FULL            reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    RIGHT           reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    CROSS           reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    WHERE           reduce using rule 66 (fun_expr -> fun_name LPAREN DISTINCT expr RPAREN .)
    OVER            shift and go to state 274


state 255

    (120) cast_expr -> CAST LPAREN expr AS type_name . RPAREN
    (119) type_name -> type_name . LPAREN NUMBER RPAREN

    RPAREN          shift and go to state 276
    LPAREN          shift and go to state 275


state 256

    (118) type_name -> TYPE_NAME .

    RPAREN          reduce using rule 118 (type_name -> TYPE_NAME .)
    LPAREN          reduce using rule 118 (type_name -> TYPE_NAME .)


state 257

    (142) win_expr -> win_fun LPAREN RPAREN OVER LPAREN . win_def RPAREN
    (146) win_def -> . order_by
    (147) win_def -> . PARTITION BY result_column
    (148) win_def -> . win_def COMMA result_column
    (149) win_def -> . win_def order_by
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term

    PARTITION       shift and go to state 279
    ORDER           shift and go to state 14

    win_def                        shift and go to state 277
    order_by                       shift and go to state 278

state 258

    (155) case_when_expr -> WHEN expr THEN expr .
    (156) case_when_expr -> WHEN expr THEN expr . ELSE expr
    (157) case_when_expr -> WHEN expr THEN expr . case_when_expr
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr
    (155) case_when_expr -> . WHEN expr THEN expr
    (156) case_when_expr -> . WHEN expr THEN expr ELSE expr
    (157) case_when_expr -> . WHEN expr THEN expr case_when_expr

    END             reduce using rule 155 (case_when_expr -> WHEN expr THEN expr .)
    ELSE            shift and go to state 280
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93
    WHEN            shift and go to state 111

    case_when_expr                 shift and go to state 281

state 259

    (59) group_clause -> group_clause WITH ROLLUP HAVING expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    COMMA           reduce using rule 59 (group_clause -> group_clause WITH ROLLUP HAVING expr .)
    HAVING          reduce using rule 59 (group_clause -> group_clause WITH ROLLUP HAVING expr .)
    WITH            reduce using rule 59 (group_clause -> group_clause WITH ROLLUP HAVING expr .)
    UNION           reduce using rule 59 (group_clause -> group_clause WITH ROLLUP HAVING expr .)
    EXCEPT          reduce using rule 59 (group_clause -> group_clause WITH ROLLUP HAVING expr .)
    SET_MINUS       reduce using rule 59 (group_clause -> group_clause WITH ROLLUP HAVING expr .)
    INTERSECT       reduce using rule 59 (group_clause -> group_clause WITH ROLLUP HAVING expr .)
    ORDER           reduce using rule 59 (group_clause -> group_clause WITH ROLLUP HAVING expr .)
    LIMIT           reduce using rule 59 (group_clause -> group_clause WITH ROLLUP HAVING expr .)
    $end            reduce using rule 59 (group_clause -> group_clause WITH ROLLUP HAVING expr .)
    RPAREN          reduce using rule 59 (group_clause -> group_clause WITH ROLLUP HAVING expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 260

    (52) join_constraint -> ON expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    JOIN            reduce using rule 52 (join_constraint -> ON expr .)
    INNER           reduce using rule 52 (join_constraint -> ON expr .)
    LEFT            reduce using rule 52 (join_constraint -> ON expr .)
    FULL            reduce using rule 52 (join_constraint -> ON expr .)
    RIGHT           reduce using rule 52 (join_constraint -> ON expr .)
    CROSS           reduce using rule 52 (join_constraint -> ON expr .)
    COMMA           reduce using rule 52 (join_constraint -> ON expr .)
    WHERE           reduce using rule 52 (join_constraint -> ON expr .)
    GROUP           reduce using rule 52 (join_constraint -> ON expr .)
    UNION           reduce using rule 52 (join_constraint -> ON expr .)
    EXCEPT          reduce using rule 52 (join_constraint -> ON expr .)
    SET_MINUS       reduce using rule 52 (join_constraint -> ON expr .)
    INTERSECT       reduce using rule 52 (join_constraint -> ON expr .)
    ORDER           reduce using rule 52 (join_constraint -> ON expr .)
    LIMIT           reduce using rule 52 (join_constraint -> ON expr .)
    $end            reduce using rule 52 (join_constraint -> ON expr .)
    RPAREN          reduce using rule 52 (join_constraint -> ON expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 261

    (53) join_constraint -> USING expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    JOIN            reduce using rule 53 (join_constraint -> USING expr .)
    INNER           reduce using rule 53 (join_constraint -> USING expr .)
    LEFT            reduce using rule 53 (join_constraint -> USING expr .)
    FULL            reduce using rule 53 (join_constraint -> USING expr .)
    RIGHT           reduce using rule 53 (join_constraint -> USING expr .)
    CROSS           reduce using rule 53 (join_constraint -> USING expr .)
    COMMA           reduce using rule 53 (join_constraint -> USING expr .)
    WHERE           reduce using rule 53 (join_constraint -> USING expr .)
    GROUP           reduce using rule 53 (join_constraint -> USING expr .)
    UNION           reduce using rule 53 (join_constraint -> USING expr .)
    EXCEPT          reduce using rule 53 (join_constraint -> USING expr .)
    SET_MINUS       reduce using rule 53 (join_constraint -> USING expr .)
    INTERSECT       reduce using rule 53 (join_constraint -> USING expr .)
    ORDER           reduce using rule 53 (join_constraint -> USING expr .)
    LIMIT           reduce using rule 53 (join_constraint -> USING expr .)
    $end            reduce using rule 53 (join_constraint -> USING expr .)
    RPAREN          reduce using rule 53 (join_constraint -> USING expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 262

    (43) table_or_subquery -> table_name DOT table_name DOT table_name .

    JOIN            reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    INNER           reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    LEFT            reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    FULL            reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    RIGHT           reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    CROSS           reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    COMMA           reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    WHERE           reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    GROUP           reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    UNION           reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    EXCEPT          reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    SET_MINUS       reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    INTERSECT       reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    ORDER           reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    LIMIT           reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    $end            reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    RPAREN          reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    ON              reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)
    USING           reduce using rule 43 (table_or_subquery -> table_name DOT table_name DOT table_name .)


state 263

    (42) table_or_subquery -> table_name DOT table_name AS table_alias .

    JOIN            reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    INNER           reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    LEFT            reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    FULL            reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    RIGHT           reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    CROSS           reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    COMMA           reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    WHERE           reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    GROUP           reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    UNION           reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    EXCEPT          reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    SET_MINUS       reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    INTERSECT       reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    ORDER           reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    LIMIT           reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    $end            reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    RPAREN          reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    ON              reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)
    USING           reduce using rule 42 (table_or_subquery -> table_name DOT table_name AS table_alias .)


state 264

    (41) table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .

    JOIN            reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    INNER           reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    LEFT            reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    FULL            reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    RIGHT           reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    CROSS           reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    COMMA           reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    WHERE           reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    GROUP           reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    UNION           reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    EXCEPT          reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    SET_MINUS       reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    INTERSECT       reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    ORDER           reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    LIMIT           reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    $end            reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    RPAREN          reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    ON              reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)
    USING           reduce using rule 41 (table_or_subquery -> LPAREN select_statement RPAREN AS table_alias .)


state 265

    (16) common_table_expression -> table_name LPAREN column_list RPAREN AS LPAREN . select_statement RPAREN
    (1) select_statement -> . select_core
    (2) select_statement -> . select_statement set_op select_core
    (3) select_statement -> . with_clause select_statement
    (4) select_statement -> . select_statement order_by
    (5) select_statement -> . select_statement limit
    (6) select_core -> . select_clause
    (7) select_core -> . select_clause from_clause
    (8) select_core -> . select_clause from_clause where_clause
    (9) select_core -> . select_clause from_clause group_clause
    (10) select_core -> . select_clause from_clause where_clause group_clause
    (18) with_clause -> . WITH common_table_expression
    (19) with_clause -> . WITH RECURSIVE common_table_expression
    (20) with_clause -> . with_clause COMMA common_table_expression
    (11) select_clause -> . SELECT result_column
    (12) select_clause -> . SELECT DISTINCT result_column
    (13) select_clause -> . select_clause COMMA result_column

    WITH            shift and go to state 5
    SELECT          shift and go to state 6

    select_statement               shift and go to state 282
    select_core                    shift and go to state 2
    with_clause                    shift and go to state 3
    select_clause                  shift and go to state 4

state 266

    (84) bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .

    AS              reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    AND             reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    OR              reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    MINUS           reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    ARITH_OP        reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    LIKE            reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    STAR            reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    REGEXP          reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    COMP_OP         reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    IS              reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    ORR             reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    NOT             reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    IN              reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    BETWEEN         reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    ID              reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    STRING          reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    END             reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    RANK            reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    TYPE_NAME       reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    COMMA           reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    FROM            reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    UNION           reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    EXCEPT          reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    SET_MINUS       reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    INTERSECT       reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    ORDER           reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    LIMIT           reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    $end            reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    RPAREN          reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    WHEN            reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    ASC             reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    DESC            reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    GROUP           reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    THEN            reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    HAVING          reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    WITH            reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    ELSE            reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    JOIN            reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    INNER           reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    LEFT            reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    FULL            reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    RIGHT           reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    CROSS           reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)
    WHERE           reduce using rule 84 (bin_op_expr -> expr NOT IN LPAREN literal_list RPAREN .)


state 267

    (85) bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .

    AS              reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    AND             reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    OR              reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    MINUS           reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    ARITH_OP        reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    LIKE            reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    STAR            reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    REGEXP          reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    COMP_OP         reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    IS              reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    ORR             reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    NOT             reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    IN              reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    BETWEEN         reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    ID              reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    STRING          reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    END             reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    RANK            reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    TYPE_NAME       reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    COMMA           reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    FROM            reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    UNION           reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    EXCEPT          reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    SET_MINUS       reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    INTERSECT       reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    ORDER           reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    LIMIT           reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    $end            reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    RPAREN          reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    WHEN            reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    ASC             reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    DESC            reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    GROUP           reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    THEN            reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    HAVING          reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    WITH            reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    ELSE            reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    JOIN            reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    INNER           reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    LEFT            reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    FULL            reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    RIGHT           reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    CROSS           reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)
    WHERE           reduce using rule 85 (bin_op_expr -> expr NOT IN LPAREN select_statement RPAREN .)


state 268

    (122) between_expr -> expr NOT BETWEEN expr bin_op expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for ARITH_OP resolved as shift
  ! shift/reduce conflict for LIKE resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for REGEXP resolved as shift
  ! shift/reduce conflict for COMP_OP resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for ORR resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for IN resolved as shift
  ! shift/reduce conflict for BETWEEN resolved as shift
    AS              reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    ID              reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    STRING          reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    END             reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    RANK            reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    TYPE_NAME       reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    COMMA           reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    FROM            reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    UNION           reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    EXCEPT          reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    SET_MINUS       reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    INTERSECT       reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    ORDER           reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    LIMIT           reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    $end            reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    RPAREN          reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    WHEN            reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    ASC             reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    DESC            reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    GROUP           reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    THEN            reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    HAVING          reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    WITH            reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    ELSE            reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    JOIN            reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    INNER           reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    LEFT            reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    FULL            reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    RIGHT           reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    CROSS           reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    WHERE           reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93

  ! AND             [ reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .) ]
  ! OR              [ reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .) ]
  ! MINUS           [ reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .) ]
  ! ARITH_OP        [ reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .) ]
  ! LIKE            [ reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .) ]
  ! STAR            [ reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .) ]
  ! REGEXP          [ reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .) ]
  ! COMP_OP         [ reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .) ]
  ! IS              [ reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .) ]
  ! ORR             [ reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .) ]
  ! NOT             [ reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .) ]
  ! IN              [ reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .) ]
  ! BETWEEN         [ reduce using rule 122 (between_expr -> expr NOT BETWEEN expr bin_op expr .) ]


state 269

    (159) literal_list -> literal_list COMMA literal_value .

    RPAREN          reduce using rule 159 (literal_list -> literal_list COMMA literal_value .)
    COMMA           reduce using rule 159 (literal_list -> literal_list COMMA literal_value .)
    OR              reduce using rule 159 (literal_list -> literal_list COMMA literal_value .)


state 270

    (160) literal_list -> literal_list OR literal_value .

    RPAREN          reduce using rule 160 (literal_list -> literal_list OR literal_value .)
    COMMA           reduce using rule 160 (literal_list -> literal_list OR literal_value .)
    OR              reduce using rule 160 (literal_list -> literal_list OR literal_value .)


state 271

    (143) win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN . win_def RPAREN
    (146) win_def -> . order_by
    (147) win_def -> . PARTITION BY result_column
    (148) win_def -> . win_def COMMA result_column
    (149) win_def -> . win_def order_by
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term

    PARTITION       shift and go to state 279
    ORDER           shift and go to state 14

    win_def                        shift and go to state 283
    order_by                       shift and go to state 278

state 272

    (68) fun_expr -> fun_name LPAREN expr COMMA expr COMMA . expr RPAREN
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    fun_name                       shift and go to state 47
    expr                           shift and go to state 284
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    win_fun                        shift and go to state 50

state 273

    (67) fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .
    (145) win_expr -> fun_name LPAREN expr COMMA expr RPAREN . OVER LPAREN win_def RPAREN

    AS              reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    AND             reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    OR              reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    MINUS           reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    ARITH_OP        reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    LIKE            reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    STAR            reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    REGEXP          reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    COMP_OP         reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    IS              reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    ORR             reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    NOT             reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    IN              reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    BETWEEN         reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    ID              reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    STRING          reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    END             reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    RANK            reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    TYPE_NAME       reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    COMMA           reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    FROM            reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    UNION           reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    EXCEPT          reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    SET_MINUS       reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    INTERSECT       reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    ORDER           reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    LIMIT           reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    $end            reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    RPAREN          reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    WHEN            reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    ASC             reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    DESC            reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    GROUP           reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    THEN            reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    HAVING          reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    WITH            reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    ELSE            reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    JOIN            reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    INNER           reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    LEFT            reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    FULL            reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    RIGHT           reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    CROSS           reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    WHERE           reduce using rule 67 (fun_expr -> fun_name LPAREN expr COMMA expr RPAREN .)
    OVER            shift and go to state 285


state 274

    (144) win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER . LPAREN win_def RPAREN

    LPAREN          shift and go to state 286


state 275

    (119) type_name -> type_name LPAREN . NUMBER RPAREN

    NUMBER          shift and go to state 287


state 276

    (120) cast_expr -> CAST LPAREN expr AS type_name RPAREN .

    AS              reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    AND             reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    OR              reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    MINUS           reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    ARITH_OP        reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    LIKE            reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    STAR            reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    REGEXP          reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    COMP_OP         reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    IS              reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    ORR             reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    NOT             reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    IN              reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    BETWEEN         reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    ID              reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    STRING          reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    END             reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    RANK            reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    TYPE_NAME       reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    COMMA           reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    FROM            reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    UNION           reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    EXCEPT          reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    SET_MINUS       reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    INTERSECT       reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    ORDER           reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    LIMIT           reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    $end            reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    RPAREN          reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    WHEN            reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    ASC             reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    DESC            reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    GROUP           reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    THEN            reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    HAVING          reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    WITH            reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    ELSE            reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    JOIN            reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    INNER           reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    LEFT            reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    FULL            reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    RIGHT           reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    CROSS           reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)
    WHERE           reduce using rule 120 (cast_expr -> CAST LPAREN expr AS type_name RPAREN .)


state 277

    (142) win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def . RPAREN
    (148) win_def -> win_def . COMMA result_column
    (149) win_def -> win_def . order_by
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term

    RPAREN          shift and go to state 288
    COMMA           shift and go to state 289
    ORDER           shift and go to state 14

    order_by                       shift and go to state 290

state 278

    (146) win_def -> order_by .
    (25) order_by -> order_by . COMMA ordering_term

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 146 (win_def -> order_by .)
    ORDER           reduce using rule 146 (win_def -> order_by .)
    COMMA           shift and go to state 60

  ! COMMA           [ reduce using rule 146 (win_def -> order_by .) ]


state 279

    (147) win_def -> PARTITION . BY result_column

    BY              shift and go to state 291


state 280

    (156) case_when_expr -> WHEN expr THEN expr ELSE . expr
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    expr                           shift and go to state 292
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 281

    (157) case_when_expr -> WHEN expr THEN expr case_when_expr .

    END             reduce using rule 157 (case_when_expr -> WHEN expr THEN expr case_when_expr .)


state 282

    (16) common_table_expression -> table_name LPAREN column_list RPAREN AS LPAREN select_statement . RPAREN
    (2) select_statement -> select_statement . set_op select_core
    (4) select_statement -> select_statement . order_by
    (5) select_statement -> select_statement . limit
    (97) set_op -> . UNION
    (98) set_op -> . EXCEPT
    (99) set_op -> . UNION ALL
    (100) set_op -> . SET_MINUS
    (101) set_op -> . INTERSECT
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term
    (28) limit -> . LIMIT expr
    (29) limit -> . LIMIT expr COMMA expr

    RPAREN          shift and go to state 293
    UNION           shift and go to state 10
    EXCEPT          shift and go to state 11
    SET_MINUS       shift and go to state 12
    INTERSECT       shift and go to state 13
    ORDER           shift and go to state 14
    LIMIT           shift and go to state 15

    set_op                         shift and go to state 7
    order_by                       shift and go to state 8
    limit                          shift and go to state 9

state 283

    (143) win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def . RPAREN
    (148) win_def -> win_def . COMMA result_column
    (149) win_def -> win_def . order_by
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term

    RPAREN          shift and go to state 294
    COMMA           shift and go to state 289
    ORDER           shift and go to state 14

    order_by                       shift and go to state 290

state 284

    (68) fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr . RPAREN
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    RPAREN          shift and go to state 295
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 285

    (145) win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER . LPAREN win_def RPAREN

    LPAREN          shift and go to state 296


state 286

    (144) win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN . win_def RPAREN
    (146) win_def -> . order_by
    (147) win_def -> . PARTITION BY result_column
    (148) win_def -> . win_def COMMA result_column
    (149) win_def -> . win_def order_by
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term

    PARTITION       shift and go to state 279
    ORDER           shift and go to state 14

    win_def                        shift and go to state 297
    order_by                       shift and go to state 278

state 287

    (119) type_name -> type_name LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 298


state 288

    (142) win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .

    AS              reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    AND             reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    OR              reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    MINUS           reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    ARITH_OP        reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    LIKE            reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    STAR            reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    REGEXP          reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    COMP_OP         reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    IS              reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    ORR             reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    NOT             reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    IN              reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    BETWEEN         reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    ID              reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    STRING          reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    END             reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    RANK            reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    TYPE_NAME       reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    COMMA           reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    FROM            reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    UNION           reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    EXCEPT          reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    SET_MINUS       reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    INTERSECT       reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    ORDER           reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    LIMIT           reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    $end            reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    RPAREN          reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    WHEN            reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    ASC             reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    DESC            reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    GROUP           reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    THEN            reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    HAVING          reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    WITH            reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    ELSE            reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    JOIN            reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    INNER           reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    LEFT            reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    FULL            reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    RIGHT           reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    CROSS           reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)
    WHERE           reduce using rule 142 (win_expr -> win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN .)


state 289

    (148) win_def -> win_def COMMA . result_column
    (21) result_column -> . expr
    (22) result_column -> . expr AS column_alias
    (23) result_column -> . expr column_alias
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    result_column                  shift and go to state 299
    expr                           shift and go to state 28
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 290

    (149) win_def -> win_def order_by .
    (25) order_by -> order_by . COMMA ordering_term

  ! shift/reduce conflict for COMMA resolved as shift
    RPAREN          reduce using rule 149 (win_def -> win_def order_by .)
    ORDER           reduce using rule 149 (win_def -> win_def order_by .)
    COMMA           shift and go to state 60

  ! COMMA           [ reduce using rule 149 (win_def -> win_def order_by .) ]


state 291

    (147) win_def -> PARTITION BY . result_column
    (21) result_column -> . expr
    (22) result_column -> . expr AS column_alias
    (23) result_column -> . expr column_alias
    (86) expr -> . column
    (87) expr -> . LPAREN select_statement RPAREN
    (88) expr -> . LPAREN expr RPAREN
    (89) expr -> . literal_value
    (90) expr -> . bin_op_expr
    (91) expr -> . fun_expr
    (92) expr -> . between_expr
    (93) expr -> . cast_expr
    (94) expr -> . win_expr
    (95) expr -> . case_expr
    (96) expr -> . NULL
    (60) column -> . column_name
    (61) column -> . table_name DOT column_name
    (131) literal_value -> . NUMBER
    (132) literal_value -> . STRING
    (133) literal_value -> . MINUS NUMBER
    (134) literal_value -> . DATE_LITERAL
    (135) literal_value -> . NULL
    (69) bin_op_expr -> . NOT expr
    (70) bin_op_expr -> . expr AND expr
    (71) bin_op_expr -> . expr OR expr
    (72) bin_op_expr -> . expr MINUS expr
    (73) bin_op_expr -> . expr ARITH_OP expr
    (74) bin_op_expr -> . expr LIKE expr
    (75) bin_op_expr -> . expr STAR expr
    (76) bin_op_expr -> . expr REGEXP expr
    (77) bin_op_expr -> . expr COMP_OP expr
    (78) bin_op_expr -> . expr IS expr
    (79) bin_op_expr -> . expr ORR expr
    (80) bin_op_expr -> . expr NOT LIKE expr
    (81) bin_op_expr -> . expr IS NOT expr
    (82) bin_op_expr -> . expr IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> . expr IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> . expr NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> . expr NOT IN LPAREN select_statement RPAREN
    (62) fun_expr -> . fun_name LPAREN RPAREN
    (63) fun_expr -> . EXISTS LPAREN select_statement RPAREN
    (64) fun_expr -> . fun_name LPAREN expr RPAREN
    (65) fun_expr -> . NOT EXISTS LPAREN select_statement RPAREN
    (66) fun_expr -> . fun_name LPAREN DISTINCT expr RPAREN
    (67) fun_expr -> . fun_name LPAREN expr COMMA expr RPAREN
    (68) fun_expr -> . fun_name LPAREN expr COMMA expr COMMA expr RPAREN
    (121) between_expr -> . expr BETWEEN expr bin_op expr
    (122) between_expr -> . expr NOT BETWEEN expr bin_op expr
    (120) cast_expr -> . CAST LPAREN expr AS type_name RPAREN
    (142) win_expr -> . win_fun LPAREN RPAREN OVER LPAREN win_def RPAREN
    (143) win_expr -> . fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN
    (144) win_expr -> . fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN
    (145) win_expr -> . fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN
    (153) case_expr -> . CASE case_when_expr END
    (154) case_expr -> . CASE expr case_when_expr END
    (136) column_name -> . ID
    (137) column_name -> . STRING
    (138) column_name -> . STAR
    (139) column_name -> . RANK
    (140) column_name -> . END
    (141) column_name -> . TYPE_NAME
    (44) table_name -> . ID
    (45) table_name -> . STRING
    (128) fun_name -> . ID
    (129) fun_name -> . LEFT
    (130) fun_name -> . TYPE_NAME
    (150) win_fun -> . RANK
    (151) win_fun -> . DENSE_RANK
    (152) win_fun -> . ROW_NUMBER

    LPAREN          shift and go to state 30
    NULL            shift and go to state 38
    NUMBER          shift and go to state 41
    STRING          shift and go to state 42
    MINUS           shift and go to state 43
    DATE_LITERAL    shift and go to state 44
    NOT             shift and go to state 45
    EXISTS          shift and go to state 48
    CAST            shift and go to state 49
    CASE            shift and go to state 51
    ID              shift and go to state 53
    STAR            shift and go to state 46
    RANK            shift and go to state 54
    END             shift and go to state 52
    TYPE_NAME       shift and go to state 55
    LEFT            shift and go to state 56
    DENSE_RANK      shift and go to state 57
    ROW_NUMBER      shift and go to state 58

    result_column                  shift and go to state 300
    expr                           shift and go to state 28
    column                         shift and go to state 29
    literal_value                  shift and go to state 31
    bin_op_expr                    shift and go to state 32
    fun_expr                       shift and go to state 33
    between_expr                   shift and go to state 34
    cast_expr                      shift and go to state 35
    win_expr                       shift and go to state 36
    case_expr                      shift and go to state 37
    column_name                    shift and go to state 39
    table_name                     shift and go to state 40
    fun_name                       shift and go to state 47
    win_fun                        shift and go to state 50

state 292

    (156) case_when_expr -> WHEN expr THEN expr ELSE expr .
    (70) bin_op_expr -> expr . AND expr
    (71) bin_op_expr -> expr . OR expr
    (72) bin_op_expr -> expr . MINUS expr
    (73) bin_op_expr -> expr . ARITH_OP expr
    (74) bin_op_expr -> expr . LIKE expr
    (75) bin_op_expr -> expr . STAR expr
    (76) bin_op_expr -> expr . REGEXP expr
    (77) bin_op_expr -> expr . COMP_OP expr
    (78) bin_op_expr -> expr . IS expr
    (79) bin_op_expr -> expr . ORR expr
    (80) bin_op_expr -> expr . NOT LIKE expr
    (81) bin_op_expr -> expr . IS NOT expr
    (82) bin_op_expr -> expr . IN LPAREN select_statement RPAREN
    (83) bin_op_expr -> expr . IN LPAREN literal_list RPAREN
    (84) bin_op_expr -> expr . NOT IN LPAREN literal_list RPAREN
    (85) bin_op_expr -> expr . NOT IN LPAREN select_statement RPAREN
    (121) between_expr -> expr . BETWEEN expr bin_op expr
    (122) between_expr -> expr . NOT BETWEEN expr bin_op expr

    END             reduce using rule 156 (case_when_expr -> WHEN expr THEN expr ELSE expr .)
    AND             shift and go to state 81
    OR              shift and go to state 82
    MINUS           shift and go to state 83
    ARITH_OP        shift and go to state 84
    LIKE            shift and go to state 85
    STAR            shift and go to state 86
    REGEXP          shift and go to state 87
    COMP_OP         shift and go to state 88
    IS              shift and go to state 89
    ORR             shift and go to state 90
    NOT             shift and go to state 91
    IN              shift and go to state 92
    BETWEEN         shift and go to state 93


state 293

    (16) common_table_expression -> table_name LPAREN column_list RPAREN AS LPAREN select_statement RPAREN .

    COMMA           reduce using rule 16 (common_table_expression -> table_name LPAREN column_list RPAREN AS LPAREN select_statement RPAREN .)
    WITH            reduce using rule 16 (common_table_expression -> table_name LPAREN column_list RPAREN AS LPAREN select_statement RPAREN .)
    SELECT          reduce using rule 16 (common_table_expression -> table_name LPAREN column_list RPAREN AS LPAREN select_statement RPAREN .)


state 294

    (143) win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .

    AS              reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    AND             reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    OR              reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    MINUS           reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    ARITH_OP        reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    LIKE            reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    STAR            reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    REGEXP          reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    COMP_OP         reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    IS              reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    ORR             reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    NOT             reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    IN              reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    BETWEEN         reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    ID              reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    STRING          reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    END             reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    RANK            reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    TYPE_NAME       reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    COMMA           reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    FROM            reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    UNION           reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    EXCEPT          reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    SET_MINUS       reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    INTERSECT       reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    ORDER           reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    LIMIT           reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    $end            reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    RPAREN          reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    WHEN            reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    ASC             reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    DESC            reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    GROUP           reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    THEN            reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    HAVING          reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    WITH            reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    ELSE            reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    JOIN            reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    INNER           reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    LEFT            reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    FULL            reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    RIGHT           reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    CROSS           reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)
    WHERE           reduce using rule 143 (win_expr -> fun_name LPAREN expr RPAREN OVER LPAREN win_def RPAREN .)


state 295

    (68) fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .

    AS              reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    AND             reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    OR              reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    MINUS           reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    ARITH_OP        reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    LIKE            reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    STAR            reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    REGEXP          reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    COMP_OP         reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    IS              reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    ORR             reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    NOT             reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    IN              reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    BETWEEN         reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    ID              reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    STRING          reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    END             reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    RANK            reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    TYPE_NAME       reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    COMMA           reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    FROM            reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    UNION           reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    EXCEPT          reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    SET_MINUS       reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    INTERSECT       reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    ORDER           reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    LIMIT           reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    $end            reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    RPAREN          reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    WHEN            reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    ASC             reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    DESC            reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    GROUP           reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    THEN            reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    HAVING          reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    WITH            reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    ELSE            reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    JOIN            reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    INNER           reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    LEFT            reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    FULL            reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    RIGHT           reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    CROSS           reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)
    WHERE           reduce using rule 68 (fun_expr -> fun_name LPAREN expr COMMA expr COMMA expr RPAREN .)


state 296

    (145) win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN . win_def RPAREN
    (146) win_def -> . order_by
    (147) win_def -> . PARTITION BY result_column
    (148) win_def -> . win_def COMMA result_column
    (149) win_def -> . win_def order_by
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term

    PARTITION       shift and go to state 279
    ORDER           shift and go to state 14

    win_def                        shift and go to state 301
    order_by                       shift and go to state 278

state 297

    (144) win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def . RPAREN
    (148) win_def -> win_def . COMMA result_column
    (149) win_def -> win_def . order_by
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term

    RPAREN          shift and go to state 302
    COMMA           shift and go to state 289
    ORDER           shift and go to state 14

    order_by                       shift and go to state 290

state 298

    (119) type_name -> type_name LPAREN NUMBER RPAREN .

    RPAREN          reduce using rule 119 (type_name -> type_name LPAREN NUMBER RPAREN .)
    LPAREN          reduce using rule 119 (type_name -> type_name LPAREN NUMBER RPAREN .)


state 299

    (148) win_def -> win_def COMMA result_column .

    RPAREN          reduce using rule 148 (win_def -> win_def COMMA result_column .)
    COMMA           reduce using rule 148 (win_def -> win_def COMMA result_column .)
    ORDER           reduce using rule 148 (win_def -> win_def COMMA result_column .)


state 300

    (147) win_def -> PARTITION BY result_column .

    RPAREN          reduce using rule 147 (win_def -> PARTITION BY result_column .)
    COMMA           reduce using rule 147 (win_def -> PARTITION BY result_column .)
    ORDER           reduce using rule 147 (win_def -> PARTITION BY result_column .)


state 301

    (145) win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def . RPAREN
    (148) win_def -> win_def . COMMA result_column
    (149) win_def -> win_def . order_by
    (24) order_by -> . ORDER BY ordering_term
    (25) order_by -> . order_by COMMA ordering_term

    RPAREN          shift and go to state 303
    COMMA           shift and go to state 289
    ORDER           shift and go to state 14

    order_by                       shift and go to state 290

state 302

    (144) win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .

    AS              reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    AND             reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    OR              reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    MINUS           reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    ARITH_OP        reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    LIKE            reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    STAR            reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    REGEXP          reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    COMP_OP         reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    IS              reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    ORR             reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    NOT             reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    IN              reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    BETWEEN         reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    ID              reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    STRING          reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    END             reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    RANK            reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    TYPE_NAME       reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    COMMA           reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    FROM            reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    UNION           reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    EXCEPT          reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    SET_MINUS       reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    INTERSECT       reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    ORDER           reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    LIMIT           reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    $end            reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    RPAREN          reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    WHEN            reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    ASC             reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    DESC            reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    GROUP           reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    THEN            reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    HAVING          reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    WITH            reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    ELSE            reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    JOIN            reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    INNER           reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    LEFT            reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    FULL            reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    RIGHT           reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    CROSS           reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)
    WHERE           reduce using rule 144 (win_expr -> fun_name LPAREN DISTINCT expr RPAREN OVER LPAREN win_def RPAREN .)


state 303

    (145) win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .

    AS              reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    AND             reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    OR              reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    MINUS           reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    ARITH_OP        reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    LIKE            reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    STAR            reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    REGEXP          reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    COMP_OP         reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    IS              reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    ORR             reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    NOT             reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    IN              reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    BETWEEN         reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    ID              reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    STRING          reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    END             reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    RANK            reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    TYPE_NAME       reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    COMMA           reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    FROM            reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    UNION           reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    EXCEPT          reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    SET_MINUS       reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    INTERSECT       reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    ORDER           reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    LIMIT           reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    $end            reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    RPAREN          reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    WHEN            reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    ASC             reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    DESC            reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    GROUP           reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    THEN            reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    HAVING          reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    WITH            reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    ELSE            reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    JOIN            reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    INNER           reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    LEFT            reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    FULL            reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    RIGHT           reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    CROSS           reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)
    WHERE           reduce using rule 145 (win_expr -> fun_name LPAREN expr COMMA expr RPAREN OVER LPAREN win_def RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for UNION in state 16 resolved as shift
WARNING: shift/reduce conflict for EXCEPT in state 16 resolved as shift
WARNING: shift/reduce conflict for SET_MINUS in state 16 resolved as shift
WARNING: shift/reduce conflict for INTERSECT in state 16 resolved as shift
WARNING: shift/reduce conflict for ORDER in state 16 resolved as shift
WARNING: shift/reduce conflict for LIMIT in state 16 resolved as shift
WARNING: shift/reduce conflict for AND in state 103 resolved as shift
WARNING: shift/reduce conflict for OR in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for ARITH_OP in state 103 resolved as shift
WARNING: shift/reduce conflict for LIKE in state 103 resolved as shift
WARNING: shift/reduce conflict for STAR in state 103 resolved as shift
WARNING: shift/reduce conflict for REGEXP in state 103 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 103 resolved as shift
WARNING: shift/reduce conflict for IS in state 103 resolved as shift
WARNING: shift/reduce conflict for ORR in state 103 resolved as shift
WARNING: shift/reduce conflict for NOT in state 103 resolved as shift
WARNING: shift/reduce conflict for IN in state 103 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 103 resolved as shift
WARNING: shift/reduce conflict for AND in state 149 resolved as shift
WARNING: shift/reduce conflict for OR in state 149 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 149 resolved as shift
WARNING: shift/reduce conflict for ARITH_OP in state 149 resolved as shift
WARNING: shift/reduce conflict for LIKE in state 149 resolved as shift
WARNING: shift/reduce conflict for STAR in state 149 resolved as shift
WARNING: shift/reduce conflict for REGEXP in state 149 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 149 resolved as shift
WARNING: shift/reduce conflict for IS in state 149 resolved as shift
WARNING: shift/reduce conflict for ORR in state 149 resolved as shift
WARNING: shift/reduce conflict for NOT in state 149 resolved as shift
WARNING: shift/reduce conflict for IN in state 149 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 149 resolved as shift
WARNING: shift/reduce conflict for AND in state 151 resolved as shift
WARNING: shift/reduce conflict for OR in state 151 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 151 resolved as shift
WARNING: shift/reduce conflict for ARITH_OP in state 151 resolved as shift
WARNING: shift/reduce conflict for LIKE in state 151 resolved as shift
WARNING: shift/reduce conflict for STAR in state 151 resolved as shift
WARNING: shift/reduce conflict for REGEXP in state 151 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 151 resolved as shift
WARNING: shift/reduce conflict for IS in state 151 resolved as shift
WARNING: shift/reduce conflict for ORR in state 151 resolved as shift
WARNING: shift/reduce conflict for NOT in state 151 resolved as shift
WARNING: shift/reduce conflict for IN in state 151 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 151 resolved as shift
WARNING: shift/reduce conflict for AND in state 152 resolved as shift
WARNING: shift/reduce conflict for OR in state 152 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 152 resolved as shift
WARNING: shift/reduce conflict for ARITH_OP in state 152 resolved as shift
WARNING: shift/reduce conflict for LIKE in state 152 resolved as shift
WARNING: shift/reduce conflict for STAR in state 152 resolved as shift
WARNING: shift/reduce conflict for REGEXP in state 152 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 152 resolved as shift
WARNING: shift/reduce conflict for IS in state 152 resolved as shift
WARNING: shift/reduce conflict for ORR in state 152 resolved as shift
WARNING: shift/reduce conflict for NOT in state 152 resolved as shift
WARNING: shift/reduce conflict for IN in state 152 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 152 resolved as shift
WARNING: shift/reduce conflict for AND in state 153 resolved as shift
WARNING: shift/reduce conflict for OR in state 153 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 153 resolved as shift
WARNING: shift/reduce conflict for ARITH_OP in state 153 resolved as shift
WARNING: shift/reduce conflict for LIKE in state 153 resolved as shift
WARNING: shift/reduce conflict for STAR in state 153 resolved as shift
WARNING: shift/reduce conflict for REGEXP in state 153 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 153 resolved as shift
WARNING: shift/reduce conflict for IS in state 153 resolved as shift
WARNING: shift/reduce conflict for ORR in state 153 resolved as shift
WARNING: shift/reduce conflict for NOT in state 153 resolved as shift
WARNING: shift/reduce conflict for IN in state 153 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 153 resolved as shift
WARNING: shift/reduce conflict for AND in state 155 resolved as shift
WARNING: shift/reduce conflict for OR in state 155 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 155 resolved as shift
WARNING: shift/reduce conflict for ARITH_OP in state 155 resolved as shift
WARNING: shift/reduce conflict for LIKE in state 155 resolved as shift
WARNING: shift/reduce conflict for STAR in state 155 resolved as shift
WARNING: shift/reduce conflict for REGEXP in state 155 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 155 resolved as shift
WARNING: shift/reduce conflict for IS in state 155 resolved as shift
WARNING: shift/reduce conflict for ORR in state 155 resolved as shift
WARNING: shift/reduce conflict for NOT in state 155 resolved as shift
WARNING: shift/reduce conflict for IN in state 155 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 155 resolved as shift
WARNING: shift/reduce conflict for AND in state 157 resolved as shift
WARNING: shift/reduce conflict for OR in state 157 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 157 resolved as shift
WARNING: shift/reduce conflict for ARITH_OP in state 157 resolved as shift
WARNING: shift/reduce conflict for LIKE in state 157 resolved as shift
WARNING: shift/reduce conflict for STAR in state 157 resolved as shift
WARNING: shift/reduce conflict for REGEXP in state 157 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 157 resolved as shift
WARNING: shift/reduce conflict for IS in state 157 resolved as shift
WARNING: shift/reduce conflict for ORR in state 157 resolved as shift
WARNING: shift/reduce conflict for NOT in state 157 resolved as shift
WARNING: shift/reduce conflict for IN in state 157 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 157 resolved as shift
WARNING: shift/reduce conflict for HAVING in state 184 resolved as shift
WARNING: shift/reduce conflict for AND in state 203 resolved as shift
WARNING: shift/reduce conflict for OR in state 203 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 203 resolved as shift
WARNING: shift/reduce conflict for ARITH_OP in state 203 resolved as shift
WARNING: shift/reduce conflict for LIKE in state 203 resolved as shift
WARNING: shift/reduce conflict for STAR in state 203 resolved as shift
WARNING: shift/reduce conflict for REGEXP in state 203 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 203 resolved as shift
WARNING: shift/reduce conflict for IS in state 203 resolved as shift
WARNING: shift/reduce conflict for ORR in state 203 resolved as shift
WARNING: shift/reduce conflict for NOT in state 203 resolved as shift
WARNING: shift/reduce conflict for IN in state 203 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 203 resolved as shift
WARNING: shift/reduce conflict for AND in state 204 resolved as shift
WARNING: shift/reduce conflict for OR in state 204 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 204 resolved as shift
WARNING: shift/reduce conflict for ARITH_OP in state 204 resolved as shift
WARNING: shift/reduce conflict for LIKE in state 204 resolved as shift
WARNING: shift/reduce conflict for STAR in state 204 resolved as shift
WARNING: shift/reduce conflict for REGEXP in state 204 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 204 resolved as shift
WARNING: shift/reduce conflict for IS in state 204 resolved as shift
WARNING: shift/reduce conflict for ORR in state 204 resolved as shift
WARNING: shift/reduce conflict for NOT in state 204 resolved as shift
WARNING: shift/reduce conflict for IN in state 204 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 204 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 216 resolved as shift
WARNING: shift/reduce conflict for NULL in state 216 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 216 resolved as shift
WARNING: shift/reduce conflict for STRING in state 216 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 216 resolved as shift
WARNING: shift/reduce conflict for DATE_LITERAL in state 216 resolved as shift
WARNING: shift/reduce conflict for NOT in state 216 resolved as shift
WARNING: shift/reduce conflict for EXISTS in state 216 resolved as shift
WARNING: shift/reduce conflict for CAST in state 216 resolved as shift
WARNING: shift/reduce conflict for CASE in state 216 resolved as shift
WARNING: shift/reduce conflict for ID in state 216 resolved as shift
WARNING: shift/reduce conflict for STAR in state 216 resolved as shift
WARNING: shift/reduce conflict for RANK in state 216 resolved as shift
WARNING: shift/reduce conflict for END in state 216 resolved as shift
WARNING: shift/reduce conflict for TYPE_NAME in state 216 resolved as shift
WARNING: shift/reduce conflict for LEFT in state 216 resolved as shift
WARNING: shift/reduce conflict for DENSE_RANK in state 216 resolved as shift
WARNING: shift/reduce conflict for ROW_NUMBER in state 216 resolved as shift
WARNING: shift/reduce conflict for AND in state 250 resolved as shift
WARNING: shift/reduce conflict for OR in state 250 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 250 resolved as shift
WARNING: shift/reduce conflict for ARITH_OP in state 250 resolved as shift
WARNING: shift/reduce conflict for LIKE in state 250 resolved as shift
WARNING: shift/reduce conflict for STAR in state 250 resolved as shift
WARNING: shift/reduce conflict for REGEXP in state 250 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 250 resolved as shift
WARNING: shift/reduce conflict for IS in state 250 resolved as shift
WARNING: shift/reduce conflict for ORR in state 250 resolved as shift
WARNING: shift/reduce conflict for NOT in state 250 resolved as shift
WARNING: shift/reduce conflict for IN in state 250 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 250 resolved as shift
WARNING: shift/reduce conflict for AND in state 268 resolved as shift
WARNING: shift/reduce conflict for OR in state 268 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 268 resolved as shift
WARNING: shift/reduce conflict for ARITH_OP in state 268 resolved as shift
WARNING: shift/reduce conflict for LIKE in state 268 resolved as shift
WARNING: shift/reduce conflict for STAR in state 268 resolved as shift
WARNING: shift/reduce conflict for REGEXP in state 268 resolved as shift
WARNING: shift/reduce conflict for COMP_OP in state 268 resolved as shift
WARNING: shift/reduce conflict for IS in state 268 resolved as shift
WARNING: shift/reduce conflict for ORR in state 268 resolved as shift
WARNING: shift/reduce conflict for NOT in state 268 resolved as shift
WARNING: shift/reduce conflict for IN in state 268 resolved as shift
WARNING: shift/reduce conflict for BETWEEN in state 268 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 278 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 290 resolved as shift
WARNING: reduce/reduce conflict in state 38 resolved using rule (expr -> NULL)
WARNING: rejected rule (literal_value -> NULL) in state 38
WARNING: reduce/reduce conflict in state 42 resolved using rule (literal_value -> STRING)
WARNING: rejected rule (column_name -> STRING) in state 42
WARNING: reduce/reduce conflict in state 203 resolved using rule (bin_op_expr -> NOT expr)
WARNING: rejected rule (bin_op_expr -> expr IS NOT expr) in state 203
WARNING: reduce/reduce conflict in state 251 resolved using rule (fun_expr -> EXISTS LPAREN select_statement RPAREN)
WARNING: rejected rule (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN) in state 251
WARNING: Rule (bin_op_expr -> expr IS NOT expr) is never reduced
WARNING: Rule (fun_expr -> NOT EXISTS LPAREN select_statement RPAREN) is never reduced
